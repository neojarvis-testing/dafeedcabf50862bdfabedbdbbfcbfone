import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { GlobalAcceleratorServiceException as __BaseException } from "./GlobalAcceleratorServiceException";
export interface AcceleratorEvent {
  Message?: string;
  Timestamp?: Date;
}
export declare const IpAddressType: {
  readonly DUAL_STACK: "DUAL_STACK";
  readonly IPV4: "IPV4";
};
export type IpAddressType = (typeof IpAddressType)[keyof typeof IpAddressType];
export declare const IpAddressFamily: {
  readonly IPv4: "IPv4";
  readonly IPv6: "IPv6";
};
export type IpAddressFamily =
  (typeof IpAddressFamily)[keyof typeof IpAddressFamily];
export interface IpSet {
  IpFamily?: string;
  IpAddresses?: string[];
  IpAddressFamily?: IpAddressFamily;
}
export declare const AcceleratorStatus: {
  readonly DEPLOYED: "DEPLOYED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type AcceleratorStatus =
  (typeof AcceleratorStatus)[keyof typeof AcceleratorStatus];
export interface Accelerator {
  AcceleratorArn?: string;
  Name?: string;
  IpAddressType?: IpAddressType;
  Enabled?: boolean;
  IpSets?: IpSet[];
  DnsName?: string;
  Status?: AcceleratorStatus;
  CreatedTime?: Date;
  LastModifiedTime?: Date;
  DualStackDnsName?: string;
  Events?: AcceleratorEvent[];
}
export interface AcceleratorAttributes {
  FlowLogsEnabled?: boolean;
  FlowLogsS3Bucket?: string;
  FlowLogsS3Prefix?: string;
}
export declare class AcceleratorNotDisabledException extends __BaseException {
  readonly name: "AcceleratorNotDisabledException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      AcceleratorNotDisabledException,
      __BaseException
    >
  );
}
export declare class AcceleratorNotFoundException extends __BaseException {
  readonly name: "AcceleratorNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AcceleratorNotFoundException, __BaseException>
  );
}
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface CustomRoutingEndpointConfiguration {
  EndpointId?: string;
  AttachmentArn?: string;
}
export interface AddCustomRoutingEndpointsRequest {
  EndpointConfigurations: CustomRoutingEndpointConfiguration[] | undefined;
  EndpointGroupArn: string | undefined;
}
export interface CustomRoutingEndpointDescription {
  EndpointId?: string;
}
export interface AddCustomRoutingEndpointsResponse {
  EndpointDescriptions?: CustomRoutingEndpointDescription[];
  EndpointGroupArn?: string;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class EndpointAlreadyExistsException extends __BaseException {
  readonly name: "EndpointAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<EndpointAlreadyExistsException, __BaseException>
  );
}
export declare class EndpointGroupNotFoundException extends __BaseException {
  readonly name: "EndpointGroupNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<EndpointGroupNotFoundException, __BaseException>
  );
}
export declare class InternalServiceErrorException extends __BaseException {
  readonly name: "InternalServiceErrorException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServiceErrorException, __BaseException>
  );
}
export declare class InvalidArgumentException extends __BaseException {
  readonly name: "InvalidArgumentException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidArgumentException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface EndpointConfiguration {
  EndpointId?: string;
  Weight?: number;
  ClientIPPreservationEnabled?: boolean;
  AttachmentArn?: string;
}
export interface AddEndpointsRequest {
  EndpointConfigurations: EndpointConfiguration[] | undefined;
  EndpointGroupArn: string | undefined;
}
export declare const HealthState: {
  readonly HEALTHY: "HEALTHY";
  readonly INITIAL: "INITIAL";
  readonly UNHEALTHY: "UNHEALTHY";
};
export type HealthState = (typeof HealthState)[keyof typeof HealthState];
export interface EndpointDescription {
  EndpointId?: string;
  Weight?: number;
  HealthState?: HealthState;
  HealthReason?: string;
  ClientIPPreservationEnabled?: boolean;
}
export interface AddEndpointsResponse {
  EndpointDescriptions?: EndpointDescription[];
  EndpointGroupArn?: string;
}
export declare class TransactionInProgressException extends __BaseException {
  readonly name: "TransactionInProgressException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TransactionInProgressException, __BaseException>
  );
}
export interface AdvertiseByoipCidrRequest {
  Cidr: string | undefined;
}
export interface ByoipCidrEvent {
  Message?: string;
  Timestamp?: Date;
}
export declare const ByoipCidrState: {
  readonly ADVERTISING: "ADVERTISING";
  readonly DEPROVISIONED: "DEPROVISIONED";
  readonly FAILED_ADVERTISING: "FAILED_ADVERTISING";
  readonly FAILED_DEPROVISION: "FAILED_DEPROVISION";
  readonly FAILED_PROVISION: "FAILED_PROVISION";
  readonly FAILED_WITHDRAW: "FAILED_WITHDRAW";
  readonly PENDING_ADVERTISING: "PENDING_ADVERTISING";
  readonly PENDING_DEPROVISIONING: "PENDING_DEPROVISIONING";
  readonly PENDING_PROVISIONING: "PENDING_PROVISIONING";
  readonly PENDING_WITHDRAWING: "PENDING_WITHDRAWING";
  readonly READY: "READY";
};
export type ByoipCidrState =
  (typeof ByoipCidrState)[keyof typeof ByoipCidrState];
export interface ByoipCidr {
  Cidr?: string;
  State?: ByoipCidrState;
  Events?: ByoipCidrEvent[];
}
export interface AdvertiseByoipCidrResponse {
  ByoipCidr?: ByoipCidr;
}
export declare class ByoipCidrNotFoundException extends __BaseException {
  readonly name: "ByoipCidrNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ByoipCidrNotFoundException, __BaseException>
  );
}
export declare class IncorrectCidrStateException extends __BaseException {
  readonly name: "IncorrectCidrStateException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<IncorrectCidrStateException, __BaseException>
  );
}
export interface AllowCustomRoutingTrafficRequest {
  EndpointGroupArn: string | undefined;
  EndpointId: string | undefined;
  DestinationAddresses?: string[];
  DestinationPorts?: number[];
  AllowAllTrafficToEndpoint?: boolean;
}
export declare class AssociatedEndpointGroupFoundException extends __BaseException {
  readonly name: "AssociatedEndpointGroupFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      AssociatedEndpointGroupFoundException,
      __BaseException
    >
  );
}
export declare class AssociatedListenerFoundException extends __BaseException {
  readonly name: "AssociatedListenerFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      AssociatedListenerFoundException,
      __BaseException
    >
  );
}
export interface Resource {
  EndpointId?: string;
  Cidr?: string;
  Region?: string;
}
export interface Attachment {
  AttachmentArn?: string;
  Name?: string;
  Principals?: string[];
  Resources?: Resource[];
  LastModifiedTime?: Date;
  CreatedTime?: Date;
}
export declare class AttachmentNotFoundException extends __BaseException {
  readonly name: "AttachmentNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AttachmentNotFoundException, __BaseException>
  );
}
export interface CidrAuthorizationContext {
  Message: string | undefined;
  Signature: string | undefined;
}
export declare const ClientAffinity: {
  readonly NONE: "NONE";
  readonly SOURCE_IP: "SOURCE_IP";
};
export type ClientAffinity =
  (typeof ClientAffinity)[keyof typeof ClientAffinity];
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateAcceleratorRequest {
  Name: string | undefined;
  IpAddressType?: IpAddressType;
  IpAddresses?: string[];
  Enabled?: boolean;
  IdempotencyToken?: string;
  Tags?: Tag[];
}
export interface CreateAcceleratorResponse {
  Accelerator?: Accelerator;
}
export interface CreateCrossAccountAttachmentRequest {
  Name: string | undefined;
  Principals?: string[];
  Resources?: Resource[];
  IdempotencyToken?: string;
  Tags?: Tag[];
}
export interface CreateCrossAccountAttachmentResponse {
  CrossAccountAttachment?: Attachment;
}
export interface CreateCustomRoutingAcceleratorRequest {
  Name: string | undefined;
  IpAddressType?: IpAddressType;
  IpAddresses?: string[];
  Enabled?: boolean;
  IdempotencyToken?: string;
  Tags?: Tag[];
}
export declare const CustomRoutingAcceleratorStatus: {
  readonly DEPLOYED: "DEPLOYED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type CustomRoutingAcceleratorStatus =
  (typeof CustomRoutingAcceleratorStatus)[keyof typeof CustomRoutingAcceleratorStatus];
export interface CustomRoutingAccelerator {
  AcceleratorArn?: string;
  Name?: string;
  IpAddressType?: IpAddressType;
  Enabled?: boolean;
  IpSets?: IpSet[];
  DnsName?: string;
  Status?: CustomRoutingAcceleratorStatus;
  CreatedTime?: Date;
  LastModifiedTime?: Date;
}
export interface CreateCustomRoutingAcceleratorResponse {
  Accelerator?: CustomRoutingAccelerator;
}
export declare const CustomRoutingProtocol: {
  readonly TCP: "TCP";
  readonly UDP: "UDP";
};
export type CustomRoutingProtocol =
  (typeof CustomRoutingProtocol)[keyof typeof CustomRoutingProtocol];
export interface CustomRoutingDestinationConfiguration {
  FromPort: number | undefined;
  ToPort: number | undefined;
  Protocols: CustomRoutingProtocol[] | undefined;
}
export interface CreateCustomRoutingEndpointGroupRequest {
  ListenerArn: string | undefined;
  EndpointGroupRegion: string | undefined;
  DestinationConfigurations:
    | CustomRoutingDestinationConfiguration[]
    | undefined;
  IdempotencyToken?: string;
}
export declare const Protocol: {
  readonly TCP: "TCP";
  readonly UDP: "UDP";
};
export type Protocol = (typeof Protocol)[keyof typeof Protocol];
export interface CustomRoutingDestinationDescription {
  FromPort?: number;
  ToPort?: number;
  Protocols?: Protocol[];
}
export interface CustomRoutingEndpointGroup {
  EndpointGroupArn?: string;
  EndpointGroupRegion?: string;
  DestinationDescriptions?: CustomRoutingDestinationDescription[];
  EndpointDescriptions?: CustomRoutingEndpointDescription[];
}
export interface CreateCustomRoutingEndpointGroupResponse {
  EndpointGroup?: CustomRoutingEndpointGroup;
}
export declare class EndpointGroupAlreadyExistsException extends __BaseException {
  readonly name: "EndpointGroupAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      EndpointGroupAlreadyExistsException,
      __BaseException
    >
  );
}
export declare class InvalidPortRangeException extends __BaseException {
  readonly name: "InvalidPortRangeException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidPortRangeException, __BaseException>
  );
}
export declare class ListenerNotFoundException extends __BaseException {
  readonly name: "ListenerNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ListenerNotFoundException, __BaseException>
  );
}
export interface PortRange {
  FromPort?: number;
  ToPort?: number;
}
export interface CreateCustomRoutingListenerRequest {
  AcceleratorArn: string | undefined;
  PortRanges: PortRange[] | undefined;
  IdempotencyToken?: string;
}
export interface CustomRoutingListener {
  ListenerArn?: string;
  PortRanges?: PortRange[];
}
export interface CreateCustomRoutingListenerResponse {
  Listener?: CustomRoutingListener;
}
export declare const HealthCheckProtocol: {
  readonly HTTP: "HTTP";
  readonly HTTPS: "HTTPS";
  readonly TCP: "TCP";
};
export type HealthCheckProtocol =
  (typeof HealthCheckProtocol)[keyof typeof HealthCheckProtocol];
export interface PortOverride {
  ListenerPort?: number;
  EndpointPort?: number;
}
export interface CreateEndpointGroupRequest {
  ListenerArn: string | undefined;
  EndpointGroupRegion: string | undefined;
  EndpointConfigurations?: EndpointConfiguration[];
  TrafficDialPercentage?: number;
  HealthCheckPort?: number;
  HealthCheckProtocol?: HealthCheckProtocol;
  HealthCheckPath?: string;
  HealthCheckIntervalSeconds?: number;
  ThresholdCount?: number;
  IdempotencyToken?: string;
  PortOverrides?: PortOverride[];
}
export interface EndpointGroup {
  EndpointGroupArn?: string;
  EndpointGroupRegion?: string;
  EndpointDescriptions?: EndpointDescription[];
  TrafficDialPercentage?: number;
  HealthCheckPort?: number;
  HealthCheckProtocol?: HealthCheckProtocol;
  HealthCheckPath?: string;
  HealthCheckIntervalSeconds?: number;
  ThresholdCount?: number;
  PortOverrides?: PortOverride[];
}
export interface CreateEndpointGroupResponse {
  EndpointGroup?: EndpointGroup;
}
export interface CreateListenerRequest {
  AcceleratorArn: string | undefined;
  PortRanges: PortRange[] | undefined;
  Protocol: Protocol | undefined;
  ClientAffinity?: ClientAffinity;
  IdempotencyToken?: string;
}
export interface Listener {
  ListenerArn?: string;
  PortRanges?: PortRange[];
  Protocol?: Protocol;
  ClientAffinity?: ClientAffinity;
}
export interface CreateListenerResponse {
  Listener?: Listener;
}
export interface CrossAccountResource {
  EndpointId?: string;
  Cidr?: string;
  AttachmentArn?: string;
}
export interface CustomRoutingAcceleratorAttributes {
  FlowLogsEnabled?: boolean;
  FlowLogsS3Bucket?: string;
  FlowLogsS3Prefix?: string;
}
export declare const CustomRoutingDestinationTrafficState: {
  readonly ALLOW: "ALLOW";
  readonly DENY: "DENY";
};
export type CustomRoutingDestinationTrafficState =
  (typeof CustomRoutingDestinationTrafficState)[keyof typeof CustomRoutingDestinationTrafficState];
export interface DeleteAcceleratorRequest {
  AcceleratorArn: string | undefined;
}
export interface DeleteCrossAccountAttachmentRequest {
  AttachmentArn: string | undefined;
}
export interface DeleteCustomRoutingAcceleratorRequest {
  AcceleratorArn: string | undefined;
}
export interface DeleteCustomRoutingEndpointGroupRequest {
  EndpointGroupArn: string | undefined;
}
export interface DeleteCustomRoutingListenerRequest {
  ListenerArn: string | undefined;
}
export interface DeleteEndpointGroupRequest {
  EndpointGroupArn: string | undefined;
}
export interface DeleteListenerRequest {
  ListenerArn: string | undefined;
}
export interface DenyCustomRoutingTrafficRequest {
  EndpointGroupArn: string | undefined;
  EndpointId: string | undefined;
  DestinationAddresses?: string[];
  DestinationPorts?: number[];
  DenyAllTrafficToEndpoint?: boolean;
}
export interface DeprovisionByoipCidrRequest {
  Cidr: string | undefined;
}
export interface DeprovisionByoipCidrResponse {
  ByoipCidr?: ByoipCidr;
}
export interface DescribeAcceleratorRequest {
  AcceleratorArn: string | undefined;
}
export interface DescribeAcceleratorResponse {
  Accelerator?: Accelerator;
}
export interface DescribeAcceleratorAttributesRequest {
  AcceleratorArn: string | undefined;
}
export interface DescribeAcceleratorAttributesResponse {
  AcceleratorAttributes?: AcceleratorAttributes;
}
export interface DescribeCrossAccountAttachmentRequest {
  AttachmentArn: string | undefined;
}
export interface DescribeCrossAccountAttachmentResponse {
  CrossAccountAttachment?: Attachment;
}
export interface DescribeCustomRoutingAcceleratorRequest {
  AcceleratorArn: string | undefined;
}
export interface DescribeCustomRoutingAcceleratorResponse {
  Accelerator?: CustomRoutingAccelerator;
}
export interface DescribeCustomRoutingAcceleratorAttributesRequest {
  AcceleratorArn: string | undefined;
}
export interface DescribeCustomRoutingAcceleratorAttributesResponse {
  AcceleratorAttributes?: CustomRoutingAcceleratorAttributes;
}
export interface DescribeCustomRoutingEndpointGroupRequest {
  EndpointGroupArn: string | undefined;
}
export interface DescribeCustomRoutingEndpointGroupResponse {
  EndpointGroup?: CustomRoutingEndpointGroup;
}
export interface DescribeCustomRoutingListenerRequest {
  ListenerArn: string | undefined;
}
export interface DescribeCustomRoutingListenerResponse {
  Listener?: CustomRoutingListener;
}
export interface DescribeEndpointGroupRequest {
  EndpointGroupArn: string | undefined;
}
export interface DescribeEndpointGroupResponse {
  EndpointGroup?: EndpointGroup;
}
export interface DescribeListenerRequest {
  ListenerArn: string | undefined;
}
export interface DescribeListenerResponse {
  Listener?: Listener;
}
export interface SocketAddress {
  IpAddress?: string;
  Port?: number;
}
export interface DestinationPortMapping {
  AcceleratorArn?: string;
  AcceleratorSocketAddresses?: SocketAddress[];
  EndpointGroupArn?: string;
  EndpointId?: string;
  EndpointGroupRegion?: string;
  DestinationSocketAddress?: SocketAddress;
  IpAddressType?: IpAddressType;
  DestinationTrafficState?: CustomRoutingDestinationTrafficState;
}
export interface EndpointIdentifier {
  EndpointId: string | undefined;
  ClientIPPreservationEnabled?: boolean;
}
export declare class EndpointNotFoundException extends __BaseException {
  readonly name: "EndpointNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<EndpointNotFoundException, __BaseException>
  );
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export interface ListAcceleratorsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListAcceleratorsResponse {
  Accelerators?: Accelerator[];
  NextToken?: string;
}
export interface ListByoipCidrsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListByoipCidrsResponse {
  ByoipCidrs?: ByoipCidr[];
  NextToken?: string;
}
export interface ListCrossAccountAttachmentsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListCrossAccountAttachmentsResponse {
  CrossAccountAttachments?: Attachment[];
  NextToken?: string;
}
export interface ListCrossAccountResourceAccountsRequest {}
export interface ListCrossAccountResourceAccountsResponse {
  ResourceOwnerAwsAccountIds?: string[];
}
export interface ListCrossAccountResourcesRequest {
  AcceleratorArn?: string;
  ResourceOwnerAwsAccountId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListCrossAccountResourcesResponse {
  CrossAccountResources?: CrossAccountResource[];
  NextToken?: string;
}
export interface ListCustomRoutingAcceleratorsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListCustomRoutingAcceleratorsResponse {
  Accelerators?: CustomRoutingAccelerator[];
  NextToken?: string;
}
export interface ListCustomRoutingEndpointGroupsRequest {
  ListenerArn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListCustomRoutingEndpointGroupsResponse {
  EndpointGroups?: CustomRoutingEndpointGroup[];
  NextToken?: string;
}
export interface ListCustomRoutingListenersRequest {
  AcceleratorArn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListCustomRoutingListenersResponse {
  Listeners?: CustomRoutingListener[];
  NextToken?: string;
}
export interface ListCustomRoutingPortMappingsRequest {
  AcceleratorArn: string | undefined;
  EndpointGroupArn?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface PortMapping {
  AcceleratorPort?: number;
  EndpointGroupArn?: string;
  EndpointId?: string;
  DestinationSocketAddress?: SocketAddress;
  Protocols?: CustomRoutingProtocol[];
  DestinationTrafficState?: CustomRoutingDestinationTrafficState;
}
export interface ListCustomRoutingPortMappingsResponse {
  PortMappings?: PortMapping[];
  NextToken?: string;
}
export interface ListCustomRoutingPortMappingsByDestinationRequest {
  EndpointId: string | undefined;
  DestinationAddress: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListCustomRoutingPortMappingsByDestinationResponse {
  DestinationPortMappings?: DestinationPortMapping[];
  NextToken?: string;
}
export interface ListEndpointGroupsRequest {
  ListenerArn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListEndpointGroupsResponse {
  EndpointGroups?: EndpointGroup[];
  NextToken?: string;
}
export interface ListListenersRequest {
  AcceleratorArn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListListenersResponse {
  Listeners?: Listener[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export interface ProvisionByoipCidrRequest {
  Cidr: string | undefined;
  CidrAuthorizationContext: CidrAuthorizationContext | undefined;
}
export interface ProvisionByoipCidrResponse {
  ByoipCidr?: ByoipCidr;
}
export interface RemoveCustomRoutingEndpointsRequest {
  EndpointIds: string[] | undefined;
  EndpointGroupArn: string | undefined;
}
export interface RemoveEndpointsRequest {
  EndpointIdentifiers: EndpointIdentifier[] | undefined;
  EndpointGroupArn: string | undefined;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateAcceleratorRequest {
  AcceleratorArn: string | undefined;
  Name?: string;
  IpAddressType?: IpAddressType;
  Enabled?: boolean;
}
export interface UpdateAcceleratorResponse {
  Accelerator?: Accelerator;
}
export interface UpdateAcceleratorAttributesRequest {
  AcceleratorArn: string | undefined;
  FlowLogsEnabled?: boolean;
  FlowLogsS3Bucket?: string;
  FlowLogsS3Prefix?: string;
}
export interface UpdateAcceleratorAttributesResponse {
  AcceleratorAttributes?: AcceleratorAttributes;
}
export interface UpdateCrossAccountAttachmentRequest {
  AttachmentArn: string | undefined;
  Name?: string;
  AddPrincipals?: string[];
  RemovePrincipals?: string[];
  AddResources?: Resource[];
  RemoveResources?: Resource[];
}
export interface UpdateCrossAccountAttachmentResponse {
  CrossAccountAttachment?: Attachment;
}
export interface UpdateCustomRoutingAcceleratorRequest {
  AcceleratorArn: string | undefined;
  Name?: string;
  IpAddressType?: IpAddressType;
  Enabled?: boolean;
}
export interface UpdateCustomRoutingAcceleratorResponse {
  Accelerator?: CustomRoutingAccelerator;
}
export interface UpdateCustomRoutingAcceleratorAttributesRequest {
  AcceleratorArn: string | undefined;
  FlowLogsEnabled?: boolean;
  FlowLogsS3Bucket?: string;
  FlowLogsS3Prefix?: string;
}
export interface UpdateCustomRoutingAcceleratorAttributesResponse {
  AcceleratorAttributes?: CustomRoutingAcceleratorAttributes;
}
export interface UpdateCustomRoutingListenerRequest {
  ListenerArn: string | undefined;
  PortRanges: PortRange[] | undefined;
}
export interface UpdateCustomRoutingListenerResponse {
  Listener?: CustomRoutingListener;
}
export interface UpdateEndpointGroupRequest {
  EndpointGroupArn: string | undefined;
  EndpointConfigurations?: EndpointConfiguration[];
  TrafficDialPercentage?: number;
  HealthCheckPort?: number;
  HealthCheckProtocol?: HealthCheckProtocol;
  HealthCheckPath?: string;
  HealthCheckIntervalSeconds?: number;
  ThresholdCount?: number;
  PortOverrides?: PortOverride[];
}
export interface UpdateEndpointGroupResponse {
  EndpointGroup?: EndpointGroup;
}
export interface UpdateListenerRequest {
  ListenerArn: string | undefined;
  PortRanges?: PortRange[];
  Protocol?: Protocol;
  ClientAffinity?: ClientAffinity;
}
export interface UpdateListenerResponse {
  Listener?: Listener;
}
export interface WithdrawByoipCidrRequest {
  Cidr: string | undefined;
}
export interface WithdrawByoipCidrResponse {
  ByoipCidr?: ByoipCidr;
}
