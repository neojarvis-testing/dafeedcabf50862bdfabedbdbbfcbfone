import { streamReader } from "@aws-sdk/chunked-stream-reader-node";
import { TreeHash } from "@aws-sdk/sha256-tree-hash";
import { isArrayBuffer } from "@smithy/is-array-buffer";
import { toHex } from "@smithy/util-hex-encoding";
import { toUint8Array } from "@smithy/util-utf8";
import { createReadStream } from "fs";
export async function bodyChecksumGenerator(request, options) {
    const contentHash = new options.sha256();
    const treeHash = new TreeHash(options.sha256, options.utf8Decoder);
    const { body } = request;
    if (typeof body === "string" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {
        contentHash?.update(toUint8Array(body));
        treeHash?.update(toUint8Array(body));
    }
    else {
        if (typeof body.path !== "string") {
            throw new Error("Unable to calculate checksums for non-file streams.");
        }
        const bodyTee = createReadStream(body.path, {
            start: body.start,
            end: body.end,
        });
        await streamReader(bodyTee, (chunk) => {
            contentHash?.update(toUint8Array(chunk));
            treeHash?.update(toUint8Array(chunk));
        });
    }
    return [toHex(await contentHash.digest()), toHex(await treeHash.digest())];
}
