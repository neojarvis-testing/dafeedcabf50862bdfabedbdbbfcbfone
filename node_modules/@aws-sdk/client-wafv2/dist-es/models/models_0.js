import { WAFV2ServiceException as __BaseException } from "./WAFV2ServiceException";
export const ActionValue = {
    ALLOW: "ALLOW",
    BLOCK: "BLOCK",
    CAPTCHA: "CAPTCHA",
    CHALLENGE: "CHALLENGE",
    COUNT: "COUNT",
    EXCLUDED_AS_COUNT: "EXCLUDED_AS_COUNT",
};
export const OversizeHandling = {
    CONTINUE: "CONTINUE",
    MATCH: "MATCH",
    NO_MATCH: "NO_MATCH",
};
export const MapMatchScope = {
    ALL: "ALL",
    KEY: "KEY",
    VALUE: "VALUE",
};
export const FallbackBehavior = {
    MATCH: "MATCH",
    NO_MATCH: "NO_MATCH",
};
export const BodyParsingFallbackBehavior = {
    EVALUATE_AS_STRING: "EVALUATE_AS_STRING",
    MATCH: "MATCH",
    NO_MATCH: "NO_MATCH",
};
export const JsonMatchScope = {
    ALL: "ALL",
    KEY: "KEY",
    VALUE: "VALUE",
};
export const PositionalConstraint = {
    CONTAINS: "CONTAINS",
    CONTAINS_WORD: "CONTAINS_WORD",
    ENDS_WITH: "ENDS_WITH",
    EXACTLY: "EXACTLY",
    STARTS_WITH: "STARTS_WITH",
};
export const TextTransformationType = {
    BASE64_DECODE: "BASE64_DECODE",
    BASE64_DECODE_EXT: "BASE64_DECODE_EXT",
    CMD_LINE: "CMD_LINE",
    COMPRESS_WHITE_SPACE: "COMPRESS_WHITE_SPACE",
    CSS_DECODE: "CSS_DECODE",
    ESCAPE_SEQ_DECODE: "ESCAPE_SEQ_DECODE",
    HEX_DECODE: "HEX_DECODE",
    HTML_ENTITY_DECODE: "HTML_ENTITY_DECODE",
    JS_DECODE: "JS_DECODE",
    LOWERCASE: "LOWERCASE",
    MD5: "MD5",
    NONE: "NONE",
    NORMALIZE_PATH: "NORMALIZE_PATH",
    NORMALIZE_PATH_WIN: "NORMALIZE_PATH_WIN",
    REMOVE_NULLS: "REMOVE_NULLS",
    REPLACE_COMMENTS: "REPLACE_COMMENTS",
    REPLACE_NULLS: "REPLACE_NULLS",
    SQL_HEX_DECODE: "SQL_HEX_DECODE",
    URL_DECODE: "URL_DECODE",
    URL_DECODE_UNI: "URL_DECODE_UNI",
    UTF8_TO_UNICODE: "UTF8_TO_UNICODE",
};
export const CountryCode = {
    AD: "AD",
    AE: "AE",
    AF: "AF",
    AG: "AG",
    AI: "AI",
    AL: "AL",
    AM: "AM",
    AO: "AO",
    AQ: "AQ",
    AR: "AR",
    AS: "AS",
    AT: "AT",
    AU: "AU",
    AW: "AW",
    AX: "AX",
    AZ: "AZ",
    BA: "BA",
    BB: "BB",
    BD: "BD",
    BE: "BE",
    BF: "BF",
    BG: "BG",
    BH: "BH",
    BI: "BI",
    BJ: "BJ",
    BL: "BL",
    BM: "BM",
    BN: "BN",
    BO: "BO",
    BQ: "BQ",
    BR: "BR",
    BS: "BS",
    BT: "BT",
    BV: "BV",
    BW: "BW",
    BY: "BY",
    BZ: "BZ",
    CA: "CA",
    CC: "CC",
    CD: "CD",
    CF: "CF",
    CG: "CG",
    CH: "CH",
    CI: "CI",
    CK: "CK",
    CL: "CL",
    CM: "CM",
    CN: "CN",
    CO: "CO",
    CR: "CR",
    CU: "CU",
    CV: "CV",
    CW: "CW",
    CX: "CX",
    CY: "CY",
    CZ: "CZ",
    DE: "DE",
    DJ: "DJ",
    DK: "DK",
    DM: "DM",
    DO: "DO",
    DZ: "DZ",
    EC: "EC",
    EE: "EE",
    EG: "EG",
    EH: "EH",
    ER: "ER",
    ES: "ES",
    ET: "ET",
    FI: "FI",
    FJ: "FJ",
    FK: "FK",
    FM: "FM",
    FO: "FO",
    FR: "FR",
    GA: "GA",
    GB: "GB",
    GD: "GD",
    GE: "GE",
    GF: "GF",
    GG: "GG",
    GH: "GH",
    GI: "GI",
    GL: "GL",
    GM: "GM",
    GN: "GN",
    GP: "GP",
    GQ: "GQ",
    GR: "GR",
    GS: "GS",
    GT: "GT",
    GU: "GU",
    GW: "GW",
    GY: "GY",
    HK: "HK",
    HM: "HM",
    HN: "HN",
    HR: "HR",
    HT: "HT",
    HU: "HU",
    ID: "ID",
    IE: "IE",
    IL: "IL",
    IM: "IM",
    IN: "IN",
    IO: "IO",
    IQ: "IQ",
    IR: "IR",
    IS: "IS",
    IT: "IT",
    JE: "JE",
    JM: "JM",
    JO: "JO",
    JP: "JP",
    KE: "KE",
    KG: "KG",
    KH: "KH",
    KI: "KI",
    KM: "KM",
    KN: "KN",
    KP: "KP",
    KR: "KR",
    KW: "KW",
    KY: "KY",
    KZ: "KZ",
    LA: "LA",
    LB: "LB",
    LC: "LC",
    LI: "LI",
    LK: "LK",
    LR: "LR",
    LS: "LS",
    LT: "LT",
    LU: "LU",
    LV: "LV",
    LY: "LY",
    MA: "MA",
    MC: "MC",
    MD: "MD",
    ME: "ME",
    MF: "MF",
    MG: "MG",
    MH: "MH",
    MK: "MK",
    ML: "ML",
    MM: "MM",
    MN: "MN",
    MO: "MO",
    MP: "MP",
    MQ: "MQ",
    MR: "MR",
    MS: "MS",
    MT: "MT",
    MU: "MU",
    MV: "MV",
    MW: "MW",
    MX: "MX",
    MY: "MY",
    MZ: "MZ",
    NA: "NA",
    NC: "NC",
    NE: "NE",
    NF: "NF",
    NG: "NG",
    NI: "NI",
    NL: "NL",
    NO: "NO",
    NP: "NP",
    NR: "NR",
    NU: "NU",
    NZ: "NZ",
    OM: "OM",
    PA: "PA",
    PE: "PE",
    PF: "PF",
    PG: "PG",
    PH: "PH",
    PK: "PK",
    PL: "PL",
    PM: "PM",
    PN: "PN",
    PR: "PR",
    PS: "PS",
    PT: "PT",
    PW: "PW",
    PY: "PY",
    QA: "QA",
    RE: "RE",
    RO: "RO",
    RS: "RS",
    RU: "RU",
    RW: "RW",
    SA: "SA",
    SB: "SB",
    SC: "SC",
    SD: "SD",
    SE: "SE",
    SG: "SG",
    SH: "SH",
    SI: "SI",
    SJ: "SJ",
    SK: "SK",
    SL: "SL",
    SM: "SM",
    SN: "SN",
    SO: "SO",
    SR: "SR",
    SS: "SS",
    ST: "ST",
    SV: "SV",
    SX: "SX",
    SY: "SY",
    SZ: "SZ",
    TC: "TC",
    TD: "TD",
    TF: "TF",
    TG: "TG",
    TH: "TH",
    TJ: "TJ",
    TK: "TK",
    TL: "TL",
    TM: "TM",
    TN: "TN",
    TO: "TO",
    TR: "TR",
    TT: "TT",
    TV: "TV",
    TW: "TW",
    TZ: "TZ",
    UA: "UA",
    UG: "UG",
    UM: "UM",
    US: "US",
    UY: "UY",
    UZ: "UZ",
    VA: "VA",
    VC: "VC",
    VE: "VE",
    VG: "VG",
    VI: "VI",
    VN: "VN",
    VU: "VU",
    WF: "WF",
    WS: "WS",
    XK: "XK",
    YE: "YE",
    YT: "YT",
    ZA: "ZA",
    ZM: "ZM",
    ZW: "ZW",
};
export const ForwardedIPPosition = {
    ANY: "ANY",
    FIRST: "FIRST",
    LAST: "LAST",
};
export const LabelMatchScope = {
    LABEL: "LABEL",
    NAMESPACE: "NAMESPACE",
};
export const PayloadType = {
    FORM_ENCODED: "FORM_ENCODED",
    JSON: "JSON",
};
export const InspectionLevel = {
    COMMON: "COMMON",
    TARGETED: "TARGETED",
};
export const RateBasedStatementAggregateKeyType = {
    CONSTANT: "CONSTANT",
    CUSTOM_KEYS: "CUSTOM_KEYS",
    FORWARDED_IP: "FORWARDED_IP",
    IP: "IP",
};
export const ComparisonOperator = {
    EQ: "EQ",
    GE: "GE",
    GT: "GT",
    LE: "LE",
    LT: "LT",
    NE: "NE",
};
export const SensitivityLevel = {
    HIGH: "HIGH",
    LOW: "LOW",
};
export const AssociatedResourceType = {
    API_GATEWAY: "API_GATEWAY",
    APP_RUNNER_SERVICE: "APP_RUNNER_SERVICE",
    CLOUDFRONT: "CLOUDFRONT",
    COGNITO_USER_POOL: "COGNITO_USER_POOL",
    VERIFIED_ACCESS_INSTANCE: "VERIFIED_ACCESS_INSTANCE",
};
export class WAFInternalErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFInternalErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "WAFInternalErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, WAFInternalErrorException.prototype);
        this.Message = opts.Message;
    }
}
export class WAFInvalidOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFInvalidOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFInvalidOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFInvalidOperationException.prototype);
        this.Message = opts.Message;
    }
}
export const ParameterExceptionField = {
    ACP_RULE_SET_RESPONSE_INSPECTION: "ACP_RULE_SET_RESPONSE_INSPECTION",
    AND_STATEMENT: "AND_STATEMENT",
    ASSOCIABLE_RESOURCE: "ASSOCIABLE_RESOURCE",
    ASSOCIATED_RESOURCE_TYPE: "ASSOCIATED_RESOURCE_TYPE",
    ATP_RULE_SET_RESPONSE_INSPECTION: "ATP_RULE_SET_RESPONSE_INSPECTION",
    BODY_PARSING_FALLBACK_BEHAVIOR: "BODY_PARSING_FALLBACK_BEHAVIOR",
    BYTE_MATCH_STATEMENT: "BYTE_MATCH_STATEMENT",
    CHALLENGE_CONFIG: "CHALLENGE_CONFIG",
    CHANGE_PROPAGATION_STATUS: "CHANGE_PROPAGATION_STATUS",
    COOKIE_MATCH_PATTERN: "COOKIE_MATCH_PATTERN",
    CUSTOM_KEYS: "CUSTOM_KEYS",
    CUSTOM_REQUEST_HANDLING: "CUSTOM_REQUEST_HANDLING",
    CUSTOM_RESPONSE: "CUSTOM_RESPONSE",
    CUSTOM_RESPONSE_BODY: "CUSTOM_RESPONSE_BODY",
    DEFAULT_ACTION: "DEFAULT_ACTION",
    ENTITY_LIMIT: "ENTITY_LIMIT",
    EXCLUDED_RULE: "EXCLUDED_RULE",
    EXPIRE_TIMESTAMP: "EXPIRE_TIMESTAMP",
    FALLBACK_BEHAVIOR: "FALLBACK_BEHAVIOR",
    FIELD_TO_MATCH: "FIELD_TO_MATCH",
    FILTER_CONDITION: "FILTER_CONDITION",
    FIREWALL_MANAGER_STATEMENT: "FIREWALL_MANAGER_STATEMENT",
    FORWARDED_IP_CONFIG: "FORWARDED_IP_CONFIG",
    GEO_MATCH_STATEMENT: "GEO_MATCH_STATEMENT",
    HEADER_MATCH_PATTERN: "HEADER_MATCH_PATTERN",
    HEADER_NAME: "HEADER_NAME",
    IP_ADDRESS: "IP_ADDRESS",
    IP_ADDRESS_VERSION: "IP_ADDRESS_VERSION",
    IP_SET: "IP_SET",
    IP_SET_FORWARDED_IP_CONFIG: "IP_SET_FORWARDED_IP_CONFIG",
    IP_SET_REFERENCE_STATEMENT: "IP_SET_REFERENCE_STATEMENT",
    JSON_MATCH_PATTERN: "JSON_MATCH_PATTERN",
    JSON_MATCH_SCOPE: "JSON_MATCH_SCOPE",
    LABEL_MATCH_STATEMENT: "LABEL_MATCH_STATEMENT",
    LOGGING_FILTER: "LOGGING_FILTER",
    LOG_DESTINATION: "LOG_DESTINATION",
    MANAGED_RULE_GROUP_CONFIG: "MANAGED_RULE_GROUP_CONFIG",
    MANAGED_RULE_SET: "MANAGED_RULE_SET",
    MANAGED_RULE_SET_STATEMENT: "MANAGED_RULE_SET_STATEMENT",
    MAP_MATCH_SCOPE: "MAP_MATCH_SCOPE",
    METRIC_NAME: "METRIC_NAME",
    NOT_STATEMENT: "NOT_STATEMENT",
    OR_STATEMENT: "OR_STATEMENT",
    OVERRIDE_ACTION: "OVERRIDE_ACTION",
    OVERSIZE_HANDLING: "OVERSIZE_HANDLING",
    PAYLOAD_TYPE: "PAYLOAD_TYPE",
    POSITION: "POSITION",
    RATE_BASED_STATEMENT: "RATE_BASED_STATEMENT",
    REGEX_PATTERN_REFERENCE_STATEMENT: "REGEX_PATTERN_REFERENCE_STATEMENT",
    REGEX_PATTERN_SET: "REGEX_PATTERN_SET",
    RESOURCE_ARN: "RESOURCE_ARN",
    RESOURCE_TYPE: "RESOURCE_TYPE",
    RESPONSE_CONTENT_TYPE: "RESPONSE_CONTENT_TYPE",
    RULE: "RULE",
    RULE_ACTION: "RULE_ACTION",
    RULE_GROUP: "RULE_GROUP",
    RULE_GROUP_REFERENCE_STATEMENT: "RULE_GROUP_REFERENCE_STATEMENT",
    SCOPE_DOWN: "SCOPE_DOWN",
    SCOPE_VALUE: "SCOPE_VALUE",
    SINGLE_HEADER: "SINGLE_HEADER",
    SINGLE_QUERY_ARGUMENT: "SINGLE_QUERY_ARGUMENT",
    SIZE_CONSTRAINT_STATEMENT: "SIZE_CONSTRAINT_STATEMENT",
    SQLI_MATCH_STATEMENT: "SQLI_MATCH_STATEMENT",
    STATEMENT: "STATEMENT",
    TAGS: "TAGS",
    TAG_KEYS: "TAG_KEYS",
    TEXT_TRANSFORMATION: "TEXT_TRANSFORMATION",
    TOKEN_DOMAIN: "TOKEN_DOMAIN",
    WEB_ACL: "WEB_ACL",
    XSS_MATCH_STATEMENT: "XSS_MATCH_STATEMENT",
};
export class WAFInvalidParameterException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFInvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFInvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFInvalidParameterException.prototype);
        this.Field = opts.Field;
        this.Parameter = opts.Parameter;
        this.Reason = opts.Reason;
    }
}
export class WAFNonexistentItemException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFNonexistentItemException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFNonexistentItemException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFNonexistentItemException.prototype);
        this.Message = opts.Message;
    }
}
export class WAFUnavailableEntityException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFUnavailableEntityException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFUnavailableEntityException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFUnavailableEntityException.prototype);
        this.Message = opts.Message;
    }
}
export const SizeInspectionLimit = {
    KB_16: "KB_16",
    KB_32: "KB_32",
    KB_48: "KB_48",
    KB_64: "KB_64",
};
export const Scope = {
    CLOUDFRONT: "CLOUDFRONT",
    REGIONAL: "REGIONAL",
};
export class WAFExpiredManagedRuleGroupVersionException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFExpiredManagedRuleGroupVersionException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFExpiredManagedRuleGroupVersionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFExpiredManagedRuleGroupVersionException.prototype);
        this.Message = opts.Message;
    }
}
export class WAFInvalidResourceException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFInvalidResourceException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFInvalidResourceException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFInvalidResourceException.prototype);
        this.Message = opts.Message;
    }
}
export class WAFLimitsExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFLimitsExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFLimitsExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFLimitsExceededException.prototype);
        this.Message = opts.Message;
        this.SourceType = opts.SourceType;
    }
}
export class WAFSubscriptionNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFSubscriptionNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFSubscriptionNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFSubscriptionNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export const IPAddressVersion = {
    IPV4: "IPV4",
    IPV6: "IPV6",
};
export class WAFDuplicateItemException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFDuplicateItemException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFDuplicateItemException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFDuplicateItemException.prototype);
        this.Message = opts.Message;
    }
}
export class WAFOptimisticLockException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFOptimisticLockException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFOptimisticLockException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFOptimisticLockException.prototype);
        this.Message = opts.Message;
    }
}
export class WAFTagOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFTagOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFTagOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFTagOperationException.prototype);
        this.Message = opts.Message;
    }
}
export class WAFTagOperationInternalErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFTagOperationInternalErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "WAFTagOperationInternalErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, WAFTagOperationInternalErrorException.prototype);
        this.Message = opts.Message;
    }
}
export const ResponseContentType = {
    APPLICATION_JSON: "APPLICATION_JSON",
    TEXT_HTML: "TEXT_HTML",
    TEXT_PLAIN: "TEXT_PLAIN",
};
export class WAFConfigurationWarningException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFConfigurationWarningException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFConfigurationWarningException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFConfigurationWarningException.prototype);
        this.Message = opts.Message;
    }
}
export class WAFAssociatedItemException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFAssociatedItemException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFAssociatedItemException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFAssociatedItemException.prototype);
        this.Message = opts.Message;
    }
}
export const LogScope = {
    CUSTOMER: "CUSTOMER",
    SECURITY_LAKE: "SECURITY_LAKE",
};
export const LogType = {
    WAF_LOGS: "WAF_LOGS",
};
export const Platform = {
    ANDROID: "ANDROID",
    IOS: "IOS",
};
export const FilterBehavior = {
    DROP: "DROP",
    KEEP: "KEEP",
};
export const FilterRequirement = {
    MEETS_ALL: "MEETS_ALL",
    MEETS_ANY: "MEETS_ANY",
};
export class WAFUnsupportedAggregateKeyTypeException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFUnsupportedAggregateKeyTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFUnsupportedAggregateKeyTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFUnsupportedAggregateKeyTypeException.prototype);
        this.Message = opts.Message;
    }
}
export const FailureReason = {
    TOKEN_DOMAIN_MISMATCH: "TOKEN_DOMAIN_MISMATCH",
    TOKEN_EXPIRED: "TOKEN_EXPIRED",
    TOKEN_INVALID: "TOKEN_INVALID",
    TOKEN_MISSING: "TOKEN_MISSING",
};
export const ResourceType = {
    API_GATEWAY: "API_GATEWAY",
    APPLICATION_LOAD_BALANCER: "APPLICATION_LOAD_BALANCER",
    APPSYNC: "APPSYNC",
    APP_RUNNER_SERVICE: "APP_RUNNER_SERVICE",
    COGNITIO_USER_POOL: "COGNITO_USER_POOL",
    VERIFIED_ACCESS_INSTANCE: "VERIFIED_ACCESS_INSTANCE",
};
export class WAFLogDestinationPermissionIssueException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFLogDestinationPermissionIssueException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFLogDestinationPermissionIssueException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFLogDestinationPermissionIssueException.prototype);
        this.Message = opts.Message;
    }
}
export class WAFServiceLinkedRoleErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFServiceLinkedRoleErrorException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFServiceLinkedRoleErrorException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFServiceLinkedRoleErrorException.prototype);
    }
}
export class WAFInvalidPermissionPolicyException extends __BaseException {
    constructor(opts) {
        super({
            name: "WAFInvalidPermissionPolicyException",
            $fault: "client",
            ...opts,
        });
        this.name = "WAFInvalidPermissionPolicyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WAFInvalidPermissionPolicyException.prototype);
        this.Message = opts.Message;
    }
}
