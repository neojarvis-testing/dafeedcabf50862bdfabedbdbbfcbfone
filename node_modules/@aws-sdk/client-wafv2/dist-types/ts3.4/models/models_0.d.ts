import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { WAFV2ServiceException as __BaseException } from "./WAFV2ServiceException";
export declare const ActionValue: {
  readonly ALLOW: "ALLOW";
  readonly BLOCK: "BLOCK";
  readonly CAPTCHA: "CAPTCHA";
  readonly CHALLENGE: "CHALLENGE";
  readonly COUNT: "COUNT";
  readonly EXCLUDED_AS_COUNT: "EXCLUDED_AS_COUNT";
};
export type ActionValue = (typeof ActionValue)[keyof typeof ActionValue];
export interface ActionCondition {
  Action: ActionValue | undefined;
}
export interface AddressField {
  Identifier: string | undefined;
}
export interface All {}
export interface CustomHTTPHeader {
  Name: string | undefined;
  Value: string | undefined;
}
export interface CustomRequestHandling {
  InsertHeaders: CustomHTTPHeader[] | undefined;
}
export interface AllowAction {
  CustomRequestHandling?: CustomRequestHandling;
}
export interface AllQueryArguments {}
export declare const OversizeHandling: {
  readonly CONTINUE: "CONTINUE";
  readonly MATCH: "MATCH";
  readonly NO_MATCH: "NO_MATCH";
};
export type OversizeHandling =
  (typeof OversizeHandling)[keyof typeof OversizeHandling];
export interface Body {
  OversizeHandling?: OversizeHandling;
}
export interface CookieMatchPattern {
  All?: All;
  IncludedCookies?: string[];
  ExcludedCookies?: string[];
}
export declare const MapMatchScope: {
  readonly ALL: "ALL";
  readonly KEY: "KEY";
  readonly VALUE: "VALUE";
};
export type MapMatchScope = (typeof MapMatchScope)[keyof typeof MapMatchScope];
export interface Cookies {
  MatchPattern: CookieMatchPattern | undefined;
  MatchScope: MapMatchScope | undefined;
  OversizeHandling: OversizeHandling | undefined;
}
export interface HeaderOrder {
  OversizeHandling: OversizeHandling | undefined;
}
export interface HeaderMatchPattern {
  All?: All;
  IncludedHeaders?: string[];
  ExcludedHeaders?: string[];
}
export interface Headers {
  MatchPattern: HeaderMatchPattern | undefined;
  MatchScope: MapMatchScope | undefined;
  OversizeHandling: OversizeHandling | undefined;
}
export declare const FallbackBehavior: {
  readonly MATCH: "MATCH";
  readonly NO_MATCH: "NO_MATCH";
};
export type FallbackBehavior =
  (typeof FallbackBehavior)[keyof typeof FallbackBehavior];
export interface JA3Fingerprint {
  FallbackBehavior: FallbackBehavior | undefined;
}
export declare const BodyParsingFallbackBehavior: {
  readonly EVALUATE_AS_STRING: "EVALUATE_AS_STRING";
  readonly MATCH: "MATCH";
  readonly NO_MATCH: "NO_MATCH";
};
export type BodyParsingFallbackBehavior =
  (typeof BodyParsingFallbackBehavior)[keyof typeof BodyParsingFallbackBehavior];
export interface JsonMatchPattern {
  All?: All;
  IncludedPaths?: string[];
}
export declare const JsonMatchScope: {
  readonly ALL: "ALL";
  readonly KEY: "KEY";
  readonly VALUE: "VALUE";
};
export type JsonMatchScope =
  (typeof JsonMatchScope)[keyof typeof JsonMatchScope];
export interface JsonBody {
  MatchPattern: JsonMatchPattern | undefined;
  MatchScope: JsonMatchScope | undefined;
  InvalidFallbackBehavior?: BodyParsingFallbackBehavior;
  OversizeHandling?: OversizeHandling;
}
export interface Method {}
export interface QueryString {}
export interface SingleHeader {
  Name: string | undefined;
}
export interface SingleQueryArgument {
  Name: string | undefined;
}
export interface UriPath {}
export interface FieldToMatch {
  SingleHeader?: SingleHeader;
  SingleQueryArgument?: SingleQueryArgument;
  AllQueryArguments?: AllQueryArguments;
  UriPath?: UriPath;
  QueryString?: QueryString;
  Body?: Body;
  Method?: Method;
  JsonBody?: JsonBody;
  Headers?: Headers;
  Cookies?: Cookies;
  HeaderOrder?: HeaderOrder;
  JA3Fingerprint?: JA3Fingerprint;
}
export declare const PositionalConstraint: {
  readonly CONTAINS: "CONTAINS";
  readonly CONTAINS_WORD: "CONTAINS_WORD";
  readonly ENDS_WITH: "ENDS_WITH";
  readonly EXACTLY: "EXACTLY";
  readonly STARTS_WITH: "STARTS_WITH";
};
export type PositionalConstraint =
  (typeof PositionalConstraint)[keyof typeof PositionalConstraint];
export declare const TextTransformationType: {
  readonly BASE64_DECODE: "BASE64_DECODE";
  readonly BASE64_DECODE_EXT: "BASE64_DECODE_EXT";
  readonly CMD_LINE: "CMD_LINE";
  readonly COMPRESS_WHITE_SPACE: "COMPRESS_WHITE_SPACE";
  readonly CSS_DECODE: "CSS_DECODE";
  readonly ESCAPE_SEQ_DECODE: "ESCAPE_SEQ_DECODE";
  readonly HEX_DECODE: "HEX_DECODE";
  readonly HTML_ENTITY_DECODE: "HTML_ENTITY_DECODE";
  readonly JS_DECODE: "JS_DECODE";
  readonly LOWERCASE: "LOWERCASE";
  readonly MD5: "MD5";
  readonly NONE: "NONE";
  readonly NORMALIZE_PATH: "NORMALIZE_PATH";
  readonly NORMALIZE_PATH_WIN: "NORMALIZE_PATH_WIN";
  readonly REMOVE_NULLS: "REMOVE_NULLS";
  readonly REPLACE_COMMENTS: "REPLACE_COMMENTS";
  readonly REPLACE_NULLS: "REPLACE_NULLS";
  readonly SQL_HEX_DECODE: "SQL_HEX_DECODE";
  readonly URL_DECODE: "URL_DECODE";
  readonly URL_DECODE_UNI: "URL_DECODE_UNI";
  readonly UTF8_TO_UNICODE: "UTF8_TO_UNICODE";
};
export type TextTransformationType =
  (typeof TextTransformationType)[keyof typeof TextTransformationType];
export interface TextTransformation {
  Priority: number | undefined;
  Type: TextTransformationType | undefined;
}
export interface ByteMatchStatement {
  SearchString: Uint8Array | undefined;
  FieldToMatch: FieldToMatch | undefined;
  TextTransformations: TextTransformation[] | undefined;
  PositionalConstraint: PositionalConstraint | undefined;
}
export declare const CountryCode: {
  readonly AD: "AD";
  readonly AE: "AE";
  readonly AF: "AF";
  readonly AG: "AG";
  readonly AI: "AI";
  readonly AL: "AL";
  readonly AM: "AM";
  readonly AO: "AO";
  readonly AQ: "AQ";
  readonly AR: "AR";
  readonly AS: "AS";
  readonly AT: "AT";
  readonly AU: "AU";
  readonly AW: "AW";
  readonly AX: "AX";
  readonly AZ: "AZ";
  readonly BA: "BA";
  readonly BB: "BB";
  readonly BD: "BD";
  readonly BE: "BE";
  readonly BF: "BF";
  readonly BG: "BG";
  readonly BH: "BH";
  readonly BI: "BI";
  readonly BJ: "BJ";
  readonly BL: "BL";
  readonly BM: "BM";
  readonly BN: "BN";
  readonly BO: "BO";
  readonly BQ: "BQ";
  readonly BR: "BR";
  readonly BS: "BS";
  readonly BT: "BT";
  readonly BV: "BV";
  readonly BW: "BW";
  readonly BY: "BY";
  readonly BZ: "BZ";
  readonly CA: "CA";
  readonly CC: "CC";
  readonly CD: "CD";
  readonly CF: "CF";
  readonly CG: "CG";
  readonly CH: "CH";
  readonly CI: "CI";
  readonly CK: "CK";
  readonly CL: "CL";
  readonly CM: "CM";
  readonly CN: "CN";
  readonly CO: "CO";
  readonly CR: "CR";
  readonly CU: "CU";
  readonly CV: "CV";
  readonly CW: "CW";
  readonly CX: "CX";
  readonly CY: "CY";
  readonly CZ: "CZ";
  readonly DE: "DE";
  readonly DJ: "DJ";
  readonly DK: "DK";
  readonly DM: "DM";
  readonly DO: "DO";
  readonly DZ: "DZ";
  readonly EC: "EC";
  readonly EE: "EE";
  readonly EG: "EG";
  readonly EH: "EH";
  readonly ER: "ER";
  readonly ES: "ES";
  readonly ET: "ET";
  readonly FI: "FI";
  readonly FJ: "FJ";
  readonly FK: "FK";
  readonly FM: "FM";
  readonly FO: "FO";
  readonly FR: "FR";
  readonly GA: "GA";
  readonly GB: "GB";
  readonly GD: "GD";
  readonly GE: "GE";
  readonly GF: "GF";
  readonly GG: "GG";
  readonly GH: "GH";
  readonly GI: "GI";
  readonly GL: "GL";
  readonly GM: "GM";
  readonly GN: "GN";
  readonly GP: "GP";
  readonly GQ: "GQ";
  readonly GR: "GR";
  readonly GS: "GS";
  readonly GT: "GT";
  readonly GU: "GU";
  readonly GW: "GW";
  readonly GY: "GY";
  readonly HK: "HK";
  readonly HM: "HM";
  readonly HN: "HN";
  readonly HR: "HR";
  readonly HT: "HT";
  readonly HU: "HU";
  readonly ID: "ID";
  readonly IE: "IE";
  readonly IL: "IL";
  readonly IM: "IM";
  readonly IN: "IN";
  readonly IO: "IO";
  readonly IQ: "IQ";
  readonly IR: "IR";
  readonly IS: "IS";
  readonly IT: "IT";
  readonly JE: "JE";
  readonly JM: "JM";
  readonly JO: "JO";
  readonly JP: "JP";
  readonly KE: "KE";
  readonly KG: "KG";
  readonly KH: "KH";
  readonly KI: "KI";
  readonly KM: "KM";
  readonly KN: "KN";
  readonly KP: "KP";
  readonly KR: "KR";
  readonly KW: "KW";
  readonly KY: "KY";
  readonly KZ: "KZ";
  readonly LA: "LA";
  readonly LB: "LB";
  readonly LC: "LC";
  readonly LI: "LI";
  readonly LK: "LK";
  readonly LR: "LR";
  readonly LS: "LS";
  readonly LT: "LT";
  readonly LU: "LU";
  readonly LV: "LV";
  readonly LY: "LY";
  readonly MA: "MA";
  readonly MC: "MC";
  readonly MD: "MD";
  readonly ME: "ME";
  readonly MF: "MF";
  readonly MG: "MG";
  readonly MH: "MH";
  readonly MK: "MK";
  readonly ML: "ML";
  readonly MM: "MM";
  readonly MN: "MN";
  readonly MO: "MO";
  readonly MP: "MP";
  readonly MQ: "MQ";
  readonly MR: "MR";
  readonly MS: "MS";
  readonly MT: "MT";
  readonly MU: "MU";
  readonly MV: "MV";
  readonly MW: "MW";
  readonly MX: "MX";
  readonly MY: "MY";
  readonly MZ: "MZ";
  readonly NA: "NA";
  readonly NC: "NC";
  readonly NE: "NE";
  readonly NF: "NF";
  readonly NG: "NG";
  readonly NI: "NI";
  readonly NL: "NL";
  readonly NO: "NO";
  readonly NP: "NP";
  readonly NR: "NR";
  readonly NU: "NU";
  readonly NZ: "NZ";
  readonly OM: "OM";
  readonly PA: "PA";
  readonly PE: "PE";
  readonly PF: "PF";
  readonly PG: "PG";
  readonly PH: "PH";
  readonly PK: "PK";
  readonly PL: "PL";
  readonly PM: "PM";
  readonly PN: "PN";
  readonly PR: "PR";
  readonly PS: "PS";
  readonly PT: "PT";
  readonly PW: "PW";
  readonly PY: "PY";
  readonly QA: "QA";
  readonly RE: "RE";
  readonly RO: "RO";
  readonly RS: "RS";
  readonly RU: "RU";
  readonly RW: "RW";
  readonly SA: "SA";
  readonly SB: "SB";
  readonly SC: "SC";
  readonly SD: "SD";
  readonly SE: "SE";
  readonly SG: "SG";
  readonly SH: "SH";
  readonly SI: "SI";
  readonly SJ: "SJ";
  readonly SK: "SK";
  readonly SL: "SL";
  readonly SM: "SM";
  readonly SN: "SN";
  readonly SO: "SO";
  readonly SR: "SR";
  readonly SS: "SS";
  readonly ST: "ST";
  readonly SV: "SV";
  readonly SX: "SX";
  readonly SY: "SY";
  readonly SZ: "SZ";
  readonly TC: "TC";
  readonly TD: "TD";
  readonly TF: "TF";
  readonly TG: "TG";
  readonly TH: "TH";
  readonly TJ: "TJ";
  readonly TK: "TK";
  readonly TL: "TL";
  readonly TM: "TM";
  readonly TN: "TN";
  readonly TO: "TO";
  readonly TR: "TR";
  readonly TT: "TT";
  readonly TV: "TV";
  readonly TW: "TW";
  readonly TZ: "TZ";
  readonly UA: "UA";
  readonly UG: "UG";
  readonly UM: "UM";
  readonly US: "US";
  readonly UY: "UY";
  readonly UZ: "UZ";
  readonly VA: "VA";
  readonly VC: "VC";
  readonly VE: "VE";
  readonly VG: "VG";
  readonly VI: "VI";
  readonly VN: "VN";
  readonly VU: "VU";
  readonly WF: "WF";
  readonly WS: "WS";
  readonly XK: "XK";
  readonly YE: "YE";
  readonly YT: "YT";
  readonly ZA: "ZA";
  readonly ZM: "ZM";
  readonly ZW: "ZW";
};
export type CountryCode = (typeof CountryCode)[keyof typeof CountryCode];
export interface ForwardedIPConfig {
  HeaderName: string | undefined;
  FallbackBehavior: FallbackBehavior | undefined;
}
export interface GeoMatchStatement {
  CountryCodes?: CountryCode[];
  ForwardedIPConfig?: ForwardedIPConfig;
}
export declare const ForwardedIPPosition: {
  readonly ANY: "ANY";
  readonly FIRST: "FIRST";
  readonly LAST: "LAST";
};
export type ForwardedIPPosition =
  (typeof ForwardedIPPosition)[keyof typeof ForwardedIPPosition];
export interface IPSetForwardedIPConfig {
  HeaderName: string | undefined;
  FallbackBehavior: FallbackBehavior | undefined;
  Position: ForwardedIPPosition | undefined;
}
export interface IPSetReferenceStatement {
  ARN: string | undefined;
  IPSetForwardedIPConfig?: IPSetForwardedIPConfig;
}
export declare const LabelMatchScope: {
  readonly LABEL: "LABEL";
  readonly NAMESPACE: "NAMESPACE";
};
export type LabelMatchScope =
  (typeof LabelMatchScope)[keyof typeof LabelMatchScope];
export interface LabelMatchStatement {
  Scope: LabelMatchScope | undefined;
  Key: string | undefined;
}
export interface ExcludedRule {
  Name: string | undefined;
}
export interface EmailField {
  Identifier: string | undefined;
}
export interface PasswordField {
  Identifier: string | undefined;
}
export declare const PayloadType: {
  readonly FORM_ENCODED: "FORM_ENCODED";
  readonly JSON: "JSON";
};
export type PayloadType = (typeof PayloadType)[keyof typeof PayloadType];
export interface PhoneNumberField {
  Identifier: string | undefined;
}
export interface UsernameField {
  Identifier: string | undefined;
}
export interface RequestInspectionACFP {
  PayloadType: PayloadType | undefined;
  UsernameField?: UsernameField;
  PasswordField?: PasswordField;
  EmailField?: EmailField;
  PhoneNumberFields?: PhoneNumberField[];
  AddressFields?: AddressField[];
}
export interface ResponseInspectionBodyContains {
  SuccessStrings: string[] | undefined;
  FailureStrings: string[] | undefined;
}
export interface ResponseInspectionHeader {
  Name: string | undefined;
  SuccessValues: string[] | undefined;
  FailureValues: string[] | undefined;
}
export interface ResponseInspectionJson {
  Identifier: string | undefined;
  SuccessValues: string[] | undefined;
  FailureValues: string[] | undefined;
}
export interface ResponseInspectionStatusCode {
  SuccessCodes: number[] | undefined;
  FailureCodes: number[] | undefined;
}
export interface ResponseInspection {
  StatusCode?: ResponseInspectionStatusCode;
  Header?: ResponseInspectionHeader;
  BodyContains?: ResponseInspectionBodyContains;
  Json?: ResponseInspectionJson;
}
export interface AWSManagedRulesACFPRuleSet {
  CreationPath: string | undefined;
  RegistrationPagePath: string | undefined;
  RequestInspection: RequestInspectionACFP | undefined;
  ResponseInspection?: ResponseInspection;
  EnableRegexInPath?: boolean;
}
export interface RequestInspection {
  PayloadType: PayloadType | undefined;
  UsernameField: UsernameField | undefined;
  PasswordField: PasswordField | undefined;
}
export interface AWSManagedRulesATPRuleSet {
  LoginPath: string | undefined;
  RequestInspection?: RequestInspection;
  ResponseInspection?: ResponseInspection;
  EnableRegexInPath?: boolean;
}
export declare const InspectionLevel: {
  readonly COMMON: "COMMON";
  readonly TARGETED: "TARGETED";
};
export type InspectionLevel =
  (typeof InspectionLevel)[keyof typeof InspectionLevel];
export interface AWSManagedRulesBotControlRuleSet {
  InspectionLevel: InspectionLevel | undefined;
  EnableMachineLearning?: boolean;
}
export interface ManagedRuleGroupConfig {
  LoginPath?: string;
  PayloadType?: PayloadType;
  UsernameField?: UsernameField;
  PasswordField?: PasswordField;
  AWSManagedRulesBotControlRuleSet?: AWSManagedRulesBotControlRuleSet;
  AWSManagedRulesATPRuleSet?: AWSManagedRulesATPRuleSet;
  AWSManagedRulesACFPRuleSet?: AWSManagedRulesACFPRuleSet;
}
export interface CustomResponse {
  ResponseCode: number | undefined;
  CustomResponseBodyKey?: string;
  ResponseHeaders?: CustomHTTPHeader[];
}
export interface BlockAction {
  CustomResponse?: CustomResponse;
}
export interface CaptchaAction {
  CustomRequestHandling?: CustomRequestHandling;
}
export interface ChallengeAction {
  CustomRequestHandling?: CustomRequestHandling;
}
export interface CountAction {
  CustomRequestHandling?: CustomRequestHandling;
}
export interface RuleAction {
  Block?: BlockAction;
  Allow?: AllowAction;
  Count?: CountAction;
  Captcha?: CaptchaAction;
  Challenge?: ChallengeAction;
}
export interface RuleActionOverride {
  Name: string | undefined;
  ActionToUse: RuleAction | undefined;
}
export declare const RateBasedStatementAggregateKeyType: {
  readonly CONSTANT: "CONSTANT";
  readonly CUSTOM_KEYS: "CUSTOM_KEYS";
  readonly FORWARDED_IP: "FORWARDED_IP";
  readonly IP: "IP";
};
export type RateBasedStatementAggregateKeyType =
  (typeof RateBasedStatementAggregateKeyType)[keyof typeof RateBasedStatementAggregateKeyType];
export interface RateLimitCookie {
  Name: string | undefined;
  TextTransformations: TextTransformation[] | undefined;
}
export interface RateLimitForwardedIP {}
export interface RateLimitHeader {
  Name: string | undefined;
  TextTransformations: TextTransformation[] | undefined;
}
export interface RateLimitHTTPMethod {}
export interface RateLimitIP {}
export interface RateLimitLabelNamespace {
  Namespace: string | undefined;
}
export interface RateLimitQueryArgument {
  Name: string | undefined;
  TextTransformations: TextTransformation[] | undefined;
}
export interface RateLimitQueryString {
  TextTransformations: TextTransformation[] | undefined;
}
export interface RateLimitUriPath {
  TextTransformations: TextTransformation[] | undefined;
}
export interface RateBasedStatementCustomKey {
  Header?: RateLimitHeader;
  Cookie?: RateLimitCookie;
  QueryArgument?: RateLimitQueryArgument;
  QueryString?: RateLimitQueryString;
  HTTPMethod?: RateLimitHTTPMethod;
  ForwardedIP?: RateLimitForwardedIP;
  IP?: RateLimitIP;
  LabelNamespace?: RateLimitLabelNamespace;
  UriPath?: RateLimitUriPath;
}
export interface RegexMatchStatement {
  RegexString: string | undefined;
  FieldToMatch: FieldToMatch | undefined;
  TextTransformations: TextTransformation[] | undefined;
}
export interface RegexPatternSetReferenceStatement {
  ARN: string | undefined;
  FieldToMatch: FieldToMatch | undefined;
  TextTransformations: TextTransformation[] | undefined;
}
export interface RuleGroupReferenceStatement {
  ARN: string | undefined;
  ExcludedRules?: ExcludedRule[];
  RuleActionOverrides?: RuleActionOverride[];
}
export declare const ComparisonOperator: {
  readonly EQ: "EQ";
  readonly GE: "GE";
  readonly GT: "GT";
  readonly LE: "LE";
  readonly LT: "LT";
  readonly NE: "NE";
};
export type ComparisonOperator =
  (typeof ComparisonOperator)[keyof typeof ComparisonOperator];
export interface SizeConstraintStatement {
  FieldToMatch: FieldToMatch | undefined;
  ComparisonOperator: ComparisonOperator | undefined;
  Size: number | undefined;
  TextTransformations: TextTransformation[] | undefined;
}
export declare const SensitivityLevel: {
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
};
export type SensitivityLevel =
  (typeof SensitivityLevel)[keyof typeof SensitivityLevel];
export interface SqliMatchStatement {
  FieldToMatch: FieldToMatch | undefined;
  TextTransformations: TextTransformation[] | undefined;
  SensitivityLevel?: SensitivityLevel;
}
export interface XssMatchStatement {
  FieldToMatch: FieldToMatch | undefined;
  TextTransformations: TextTransformation[] | undefined;
}
export interface APIKeySummary {
  TokenDomains?: string[];
  APIKey?: string;
  CreationTimestamp?: Date;
  Version?: number;
}
export declare const AssociatedResourceType: {
  readonly API_GATEWAY: "API_GATEWAY";
  readonly APP_RUNNER_SERVICE: "APP_RUNNER_SERVICE";
  readonly CLOUDFRONT: "CLOUDFRONT";
  readonly COGNITO_USER_POOL: "COGNITO_USER_POOL";
  readonly VERIFIED_ACCESS_INSTANCE: "VERIFIED_ACCESS_INSTANCE";
};
export type AssociatedResourceType =
  (typeof AssociatedResourceType)[keyof typeof AssociatedResourceType];
export interface AssociateWebACLRequest {
  WebACLArn: string | undefined;
  ResourceArn: string | undefined;
}
export interface AssociateWebACLResponse {}
export declare class WAFInternalErrorException extends __BaseException {
  readonly name: "WAFInternalErrorException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<WAFInternalErrorException, __BaseException>
  );
}
export declare class WAFInvalidOperationException extends __BaseException {
  readonly name: "WAFInvalidOperationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<WAFInvalidOperationException, __BaseException>
  );
}
export declare const ParameterExceptionField: {
  readonly ACP_RULE_SET_RESPONSE_INSPECTION: "ACP_RULE_SET_RESPONSE_INSPECTION";
  readonly AND_STATEMENT: "AND_STATEMENT";
  readonly ASSOCIABLE_RESOURCE: "ASSOCIABLE_RESOURCE";
  readonly ASSOCIATED_RESOURCE_TYPE: "ASSOCIATED_RESOURCE_TYPE";
  readonly ATP_RULE_SET_RESPONSE_INSPECTION: "ATP_RULE_SET_RESPONSE_INSPECTION";
  readonly BODY_PARSING_FALLBACK_BEHAVIOR: "BODY_PARSING_FALLBACK_BEHAVIOR";
  readonly BYTE_MATCH_STATEMENT: "BYTE_MATCH_STATEMENT";
  readonly CHALLENGE_CONFIG: "CHALLENGE_CONFIG";
  readonly CHANGE_PROPAGATION_STATUS: "CHANGE_PROPAGATION_STATUS";
  readonly COOKIE_MATCH_PATTERN: "COOKIE_MATCH_PATTERN";
  readonly CUSTOM_KEYS: "CUSTOM_KEYS";
  readonly CUSTOM_REQUEST_HANDLING: "CUSTOM_REQUEST_HANDLING";
  readonly CUSTOM_RESPONSE: "CUSTOM_RESPONSE";
  readonly CUSTOM_RESPONSE_BODY: "CUSTOM_RESPONSE_BODY";
  readonly DEFAULT_ACTION: "DEFAULT_ACTION";
  readonly ENTITY_LIMIT: "ENTITY_LIMIT";
  readonly EXCLUDED_RULE: "EXCLUDED_RULE";
  readonly EXPIRE_TIMESTAMP: "EXPIRE_TIMESTAMP";
  readonly FALLBACK_BEHAVIOR: "FALLBACK_BEHAVIOR";
  readonly FIELD_TO_MATCH: "FIELD_TO_MATCH";
  readonly FILTER_CONDITION: "FILTER_CONDITION";
  readonly FIREWALL_MANAGER_STATEMENT: "FIREWALL_MANAGER_STATEMENT";
  readonly FORWARDED_IP_CONFIG: "FORWARDED_IP_CONFIG";
  readonly GEO_MATCH_STATEMENT: "GEO_MATCH_STATEMENT";
  readonly HEADER_MATCH_PATTERN: "HEADER_MATCH_PATTERN";
  readonly HEADER_NAME: "HEADER_NAME";
  readonly IP_ADDRESS: "IP_ADDRESS";
  readonly IP_ADDRESS_VERSION: "IP_ADDRESS_VERSION";
  readonly IP_SET: "IP_SET";
  readonly IP_SET_FORWARDED_IP_CONFIG: "IP_SET_FORWARDED_IP_CONFIG";
  readonly IP_SET_REFERENCE_STATEMENT: "IP_SET_REFERENCE_STATEMENT";
  readonly JSON_MATCH_PATTERN: "JSON_MATCH_PATTERN";
  readonly JSON_MATCH_SCOPE: "JSON_MATCH_SCOPE";
  readonly LABEL_MATCH_STATEMENT: "LABEL_MATCH_STATEMENT";
  readonly LOGGING_FILTER: "LOGGING_FILTER";
  readonly LOG_DESTINATION: "LOG_DESTINATION";
  readonly MANAGED_RULE_GROUP_CONFIG: "MANAGED_RULE_GROUP_CONFIG";
  readonly MANAGED_RULE_SET: "MANAGED_RULE_SET";
  readonly MANAGED_RULE_SET_STATEMENT: "MANAGED_RULE_SET_STATEMENT";
  readonly MAP_MATCH_SCOPE: "MAP_MATCH_SCOPE";
  readonly METRIC_NAME: "METRIC_NAME";
  readonly NOT_STATEMENT: "NOT_STATEMENT";
  readonly OR_STATEMENT: "OR_STATEMENT";
  readonly OVERRIDE_ACTION: "OVERRIDE_ACTION";
  readonly OVERSIZE_HANDLING: "OVERSIZE_HANDLING";
  readonly PAYLOAD_TYPE: "PAYLOAD_TYPE";
  readonly POSITION: "POSITION";
  readonly RATE_BASED_STATEMENT: "RATE_BASED_STATEMENT";
  readonly REGEX_PATTERN_REFERENCE_STATEMENT: "REGEX_PATTERN_REFERENCE_STATEMENT";
  readonly REGEX_PATTERN_SET: "REGEX_PATTERN_SET";
  readonly RESOURCE_ARN: "RESOURCE_ARN";
  readonly RESOURCE_TYPE: "RESOURCE_TYPE";
  readonly RESPONSE_CONTENT_TYPE: "RESPONSE_CONTENT_TYPE";
  readonly RULE: "RULE";
  readonly RULE_ACTION: "RULE_ACTION";
  readonly RULE_GROUP: "RULE_GROUP";
  readonly RULE_GROUP_REFERENCE_STATEMENT: "RULE_GROUP_REFERENCE_STATEMENT";
  readonly SCOPE_DOWN: "SCOPE_DOWN";
  readonly SCOPE_VALUE: "SCOPE_VALUE";
  readonly SINGLE_HEADER: "SINGLE_HEADER";
  readonly SINGLE_QUERY_ARGUMENT: "SINGLE_QUERY_ARGUMENT";
  readonly SIZE_CONSTRAINT_STATEMENT: "SIZE_CONSTRAINT_STATEMENT";
  readonly SQLI_MATCH_STATEMENT: "SQLI_MATCH_STATEMENT";
  readonly STATEMENT: "STATEMENT";
  readonly TAGS: "TAGS";
  readonly TAG_KEYS: "TAG_KEYS";
  readonly TEXT_TRANSFORMATION: "TEXT_TRANSFORMATION";
  readonly TOKEN_DOMAIN: "TOKEN_DOMAIN";
  readonly WEB_ACL: "WEB_ACL";
  readonly XSS_MATCH_STATEMENT: "XSS_MATCH_STATEMENT";
};
export type ParameterExceptionField =
  (typeof ParameterExceptionField)[keyof typeof ParameterExceptionField];
export declare class WAFInvalidParameterException extends __BaseException {
  readonly name: "WAFInvalidParameterException";
  readonly $fault: "client";
  Field?: ParameterExceptionField;
  Parameter?: string;
  Reason?: string;
  constructor(
    opts: __ExceptionOptionType<WAFInvalidParameterException, __BaseException>
  );
}
export declare class WAFNonexistentItemException extends __BaseException {
  readonly name: "WAFNonexistentItemException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<WAFNonexistentItemException, __BaseException>
  );
}
export declare class WAFUnavailableEntityException extends __BaseException {
  readonly name: "WAFUnavailableEntityException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<WAFUnavailableEntityException, __BaseException>
  );
}
export declare const SizeInspectionLimit: {
  readonly KB_16: "KB_16";
  readonly KB_32: "KB_32";
  readonly KB_48: "KB_48";
  readonly KB_64: "KB_64";
};
export type SizeInspectionLimit =
  (typeof SizeInspectionLimit)[keyof typeof SizeInspectionLimit];
export interface RequestBodyAssociatedResourceTypeConfig {
  DefaultSizeInspectionLimit: SizeInspectionLimit | undefined;
}
export interface AssociationConfig {
  RequestBody?: Partial<
    Record<AssociatedResourceType, RequestBodyAssociatedResourceTypeConfig>
  >;
}
export interface ImmunityTimeProperty {
  ImmunityTime: number | undefined;
}
export interface CaptchaConfig {
  ImmunityTimeProperty?: ImmunityTimeProperty;
}
export interface ChallengeConfig {
  ImmunityTimeProperty?: ImmunityTimeProperty;
}
export interface NoneAction {}
export interface OverrideAction {
  Count?: CountAction;
  None?: NoneAction;
}
export interface Label {
  Name: string | undefined;
}
export interface VisibilityConfig {
  SampledRequestsEnabled: boolean | undefined;
  CloudWatchMetricsEnabled: boolean | undefined;
  MetricName: string | undefined;
}
export declare const Scope: {
  readonly CLOUDFRONT: "CLOUDFRONT";
  readonly REGIONAL: "REGIONAL";
};
export type Scope = (typeof Scope)[keyof typeof Scope];
export interface CheckCapacityResponse {
  Capacity?: number;
}
export declare class WAFExpiredManagedRuleGroupVersionException extends __BaseException {
  readonly name: "WAFExpiredManagedRuleGroupVersionException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      WAFExpiredManagedRuleGroupVersionException,
      __BaseException
    >
  );
}
export declare class WAFInvalidResourceException extends __BaseException {
  readonly name: "WAFInvalidResourceException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<WAFInvalidResourceException, __BaseException>
  );
}
export declare class WAFLimitsExceededException extends __BaseException {
  readonly name: "WAFLimitsExceededException";
  readonly $fault: "client";
  Message?: string;
  SourceType?: string;
  constructor(
    opts: __ExceptionOptionType<WAFLimitsExceededException, __BaseException>
  );
}
export declare class WAFSubscriptionNotFoundException extends __BaseException {
  readonly name: "WAFSubscriptionNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      WAFSubscriptionNotFoundException,
      __BaseException
    >
  );
}
export interface CreateAPIKeyRequest {
  Scope: Scope | undefined;
  TokenDomains: string[] | undefined;
}
export interface CreateAPIKeyResponse {
  APIKey?: string;
}
export declare const IPAddressVersion: {
  readonly IPV4: "IPV4";
  readonly IPV6: "IPV6";
};
export type IPAddressVersion =
  (typeof IPAddressVersion)[keyof typeof IPAddressVersion];
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateIPSetRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Description?: string;
  IPAddressVersion: IPAddressVersion | undefined;
  Addresses: string[] | undefined;
  Tags?: Tag[];
}
export interface IPSetSummary {
  Name?: string;
  Id?: string;
  Description?: string;
  LockToken?: string;
  ARN?: string;
}
export interface CreateIPSetResponse {
  Summary?: IPSetSummary;
}
export declare class WAFDuplicateItemException extends __BaseException {
  readonly name: "WAFDuplicateItemException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<WAFDuplicateItemException, __BaseException>
  );
}
export declare class WAFOptimisticLockException extends __BaseException {
  readonly name: "WAFOptimisticLockException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<WAFOptimisticLockException, __BaseException>
  );
}
export declare class WAFTagOperationException extends __BaseException {
  readonly name: "WAFTagOperationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<WAFTagOperationException, __BaseException>
  );
}
export declare class WAFTagOperationInternalErrorException extends __BaseException {
  readonly name: "WAFTagOperationInternalErrorException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      WAFTagOperationInternalErrorException,
      __BaseException
    >
  );
}
export interface Regex {
  RegexString?: string;
}
export interface CreateRegexPatternSetRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Description?: string;
  RegularExpressionList: Regex[] | undefined;
  Tags?: Tag[];
}
export interface RegexPatternSetSummary {
  Name?: string;
  Id?: string;
  Description?: string;
  LockToken?: string;
  ARN?: string;
}
export interface CreateRegexPatternSetResponse {
  Summary?: RegexPatternSetSummary;
}
export declare const ResponseContentType: {
  readonly APPLICATION_JSON: "APPLICATION_JSON";
  readonly TEXT_HTML: "TEXT_HTML";
  readonly TEXT_PLAIN: "TEXT_PLAIN";
};
export type ResponseContentType =
  (typeof ResponseContentType)[keyof typeof ResponseContentType];
export interface CustomResponseBody {
  ContentType: ResponseContentType | undefined;
  Content: string | undefined;
}
export interface RuleGroupSummary {
  Name?: string;
  Id?: string;
  Description?: string;
  LockToken?: string;
  ARN?: string;
}
export interface CreateRuleGroupResponse {
  Summary?: RuleGroupSummary;
}
export interface DefaultAction {
  Block?: BlockAction;
  Allow?: AllowAction;
}
export interface WebACLSummary {
  Name?: string;
  Id?: string;
  Description?: string;
  LockToken?: string;
  ARN?: string;
}
export interface CreateWebACLResponse {
  Summary?: WebACLSummary;
}
export declare class WAFConfigurationWarningException extends __BaseException {
  readonly name: "WAFConfigurationWarningException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      WAFConfigurationWarningException,
      __BaseException
    >
  );
}
export interface DeleteAPIKeyRequest {
  Scope: Scope | undefined;
  APIKey: string | undefined;
}
export interface DeleteAPIKeyResponse {}
export interface DeleteFirewallManagerRuleGroupsRequest {
  WebACLArn: string | undefined;
  WebACLLockToken: string | undefined;
}
export interface DeleteFirewallManagerRuleGroupsResponse {
  NextWebACLLockToken?: string;
}
export interface DeleteIPSetRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  LockToken: string | undefined;
}
export interface DeleteIPSetResponse {}
export declare class WAFAssociatedItemException extends __BaseException {
  readonly name: "WAFAssociatedItemException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<WAFAssociatedItemException, __BaseException>
  );
}
export declare const LogScope: {
  readonly CUSTOMER: "CUSTOMER";
  readonly SECURITY_LAKE: "SECURITY_LAKE";
};
export type LogScope = (typeof LogScope)[keyof typeof LogScope];
export declare const LogType: {
  readonly WAF_LOGS: "WAF_LOGS";
};
export type LogType = (typeof LogType)[keyof typeof LogType];
export interface DeleteLoggingConfigurationRequest {
  ResourceArn: string | undefined;
  LogType?: LogType;
  LogScope?: LogScope;
}
export interface DeleteLoggingConfigurationResponse {}
export interface DeletePermissionPolicyRequest {
  ResourceArn: string | undefined;
}
export interface DeletePermissionPolicyResponse {}
export interface DeleteRegexPatternSetRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  LockToken: string | undefined;
}
export interface DeleteRegexPatternSetResponse {}
export interface DeleteRuleGroupRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  LockToken: string | undefined;
}
export interface DeleteRuleGroupResponse {}
export interface DeleteWebACLRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  LockToken: string | undefined;
}
export interface DeleteWebACLResponse {}
export interface DescribeAllManagedProductsRequest {
  Scope: Scope | undefined;
}
export interface ManagedProductDescriptor {
  VendorName?: string;
  ManagedRuleSetName?: string;
  ProductId?: string;
  ProductLink?: string;
  ProductTitle?: string;
  ProductDescription?: string;
  SnsTopicArn?: string;
  IsVersioningSupported?: boolean;
  IsAdvancedManagedRuleSet?: boolean;
}
export interface DescribeAllManagedProductsResponse {
  ManagedProducts?: ManagedProductDescriptor[];
}
export interface DescribeManagedProductsByVendorRequest {
  VendorName: string | undefined;
  Scope: Scope | undefined;
}
export interface DescribeManagedProductsByVendorResponse {
  ManagedProducts?: ManagedProductDescriptor[];
}
export interface DescribeManagedRuleGroupRequest {
  VendorName: string | undefined;
  Name: string | undefined;
  Scope: Scope | undefined;
  VersionName?: string;
}
export interface LabelSummary {
  Name?: string;
}
export interface RuleSummary {
  Name?: string;
  Action?: RuleAction;
}
export interface DescribeManagedRuleGroupResponse {
  VersionName?: string;
  SnsTopicArn?: string;
  Capacity?: number;
  Rules?: RuleSummary[];
  LabelNamespace?: string;
  AvailableLabels?: LabelSummary[];
  ConsumedLabels?: LabelSummary[];
}
export interface DisassociateWebACLRequest {
  ResourceArn: string | undefined;
}
export interface DisassociateWebACLResponse {}
export declare const Platform: {
  readonly ANDROID: "ANDROID";
  readonly IOS: "IOS";
};
export type Platform = (typeof Platform)[keyof typeof Platform];
export interface GenerateMobileSdkReleaseUrlRequest {
  Platform: Platform | undefined;
  ReleaseVersion: string | undefined;
}
export interface GenerateMobileSdkReleaseUrlResponse {
  Url?: string;
}
export interface GetDecryptedAPIKeyRequest {
  Scope: Scope | undefined;
  APIKey: string | undefined;
}
export interface GetDecryptedAPIKeyResponse {
  TokenDomains?: string[];
  CreationTimestamp?: Date;
}
export interface GetIPSetRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
}
export interface IPSet {
  Name: string | undefined;
  Id: string | undefined;
  ARN: string | undefined;
  Description?: string;
  IPAddressVersion: IPAddressVersion | undefined;
  Addresses: string[] | undefined;
}
export interface GetIPSetResponse {
  IPSet?: IPSet;
  LockToken?: string;
}
export interface GetLoggingConfigurationRequest {
  ResourceArn: string | undefined;
  LogType?: LogType;
  LogScope?: LogScope;
}
export declare const FilterBehavior: {
  readonly DROP: "DROP";
  readonly KEEP: "KEEP";
};
export type FilterBehavior =
  (typeof FilterBehavior)[keyof typeof FilterBehavior];
export interface LabelNameCondition {
  LabelName: string | undefined;
}
export interface Condition {
  ActionCondition?: ActionCondition;
  LabelNameCondition?: LabelNameCondition;
}
export declare const FilterRequirement: {
  readonly MEETS_ALL: "MEETS_ALL";
  readonly MEETS_ANY: "MEETS_ANY";
};
export type FilterRequirement =
  (typeof FilterRequirement)[keyof typeof FilterRequirement];
export interface Filter {
  Behavior: FilterBehavior | undefined;
  Requirement: FilterRequirement | undefined;
  Conditions: Condition[] | undefined;
}
export interface LoggingFilter {
  Filters: Filter[] | undefined;
  DefaultBehavior: FilterBehavior | undefined;
}
export interface LoggingConfiguration {
  ResourceArn: string | undefined;
  LogDestinationConfigs: string[] | undefined;
  RedactedFields?: FieldToMatch[];
  ManagedByFirewallManager?: boolean;
  LoggingFilter?: LoggingFilter;
  LogType?: LogType;
  LogScope?: LogScope;
}
export interface GetLoggingConfigurationResponse {
  LoggingConfiguration?: LoggingConfiguration;
}
export interface GetManagedRuleSetRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
}
export interface ManagedRuleSetVersion {
  AssociatedRuleGroupArn?: string;
  Capacity?: number;
  ForecastedLifetime?: number;
  PublishTimestamp?: Date;
  LastUpdateTimestamp?: Date;
  ExpiryTimestamp?: Date;
}
export interface ManagedRuleSet {
  Name: string | undefined;
  Id: string | undefined;
  ARN: string | undefined;
  Description?: string;
  PublishedVersions?: Record<string, ManagedRuleSetVersion>;
  RecommendedVersion?: string;
  LabelNamespace?: string;
}
export interface GetManagedRuleSetResponse {
  ManagedRuleSet?: ManagedRuleSet;
  LockToken?: string;
}
export interface GetMobileSdkReleaseRequest {
  Platform: Platform | undefined;
  ReleaseVersion: string | undefined;
}
export interface MobileSdkRelease {
  ReleaseVersion?: string;
  Timestamp?: Date;
  ReleaseNotes?: string;
  Tags?: Tag[];
}
export interface GetMobileSdkReleaseResponse {
  MobileSdkRelease?: MobileSdkRelease;
}
export interface GetPermissionPolicyRequest {
  ResourceArn: string | undefined;
}
export interface GetPermissionPolicyResponse {
  Policy?: string;
}
export interface GetRateBasedStatementManagedKeysRequest {
  Scope: Scope | undefined;
  WebACLName: string | undefined;
  WebACLId: string | undefined;
  RuleGroupRuleName?: string;
  RuleName: string | undefined;
}
export interface RateBasedStatementManagedKeysIPSet {
  IPAddressVersion?: IPAddressVersion;
  Addresses?: string[];
}
export interface GetRateBasedStatementManagedKeysResponse {
  ManagedKeysIPV4?: RateBasedStatementManagedKeysIPSet;
  ManagedKeysIPV6?: RateBasedStatementManagedKeysIPSet;
}
export declare class WAFUnsupportedAggregateKeyTypeException extends __BaseException {
  readonly name: "WAFUnsupportedAggregateKeyTypeException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      WAFUnsupportedAggregateKeyTypeException,
      __BaseException
    >
  );
}
export interface GetRegexPatternSetRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
}
export interface RegexPatternSet {
  Name?: string;
  Id?: string;
  ARN?: string;
  Description?: string;
  RegularExpressionList?: Regex[];
}
export interface GetRegexPatternSetResponse {
  RegexPatternSet?: RegexPatternSet;
  LockToken?: string;
}
export interface GetRuleGroupRequest {
  Name?: string;
  Scope?: Scope;
  Id?: string;
  ARN?: string;
}
export interface TimeWindow {
  StartTime: Date | undefined;
  EndTime: Date | undefined;
}
export interface GetSampledRequestsRequest {
  WebAclArn: string | undefined;
  RuleMetricName: string | undefined;
  Scope: Scope | undefined;
  TimeWindow: TimeWindow | undefined;
  MaxItems: number | undefined;
}
export declare const FailureReason: {
  readonly TOKEN_DOMAIN_MISMATCH: "TOKEN_DOMAIN_MISMATCH";
  readonly TOKEN_EXPIRED: "TOKEN_EXPIRED";
  readonly TOKEN_INVALID: "TOKEN_INVALID";
  readonly TOKEN_MISSING: "TOKEN_MISSING";
};
export type FailureReason = (typeof FailureReason)[keyof typeof FailureReason];
export interface CaptchaResponse {
  ResponseCode?: number;
  SolveTimestamp?: number;
  FailureReason?: FailureReason;
}
export interface ChallengeResponse {
  ResponseCode?: number;
  SolveTimestamp?: number;
  FailureReason?: FailureReason;
}
export interface HTTPHeader {
  Name?: string;
  Value?: string;
}
export interface HTTPRequest {
  ClientIP?: string;
  Country?: string;
  URI?: string;
  Method?: string;
  HTTPVersion?: string;
  Headers?: HTTPHeader[];
}
export interface SampledHTTPRequest {
  Request: HTTPRequest | undefined;
  Weight: number | undefined;
  Timestamp?: Date;
  Action?: string;
  RuleNameWithinRuleGroup?: string;
  RequestHeadersInserted?: HTTPHeader[];
  ResponseCodeSent?: number;
  Labels?: Label[];
  CaptchaResponse?: CaptchaResponse;
  ChallengeResponse?: ChallengeResponse;
  OverriddenAction?: string;
}
export interface GetSampledRequestsResponse {
  SampledRequests?: SampledHTTPRequest[];
  PopulationSize?: number;
  TimeWindow?: TimeWindow;
}
export interface GetWebACLRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
}
export interface GetWebACLForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListAPIKeysRequest {
  Scope: Scope | undefined;
  NextMarker?: string;
  Limit?: number;
}
export interface ListAPIKeysResponse {
  NextMarker?: string;
  APIKeySummaries?: APIKeySummary[];
  ApplicationIntegrationURL?: string;
}
export interface ListAvailableManagedRuleGroupsRequest {
  Scope: Scope | undefined;
  NextMarker?: string;
  Limit?: number;
}
export interface ManagedRuleGroupSummary {
  VendorName?: string;
  Name?: string;
  VersioningSupported?: boolean;
  Description?: string;
}
export interface ListAvailableManagedRuleGroupsResponse {
  NextMarker?: string;
  ManagedRuleGroups?: ManagedRuleGroupSummary[];
}
export interface ListAvailableManagedRuleGroupVersionsRequest {
  VendorName: string | undefined;
  Name: string | undefined;
  Scope: Scope | undefined;
  NextMarker?: string;
  Limit?: number;
}
export interface ManagedRuleGroupVersion {
  Name?: string;
  LastUpdateTimestamp?: Date;
}
export interface ListAvailableManagedRuleGroupVersionsResponse {
  NextMarker?: string;
  Versions?: ManagedRuleGroupVersion[];
  CurrentDefaultVersion?: string;
}
export interface ListIPSetsRequest {
  Scope: Scope | undefined;
  NextMarker?: string;
  Limit?: number;
}
export interface ListIPSetsResponse {
  NextMarker?: string;
  IPSets?: IPSetSummary[];
}
export interface ListLoggingConfigurationsRequest {
  Scope: Scope | undefined;
  NextMarker?: string;
  Limit?: number;
  LogScope?: LogScope;
}
export interface ListLoggingConfigurationsResponse {
  LoggingConfigurations?: LoggingConfiguration[];
  NextMarker?: string;
}
export interface ListManagedRuleSetsRequest {
  Scope: Scope | undefined;
  NextMarker?: string;
  Limit?: number;
}
export interface ManagedRuleSetSummary {
  Name?: string;
  Id?: string;
  Description?: string;
  LockToken?: string;
  ARN?: string;
  LabelNamespace?: string;
}
export interface ListManagedRuleSetsResponse {
  NextMarker?: string;
  ManagedRuleSets?: ManagedRuleSetSummary[];
}
export interface ListMobileSdkReleasesRequest {
  Platform: Platform | undefined;
  NextMarker?: string;
  Limit?: number;
}
export interface ReleaseSummary {
  ReleaseVersion?: string;
  Timestamp?: Date;
}
export interface ListMobileSdkReleasesResponse {
  ReleaseSummaries?: ReleaseSummary[];
  NextMarker?: string;
}
export interface ListRegexPatternSetsRequest {
  Scope: Scope | undefined;
  NextMarker?: string;
  Limit?: number;
}
export interface ListRegexPatternSetsResponse {
  NextMarker?: string;
  RegexPatternSets?: RegexPatternSetSummary[];
}
export declare const ResourceType: {
  readonly API_GATEWAY: "API_GATEWAY";
  readonly APPLICATION_LOAD_BALANCER: "APPLICATION_LOAD_BALANCER";
  readonly APPSYNC: "APPSYNC";
  readonly APP_RUNNER_SERVICE: "APP_RUNNER_SERVICE";
  readonly COGNITIO_USER_POOL: "COGNITO_USER_POOL";
  readonly VERIFIED_ACCESS_INSTANCE: "VERIFIED_ACCESS_INSTANCE";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export interface ListResourcesForWebACLRequest {
  WebACLArn: string | undefined;
  ResourceType?: ResourceType;
}
export interface ListResourcesForWebACLResponse {
  ResourceArns?: string[];
}
export interface ListRuleGroupsRequest {
  Scope: Scope | undefined;
  NextMarker?: string;
  Limit?: number;
}
export interface ListRuleGroupsResponse {
  NextMarker?: string;
  RuleGroups?: RuleGroupSummary[];
}
export interface ListTagsForResourceRequest {
  NextMarker?: string;
  Limit?: number;
  ResourceARN: string | undefined;
}
export interface TagInfoForResource {
  ResourceARN?: string;
  TagList?: Tag[];
}
export interface ListTagsForResourceResponse {
  NextMarker?: string;
  TagInfoForResource?: TagInfoForResource;
}
export interface ListWebACLsRequest {
  Scope: Scope | undefined;
  NextMarker?: string;
  Limit?: number;
}
export interface ListWebACLsResponse {
  NextMarker?: string;
  WebACLs?: WebACLSummary[];
}
export interface PutLoggingConfigurationRequest {
  LoggingConfiguration: LoggingConfiguration | undefined;
}
export interface PutLoggingConfigurationResponse {
  LoggingConfiguration?: LoggingConfiguration;
}
export declare class WAFLogDestinationPermissionIssueException extends __BaseException {
  readonly name: "WAFLogDestinationPermissionIssueException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      WAFLogDestinationPermissionIssueException,
      __BaseException
    >
  );
}
export declare class WAFServiceLinkedRoleErrorException extends __BaseException {
  readonly name: "WAFServiceLinkedRoleErrorException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      WAFServiceLinkedRoleErrorException,
      __BaseException
    >
  );
}
export interface VersionToPublish {
  AssociatedRuleGroupArn?: string;
  ForecastedLifetime?: number;
}
export interface PutManagedRuleSetVersionsRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  LockToken: string | undefined;
  RecommendedVersion?: string;
  VersionsToPublish?: Record<string, VersionToPublish>;
}
export interface PutManagedRuleSetVersionsResponse {
  NextLockToken?: string;
}
export interface PutPermissionPolicyRequest {
  ResourceArn: string | undefined;
  Policy: string | undefined;
}
export interface PutPermissionPolicyResponse {}
export declare class WAFInvalidPermissionPolicyException extends __BaseException {
  readonly name: "WAFInvalidPermissionPolicyException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      WAFInvalidPermissionPolicyException,
      __BaseException
    >
  );
}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateIPSetRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  Description?: string;
  Addresses: string[] | undefined;
  LockToken: string | undefined;
}
export interface UpdateIPSetResponse {
  NextLockToken?: string;
}
export interface UpdateManagedRuleSetVersionExpiryDateRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  LockToken: string | undefined;
  VersionToExpire: string | undefined;
  ExpiryTimestamp: Date | undefined;
}
export interface UpdateManagedRuleSetVersionExpiryDateResponse {
  ExpiringVersion?: string;
  ExpiryTimestamp?: Date;
  NextLockToken?: string;
}
export interface UpdateRegexPatternSetRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  Description?: string;
  RegularExpressionList: Regex[] | undefined;
  LockToken: string | undefined;
}
export interface UpdateRegexPatternSetResponse {
  NextLockToken?: string;
}
export interface UpdateRuleGroupResponse {
  NextLockToken?: string;
}
export interface UpdateWebACLResponse {
  NextLockToken?: string;
}
export interface Statement {
  ByteMatchStatement?: ByteMatchStatement;
  SqliMatchStatement?: SqliMatchStatement;
  XssMatchStatement?: XssMatchStatement;
  SizeConstraintStatement?: SizeConstraintStatement;
  GeoMatchStatement?: GeoMatchStatement;
  RuleGroupReferenceStatement?: RuleGroupReferenceStatement;
  IPSetReferenceStatement?: IPSetReferenceStatement;
  RegexPatternSetReferenceStatement?: RegexPatternSetReferenceStatement;
  RateBasedStatement?: RateBasedStatement;
  AndStatement?: AndStatement;
  OrStatement?: OrStatement;
  NotStatement?: NotStatement;
  ManagedRuleGroupStatement?: ManagedRuleGroupStatement;
  LabelMatchStatement?: LabelMatchStatement;
  RegexMatchStatement?: RegexMatchStatement;
}
export interface ManagedRuleGroupStatement {
  VendorName: string | undefined;
  Name: string | undefined;
  Version?: string;
  ExcludedRules?: ExcludedRule[];
  ScopeDownStatement?: Statement;
  ManagedRuleGroupConfigs?: ManagedRuleGroupConfig[];
  RuleActionOverrides?: RuleActionOverride[];
}
export interface NotStatement {
  Statement: Statement | undefined;
}
export interface RateBasedStatement {
  Limit: number | undefined;
  EvaluationWindowSec?: number;
  AggregateKeyType: RateBasedStatementAggregateKeyType | undefined;
  ScopeDownStatement?: Statement;
  ForwardedIPConfig?: ForwardedIPConfig;
  CustomKeys?: RateBasedStatementCustomKey[];
}
export interface Rule {
  Name: string | undefined;
  Priority: number | undefined;
  Statement: Statement | undefined;
  Action?: RuleAction;
  OverrideAction?: OverrideAction;
  RuleLabels?: Label[];
  VisibilityConfig: VisibilityConfig | undefined;
  CaptchaConfig?: CaptchaConfig;
  ChallengeConfig?: ChallengeConfig;
}
export interface AndStatement {
  Statements: Statement[] | undefined;
}
export interface OrStatement {
  Statements: Statement[] | undefined;
}
export interface FirewallManagerStatement {
  ManagedRuleGroupStatement?: ManagedRuleGroupStatement;
  RuleGroupReferenceStatement?: RuleGroupReferenceStatement;
}
export interface FirewallManagerRuleGroup {
  Name: string | undefined;
  Priority: number | undefined;
  FirewallManagerStatement: FirewallManagerStatement | undefined;
  OverrideAction: OverrideAction | undefined;
  VisibilityConfig: VisibilityConfig | undefined;
}
export interface CheckCapacityRequest {
  Scope: Scope | undefined;
  Rules: Rule[] | undefined;
}
export interface CreateRuleGroupRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Capacity: number | undefined;
  Description?: string;
  Rules?: Rule[];
  VisibilityConfig: VisibilityConfig | undefined;
  Tags?: Tag[];
  CustomResponseBodies?: Record<string, CustomResponseBody>;
}
export interface CreateWebACLRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  DefaultAction: DefaultAction | undefined;
  Description?: string;
  Rules?: Rule[];
  VisibilityConfig: VisibilityConfig | undefined;
  Tags?: Tag[];
  CustomResponseBodies?: Record<string, CustomResponseBody>;
  CaptchaConfig?: CaptchaConfig;
  ChallengeConfig?: ChallengeConfig;
  TokenDomains?: string[];
  AssociationConfig?: AssociationConfig;
}
export interface RuleGroup {
  Name: string | undefined;
  Id: string | undefined;
  Capacity: number | undefined;
  ARN: string | undefined;
  Description?: string;
  Rules?: Rule[];
  VisibilityConfig: VisibilityConfig | undefined;
  LabelNamespace?: string;
  CustomResponseBodies?: Record<string, CustomResponseBody>;
  AvailableLabels?: LabelSummary[];
  ConsumedLabels?: LabelSummary[];
}
export interface UpdateRuleGroupRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  Description?: string;
  Rules?: Rule[];
  VisibilityConfig: VisibilityConfig | undefined;
  LockToken: string | undefined;
  CustomResponseBodies?: Record<string, CustomResponseBody>;
}
export interface UpdateWebACLRequest {
  Name: string | undefined;
  Scope: Scope | undefined;
  Id: string | undefined;
  DefaultAction: DefaultAction | undefined;
  Description?: string;
  Rules?: Rule[];
  VisibilityConfig: VisibilityConfig | undefined;
  LockToken: string | undefined;
  CustomResponseBodies?: Record<string, CustomResponseBody>;
  CaptchaConfig?: CaptchaConfig;
  ChallengeConfig?: ChallengeConfig;
  TokenDomains?: string[];
  AssociationConfig?: AssociationConfig;
}
export interface GetRuleGroupResponse {
  RuleGroup?: RuleGroup;
  LockToken?: string;
}
export interface WebACL {
  Name: string | undefined;
  Id: string | undefined;
  ARN: string | undefined;
  DefaultAction: DefaultAction | undefined;
  Description?: string;
  Rules?: Rule[];
  VisibilityConfig: VisibilityConfig | undefined;
  Capacity?: number;
  PreProcessFirewallManagerRuleGroups?: FirewallManagerRuleGroup[];
  PostProcessFirewallManagerRuleGroups?: FirewallManagerRuleGroup[];
  ManagedByFirewallManager?: boolean;
  LabelNamespace?: string;
  CustomResponseBodies?: Record<string, CustomResponseBody>;
  CaptchaConfig?: CaptchaConfig;
  ChallengeConfig?: ChallengeConfig;
  TokenDomains?: string[];
  AssociationConfig?: AssociationConfig;
}
export interface GetWebACLForResourceResponse {
  WebACL?: WebACL;
}
export interface GetWebACLResponse {
  WebACL?: WebACL;
  LockToken?: string;
  ApplicationIntegrationURL?: string;
}
