import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AssociateWebACLCommandInput,
  AssociateWebACLCommandOutput,
} from "./commands/AssociateWebACLCommand";
import {
  CheckCapacityCommandInput,
  CheckCapacityCommandOutput,
} from "./commands/CheckCapacityCommand";
import {
  CreateAPIKeyCommandInput,
  CreateAPIKeyCommandOutput,
} from "./commands/CreateAPIKeyCommand";
import {
  CreateIPSetCommandInput,
  CreateIPSetCommandOutput,
} from "./commands/CreateIPSetCommand";
import {
  CreateRegexPatternSetCommandInput,
  CreateRegexPatternSetCommandOutput,
} from "./commands/CreateRegexPatternSetCommand";
import {
  CreateRuleGroupCommandInput,
  CreateRuleGroupCommandOutput,
} from "./commands/CreateRuleGroupCommand";
import {
  CreateWebACLCommandInput,
  CreateWebACLCommandOutput,
} from "./commands/CreateWebACLCommand";
import {
  DeleteAPIKeyCommandInput,
  DeleteAPIKeyCommandOutput,
} from "./commands/DeleteAPIKeyCommand";
import {
  DeleteFirewallManagerRuleGroupsCommandInput,
  DeleteFirewallManagerRuleGroupsCommandOutput,
} from "./commands/DeleteFirewallManagerRuleGroupsCommand";
import {
  DeleteIPSetCommandInput,
  DeleteIPSetCommandOutput,
} from "./commands/DeleteIPSetCommand";
import {
  DeleteLoggingConfigurationCommandInput,
  DeleteLoggingConfigurationCommandOutput,
} from "./commands/DeleteLoggingConfigurationCommand";
import {
  DeletePermissionPolicyCommandInput,
  DeletePermissionPolicyCommandOutput,
} from "./commands/DeletePermissionPolicyCommand";
import {
  DeleteRegexPatternSetCommandInput,
  DeleteRegexPatternSetCommandOutput,
} from "./commands/DeleteRegexPatternSetCommand";
import {
  DeleteRuleGroupCommandInput,
  DeleteRuleGroupCommandOutput,
} from "./commands/DeleteRuleGroupCommand";
import {
  DeleteWebACLCommandInput,
  DeleteWebACLCommandOutput,
} from "./commands/DeleteWebACLCommand";
import {
  DescribeAllManagedProductsCommandInput,
  DescribeAllManagedProductsCommandOutput,
} from "./commands/DescribeAllManagedProductsCommand";
import {
  DescribeManagedProductsByVendorCommandInput,
  DescribeManagedProductsByVendorCommandOutput,
} from "./commands/DescribeManagedProductsByVendorCommand";
import {
  DescribeManagedRuleGroupCommandInput,
  DescribeManagedRuleGroupCommandOutput,
} from "./commands/DescribeManagedRuleGroupCommand";
import {
  DisassociateWebACLCommandInput,
  DisassociateWebACLCommandOutput,
} from "./commands/DisassociateWebACLCommand";
import {
  GenerateMobileSdkReleaseUrlCommandInput,
  GenerateMobileSdkReleaseUrlCommandOutput,
} from "./commands/GenerateMobileSdkReleaseUrlCommand";
import {
  GetDecryptedAPIKeyCommandInput,
  GetDecryptedAPIKeyCommandOutput,
} from "./commands/GetDecryptedAPIKeyCommand";
import {
  GetIPSetCommandInput,
  GetIPSetCommandOutput,
} from "./commands/GetIPSetCommand";
import {
  GetLoggingConfigurationCommandInput,
  GetLoggingConfigurationCommandOutput,
} from "./commands/GetLoggingConfigurationCommand";
import {
  GetManagedRuleSetCommandInput,
  GetManagedRuleSetCommandOutput,
} from "./commands/GetManagedRuleSetCommand";
import {
  GetMobileSdkReleaseCommandInput,
  GetMobileSdkReleaseCommandOutput,
} from "./commands/GetMobileSdkReleaseCommand";
import {
  GetPermissionPolicyCommandInput,
  GetPermissionPolicyCommandOutput,
} from "./commands/GetPermissionPolicyCommand";
import {
  GetRateBasedStatementManagedKeysCommandInput,
  GetRateBasedStatementManagedKeysCommandOutput,
} from "./commands/GetRateBasedStatementManagedKeysCommand";
import {
  GetRegexPatternSetCommandInput,
  GetRegexPatternSetCommandOutput,
} from "./commands/GetRegexPatternSetCommand";
import {
  GetRuleGroupCommandInput,
  GetRuleGroupCommandOutput,
} from "./commands/GetRuleGroupCommand";
import {
  GetSampledRequestsCommandInput,
  GetSampledRequestsCommandOutput,
} from "./commands/GetSampledRequestsCommand";
import {
  GetWebACLCommandInput,
  GetWebACLCommandOutput,
} from "./commands/GetWebACLCommand";
import {
  GetWebACLForResourceCommandInput,
  GetWebACLForResourceCommandOutput,
} from "./commands/GetWebACLForResourceCommand";
import {
  ListAPIKeysCommandInput,
  ListAPIKeysCommandOutput,
} from "./commands/ListAPIKeysCommand";
import {
  ListAvailableManagedRuleGroupsCommandInput,
  ListAvailableManagedRuleGroupsCommandOutput,
} from "./commands/ListAvailableManagedRuleGroupsCommand";
import {
  ListAvailableManagedRuleGroupVersionsCommandInput,
  ListAvailableManagedRuleGroupVersionsCommandOutput,
} from "./commands/ListAvailableManagedRuleGroupVersionsCommand";
import {
  ListIPSetsCommandInput,
  ListIPSetsCommandOutput,
} from "./commands/ListIPSetsCommand";
import {
  ListLoggingConfigurationsCommandInput,
  ListLoggingConfigurationsCommandOutput,
} from "./commands/ListLoggingConfigurationsCommand";
import {
  ListManagedRuleSetsCommandInput,
  ListManagedRuleSetsCommandOutput,
} from "./commands/ListManagedRuleSetsCommand";
import {
  ListMobileSdkReleasesCommandInput,
  ListMobileSdkReleasesCommandOutput,
} from "./commands/ListMobileSdkReleasesCommand";
import {
  ListRegexPatternSetsCommandInput,
  ListRegexPatternSetsCommandOutput,
} from "./commands/ListRegexPatternSetsCommand";
import {
  ListResourcesForWebACLCommandInput,
  ListResourcesForWebACLCommandOutput,
} from "./commands/ListResourcesForWebACLCommand";
import {
  ListRuleGroupsCommandInput,
  ListRuleGroupsCommandOutput,
} from "./commands/ListRuleGroupsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListWebACLsCommandInput,
  ListWebACLsCommandOutput,
} from "./commands/ListWebACLsCommand";
import {
  PutLoggingConfigurationCommandInput,
  PutLoggingConfigurationCommandOutput,
} from "./commands/PutLoggingConfigurationCommand";
import {
  PutManagedRuleSetVersionsCommandInput,
  PutManagedRuleSetVersionsCommandOutput,
} from "./commands/PutManagedRuleSetVersionsCommand";
import {
  PutPermissionPolicyCommandInput,
  PutPermissionPolicyCommandOutput,
} from "./commands/PutPermissionPolicyCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateIPSetCommandInput,
  UpdateIPSetCommandOutput,
} from "./commands/UpdateIPSetCommand";
import {
  UpdateManagedRuleSetVersionExpiryDateCommandInput,
  UpdateManagedRuleSetVersionExpiryDateCommandOutput,
} from "./commands/UpdateManagedRuleSetVersionExpiryDateCommand";
import {
  UpdateRegexPatternSetCommandInput,
  UpdateRegexPatternSetCommandOutput,
} from "./commands/UpdateRegexPatternSetCommand";
import {
  UpdateRuleGroupCommandInput,
  UpdateRuleGroupCommandOutput,
} from "./commands/UpdateRuleGroupCommand";
import {
  UpdateWebACLCommandInput,
  UpdateWebACLCommandOutput,
} from "./commands/UpdateWebACLCommand";
import { WAFV2Client } from "./WAFV2Client";
export interface WAFV2 {
  associateWebACL(
    args: AssociateWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateWebACLCommandOutput>;
  associateWebACL(
    args: AssociateWebACLCommandInput,
    cb: (err: any, data?: AssociateWebACLCommandOutput) => void
  ): void;
  associateWebACL(
    args: AssociateWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateWebACLCommandOutput) => void
  ): void;
  checkCapacity(
    args: CheckCapacityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CheckCapacityCommandOutput>;
  checkCapacity(
    args: CheckCapacityCommandInput,
    cb: (err: any, data?: CheckCapacityCommandOutput) => void
  ): void;
  checkCapacity(
    args: CheckCapacityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CheckCapacityCommandOutput) => void
  ): void;
  createAPIKey(
    args: CreateAPIKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAPIKeyCommandOutput>;
  createAPIKey(
    args: CreateAPIKeyCommandInput,
    cb: (err: any, data?: CreateAPIKeyCommandOutput) => void
  ): void;
  createAPIKey(
    args: CreateAPIKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAPIKeyCommandOutput) => void
  ): void;
  createIPSet(
    args: CreateIPSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateIPSetCommandOutput>;
  createIPSet(
    args: CreateIPSetCommandInput,
    cb: (err: any, data?: CreateIPSetCommandOutput) => void
  ): void;
  createIPSet(
    args: CreateIPSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateIPSetCommandOutput) => void
  ): void;
  createRegexPatternSet(
    args: CreateRegexPatternSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRegexPatternSetCommandOutput>;
  createRegexPatternSet(
    args: CreateRegexPatternSetCommandInput,
    cb: (err: any, data?: CreateRegexPatternSetCommandOutput) => void
  ): void;
  createRegexPatternSet(
    args: CreateRegexPatternSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRegexPatternSetCommandOutput) => void
  ): void;
  createRuleGroup(
    args: CreateRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRuleGroupCommandOutput>;
  createRuleGroup(
    args: CreateRuleGroupCommandInput,
    cb: (err: any, data?: CreateRuleGroupCommandOutput) => void
  ): void;
  createRuleGroup(
    args: CreateRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRuleGroupCommandOutput) => void
  ): void;
  createWebACL(
    args: CreateWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateWebACLCommandOutput>;
  createWebACL(
    args: CreateWebACLCommandInput,
    cb: (err: any, data?: CreateWebACLCommandOutput) => void
  ): void;
  createWebACL(
    args: CreateWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateWebACLCommandOutput) => void
  ): void;
  deleteAPIKey(
    args: DeleteAPIKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAPIKeyCommandOutput>;
  deleteAPIKey(
    args: DeleteAPIKeyCommandInput,
    cb: (err: any, data?: DeleteAPIKeyCommandOutput) => void
  ): void;
  deleteAPIKey(
    args: DeleteAPIKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAPIKeyCommandOutput) => void
  ): void;
  deleteFirewallManagerRuleGroups(
    args: DeleteFirewallManagerRuleGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFirewallManagerRuleGroupsCommandOutput>;
  deleteFirewallManagerRuleGroups(
    args: DeleteFirewallManagerRuleGroupsCommandInput,
    cb: (err: any, data?: DeleteFirewallManagerRuleGroupsCommandOutput) => void
  ): void;
  deleteFirewallManagerRuleGroups(
    args: DeleteFirewallManagerRuleGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFirewallManagerRuleGroupsCommandOutput) => void
  ): void;
  deleteIPSet(
    args: DeleteIPSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteIPSetCommandOutput>;
  deleteIPSet(
    args: DeleteIPSetCommandInput,
    cb: (err: any, data?: DeleteIPSetCommandOutput) => void
  ): void;
  deleteIPSet(
    args: DeleteIPSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteIPSetCommandOutput) => void
  ): void;
  deleteLoggingConfiguration(
    args: DeleteLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLoggingConfigurationCommandOutput>;
  deleteLoggingConfiguration(
    args: DeleteLoggingConfigurationCommandInput,
    cb: (err: any, data?: DeleteLoggingConfigurationCommandOutput) => void
  ): void;
  deleteLoggingConfiguration(
    args: DeleteLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLoggingConfigurationCommandOutput) => void
  ): void;
  deletePermissionPolicy(
    args: DeletePermissionPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeletePermissionPolicyCommandOutput>;
  deletePermissionPolicy(
    args: DeletePermissionPolicyCommandInput,
    cb: (err: any, data?: DeletePermissionPolicyCommandOutput) => void
  ): void;
  deletePermissionPolicy(
    args: DeletePermissionPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeletePermissionPolicyCommandOutput) => void
  ): void;
  deleteRegexPatternSet(
    args: DeleteRegexPatternSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRegexPatternSetCommandOutput>;
  deleteRegexPatternSet(
    args: DeleteRegexPatternSetCommandInput,
    cb: (err: any, data?: DeleteRegexPatternSetCommandOutput) => void
  ): void;
  deleteRegexPatternSet(
    args: DeleteRegexPatternSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRegexPatternSetCommandOutput) => void
  ): void;
  deleteRuleGroup(
    args: DeleteRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRuleGroupCommandOutput>;
  deleteRuleGroup(
    args: DeleteRuleGroupCommandInput,
    cb: (err: any, data?: DeleteRuleGroupCommandOutput) => void
  ): void;
  deleteRuleGroup(
    args: DeleteRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRuleGroupCommandOutput) => void
  ): void;
  deleteWebACL(
    args: DeleteWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteWebACLCommandOutput>;
  deleteWebACL(
    args: DeleteWebACLCommandInput,
    cb: (err: any, data?: DeleteWebACLCommandOutput) => void
  ): void;
  deleteWebACL(
    args: DeleteWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteWebACLCommandOutput) => void
  ): void;
  describeAllManagedProducts(
    args: DescribeAllManagedProductsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAllManagedProductsCommandOutput>;
  describeAllManagedProducts(
    args: DescribeAllManagedProductsCommandInput,
    cb: (err: any, data?: DescribeAllManagedProductsCommandOutput) => void
  ): void;
  describeAllManagedProducts(
    args: DescribeAllManagedProductsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAllManagedProductsCommandOutput) => void
  ): void;
  describeManagedProductsByVendor(
    args: DescribeManagedProductsByVendorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeManagedProductsByVendorCommandOutput>;
  describeManagedProductsByVendor(
    args: DescribeManagedProductsByVendorCommandInput,
    cb: (err: any, data?: DescribeManagedProductsByVendorCommandOutput) => void
  ): void;
  describeManagedProductsByVendor(
    args: DescribeManagedProductsByVendorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeManagedProductsByVendorCommandOutput) => void
  ): void;
  describeManagedRuleGroup(
    args: DescribeManagedRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeManagedRuleGroupCommandOutput>;
  describeManagedRuleGroup(
    args: DescribeManagedRuleGroupCommandInput,
    cb: (err: any, data?: DescribeManagedRuleGroupCommandOutput) => void
  ): void;
  describeManagedRuleGroup(
    args: DescribeManagedRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeManagedRuleGroupCommandOutput) => void
  ): void;
  disassociateWebACL(
    args: DisassociateWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateWebACLCommandOutput>;
  disassociateWebACL(
    args: DisassociateWebACLCommandInput,
    cb: (err: any, data?: DisassociateWebACLCommandOutput) => void
  ): void;
  disassociateWebACL(
    args: DisassociateWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateWebACLCommandOutput) => void
  ): void;
  generateMobileSdkReleaseUrl(
    args: GenerateMobileSdkReleaseUrlCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GenerateMobileSdkReleaseUrlCommandOutput>;
  generateMobileSdkReleaseUrl(
    args: GenerateMobileSdkReleaseUrlCommandInput,
    cb: (err: any, data?: GenerateMobileSdkReleaseUrlCommandOutput) => void
  ): void;
  generateMobileSdkReleaseUrl(
    args: GenerateMobileSdkReleaseUrlCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GenerateMobileSdkReleaseUrlCommandOutput) => void
  ): void;
  getDecryptedAPIKey(
    args: GetDecryptedAPIKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDecryptedAPIKeyCommandOutput>;
  getDecryptedAPIKey(
    args: GetDecryptedAPIKeyCommandInput,
    cb: (err: any, data?: GetDecryptedAPIKeyCommandOutput) => void
  ): void;
  getDecryptedAPIKey(
    args: GetDecryptedAPIKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDecryptedAPIKeyCommandOutput) => void
  ): void;
  getIPSet(
    args: GetIPSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetIPSetCommandOutput>;
  getIPSet(
    args: GetIPSetCommandInput,
    cb: (err: any, data?: GetIPSetCommandOutput) => void
  ): void;
  getIPSet(
    args: GetIPSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetIPSetCommandOutput) => void
  ): void;
  getLoggingConfiguration(
    args: GetLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLoggingConfigurationCommandOutput>;
  getLoggingConfiguration(
    args: GetLoggingConfigurationCommandInput,
    cb: (err: any, data?: GetLoggingConfigurationCommandOutput) => void
  ): void;
  getLoggingConfiguration(
    args: GetLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLoggingConfigurationCommandOutput) => void
  ): void;
  getManagedRuleSet(
    args: GetManagedRuleSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetManagedRuleSetCommandOutput>;
  getManagedRuleSet(
    args: GetManagedRuleSetCommandInput,
    cb: (err: any, data?: GetManagedRuleSetCommandOutput) => void
  ): void;
  getManagedRuleSet(
    args: GetManagedRuleSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetManagedRuleSetCommandOutput) => void
  ): void;
  getMobileSdkRelease(
    args: GetMobileSdkReleaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetMobileSdkReleaseCommandOutput>;
  getMobileSdkRelease(
    args: GetMobileSdkReleaseCommandInput,
    cb: (err: any, data?: GetMobileSdkReleaseCommandOutput) => void
  ): void;
  getMobileSdkRelease(
    args: GetMobileSdkReleaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetMobileSdkReleaseCommandOutput) => void
  ): void;
  getPermissionPolicy(
    args: GetPermissionPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetPermissionPolicyCommandOutput>;
  getPermissionPolicy(
    args: GetPermissionPolicyCommandInput,
    cb: (err: any, data?: GetPermissionPolicyCommandOutput) => void
  ): void;
  getPermissionPolicy(
    args: GetPermissionPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetPermissionPolicyCommandOutput) => void
  ): void;
  getRateBasedStatementManagedKeys(
    args: GetRateBasedStatementManagedKeysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRateBasedStatementManagedKeysCommandOutput>;
  getRateBasedStatementManagedKeys(
    args: GetRateBasedStatementManagedKeysCommandInput,
    cb: (err: any, data?: GetRateBasedStatementManagedKeysCommandOutput) => void
  ): void;
  getRateBasedStatementManagedKeys(
    args: GetRateBasedStatementManagedKeysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRateBasedStatementManagedKeysCommandOutput) => void
  ): void;
  getRegexPatternSet(
    args: GetRegexPatternSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRegexPatternSetCommandOutput>;
  getRegexPatternSet(
    args: GetRegexPatternSetCommandInput,
    cb: (err: any, data?: GetRegexPatternSetCommandOutput) => void
  ): void;
  getRegexPatternSet(
    args: GetRegexPatternSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRegexPatternSetCommandOutput) => void
  ): void;
  getRuleGroup(): Promise<GetRuleGroupCommandOutput>;
  getRuleGroup(
    args: GetRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRuleGroupCommandOutput>;
  getRuleGroup(
    args: GetRuleGroupCommandInput,
    cb: (err: any, data?: GetRuleGroupCommandOutput) => void
  ): void;
  getRuleGroup(
    args: GetRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRuleGroupCommandOutput) => void
  ): void;
  getSampledRequests(
    args: GetSampledRequestsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSampledRequestsCommandOutput>;
  getSampledRequests(
    args: GetSampledRequestsCommandInput,
    cb: (err: any, data?: GetSampledRequestsCommandOutput) => void
  ): void;
  getSampledRequests(
    args: GetSampledRequestsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSampledRequestsCommandOutput) => void
  ): void;
  getWebACL(
    args: GetWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetWebACLCommandOutput>;
  getWebACL(
    args: GetWebACLCommandInput,
    cb: (err: any, data?: GetWebACLCommandOutput) => void
  ): void;
  getWebACL(
    args: GetWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetWebACLCommandOutput) => void
  ): void;
  getWebACLForResource(
    args: GetWebACLForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetWebACLForResourceCommandOutput>;
  getWebACLForResource(
    args: GetWebACLForResourceCommandInput,
    cb: (err: any, data?: GetWebACLForResourceCommandOutput) => void
  ): void;
  getWebACLForResource(
    args: GetWebACLForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetWebACLForResourceCommandOutput) => void
  ): void;
  listAPIKeys(
    args: ListAPIKeysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAPIKeysCommandOutput>;
  listAPIKeys(
    args: ListAPIKeysCommandInput,
    cb: (err: any, data?: ListAPIKeysCommandOutput) => void
  ): void;
  listAPIKeys(
    args: ListAPIKeysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAPIKeysCommandOutput) => void
  ): void;
  listAvailableManagedRuleGroups(
    args: ListAvailableManagedRuleGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAvailableManagedRuleGroupsCommandOutput>;
  listAvailableManagedRuleGroups(
    args: ListAvailableManagedRuleGroupsCommandInput,
    cb: (err: any, data?: ListAvailableManagedRuleGroupsCommandOutput) => void
  ): void;
  listAvailableManagedRuleGroups(
    args: ListAvailableManagedRuleGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAvailableManagedRuleGroupsCommandOutput) => void
  ): void;
  listAvailableManagedRuleGroupVersions(
    args: ListAvailableManagedRuleGroupVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAvailableManagedRuleGroupVersionsCommandOutput>;
  listAvailableManagedRuleGroupVersions(
    args: ListAvailableManagedRuleGroupVersionsCommandInput,
    cb: (
      err: any,
      data?: ListAvailableManagedRuleGroupVersionsCommandOutput
    ) => void
  ): void;
  listAvailableManagedRuleGroupVersions(
    args: ListAvailableManagedRuleGroupVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: ListAvailableManagedRuleGroupVersionsCommandOutput
    ) => void
  ): void;
  listIPSets(
    args: ListIPSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListIPSetsCommandOutput>;
  listIPSets(
    args: ListIPSetsCommandInput,
    cb: (err: any, data?: ListIPSetsCommandOutput) => void
  ): void;
  listIPSets(
    args: ListIPSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListIPSetsCommandOutput) => void
  ): void;
  listLoggingConfigurations(
    args: ListLoggingConfigurationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListLoggingConfigurationsCommandOutput>;
  listLoggingConfigurations(
    args: ListLoggingConfigurationsCommandInput,
    cb: (err: any, data?: ListLoggingConfigurationsCommandOutput) => void
  ): void;
  listLoggingConfigurations(
    args: ListLoggingConfigurationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListLoggingConfigurationsCommandOutput) => void
  ): void;
  listManagedRuleSets(
    args: ListManagedRuleSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListManagedRuleSetsCommandOutput>;
  listManagedRuleSets(
    args: ListManagedRuleSetsCommandInput,
    cb: (err: any, data?: ListManagedRuleSetsCommandOutput) => void
  ): void;
  listManagedRuleSets(
    args: ListManagedRuleSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListManagedRuleSetsCommandOutput) => void
  ): void;
  listMobileSdkReleases(
    args: ListMobileSdkReleasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListMobileSdkReleasesCommandOutput>;
  listMobileSdkReleases(
    args: ListMobileSdkReleasesCommandInput,
    cb: (err: any, data?: ListMobileSdkReleasesCommandOutput) => void
  ): void;
  listMobileSdkReleases(
    args: ListMobileSdkReleasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListMobileSdkReleasesCommandOutput) => void
  ): void;
  listRegexPatternSets(
    args: ListRegexPatternSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRegexPatternSetsCommandOutput>;
  listRegexPatternSets(
    args: ListRegexPatternSetsCommandInput,
    cb: (err: any, data?: ListRegexPatternSetsCommandOutput) => void
  ): void;
  listRegexPatternSets(
    args: ListRegexPatternSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRegexPatternSetsCommandOutput) => void
  ): void;
  listResourcesForWebACL(
    args: ListResourcesForWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListResourcesForWebACLCommandOutput>;
  listResourcesForWebACL(
    args: ListResourcesForWebACLCommandInput,
    cb: (err: any, data?: ListResourcesForWebACLCommandOutput) => void
  ): void;
  listResourcesForWebACL(
    args: ListResourcesForWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListResourcesForWebACLCommandOutput) => void
  ): void;
  listRuleGroups(
    args: ListRuleGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRuleGroupsCommandOutput>;
  listRuleGroups(
    args: ListRuleGroupsCommandInput,
    cb: (err: any, data?: ListRuleGroupsCommandOutput) => void
  ): void;
  listRuleGroups(
    args: ListRuleGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRuleGroupsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listWebACLs(
    args: ListWebACLsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListWebACLsCommandOutput>;
  listWebACLs(
    args: ListWebACLsCommandInput,
    cb: (err: any, data?: ListWebACLsCommandOutput) => void
  ): void;
  listWebACLs(
    args: ListWebACLsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListWebACLsCommandOutput) => void
  ): void;
  putLoggingConfiguration(
    args: PutLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutLoggingConfigurationCommandOutput>;
  putLoggingConfiguration(
    args: PutLoggingConfigurationCommandInput,
    cb: (err: any, data?: PutLoggingConfigurationCommandOutput) => void
  ): void;
  putLoggingConfiguration(
    args: PutLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutLoggingConfigurationCommandOutput) => void
  ): void;
  putManagedRuleSetVersions(
    args: PutManagedRuleSetVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutManagedRuleSetVersionsCommandOutput>;
  putManagedRuleSetVersions(
    args: PutManagedRuleSetVersionsCommandInput,
    cb: (err: any, data?: PutManagedRuleSetVersionsCommandOutput) => void
  ): void;
  putManagedRuleSetVersions(
    args: PutManagedRuleSetVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutManagedRuleSetVersionsCommandOutput) => void
  ): void;
  putPermissionPolicy(
    args: PutPermissionPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutPermissionPolicyCommandOutput>;
  putPermissionPolicy(
    args: PutPermissionPolicyCommandInput,
    cb: (err: any, data?: PutPermissionPolicyCommandOutput) => void
  ): void;
  putPermissionPolicy(
    args: PutPermissionPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutPermissionPolicyCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateIPSet(
    args: UpdateIPSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateIPSetCommandOutput>;
  updateIPSet(
    args: UpdateIPSetCommandInput,
    cb: (err: any, data?: UpdateIPSetCommandOutput) => void
  ): void;
  updateIPSet(
    args: UpdateIPSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateIPSetCommandOutput) => void
  ): void;
  updateManagedRuleSetVersionExpiryDate(
    args: UpdateManagedRuleSetVersionExpiryDateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateManagedRuleSetVersionExpiryDateCommandOutput>;
  updateManagedRuleSetVersionExpiryDate(
    args: UpdateManagedRuleSetVersionExpiryDateCommandInput,
    cb: (
      err: any,
      data?: UpdateManagedRuleSetVersionExpiryDateCommandOutput
    ) => void
  ): void;
  updateManagedRuleSetVersionExpiryDate(
    args: UpdateManagedRuleSetVersionExpiryDateCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: UpdateManagedRuleSetVersionExpiryDateCommandOutput
    ) => void
  ): void;
  updateRegexPatternSet(
    args: UpdateRegexPatternSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRegexPatternSetCommandOutput>;
  updateRegexPatternSet(
    args: UpdateRegexPatternSetCommandInput,
    cb: (err: any, data?: UpdateRegexPatternSetCommandOutput) => void
  ): void;
  updateRegexPatternSet(
    args: UpdateRegexPatternSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRegexPatternSetCommandOutput) => void
  ): void;
  updateRuleGroup(
    args: UpdateRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRuleGroupCommandOutput>;
  updateRuleGroup(
    args: UpdateRuleGroupCommandInput,
    cb: (err: any, data?: UpdateRuleGroupCommandOutput) => void
  ): void;
  updateRuleGroup(
    args: UpdateRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRuleGroupCommandOutput) => void
  ): void;
  updateWebACL(
    args: UpdateWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateWebACLCommandOutput>;
  updateWebACL(
    args: UpdateWebACLCommandInput,
    cb: (err: any, data?: UpdateWebACLCommandOutput) => void
  ): void;
  updateWebACL(
    args: UpdateWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateWebACLCommandOutput) => void
  ): void;
}
export declare class WAFV2 extends WAFV2Client implements WAFV2 {}
