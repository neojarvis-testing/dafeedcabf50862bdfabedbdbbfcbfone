import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AbortEnvironmentUpdateCommandInput,
  AbortEnvironmentUpdateCommandOutput,
} from "./commands/AbortEnvironmentUpdateCommand";
import {
  ApplyEnvironmentManagedActionCommandInput,
  ApplyEnvironmentManagedActionCommandOutput,
} from "./commands/ApplyEnvironmentManagedActionCommand";
import {
  AssociateEnvironmentOperationsRoleCommandInput,
  AssociateEnvironmentOperationsRoleCommandOutput,
} from "./commands/AssociateEnvironmentOperationsRoleCommand";
import {
  CheckDNSAvailabilityCommandInput,
  CheckDNSAvailabilityCommandOutput,
} from "./commands/CheckDNSAvailabilityCommand";
import {
  ComposeEnvironmentsCommandInput,
  ComposeEnvironmentsCommandOutput,
} from "./commands/ComposeEnvironmentsCommand";
import {
  CreateApplicationCommandInput,
  CreateApplicationCommandOutput,
} from "./commands/CreateApplicationCommand";
import {
  CreateApplicationVersionCommandInput,
  CreateApplicationVersionCommandOutput,
} from "./commands/CreateApplicationVersionCommand";
import {
  CreateConfigurationTemplateCommandInput,
  CreateConfigurationTemplateCommandOutput,
} from "./commands/CreateConfigurationTemplateCommand";
import {
  CreateEnvironmentCommandInput,
  CreateEnvironmentCommandOutput,
} from "./commands/CreateEnvironmentCommand";
import {
  CreatePlatformVersionCommandInput,
  CreatePlatformVersionCommandOutput,
} from "./commands/CreatePlatformVersionCommand";
import {
  CreateStorageLocationCommandInput,
  CreateStorageLocationCommandOutput,
} from "./commands/CreateStorageLocationCommand";
import {
  DeleteApplicationCommandInput,
  DeleteApplicationCommandOutput,
} from "./commands/DeleteApplicationCommand";
import {
  DeleteApplicationVersionCommandInput,
  DeleteApplicationVersionCommandOutput,
} from "./commands/DeleteApplicationVersionCommand";
import {
  DeleteConfigurationTemplateCommandInput,
  DeleteConfigurationTemplateCommandOutput,
} from "./commands/DeleteConfigurationTemplateCommand";
import {
  DeleteEnvironmentConfigurationCommandInput,
  DeleteEnvironmentConfigurationCommandOutput,
} from "./commands/DeleteEnvironmentConfigurationCommand";
import {
  DeletePlatformVersionCommandInput,
  DeletePlatformVersionCommandOutput,
} from "./commands/DeletePlatformVersionCommand";
import {
  DescribeAccountAttributesCommandInput,
  DescribeAccountAttributesCommandOutput,
} from "./commands/DescribeAccountAttributesCommand";
import {
  DescribeApplicationsCommandInput,
  DescribeApplicationsCommandOutput,
} from "./commands/DescribeApplicationsCommand";
import {
  DescribeApplicationVersionsCommandInput,
  DescribeApplicationVersionsCommandOutput,
} from "./commands/DescribeApplicationVersionsCommand";
import {
  DescribeConfigurationOptionsCommandInput,
  DescribeConfigurationOptionsCommandOutput,
} from "./commands/DescribeConfigurationOptionsCommand";
import {
  DescribeConfigurationSettingsCommandInput,
  DescribeConfigurationSettingsCommandOutput,
} from "./commands/DescribeConfigurationSettingsCommand";
import {
  DescribeEnvironmentHealthCommandInput,
  DescribeEnvironmentHealthCommandOutput,
} from "./commands/DescribeEnvironmentHealthCommand";
import {
  DescribeEnvironmentManagedActionHistoryCommandInput,
  DescribeEnvironmentManagedActionHistoryCommandOutput,
} from "./commands/DescribeEnvironmentManagedActionHistoryCommand";
import {
  DescribeEnvironmentManagedActionsCommandInput,
  DescribeEnvironmentManagedActionsCommandOutput,
} from "./commands/DescribeEnvironmentManagedActionsCommand";
import {
  DescribeEnvironmentResourcesCommandInput,
  DescribeEnvironmentResourcesCommandOutput,
} from "./commands/DescribeEnvironmentResourcesCommand";
import {
  DescribeEnvironmentsCommandInput,
  DescribeEnvironmentsCommandOutput,
} from "./commands/DescribeEnvironmentsCommand";
import {
  DescribeEventsCommandInput,
  DescribeEventsCommandOutput,
} from "./commands/DescribeEventsCommand";
import {
  DescribeInstancesHealthCommandInput,
  DescribeInstancesHealthCommandOutput,
} from "./commands/DescribeInstancesHealthCommand";
import {
  DescribePlatformVersionCommandInput,
  DescribePlatformVersionCommandOutput,
} from "./commands/DescribePlatformVersionCommand";
import {
  DisassociateEnvironmentOperationsRoleCommandInput,
  DisassociateEnvironmentOperationsRoleCommandOutput,
} from "./commands/DisassociateEnvironmentOperationsRoleCommand";
import {
  ListAvailableSolutionStacksCommandInput,
  ListAvailableSolutionStacksCommandOutput,
} from "./commands/ListAvailableSolutionStacksCommand";
import {
  ListPlatformBranchesCommandInput,
  ListPlatformBranchesCommandOutput,
} from "./commands/ListPlatformBranchesCommand";
import {
  ListPlatformVersionsCommandInput,
  ListPlatformVersionsCommandOutput,
} from "./commands/ListPlatformVersionsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  RebuildEnvironmentCommandInput,
  RebuildEnvironmentCommandOutput,
} from "./commands/RebuildEnvironmentCommand";
import {
  RequestEnvironmentInfoCommandInput,
  RequestEnvironmentInfoCommandOutput,
} from "./commands/RequestEnvironmentInfoCommand";
import {
  RestartAppServerCommandInput,
  RestartAppServerCommandOutput,
} from "./commands/RestartAppServerCommand";
import {
  RetrieveEnvironmentInfoCommandInput,
  RetrieveEnvironmentInfoCommandOutput,
} from "./commands/RetrieveEnvironmentInfoCommand";
import {
  SwapEnvironmentCNAMEsCommandInput,
  SwapEnvironmentCNAMEsCommandOutput,
} from "./commands/SwapEnvironmentCNAMEsCommand";
import {
  TerminateEnvironmentCommandInput,
  TerminateEnvironmentCommandOutput,
} from "./commands/TerminateEnvironmentCommand";
import {
  UpdateApplicationCommandInput,
  UpdateApplicationCommandOutput,
} from "./commands/UpdateApplicationCommand";
import {
  UpdateApplicationResourceLifecycleCommandInput,
  UpdateApplicationResourceLifecycleCommandOutput,
} from "./commands/UpdateApplicationResourceLifecycleCommand";
import {
  UpdateApplicationVersionCommandInput,
  UpdateApplicationVersionCommandOutput,
} from "./commands/UpdateApplicationVersionCommand";
import {
  UpdateConfigurationTemplateCommandInput,
  UpdateConfigurationTemplateCommandOutput,
} from "./commands/UpdateConfigurationTemplateCommand";
import {
  UpdateEnvironmentCommandInput,
  UpdateEnvironmentCommandOutput,
} from "./commands/UpdateEnvironmentCommand";
import {
  UpdateTagsForResourceCommandInput,
  UpdateTagsForResourceCommandOutput,
} from "./commands/UpdateTagsForResourceCommand";
import {
  ValidateConfigurationSettingsCommandInput,
  ValidateConfigurationSettingsCommandOutput,
} from "./commands/ValidateConfigurationSettingsCommand";
import { ElasticBeanstalkClient } from "./ElasticBeanstalkClient";
export interface ElasticBeanstalk {
  abortEnvironmentUpdate(): Promise<AbortEnvironmentUpdateCommandOutput>;
  abortEnvironmentUpdate(
    args: AbortEnvironmentUpdateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AbortEnvironmentUpdateCommandOutput>;
  abortEnvironmentUpdate(
    args: AbortEnvironmentUpdateCommandInput,
    cb: (err: any, data?: AbortEnvironmentUpdateCommandOutput) => void
  ): void;
  abortEnvironmentUpdate(
    args: AbortEnvironmentUpdateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AbortEnvironmentUpdateCommandOutput) => void
  ): void;
  applyEnvironmentManagedAction(
    args: ApplyEnvironmentManagedActionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ApplyEnvironmentManagedActionCommandOutput>;
  applyEnvironmentManagedAction(
    args: ApplyEnvironmentManagedActionCommandInput,
    cb: (err: any, data?: ApplyEnvironmentManagedActionCommandOutput) => void
  ): void;
  applyEnvironmentManagedAction(
    args: ApplyEnvironmentManagedActionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ApplyEnvironmentManagedActionCommandOutput) => void
  ): void;
  associateEnvironmentOperationsRole(
    args: AssociateEnvironmentOperationsRoleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateEnvironmentOperationsRoleCommandOutput>;
  associateEnvironmentOperationsRole(
    args: AssociateEnvironmentOperationsRoleCommandInput,
    cb: (
      err: any,
      data?: AssociateEnvironmentOperationsRoleCommandOutput
    ) => void
  ): void;
  associateEnvironmentOperationsRole(
    args: AssociateEnvironmentOperationsRoleCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: AssociateEnvironmentOperationsRoleCommandOutput
    ) => void
  ): void;
  checkDNSAvailability(
    args: CheckDNSAvailabilityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CheckDNSAvailabilityCommandOutput>;
  checkDNSAvailability(
    args: CheckDNSAvailabilityCommandInput,
    cb: (err: any, data?: CheckDNSAvailabilityCommandOutput) => void
  ): void;
  checkDNSAvailability(
    args: CheckDNSAvailabilityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CheckDNSAvailabilityCommandOutput) => void
  ): void;
  composeEnvironments(): Promise<ComposeEnvironmentsCommandOutput>;
  composeEnvironments(
    args: ComposeEnvironmentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ComposeEnvironmentsCommandOutput>;
  composeEnvironments(
    args: ComposeEnvironmentsCommandInput,
    cb: (err: any, data?: ComposeEnvironmentsCommandOutput) => void
  ): void;
  composeEnvironments(
    args: ComposeEnvironmentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ComposeEnvironmentsCommandOutput) => void
  ): void;
  createApplication(
    args: CreateApplicationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateApplicationCommandOutput>;
  createApplication(
    args: CreateApplicationCommandInput,
    cb: (err: any, data?: CreateApplicationCommandOutput) => void
  ): void;
  createApplication(
    args: CreateApplicationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateApplicationCommandOutput) => void
  ): void;
  createApplicationVersion(
    args: CreateApplicationVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateApplicationVersionCommandOutput>;
  createApplicationVersion(
    args: CreateApplicationVersionCommandInput,
    cb: (err: any, data?: CreateApplicationVersionCommandOutput) => void
  ): void;
  createApplicationVersion(
    args: CreateApplicationVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateApplicationVersionCommandOutput) => void
  ): void;
  createConfigurationTemplate(
    args: CreateConfigurationTemplateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateConfigurationTemplateCommandOutput>;
  createConfigurationTemplate(
    args: CreateConfigurationTemplateCommandInput,
    cb: (err: any, data?: CreateConfigurationTemplateCommandOutput) => void
  ): void;
  createConfigurationTemplate(
    args: CreateConfigurationTemplateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateConfigurationTemplateCommandOutput) => void
  ): void;
  createEnvironment(
    args: CreateEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateEnvironmentCommandOutput>;
  createEnvironment(
    args: CreateEnvironmentCommandInput,
    cb: (err: any, data?: CreateEnvironmentCommandOutput) => void
  ): void;
  createEnvironment(
    args: CreateEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateEnvironmentCommandOutput) => void
  ): void;
  createPlatformVersion(
    args: CreatePlatformVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreatePlatformVersionCommandOutput>;
  createPlatformVersion(
    args: CreatePlatformVersionCommandInput,
    cb: (err: any, data?: CreatePlatformVersionCommandOutput) => void
  ): void;
  createPlatformVersion(
    args: CreatePlatformVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreatePlatformVersionCommandOutput) => void
  ): void;
  createStorageLocation(): Promise<CreateStorageLocationCommandOutput>;
  createStorageLocation(
    args: CreateStorageLocationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateStorageLocationCommandOutput>;
  createStorageLocation(
    args: CreateStorageLocationCommandInput,
    cb: (err: any, data?: CreateStorageLocationCommandOutput) => void
  ): void;
  createStorageLocation(
    args: CreateStorageLocationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateStorageLocationCommandOutput) => void
  ): void;
  deleteApplication(
    args: DeleteApplicationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteApplicationCommandOutput>;
  deleteApplication(
    args: DeleteApplicationCommandInput,
    cb: (err: any, data?: DeleteApplicationCommandOutput) => void
  ): void;
  deleteApplication(
    args: DeleteApplicationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteApplicationCommandOutput) => void
  ): void;
  deleteApplicationVersion(
    args: DeleteApplicationVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteApplicationVersionCommandOutput>;
  deleteApplicationVersion(
    args: DeleteApplicationVersionCommandInput,
    cb: (err: any, data?: DeleteApplicationVersionCommandOutput) => void
  ): void;
  deleteApplicationVersion(
    args: DeleteApplicationVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteApplicationVersionCommandOutput) => void
  ): void;
  deleteConfigurationTemplate(
    args: DeleteConfigurationTemplateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteConfigurationTemplateCommandOutput>;
  deleteConfigurationTemplate(
    args: DeleteConfigurationTemplateCommandInput,
    cb: (err: any, data?: DeleteConfigurationTemplateCommandOutput) => void
  ): void;
  deleteConfigurationTemplate(
    args: DeleteConfigurationTemplateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteConfigurationTemplateCommandOutput) => void
  ): void;
  deleteEnvironmentConfiguration(
    args: DeleteEnvironmentConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteEnvironmentConfigurationCommandOutput>;
  deleteEnvironmentConfiguration(
    args: DeleteEnvironmentConfigurationCommandInput,
    cb: (err: any, data?: DeleteEnvironmentConfigurationCommandOutput) => void
  ): void;
  deleteEnvironmentConfiguration(
    args: DeleteEnvironmentConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteEnvironmentConfigurationCommandOutput) => void
  ): void;
  deletePlatformVersion(): Promise<DeletePlatformVersionCommandOutput>;
  deletePlatformVersion(
    args: DeletePlatformVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeletePlatformVersionCommandOutput>;
  deletePlatformVersion(
    args: DeletePlatformVersionCommandInput,
    cb: (err: any, data?: DeletePlatformVersionCommandOutput) => void
  ): void;
  deletePlatformVersion(
    args: DeletePlatformVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeletePlatformVersionCommandOutput) => void
  ): void;
  describeAccountAttributes(): Promise<DescribeAccountAttributesCommandOutput>;
  describeAccountAttributes(
    args: DescribeAccountAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAccountAttributesCommandOutput>;
  describeAccountAttributes(
    args: DescribeAccountAttributesCommandInput,
    cb: (err: any, data?: DescribeAccountAttributesCommandOutput) => void
  ): void;
  describeAccountAttributes(
    args: DescribeAccountAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAccountAttributesCommandOutput) => void
  ): void;
  describeApplications(): Promise<DescribeApplicationsCommandOutput>;
  describeApplications(
    args: DescribeApplicationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeApplicationsCommandOutput>;
  describeApplications(
    args: DescribeApplicationsCommandInput,
    cb: (err: any, data?: DescribeApplicationsCommandOutput) => void
  ): void;
  describeApplications(
    args: DescribeApplicationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeApplicationsCommandOutput) => void
  ): void;
  describeApplicationVersions(): Promise<DescribeApplicationVersionsCommandOutput>;
  describeApplicationVersions(
    args: DescribeApplicationVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeApplicationVersionsCommandOutput>;
  describeApplicationVersions(
    args: DescribeApplicationVersionsCommandInput,
    cb: (err: any, data?: DescribeApplicationVersionsCommandOutput) => void
  ): void;
  describeApplicationVersions(
    args: DescribeApplicationVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeApplicationVersionsCommandOutput) => void
  ): void;
  describeConfigurationOptions(): Promise<DescribeConfigurationOptionsCommandOutput>;
  describeConfigurationOptions(
    args: DescribeConfigurationOptionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeConfigurationOptionsCommandOutput>;
  describeConfigurationOptions(
    args: DescribeConfigurationOptionsCommandInput,
    cb: (err: any, data?: DescribeConfigurationOptionsCommandOutput) => void
  ): void;
  describeConfigurationOptions(
    args: DescribeConfigurationOptionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeConfigurationOptionsCommandOutput) => void
  ): void;
  describeConfigurationSettings(
    args: DescribeConfigurationSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeConfigurationSettingsCommandOutput>;
  describeConfigurationSettings(
    args: DescribeConfigurationSettingsCommandInput,
    cb: (err: any, data?: DescribeConfigurationSettingsCommandOutput) => void
  ): void;
  describeConfigurationSettings(
    args: DescribeConfigurationSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeConfigurationSettingsCommandOutput) => void
  ): void;
  describeEnvironmentHealth(): Promise<DescribeEnvironmentHealthCommandOutput>;
  describeEnvironmentHealth(
    args: DescribeEnvironmentHealthCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeEnvironmentHealthCommandOutput>;
  describeEnvironmentHealth(
    args: DescribeEnvironmentHealthCommandInput,
    cb: (err: any, data?: DescribeEnvironmentHealthCommandOutput) => void
  ): void;
  describeEnvironmentHealth(
    args: DescribeEnvironmentHealthCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeEnvironmentHealthCommandOutput) => void
  ): void;
  describeEnvironmentManagedActionHistory(): Promise<DescribeEnvironmentManagedActionHistoryCommandOutput>;
  describeEnvironmentManagedActionHistory(
    args: DescribeEnvironmentManagedActionHistoryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeEnvironmentManagedActionHistoryCommandOutput>;
  describeEnvironmentManagedActionHistory(
    args: DescribeEnvironmentManagedActionHistoryCommandInput,
    cb: (
      err: any,
      data?: DescribeEnvironmentManagedActionHistoryCommandOutput
    ) => void
  ): void;
  describeEnvironmentManagedActionHistory(
    args: DescribeEnvironmentManagedActionHistoryCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeEnvironmentManagedActionHistoryCommandOutput
    ) => void
  ): void;
  describeEnvironmentManagedActions(): Promise<DescribeEnvironmentManagedActionsCommandOutput>;
  describeEnvironmentManagedActions(
    args: DescribeEnvironmentManagedActionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeEnvironmentManagedActionsCommandOutput>;
  describeEnvironmentManagedActions(
    args: DescribeEnvironmentManagedActionsCommandInput,
    cb: (
      err: any,
      data?: DescribeEnvironmentManagedActionsCommandOutput
    ) => void
  ): void;
  describeEnvironmentManagedActions(
    args: DescribeEnvironmentManagedActionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeEnvironmentManagedActionsCommandOutput
    ) => void
  ): void;
  describeEnvironmentResources(): Promise<DescribeEnvironmentResourcesCommandOutput>;
  describeEnvironmentResources(
    args: DescribeEnvironmentResourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeEnvironmentResourcesCommandOutput>;
  describeEnvironmentResources(
    args: DescribeEnvironmentResourcesCommandInput,
    cb: (err: any, data?: DescribeEnvironmentResourcesCommandOutput) => void
  ): void;
  describeEnvironmentResources(
    args: DescribeEnvironmentResourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeEnvironmentResourcesCommandOutput) => void
  ): void;
  describeEnvironments(): Promise<DescribeEnvironmentsCommandOutput>;
  describeEnvironments(
    args: DescribeEnvironmentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeEnvironmentsCommandOutput>;
  describeEnvironments(
    args: DescribeEnvironmentsCommandInput,
    cb: (err: any, data?: DescribeEnvironmentsCommandOutput) => void
  ): void;
  describeEnvironments(
    args: DescribeEnvironmentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeEnvironmentsCommandOutput) => void
  ): void;
  describeEvents(): Promise<DescribeEventsCommandOutput>;
  describeEvents(
    args: DescribeEventsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeEventsCommandOutput>;
  describeEvents(
    args: DescribeEventsCommandInput,
    cb: (err: any, data?: DescribeEventsCommandOutput) => void
  ): void;
  describeEvents(
    args: DescribeEventsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeEventsCommandOutput) => void
  ): void;
  describeInstancesHealth(): Promise<DescribeInstancesHealthCommandOutput>;
  describeInstancesHealth(
    args: DescribeInstancesHealthCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeInstancesHealthCommandOutput>;
  describeInstancesHealth(
    args: DescribeInstancesHealthCommandInput,
    cb: (err: any, data?: DescribeInstancesHealthCommandOutput) => void
  ): void;
  describeInstancesHealth(
    args: DescribeInstancesHealthCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeInstancesHealthCommandOutput) => void
  ): void;
  describePlatformVersion(): Promise<DescribePlatformVersionCommandOutput>;
  describePlatformVersion(
    args: DescribePlatformVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribePlatformVersionCommandOutput>;
  describePlatformVersion(
    args: DescribePlatformVersionCommandInput,
    cb: (err: any, data?: DescribePlatformVersionCommandOutput) => void
  ): void;
  describePlatformVersion(
    args: DescribePlatformVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribePlatformVersionCommandOutput) => void
  ): void;
  disassociateEnvironmentOperationsRole(
    args: DisassociateEnvironmentOperationsRoleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateEnvironmentOperationsRoleCommandOutput>;
  disassociateEnvironmentOperationsRole(
    args: DisassociateEnvironmentOperationsRoleCommandInput,
    cb: (
      err: any,
      data?: DisassociateEnvironmentOperationsRoleCommandOutput
    ) => void
  ): void;
  disassociateEnvironmentOperationsRole(
    args: DisassociateEnvironmentOperationsRoleCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DisassociateEnvironmentOperationsRoleCommandOutput
    ) => void
  ): void;
  listAvailableSolutionStacks(): Promise<ListAvailableSolutionStacksCommandOutput>;
  listAvailableSolutionStacks(
    args: ListAvailableSolutionStacksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAvailableSolutionStacksCommandOutput>;
  listAvailableSolutionStacks(
    args: ListAvailableSolutionStacksCommandInput,
    cb: (err: any, data?: ListAvailableSolutionStacksCommandOutput) => void
  ): void;
  listAvailableSolutionStacks(
    args: ListAvailableSolutionStacksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAvailableSolutionStacksCommandOutput) => void
  ): void;
  listPlatformBranches(): Promise<ListPlatformBranchesCommandOutput>;
  listPlatformBranches(
    args: ListPlatformBranchesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListPlatformBranchesCommandOutput>;
  listPlatformBranches(
    args: ListPlatformBranchesCommandInput,
    cb: (err: any, data?: ListPlatformBranchesCommandOutput) => void
  ): void;
  listPlatformBranches(
    args: ListPlatformBranchesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListPlatformBranchesCommandOutput) => void
  ): void;
  listPlatformVersions(): Promise<ListPlatformVersionsCommandOutput>;
  listPlatformVersions(
    args: ListPlatformVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListPlatformVersionsCommandOutput>;
  listPlatformVersions(
    args: ListPlatformVersionsCommandInput,
    cb: (err: any, data?: ListPlatformVersionsCommandOutput) => void
  ): void;
  listPlatformVersions(
    args: ListPlatformVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListPlatformVersionsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  rebuildEnvironment(): Promise<RebuildEnvironmentCommandOutput>;
  rebuildEnvironment(
    args: RebuildEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RebuildEnvironmentCommandOutput>;
  rebuildEnvironment(
    args: RebuildEnvironmentCommandInput,
    cb: (err: any, data?: RebuildEnvironmentCommandOutput) => void
  ): void;
  rebuildEnvironment(
    args: RebuildEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RebuildEnvironmentCommandOutput) => void
  ): void;
  requestEnvironmentInfo(
    args: RequestEnvironmentInfoCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RequestEnvironmentInfoCommandOutput>;
  requestEnvironmentInfo(
    args: RequestEnvironmentInfoCommandInput,
    cb: (err: any, data?: RequestEnvironmentInfoCommandOutput) => void
  ): void;
  requestEnvironmentInfo(
    args: RequestEnvironmentInfoCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RequestEnvironmentInfoCommandOutput) => void
  ): void;
  restartAppServer(): Promise<RestartAppServerCommandOutput>;
  restartAppServer(
    args: RestartAppServerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RestartAppServerCommandOutput>;
  restartAppServer(
    args: RestartAppServerCommandInput,
    cb: (err: any, data?: RestartAppServerCommandOutput) => void
  ): void;
  restartAppServer(
    args: RestartAppServerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RestartAppServerCommandOutput) => void
  ): void;
  retrieveEnvironmentInfo(
    args: RetrieveEnvironmentInfoCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RetrieveEnvironmentInfoCommandOutput>;
  retrieveEnvironmentInfo(
    args: RetrieveEnvironmentInfoCommandInput,
    cb: (err: any, data?: RetrieveEnvironmentInfoCommandOutput) => void
  ): void;
  retrieveEnvironmentInfo(
    args: RetrieveEnvironmentInfoCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RetrieveEnvironmentInfoCommandOutput) => void
  ): void;
  swapEnvironmentCNAMEs(): Promise<SwapEnvironmentCNAMEsCommandOutput>;
  swapEnvironmentCNAMEs(
    args: SwapEnvironmentCNAMEsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SwapEnvironmentCNAMEsCommandOutput>;
  swapEnvironmentCNAMEs(
    args: SwapEnvironmentCNAMEsCommandInput,
    cb: (err: any, data?: SwapEnvironmentCNAMEsCommandOutput) => void
  ): void;
  swapEnvironmentCNAMEs(
    args: SwapEnvironmentCNAMEsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SwapEnvironmentCNAMEsCommandOutput) => void
  ): void;
  terminateEnvironment(): Promise<TerminateEnvironmentCommandOutput>;
  terminateEnvironment(
    args: TerminateEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TerminateEnvironmentCommandOutput>;
  terminateEnvironment(
    args: TerminateEnvironmentCommandInput,
    cb: (err: any, data?: TerminateEnvironmentCommandOutput) => void
  ): void;
  terminateEnvironment(
    args: TerminateEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TerminateEnvironmentCommandOutput) => void
  ): void;
  updateApplication(
    args: UpdateApplicationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateApplicationCommandOutput>;
  updateApplication(
    args: UpdateApplicationCommandInput,
    cb: (err: any, data?: UpdateApplicationCommandOutput) => void
  ): void;
  updateApplication(
    args: UpdateApplicationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateApplicationCommandOutput) => void
  ): void;
  updateApplicationResourceLifecycle(
    args: UpdateApplicationResourceLifecycleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateApplicationResourceLifecycleCommandOutput>;
  updateApplicationResourceLifecycle(
    args: UpdateApplicationResourceLifecycleCommandInput,
    cb: (
      err: any,
      data?: UpdateApplicationResourceLifecycleCommandOutput
    ) => void
  ): void;
  updateApplicationResourceLifecycle(
    args: UpdateApplicationResourceLifecycleCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: UpdateApplicationResourceLifecycleCommandOutput
    ) => void
  ): void;
  updateApplicationVersion(
    args: UpdateApplicationVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateApplicationVersionCommandOutput>;
  updateApplicationVersion(
    args: UpdateApplicationVersionCommandInput,
    cb: (err: any, data?: UpdateApplicationVersionCommandOutput) => void
  ): void;
  updateApplicationVersion(
    args: UpdateApplicationVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateApplicationVersionCommandOutput) => void
  ): void;
  updateConfigurationTemplate(
    args: UpdateConfigurationTemplateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateConfigurationTemplateCommandOutput>;
  updateConfigurationTemplate(
    args: UpdateConfigurationTemplateCommandInput,
    cb: (err: any, data?: UpdateConfigurationTemplateCommandOutput) => void
  ): void;
  updateConfigurationTemplate(
    args: UpdateConfigurationTemplateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateConfigurationTemplateCommandOutput) => void
  ): void;
  updateEnvironment(): Promise<UpdateEnvironmentCommandOutput>;
  updateEnvironment(
    args: UpdateEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateEnvironmentCommandOutput>;
  updateEnvironment(
    args: UpdateEnvironmentCommandInput,
    cb: (err: any, data?: UpdateEnvironmentCommandOutput) => void
  ): void;
  updateEnvironment(
    args: UpdateEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateEnvironmentCommandOutput) => void
  ): void;
  updateTagsForResource(
    args: UpdateTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateTagsForResourceCommandOutput>;
  updateTagsForResource(
    args: UpdateTagsForResourceCommandInput,
    cb: (err: any, data?: UpdateTagsForResourceCommandOutput) => void
  ): void;
  updateTagsForResource(
    args: UpdateTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateTagsForResourceCommandOutput) => void
  ): void;
  validateConfigurationSettings(
    args: ValidateConfigurationSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ValidateConfigurationSettingsCommandOutput>;
  validateConfigurationSettings(
    args: ValidateConfigurationSettingsCommandInput,
    cb: (err: any, data?: ValidateConfigurationSettingsCommandOutput) => void
  ): void;
  validateConfigurationSettings(
    args: ValidateConfigurationSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ValidateConfigurationSettingsCommandOutput) => void
  ): void;
}
export declare class ElasticBeanstalk
  extends ElasticBeanstalkClient
  implements ElasticBeanstalk {}
