"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AbortEnvironmentUpdateCommand: () => AbortEnvironmentUpdateCommand,
  ActionHistoryStatus: () => ActionHistoryStatus,
  ActionStatus: () => ActionStatus,
  ActionType: () => ActionType,
  ApplicationVersionStatus: () => ApplicationVersionStatus,
  ApplyEnvironmentManagedActionCommand: () => ApplyEnvironmentManagedActionCommand,
  AssociateEnvironmentOperationsRoleCommand: () => AssociateEnvironmentOperationsRoleCommand,
  CheckDNSAvailabilityCommand: () => CheckDNSAvailabilityCommand,
  CodeBuildNotInServiceRegionException: () => CodeBuildNotInServiceRegionException,
  ComposeEnvironmentsCommand: () => ComposeEnvironmentsCommand,
  ComputeType: () => ComputeType,
  ConfigurationDeploymentStatus: () => ConfigurationDeploymentStatus,
  ConfigurationOptionValueType: () => ConfigurationOptionValueType,
  CreateApplicationCommand: () => CreateApplicationCommand,
  CreateApplicationVersionCommand: () => CreateApplicationVersionCommand,
  CreateConfigurationTemplateCommand: () => CreateConfigurationTemplateCommand,
  CreateEnvironmentCommand: () => CreateEnvironmentCommand,
  CreatePlatformVersionCommand: () => CreatePlatformVersionCommand,
  CreateStorageLocationCommand: () => CreateStorageLocationCommand,
  DeleteApplicationCommand: () => DeleteApplicationCommand,
  DeleteApplicationVersionCommand: () => DeleteApplicationVersionCommand,
  DeleteConfigurationTemplateCommand: () => DeleteConfigurationTemplateCommand,
  DeleteEnvironmentConfigurationCommand: () => DeleteEnvironmentConfigurationCommand,
  DeletePlatformVersionCommand: () => DeletePlatformVersionCommand,
  DescribeAccountAttributesCommand: () => DescribeAccountAttributesCommand,
  DescribeApplicationVersionsCommand: () => DescribeApplicationVersionsCommand,
  DescribeApplicationsCommand: () => DescribeApplicationsCommand,
  DescribeConfigurationOptionsCommand: () => DescribeConfigurationOptionsCommand,
  DescribeConfigurationSettingsCommand: () => DescribeConfigurationSettingsCommand,
  DescribeEnvironmentHealthCommand: () => DescribeEnvironmentHealthCommand,
  DescribeEnvironmentManagedActionHistoryCommand: () => DescribeEnvironmentManagedActionHistoryCommand,
  DescribeEnvironmentManagedActionsCommand: () => DescribeEnvironmentManagedActionsCommand,
  DescribeEnvironmentResourcesCommand: () => DescribeEnvironmentResourcesCommand,
  DescribeEnvironmentsCommand: () => DescribeEnvironmentsCommand,
  DescribeEventsCommand: () => DescribeEventsCommand,
  DescribeInstancesHealthCommand: () => DescribeInstancesHealthCommand,
  DescribePlatformVersionCommand: () => DescribePlatformVersionCommand,
  DisassociateEnvironmentOperationsRoleCommand: () => DisassociateEnvironmentOperationsRoleCommand,
  ElasticBeanstalk: () => ElasticBeanstalk,
  ElasticBeanstalkClient: () => ElasticBeanstalkClient,
  ElasticBeanstalkServiceException: () => ElasticBeanstalkServiceException,
  EnvironmentHealth: () => EnvironmentHealth,
  EnvironmentHealthAttribute: () => EnvironmentHealthAttribute,
  EnvironmentHealthStatus: () => EnvironmentHealthStatus,
  EnvironmentInfoType: () => EnvironmentInfoType,
  EnvironmentStatus: () => EnvironmentStatus,
  EventSeverity: () => EventSeverity,
  FailureType: () => FailureType,
  InstancesHealthAttribute: () => InstancesHealthAttribute,
  InsufficientPrivilegesException: () => InsufficientPrivilegesException,
  InvalidRequestException: () => InvalidRequestException,
  ListAvailableSolutionStacksCommand: () => ListAvailableSolutionStacksCommand,
  ListPlatformBranchesCommand: () => ListPlatformBranchesCommand,
  ListPlatformVersionsCommand: () => ListPlatformVersionsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ManagedActionInvalidStateException: () => ManagedActionInvalidStateException,
  OperationInProgressException: () => OperationInProgressException,
  PlatformStatus: () => PlatformStatus,
  PlatformVersionStillReferencedException: () => PlatformVersionStillReferencedException,
  RebuildEnvironmentCommand: () => RebuildEnvironmentCommand,
  RequestEnvironmentInfoCommand: () => RequestEnvironmentInfoCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResourceTypeNotSupportedException: () => ResourceTypeNotSupportedException,
  RestartAppServerCommand: () => RestartAppServerCommand,
  RetrieveEnvironmentInfoCommand: () => RetrieveEnvironmentInfoCommand,
  S3LocationNotInServiceRegionException: () => S3LocationNotInServiceRegionException,
  S3SubscriptionRequiredException: () => S3SubscriptionRequiredException,
  SourceBundleDeletionException: () => SourceBundleDeletionException,
  SourceRepository: () => SourceRepository,
  SourceType: () => SourceType,
  SwapEnvironmentCNAMEsCommand: () => SwapEnvironmentCNAMEsCommand,
  TerminateEnvironmentCommand: () => TerminateEnvironmentCommand,
  TooManyApplicationVersionsException: () => TooManyApplicationVersionsException,
  TooManyApplicationsException: () => TooManyApplicationsException,
  TooManyBucketsException: () => TooManyBucketsException,
  TooManyConfigurationTemplatesException: () => TooManyConfigurationTemplatesException,
  TooManyEnvironmentsException: () => TooManyEnvironmentsException,
  TooManyPlatformsException: () => TooManyPlatformsException,
  TooManyTagsException: () => TooManyTagsException,
  UpdateApplicationCommand: () => UpdateApplicationCommand,
  UpdateApplicationResourceLifecycleCommand: () => UpdateApplicationResourceLifecycleCommand,
  UpdateApplicationVersionCommand: () => UpdateApplicationVersionCommand,
  UpdateConfigurationTemplateCommand: () => UpdateConfigurationTemplateCommand,
  UpdateEnvironmentCommand: () => UpdateEnvironmentCommand,
  UpdateTagsForResourceCommand: () => UpdateTagsForResourceCommand,
  ValidateConfigurationSettingsCommand: () => ValidateConfigurationSettingsCommand,
  ValidationSeverity: () => ValidationSeverity,
  __Client: () => import_smithy_client.Client,
  paginateDescribeEnvironmentManagedActionHistory: () => paginateDescribeEnvironmentManagedActionHistory,
  paginateDescribeEvents: () => paginateDescribeEvents,
  paginateListPlatformBranches: () => paginateListPlatformBranches,
  paginateListPlatformVersions: () => paginateListPlatformVersions,
  waitForEnvironmentExists: () => waitForEnvironmentExists,
  waitForEnvironmentTerminated: () => waitForEnvironmentTerminated,
  waitForEnvironmentUpdated: () => waitForEnvironmentUpdated,
  waitUntilEnvironmentExists: () => waitUntilEnvironmentExists,
  waitUntilEnvironmentTerminated: () => waitUntilEnvironmentTerminated,
  waitUntilEnvironmentUpdated: () => waitUntilEnvironmentUpdated
});
module.exports = __toCommonJS(src_exports);

// src/ElasticBeanstalkClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "elasticbeanstalk"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ElasticBeanstalkClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/ElasticBeanstalkClient.ts
var _ElasticBeanstalkClient = class _ElasticBeanstalkClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultElasticBeanstalkHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_ElasticBeanstalkClient, "ElasticBeanstalkClient");
var ElasticBeanstalkClient = _ElasticBeanstalkClient;

// src/ElasticBeanstalk.ts


// src/commands/AbortEnvironmentUpdateCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_query.ts
var import_core2 = require("@aws-sdk/core");



// src/models/ElasticBeanstalkServiceException.ts

var _ElasticBeanstalkServiceException = class _ElasticBeanstalkServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ElasticBeanstalkServiceException.prototype);
  }
};
__name(_ElasticBeanstalkServiceException, "ElasticBeanstalkServiceException");
var ElasticBeanstalkServiceException = _ElasticBeanstalkServiceException;

// src/models/models_0.ts
var _InsufficientPrivilegesException = class _InsufficientPrivilegesException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InsufficientPrivilegesException",
      $fault: "client",
      ...opts
    });
    this.name = "InsufficientPrivilegesException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InsufficientPrivilegesException.prototype);
  }
};
__name(_InsufficientPrivilegesException, "InsufficientPrivilegesException");
var InsufficientPrivilegesException = _InsufficientPrivilegesException;
var ActionHistoryStatus = {
  Completed: "Completed",
  Failed: "Failed",
  Unknown: "Unknown"
};
var ActionStatus = {
  Pending: "Pending",
  Running: "Running",
  Scheduled: "Scheduled",
  Unknown: "Unknown"
};
var ActionType = {
  InstanceRefresh: "InstanceRefresh",
  PlatformUpdate: "PlatformUpdate",
  Unknown: "Unknown"
};
var SourceRepository = {
  CodeCommit: "CodeCommit",
  S3: "S3"
};
var SourceType = {
  Git: "Git",
  Zip: "Zip"
};
var ApplicationVersionStatus = {
  Building: "Building",
  Failed: "Failed",
  Processed: "Processed",
  Processing: "Processing",
  Unprocessed: "Unprocessed"
};
var _ElasticBeanstalkServiceException2 = class _ElasticBeanstalkServiceException2 extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ElasticBeanstalkServiceException",
      $fault: "client",
      ...opts
    });
    this.name = "ElasticBeanstalkServiceException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ElasticBeanstalkServiceException2.prototype);
  }
};
__name(_ElasticBeanstalkServiceException2, "ElasticBeanstalkServiceException");
var ElasticBeanstalkServiceException2 = _ElasticBeanstalkServiceException2;
var _ManagedActionInvalidStateException = class _ManagedActionInvalidStateException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ManagedActionInvalidStateException",
      $fault: "client",
      ...opts
    });
    this.name = "ManagedActionInvalidStateException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ManagedActionInvalidStateException.prototype);
  }
};
__name(_ManagedActionInvalidStateException, "ManagedActionInvalidStateException");
var ManagedActionInvalidStateException = _ManagedActionInvalidStateException;
var EnvironmentHealth = {
  Green: "Green",
  Grey: "Grey",
  Red: "Red",
  Yellow: "Yellow"
};
var EnvironmentHealthStatus = {
  Degraded: "Degraded",
  Info: "Info",
  NoData: "NoData",
  Ok: "Ok",
  Pending: "Pending",
  Severe: "Severe",
  Suspended: "Suspended",
  Unknown: "Unknown",
  Warning: "Warning"
};
var EnvironmentStatus = {
  Aborting: "Aborting",
  Launching: "Launching",
  LinkingFrom: "LinkingFrom",
  LinkingTo: "LinkingTo",
  Ready: "Ready",
  Terminated: "Terminated",
  Terminating: "Terminating",
  Updating: "Updating"
};
var _TooManyEnvironmentsException = class _TooManyEnvironmentsException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyEnvironmentsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyEnvironmentsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyEnvironmentsException.prototype);
  }
};
__name(_TooManyEnvironmentsException, "TooManyEnvironmentsException");
var TooManyEnvironmentsException = _TooManyEnvironmentsException;
var _TooManyApplicationsException = class _TooManyApplicationsException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyApplicationsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyApplicationsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyApplicationsException.prototype);
  }
};
__name(_TooManyApplicationsException, "TooManyApplicationsException");
var TooManyApplicationsException = _TooManyApplicationsException;
var _CodeBuildNotInServiceRegionException = class _CodeBuildNotInServiceRegionException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "CodeBuildNotInServiceRegionException",
      $fault: "client",
      ...opts
    });
    this.name = "CodeBuildNotInServiceRegionException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _CodeBuildNotInServiceRegionException.prototype);
  }
};
__name(_CodeBuildNotInServiceRegionException, "CodeBuildNotInServiceRegionException");
var CodeBuildNotInServiceRegionException = _CodeBuildNotInServiceRegionException;
var ComputeType = {
  BUILD_GENERAL1_LARGE: "BUILD_GENERAL1_LARGE",
  BUILD_GENERAL1_MEDIUM: "BUILD_GENERAL1_MEDIUM",
  BUILD_GENERAL1_SMALL: "BUILD_GENERAL1_SMALL"
};
var _S3LocationNotInServiceRegionException = class _S3LocationNotInServiceRegionException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "S3LocationNotInServiceRegionException",
      $fault: "client",
      ...opts
    });
    this.name = "S3LocationNotInServiceRegionException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _S3LocationNotInServiceRegionException.prototype);
  }
};
__name(_S3LocationNotInServiceRegionException, "S3LocationNotInServiceRegionException");
var S3LocationNotInServiceRegionException = _S3LocationNotInServiceRegionException;
var _TooManyApplicationVersionsException = class _TooManyApplicationVersionsException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyApplicationVersionsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyApplicationVersionsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyApplicationVersionsException.prototype);
  }
};
__name(_TooManyApplicationVersionsException, "TooManyApplicationVersionsException");
var TooManyApplicationVersionsException = _TooManyApplicationVersionsException;
var ConfigurationDeploymentStatus = {
  deployed: "deployed",
  failed: "failed",
  pending: "pending"
};
var _TooManyBucketsException = class _TooManyBucketsException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyBucketsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyBucketsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyBucketsException.prototype);
  }
};
__name(_TooManyBucketsException, "TooManyBucketsException");
var TooManyBucketsException = _TooManyBucketsException;
var _TooManyConfigurationTemplatesException = class _TooManyConfigurationTemplatesException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyConfigurationTemplatesException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyConfigurationTemplatesException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyConfigurationTemplatesException.prototype);
  }
};
__name(_TooManyConfigurationTemplatesException, "TooManyConfigurationTemplatesException");
var TooManyConfigurationTemplatesException = _TooManyConfigurationTemplatesException;
var PlatformStatus = {
  Creating: "Creating",
  Deleted: "Deleted",
  Deleting: "Deleting",
  Failed: "Failed",
  Ready: "Ready"
};
var _TooManyPlatformsException = class _TooManyPlatformsException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyPlatformsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyPlatformsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyPlatformsException.prototype);
  }
};
__name(_TooManyPlatformsException, "TooManyPlatformsException");
var TooManyPlatformsException = _TooManyPlatformsException;
var _S3SubscriptionRequiredException = class _S3SubscriptionRequiredException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "S3SubscriptionRequiredException",
      $fault: "client",
      ...opts
    });
    this.name = "S3SubscriptionRequiredException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _S3SubscriptionRequiredException.prototype);
  }
};
__name(_S3SubscriptionRequiredException, "S3SubscriptionRequiredException");
var S3SubscriptionRequiredException = _S3SubscriptionRequiredException;
var _OperationInProgressException = class _OperationInProgressException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "OperationInProgressException",
      $fault: "client",
      ...opts
    });
    this.name = "OperationInProgressException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _OperationInProgressException.prototype);
  }
};
__name(_OperationInProgressException, "OperationInProgressException");
var OperationInProgressException = _OperationInProgressException;
var _SourceBundleDeletionException = class _SourceBundleDeletionException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SourceBundleDeletionException",
      $fault: "client",
      ...opts
    });
    this.name = "SourceBundleDeletionException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SourceBundleDeletionException.prototype);
  }
};
__name(_SourceBundleDeletionException, "SourceBundleDeletionException");
var SourceBundleDeletionException = _SourceBundleDeletionException;
var _PlatformVersionStillReferencedException = class _PlatformVersionStillReferencedException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "PlatformVersionStillReferencedException",
      $fault: "client",
      ...opts
    });
    this.name = "PlatformVersionStillReferencedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _PlatformVersionStillReferencedException.prototype);
  }
};
__name(_PlatformVersionStillReferencedException, "PlatformVersionStillReferencedException");
var PlatformVersionStillReferencedException = _PlatformVersionStillReferencedException;
var ConfigurationOptionValueType = {
  List: "List",
  Scalar: "Scalar"
};
var EnvironmentHealthAttribute = {
  All: "All",
  ApplicationMetrics: "ApplicationMetrics",
  Causes: "Causes",
  Color: "Color",
  HealthStatus: "HealthStatus",
  InstancesHealth: "InstancesHealth",
  RefreshedAt: "RefreshedAt",
  Status: "Status"
};
var _InvalidRequestException = class _InvalidRequestException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidRequestException.prototype);
  }
};
__name(_InvalidRequestException, "InvalidRequestException");
var InvalidRequestException = _InvalidRequestException;
var FailureType = {
  CancellationFailed: "CancellationFailed",
  InternalFailure: "InternalFailure",
  InvalidEnvironmentState: "InvalidEnvironmentState",
  PermissionsError: "PermissionsError",
  RollbackFailed: "RollbackFailed",
  RollbackSuccessful: "RollbackSuccessful",
  UpdateCancelled: "UpdateCancelled"
};
var EventSeverity = {
  DEBUG: "DEBUG",
  ERROR: "ERROR",
  FATAL: "FATAL",
  INFO: "INFO",
  TRACE: "TRACE",
  WARN: "WARN"
};
var InstancesHealthAttribute = {
  All: "All",
  ApplicationMetrics: "ApplicationMetrics",
  AvailabilityZone: "AvailabilityZone",
  Causes: "Causes",
  Color: "Color",
  Deployment: "Deployment",
  HealthStatus: "HealthStatus",
  InstanceType: "InstanceType",
  LaunchedAt: "LaunchedAt",
  RefreshedAt: "RefreshedAt",
  System: "System"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ResourceTypeNotSupportedException = class _ResourceTypeNotSupportedException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceTypeNotSupportedException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceTypeNotSupportedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceTypeNotSupportedException.prototype);
  }
};
__name(_ResourceTypeNotSupportedException, "ResourceTypeNotSupportedException");
var ResourceTypeNotSupportedException = _ResourceTypeNotSupportedException;
var EnvironmentInfoType = {
  bundle: "bundle",
  tail: "tail"
};
var _TooManyTagsException = class _TooManyTagsException extends ElasticBeanstalkServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyTagsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyTagsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyTagsException.prototype);
  }
};
__name(_TooManyTagsException, "TooManyTagsException");
var TooManyTagsException = _TooManyTagsException;
var ValidationSeverity = {
  error: "error",
  warning: "warning"
};

// src/protocols/Aws_query.ts
var se_AbortEnvironmentUpdateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AbortEnvironmentUpdateMessage(input, context),
    [_A]: _AEU,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AbortEnvironmentUpdateCommand");
var se_ApplyEnvironmentManagedActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ApplyEnvironmentManagedActionRequest(input, context),
    [_A]: _AEMA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ApplyEnvironmentManagedActionCommand");
var se_AssociateEnvironmentOperationsRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AssociateEnvironmentOperationsRoleMessage(input, context),
    [_A]: _AEOR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AssociateEnvironmentOperationsRoleCommand");
var se_CheckDNSAvailabilityCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CheckDNSAvailabilityMessage(input, context),
    [_A]: _CDNSA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CheckDNSAvailabilityCommand");
var se_ComposeEnvironmentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ComposeEnvironmentsMessage(input, context),
    [_A]: _CE,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ComposeEnvironmentsCommand");
var se_CreateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateApplicationMessage(input, context),
    [_A]: _CA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateApplicationCommand");
var se_CreateApplicationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateApplicationVersionMessage(input, context),
    [_A]: _CAV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateApplicationVersionCommand");
var se_CreateConfigurationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateConfigurationTemplateMessage(input, context),
    [_A]: _CCT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateConfigurationTemplateCommand");
var se_CreateEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateEnvironmentMessage(input, context),
    [_A]: _CEr,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateEnvironmentCommand");
var se_CreatePlatformVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreatePlatformVersionRequest(input, context),
    [_A]: _CPV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreatePlatformVersionCommand");
var se_CreateStorageLocationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  const body = buildFormUrlencodedString({
    [_A]: _CSL,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateStorageLocationCommand");
var se_DeleteApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteApplicationMessage(input, context),
    [_A]: _DA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteApplicationCommand");
var se_DeleteApplicationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteApplicationVersionMessage(input, context),
    [_A]: _DAV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteApplicationVersionCommand");
var se_DeleteConfigurationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteConfigurationTemplateMessage(input, context),
    [_A]: _DCT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteConfigurationTemplateCommand");
var se_DeleteEnvironmentConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteEnvironmentConfigurationMessage(input, context),
    [_A]: _DEC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteEnvironmentConfigurationCommand");
var se_DeletePlatformVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeletePlatformVersionRequest(input, context),
    [_A]: _DPV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeletePlatformVersionCommand");
var se_DescribeAccountAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  const body = buildFormUrlencodedString({
    [_A]: _DAA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeAccountAttributesCommand");
var se_DescribeApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeApplicationsMessage(input, context),
    [_A]: _DAe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeApplicationsCommand");
var se_DescribeApplicationVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeApplicationVersionsMessage(input, context),
    [_A]: _DAVe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeApplicationVersionsCommand");
var se_DescribeConfigurationOptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeConfigurationOptionsMessage(input, context),
    [_A]: _DCO,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeConfigurationOptionsCommand");
var se_DescribeConfigurationSettingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeConfigurationSettingsMessage(input, context),
    [_A]: _DCS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeConfigurationSettingsCommand");
var se_DescribeEnvironmentHealthCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEnvironmentHealthRequest(input, context),
    [_A]: _DEH,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEnvironmentHealthCommand");
var se_DescribeEnvironmentManagedActionHistoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEnvironmentManagedActionHistoryRequest(input, context),
    [_A]: _DEMAH,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEnvironmentManagedActionHistoryCommand");
var se_DescribeEnvironmentManagedActionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEnvironmentManagedActionsRequest(input, context),
    [_A]: _DEMA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEnvironmentManagedActionsCommand");
var se_DescribeEnvironmentResourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEnvironmentResourcesMessage(input, context),
    [_A]: _DER,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEnvironmentResourcesCommand");
var se_DescribeEnvironmentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEnvironmentsMessage(input, context),
    [_A]: _DE,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEnvironmentsCommand");
var se_DescribeEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEventsMessage(input, context),
    [_A]: _DEe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEventsCommand");
var se_DescribeInstancesHealthCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeInstancesHealthRequest(input, context),
    [_A]: _DIH,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeInstancesHealthCommand");
var se_DescribePlatformVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribePlatformVersionRequest(input, context),
    [_A]: _DPVe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribePlatformVersionCommand");
var se_DisassociateEnvironmentOperationsRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DisassociateEnvironmentOperationsRoleMessage(input, context),
    [_A]: _DEOR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisassociateEnvironmentOperationsRoleCommand");
var se_ListAvailableSolutionStacksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  const body = buildFormUrlencodedString({
    [_A]: _LASS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListAvailableSolutionStacksCommand");
var se_ListPlatformBranchesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListPlatformBranchesRequest(input, context),
    [_A]: _LPB,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListPlatformBranchesCommand");
var se_ListPlatformVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListPlatformVersionsRequest(input, context),
    [_A]: _LPV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListPlatformVersionsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListTagsForResourceMessage(input, context),
    [_A]: _LTFR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsForResourceCommand");
var se_RebuildEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RebuildEnvironmentMessage(input, context),
    [_A]: _RE,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RebuildEnvironmentCommand");
var se_RequestEnvironmentInfoCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RequestEnvironmentInfoMessage(input, context),
    [_A]: _REI,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RequestEnvironmentInfoCommand");
var se_RestartAppServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RestartAppServerMessage(input, context),
    [_A]: _RAS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RestartAppServerCommand");
var se_RetrieveEnvironmentInfoCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RetrieveEnvironmentInfoMessage(input, context),
    [_A]: _REIe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RetrieveEnvironmentInfoCommand");
var se_SwapEnvironmentCNAMEsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_SwapEnvironmentCNAMEsMessage(input, context),
    [_A]: _SECNAME,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SwapEnvironmentCNAMEsCommand");
var se_TerminateEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_TerminateEnvironmentMessage(input, context),
    [_A]: _TE,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TerminateEnvironmentCommand");
var se_UpdateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateApplicationMessage(input, context),
    [_A]: _UA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateApplicationCommand");
var se_UpdateApplicationResourceLifecycleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateApplicationResourceLifecycleMessage(input, context),
    [_A]: _UARL,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateApplicationResourceLifecycleCommand");
var se_UpdateApplicationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateApplicationVersionMessage(input, context),
    [_A]: _UAV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateApplicationVersionCommand");
var se_UpdateConfigurationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateConfigurationTemplateMessage(input, context),
    [_A]: _UCT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateConfigurationTemplateCommand");
var se_UpdateEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateEnvironmentMessage(input, context),
    [_A]: _UE,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateEnvironmentCommand");
var se_UpdateTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateTagsForResourceMessage(input, context),
    [_A]: _UTFR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateTagsForResourceCommand");
var se_ValidateConfigurationSettingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ValidateConfigurationSettingsMessage(input, context),
    [_A]: _VCS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ValidateConfigurationSettingsCommand");
var de_AbortEnvironmentUpdateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AbortEnvironmentUpdateCommand");
var de_ApplyEnvironmentManagedActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ApplyEnvironmentManagedActionResult(data.ApplyEnvironmentManagedActionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ApplyEnvironmentManagedActionCommand");
var de_AssociateEnvironmentOperationsRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AssociateEnvironmentOperationsRoleCommand");
var de_CheckDNSAvailabilityCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CheckDNSAvailabilityResultMessage(data.CheckDNSAvailabilityResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CheckDNSAvailabilityCommand");
var de_ComposeEnvironmentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EnvironmentDescriptionsMessage(data.ComposeEnvironmentsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ComposeEnvironmentsCommand");
var de_CreateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ApplicationDescriptionMessage(data.CreateApplicationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateApplicationCommand");
var de_CreateApplicationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ApplicationVersionDescriptionMessage(data.CreateApplicationVersionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateApplicationVersionCommand");
var de_CreateConfigurationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ConfigurationSettingsDescription(data.CreateConfigurationTemplateResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateConfigurationTemplateCommand");
var de_CreateEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EnvironmentDescription(data.CreateEnvironmentResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateEnvironmentCommand");
var de_CreatePlatformVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreatePlatformVersionResult(data.CreatePlatformVersionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreatePlatformVersionCommand");
var de_CreateStorageLocationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateStorageLocationResultMessage(data.CreateStorageLocationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateStorageLocationCommand");
var de_DeleteApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteApplicationCommand");
var de_DeleteApplicationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteApplicationVersionCommand");
var de_DeleteConfigurationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteConfigurationTemplateCommand");
var de_DeleteEnvironmentConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteEnvironmentConfigurationCommand");
var de_DeletePlatformVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DeletePlatformVersionResult(data.DeletePlatformVersionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeletePlatformVersionCommand");
var de_DescribeAccountAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeAccountAttributesResult(data.DescribeAccountAttributesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeAccountAttributesCommand");
var de_DescribeApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ApplicationDescriptionsMessage(data.DescribeApplicationsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeApplicationsCommand");
var de_DescribeApplicationVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ApplicationVersionDescriptionsMessage(data.DescribeApplicationVersionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeApplicationVersionsCommand");
var de_DescribeConfigurationOptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ConfigurationOptionsDescription(data.DescribeConfigurationOptionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeConfigurationOptionsCommand");
var de_DescribeConfigurationSettingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ConfigurationSettingsDescriptions(data.DescribeConfigurationSettingsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeConfigurationSettingsCommand");
var de_DescribeEnvironmentHealthCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeEnvironmentHealthResult(data.DescribeEnvironmentHealthResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEnvironmentHealthCommand");
var de_DescribeEnvironmentManagedActionHistoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeEnvironmentManagedActionHistoryResult(
    data.DescribeEnvironmentManagedActionHistoryResult,
    context
  );
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEnvironmentManagedActionHistoryCommand");
var de_DescribeEnvironmentManagedActionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeEnvironmentManagedActionsResult(data.DescribeEnvironmentManagedActionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEnvironmentManagedActionsCommand");
var de_DescribeEnvironmentResourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EnvironmentResourceDescriptionsMessage(data.DescribeEnvironmentResourcesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEnvironmentResourcesCommand");
var de_DescribeEnvironmentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EnvironmentDescriptionsMessage(data.DescribeEnvironmentsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEnvironmentsCommand");
var de_DescribeEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EventDescriptionsMessage(data.DescribeEventsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEventsCommand");
var de_DescribeInstancesHealthCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeInstancesHealthResult(data.DescribeInstancesHealthResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeInstancesHealthCommand");
var de_DescribePlatformVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribePlatformVersionResult(data.DescribePlatformVersionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribePlatformVersionCommand");
var de_DisassociateEnvironmentOperationsRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DisassociateEnvironmentOperationsRoleCommand");
var de_ListAvailableSolutionStacksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListAvailableSolutionStacksResultMessage(data.ListAvailableSolutionStacksResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListAvailableSolutionStacksCommand");
var de_ListPlatformBranchesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListPlatformBranchesResult(data.ListPlatformBranchesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListPlatformBranchesCommand");
var de_ListPlatformVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListPlatformVersionsResult(data.ListPlatformVersionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListPlatformVersionsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ResourceTagsDescriptionMessage(data.ListTagsForResourceResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsForResourceCommand");
var de_RebuildEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_RebuildEnvironmentCommand");
var de_RequestEnvironmentInfoCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_RequestEnvironmentInfoCommand");
var de_RestartAppServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_RestartAppServerCommand");
var de_RetrieveEnvironmentInfoCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_RetrieveEnvironmentInfoResultMessage(data.RetrieveEnvironmentInfoResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RetrieveEnvironmentInfoCommand");
var de_SwapEnvironmentCNAMEsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_SwapEnvironmentCNAMEsCommand");
var de_TerminateEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EnvironmentDescription(data.TerminateEnvironmentResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TerminateEnvironmentCommand");
var de_UpdateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ApplicationDescriptionMessage(data.UpdateApplicationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateApplicationCommand");
var de_UpdateApplicationResourceLifecycleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ApplicationResourceLifecycleDescriptionMessage(data.UpdateApplicationResourceLifecycleResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateApplicationResourceLifecycleCommand");
var de_UpdateApplicationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ApplicationVersionDescriptionMessage(data.UpdateApplicationVersionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateApplicationVersionCommand");
var de_UpdateConfigurationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ConfigurationSettingsDescription(data.UpdateConfigurationTemplateResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateConfigurationTemplateCommand");
var de_UpdateEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EnvironmentDescription(data.UpdateEnvironmentResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateEnvironmentCommand");
var de_UpdateTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateTagsForResourceCommand");
var de_ValidateConfigurationSettingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ConfigurationSettingsValidationMessages(data.ValidateConfigurationSettingsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ValidateConfigurationSettingsCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseXmlErrorBody)(output.body, context)
  };
  const errorCode = loadQueryErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InsufficientPrivilegesException":
    case "com.amazonaws.elasticbeanstalk#InsufficientPrivilegesException":
      throw await de_InsufficientPrivilegesExceptionRes(parsedOutput, context);
    case "ElasticBeanstalkServiceException":
    case "com.amazonaws.elasticbeanstalk#ElasticBeanstalkServiceException":
      throw await de_ElasticBeanstalkServiceExceptionRes(parsedOutput, context);
    case "ManagedActionInvalidStateException":
    case "com.amazonaws.elasticbeanstalk#ManagedActionInvalidStateException":
      throw await de_ManagedActionInvalidStateExceptionRes(parsedOutput, context);
    case "TooManyEnvironmentsException":
    case "com.amazonaws.elasticbeanstalk#TooManyEnvironmentsException":
      throw await de_TooManyEnvironmentsExceptionRes(parsedOutput, context);
    case "TooManyApplicationsException":
    case "com.amazonaws.elasticbeanstalk#TooManyApplicationsException":
      throw await de_TooManyApplicationsExceptionRes(parsedOutput, context);
    case "CodeBuildNotInServiceRegionException":
    case "com.amazonaws.elasticbeanstalk#CodeBuildNotInServiceRegionException":
      throw await de_CodeBuildNotInServiceRegionExceptionRes(parsedOutput, context);
    case "S3LocationNotInServiceRegionException":
    case "com.amazonaws.elasticbeanstalk#S3LocationNotInServiceRegionException":
      throw await de_S3LocationNotInServiceRegionExceptionRes(parsedOutput, context);
    case "TooManyApplicationVersionsException":
    case "com.amazonaws.elasticbeanstalk#TooManyApplicationVersionsException":
      throw await de_TooManyApplicationVersionsExceptionRes(parsedOutput, context);
    case "TooManyBucketsException":
    case "com.amazonaws.elasticbeanstalk#TooManyBucketsException":
      throw await de_TooManyBucketsExceptionRes(parsedOutput, context);
    case "TooManyConfigurationTemplatesException":
    case "com.amazonaws.elasticbeanstalk#TooManyConfigurationTemplatesException":
      throw await de_TooManyConfigurationTemplatesExceptionRes(parsedOutput, context);
    case "TooManyPlatformsException":
    case "com.amazonaws.elasticbeanstalk#TooManyPlatformsException":
      throw await de_TooManyPlatformsExceptionRes(parsedOutput, context);
    case "S3SubscriptionRequiredException":
    case "com.amazonaws.elasticbeanstalk#S3SubscriptionRequiredException":
      throw await de_S3SubscriptionRequiredExceptionRes(parsedOutput, context);
    case "OperationInProgressFailure":
    case "com.amazonaws.elasticbeanstalk#OperationInProgressException":
      throw await de_OperationInProgressExceptionRes(parsedOutput, context);
    case "SourceBundleDeletionFailure":
    case "com.amazonaws.elasticbeanstalk#SourceBundleDeletionException":
      throw await de_SourceBundleDeletionExceptionRes(parsedOutput, context);
    case "PlatformVersionStillReferencedException":
    case "com.amazonaws.elasticbeanstalk#PlatformVersionStillReferencedException":
      throw await de_PlatformVersionStillReferencedExceptionRes(parsedOutput, context);
    case "InvalidRequestException":
    case "com.amazonaws.elasticbeanstalk#InvalidRequestException":
      throw await de_InvalidRequestExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.elasticbeanstalk#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ResourceTypeNotSupportedException":
    case "com.amazonaws.elasticbeanstalk#ResourceTypeNotSupportedException":
      throw await de_ResourceTypeNotSupportedExceptionRes(parsedOutput, context);
    case "TooManyTagsException":
    case "com.amazonaws.elasticbeanstalk#TooManyTagsException":
      throw await de_TooManyTagsExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody: parsedBody.Error,
        errorCode
      });
  }
}, "de_CommandError");
var de_CodeBuildNotInServiceRegionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_CodeBuildNotInServiceRegionException(body.Error, context);
  const exception = new CodeBuildNotInServiceRegionException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_CodeBuildNotInServiceRegionExceptionRes");
var de_ElasticBeanstalkServiceExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ElasticBeanstalkServiceException(body.Error, context);
  const exception = new ElasticBeanstalkServiceException2({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ElasticBeanstalkServiceExceptionRes");
var de_InsufficientPrivilegesExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InsufficientPrivilegesException(body.Error, context);
  const exception = new InsufficientPrivilegesException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InsufficientPrivilegesExceptionRes");
var de_InvalidRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidRequestException(body.Error, context);
  const exception = new InvalidRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidRequestExceptionRes");
var de_ManagedActionInvalidStateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ManagedActionInvalidStateException(body.Error, context);
  const exception = new ManagedActionInvalidStateException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ManagedActionInvalidStateExceptionRes");
var de_OperationInProgressExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_OperationInProgressException(body.Error, context);
  const exception = new OperationInProgressException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_OperationInProgressExceptionRes");
var de_PlatformVersionStillReferencedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_PlatformVersionStillReferencedException(body.Error, context);
  const exception = new PlatformVersionStillReferencedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_PlatformVersionStillReferencedExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ResourceNotFoundException(body.Error, context);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ResourceTypeNotSupportedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ResourceTypeNotSupportedException(body.Error, context);
  const exception = new ResourceTypeNotSupportedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceTypeNotSupportedExceptionRes");
var de_S3LocationNotInServiceRegionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_S3LocationNotInServiceRegionException(body.Error, context);
  const exception = new S3LocationNotInServiceRegionException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_S3LocationNotInServiceRegionExceptionRes");
var de_S3SubscriptionRequiredExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_S3SubscriptionRequiredException(body.Error, context);
  const exception = new S3SubscriptionRequiredException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_S3SubscriptionRequiredExceptionRes");
var de_SourceBundleDeletionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SourceBundleDeletionException(body.Error, context);
  const exception = new SourceBundleDeletionException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SourceBundleDeletionExceptionRes");
var de_TooManyApplicationsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TooManyApplicationsException(body.Error, context);
  const exception = new TooManyApplicationsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TooManyApplicationsExceptionRes");
var de_TooManyApplicationVersionsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TooManyApplicationVersionsException(body.Error, context);
  const exception = new TooManyApplicationVersionsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TooManyApplicationVersionsExceptionRes");
var de_TooManyBucketsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TooManyBucketsException(body.Error, context);
  const exception = new TooManyBucketsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TooManyBucketsExceptionRes");
var de_TooManyConfigurationTemplatesExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TooManyConfigurationTemplatesException(body.Error, context);
  const exception = new TooManyConfigurationTemplatesException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TooManyConfigurationTemplatesExceptionRes");
var de_TooManyEnvironmentsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TooManyEnvironmentsException(body.Error, context);
  const exception = new TooManyEnvironmentsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TooManyEnvironmentsExceptionRes");
var de_TooManyPlatformsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TooManyPlatformsException(body.Error, context);
  const exception = new TooManyPlatformsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TooManyPlatformsExceptionRes");
var de_TooManyTagsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TooManyTagsException(body.Error, context);
  const exception = new TooManyTagsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TooManyTagsExceptionRes");
var se_AbortEnvironmentUpdateMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  return entries;
}, "se_AbortEnvironmentUpdateMessage");
var se_ApplicationNamesList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_ApplicationNamesList");
var se_ApplicationResourceLifecycleConfig = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SR] != null) {
    entries[_SR] = input[_SR];
  }
  if (input[_VLC] != null) {
    const memberEntries = se_ApplicationVersionLifecycleConfig(input[_VLC], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VersionLifecycleConfig.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ApplicationResourceLifecycleConfig");
var se_ApplicationVersionLifecycleConfig = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_MCR] != null) {
    const memberEntries = se_MaxCountRule(input[_MCR], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `MaxCountRule.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_MAR] != null) {
    const memberEntries = se_MaxAgeRule(input[_MAR], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `MaxAgeRule.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ApplicationVersionLifecycleConfig");
var se_ApplyEnvironmentManagedActionRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_AI] != null) {
    entries[_AI] = input[_AI];
  }
  return entries;
}, "se_ApplyEnvironmentManagedActionRequest");
var se_AssociateEnvironmentOperationsRoleMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_OR] != null) {
    entries[_OR] = input[_OR];
  }
  return entries;
}, "se_AssociateEnvironmentOperationsRoleMessage");
var se_BuildConfiguration = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AN] != null) {
    entries[_AN] = input[_AN];
  }
  if (input[_CBSR] != null) {
    entries[_CBSR] = input[_CBSR];
  }
  if (input[_CT] != null) {
    entries[_CT] = input[_CT];
  }
  if (input[_I] != null) {
    entries[_I] = input[_I];
  }
  if (input[_TIM] != null) {
    entries[_TIM] = input[_TIM];
  }
  return entries;
}, "se_BuildConfiguration");
var se_CheckDNSAvailabilityMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CNAMEP] != null) {
    entries[_CNAMEP] = input[_CNAMEP];
  }
  return entries;
}, "se_CheckDNSAvailabilityMessage");
var se_ComposeEnvironmentsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_VL] != null) {
    const memberEntries = se_VersionLabels(input[_VL], context);
    if (((_a = input[_VL]) == null ? void 0 : _a.length) === 0) {
      entries.VersionLabels = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VersionLabels.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ComposeEnvironmentsMessage");
var se_ConfigurationOptionSetting = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_N] != null) {
    entries[_N] = input[_N];
  }
  if (input[_ON] != null) {
    entries[_ON] = input[_ON];
  }
  if (input[_Va] != null) {
    entries[_Va] = input[_Va];
  }
  return entries;
}, "se_ConfigurationOptionSetting");
var se_ConfigurationOptionSettingsList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_ConfigurationOptionSetting(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_ConfigurationOptionSettingsList");
var se_CreateApplicationMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_RLC] != null) {
    const memberEntries = se_ApplicationResourceLifecycleConfig(input[_RLC], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ResourceLifecycleConfig.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_T] != null) {
    const memberEntries = se_Tags(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateApplicationMessage");
var se_CreateApplicationVersionMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_VLe] != null) {
    entries[_VLe] = input[_VLe];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_SBI] != null) {
    const memberEntries = se_SourceBuildInformation(input[_SBI], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `SourceBuildInformation.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_SB] != null) {
    const memberEntries = se_S3Location(input[_SB], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `SourceBundle.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_BC] != null) {
    const memberEntries = se_BuildConfiguration(input[_BC], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `BuildConfiguration.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_ACA] != null) {
    entries[_ACA] = input[_ACA];
  }
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_T] != null) {
    const memberEntries = se_Tags(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateApplicationVersionMessage");
var se_CreateConfigurationTemplateMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  if (input[_SSN] != null) {
    entries[_SSN] = input[_SSN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_SC] != null) {
    const memberEntries = se_SourceConfiguration(input[_SC], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `SourceConfiguration.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_OS] != null) {
    const memberEntries = se_ConfigurationOptionSettingsList(input[_OS], context);
    if (((_a = input[_OS]) == null ? void 0 : _a.length) === 0) {
      entries.OptionSettings = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `OptionSettings.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_T] != null) {
    const memberEntries = se_Tags(input[_T], context);
    if (((_b = input[_T]) == null ? void 0 : _b.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateConfigurationTemplateMessage");
var se_CreateEnvironmentMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b, _c;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_CNAMEP] != null) {
    entries[_CNAMEP] = input[_CNAMEP];
  }
  if (input[_Ti] != null) {
    const memberEntries = se_EnvironmentTier(input[_Ti], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tier.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_T] != null) {
    const memberEntries = se_Tags(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_VLe] != null) {
    entries[_VLe] = input[_VLe];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  if (input[_SSN] != null) {
    entries[_SSN] = input[_SSN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_OS] != null) {
    const memberEntries = se_ConfigurationOptionSettingsList(input[_OS], context);
    if (((_b = input[_OS]) == null ? void 0 : _b.length) === 0) {
      entries.OptionSettings = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `OptionSettings.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_OTR] != null) {
    const memberEntries = se_OptionsSpecifierList(input[_OTR], context);
    if (((_c = input[_OTR]) == null ? void 0 : _c.length) === 0) {
      entries.OptionsToRemove = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `OptionsToRemove.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_OR] != null) {
    entries[_OR] = input[_OR];
  }
  return entries;
}, "se_CreateEnvironmentMessage");
var se_CreatePlatformVersionRequest = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  if (input[_PV] != null) {
    entries[_PV] = input[_PV];
  }
  if (input[_PDB] != null) {
    const memberEntries = se_S3Location(input[_PDB], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `PlatformDefinitionBundle.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_OS] != null) {
    const memberEntries = se_ConfigurationOptionSettingsList(input[_OS], context);
    if (((_a = input[_OS]) == null ? void 0 : _a.length) === 0) {
      entries.OptionSettings = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `OptionSettings.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_T] != null) {
    const memberEntries = se_Tags(input[_T], context);
    if (((_b = input[_T]) == null ? void 0 : _b.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreatePlatformVersionRequest");
var se_DeleteApplicationMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_TEBF] != null) {
    entries[_TEBF] = input[_TEBF];
  }
  return entries;
}, "se_DeleteApplicationMessage");
var se_DeleteApplicationVersionMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_VLe] != null) {
    entries[_VLe] = input[_VLe];
  }
  if (input[_DSB] != null) {
    entries[_DSB] = input[_DSB];
  }
  return entries;
}, "se_DeleteApplicationVersionMessage");
var se_DeleteConfigurationTemplateMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  return entries;
}, "se_DeleteConfigurationTemplateMessage");
var se_DeleteEnvironmentConfigurationMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  return entries;
}, "se_DeleteEnvironmentConfigurationMessage");
var se_DeletePlatformVersionRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_DeletePlatformVersionRequest");
var se_DescribeApplicationsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_ANpp] != null) {
    const memberEntries = se_ApplicationNamesList(input[_ANpp], context);
    if (((_a = input[_ANpp]) == null ? void 0 : _a.length) === 0) {
      entries.ApplicationNames = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ApplicationNames.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeApplicationsMessage");
var se_DescribeApplicationVersionsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_VL] != null) {
    const memberEntries = se_VersionLabelsList(input[_VL], context);
    if (((_a = input[_VL]) == null ? void 0 : _a.length) === 0) {
      entries.VersionLabels = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VersionLabels.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  return entries;
}, "se_DescribeApplicationVersionsMessage");
var se_DescribeConfigurationOptionsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_SSN] != null) {
    entries[_SSN] = input[_SSN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_O] != null) {
    const memberEntries = se_OptionsSpecifierList(input[_O], context);
    if (((_a = input[_O]) == null ? void 0 : _a.length) === 0) {
      entries.Options = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Options.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeConfigurationOptionsMessage");
var se_DescribeConfigurationSettingsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  return entries;
}, "se_DescribeConfigurationSettingsMessage");
var se_DescribeEnvironmentHealthRequest = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_ANt] != null) {
    const memberEntries = se_EnvironmentHealthAttributes(input[_ANt], context);
    if (((_a = input[_ANt]) == null ? void 0 : _a.length) === 0) {
      entries.AttributeNames = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `AttributeNames.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeEnvironmentHealthRequest");
var se_DescribeEnvironmentManagedActionHistoryRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_DescribeEnvironmentManagedActionHistoryRequest");
var se_DescribeEnvironmentManagedActionsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_S] != null) {
    entries[_S] = input[_S];
  }
  return entries;
}, "se_DescribeEnvironmentManagedActionsRequest");
var se_DescribeEnvironmentResourcesMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  return entries;
}, "se_DescribeEnvironmentResourcesMessage");
var se_DescribeEnvironmentsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_VLe] != null) {
    entries[_VLe] = input[_VLe];
  }
  if (input[_EIn] != null) {
    const memberEntries = se_EnvironmentIdList(input[_EIn], context);
    if (((_a = input[_EIn]) == null ? void 0 : _a.length) === 0) {
      entries.EnvironmentIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `EnvironmentIds.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_ENn] != null) {
    const memberEntries = se_EnvironmentNamesList(input[_ENn], context);
    if (((_b = input[_ENn]) == null ? void 0 : _b.length) === 0) {
      entries.EnvironmentNames = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `EnvironmentNames.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_ID] != null) {
    entries[_ID] = input[_ID];
  }
  if (input[_IDBT] != null) {
    entries[_IDBT] = (0, import_smithy_client.serializeDateTime)(input[_IDBT]);
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  return entries;
}, "se_DescribeEnvironmentsMessage");
var se_DescribeEventsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_VLe] != null) {
    entries[_VLe] = input[_VLe];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_RI] != null) {
    entries[_RI] = input[_RI];
  }
  if (input[_Se] != null) {
    entries[_Se] = input[_Se];
  }
  if (input[_ST] != null) {
    entries[_ST] = (0, import_smithy_client.serializeDateTime)(input[_ST]);
  }
  if (input[_ET] != null) {
    entries[_ET] = (0, import_smithy_client.serializeDateTime)(input[_ET]);
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  return entries;
}, "se_DescribeEventsMessage");
var se_DescribeInstancesHealthRequest = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_ANt] != null) {
    const memberEntries = se_InstancesHealthAttributes(input[_ANt], context);
    if (((_a = input[_ANt]) == null ? void 0 : _a.length) === 0) {
      entries.AttributeNames = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `AttributeNames.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  return entries;
}, "se_DescribeInstancesHealthRequest");
var se_DescribePlatformVersionRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_DescribePlatformVersionRequest");
var se_DisassociateEnvironmentOperationsRoleMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  return entries;
}, "se_DisassociateEnvironmentOperationsRoleMessage");
var se_EnvironmentHealthAttributes = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_EnvironmentHealthAttributes");
var se_EnvironmentIdList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_EnvironmentIdList");
var se_EnvironmentNamesList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_EnvironmentNamesList");
var se_EnvironmentTier = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_Na] != null) {
    entries[_Na] = input[_Na];
  }
  if (input[_Ty] != null) {
    entries[_Ty] = input[_Ty];
  }
  if (input[_V] != null) {
    entries[_V] = input[_V];
  }
  return entries;
}, "se_EnvironmentTier");
var se_InstancesHealthAttributes = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_InstancesHealthAttributes");
var se_ListPlatformBranchesRequest = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_F] != null) {
    const memberEntries = se_SearchFilters(input[_F], context);
    if (((_a = input[_F]) == null ? void 0 : _a.length) === 0) {
      entries.Filters = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Filters.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  return entries;
}, "se_ListPlatformBranchesRequest");
var se_ListPlatformVersionsRequest = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_F] != null) {
    const memberEntries = se_PlatformFilters(input[_F], context);
    if (((_a = input[_F]) == null ? void 0 : _a.length) === 0) {
      entries.Filters = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Filters.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  return entries;
}, "se_ListPlatformVersionsRequest");
var se_ListTagsForResourceMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RA] != null) {
    entries[_RA] = input[_RA];
  }
  return entries;
}, "se_ListTagsForResourceMessage");
var se_MaxAgeRule = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_E] != null) {
    entries[_E] = input[_E];
  }
  if (input[_MAID] != null) {
    entries[_MAID] = input[_MAID];
  }
  if (input[_DSFS] != null) {
    entries[_DSFS] = input[_DSFS];
  }
  return entries;
}, "se_MaxAgeRule");
var se_MaxCountRule = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_E] != null) {
    entries[_E] = input[_E];
  }
  if (input[_MC] != null) {
    entries[_MC] = input[_MC];
  }
  if (input[_DSFS] != null) {
    entries[_DSFS] = input[_DSFS];
  }
  return entries;
}, "se_MaxCountRule");
var se_OptionSpecification = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_N] != null) {
    entries[_N] = input[_N];
  }
  if (input[_ON] != null) {
    entries[_ON] = input[_ON];
  }
  return entries;
}, "se_OptionSpecification");
var se_OptionsSpecifierList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_OptionSpecification(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_OptionsSpecifierList");
var se_PlatformFilter = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_Ty] != null) {
    entries[_Ty] = input[_Ty];
  }
  if (input[_Op] != null) {
    entries[_Op] = input[_Op];
  }
  if (input[_Val] != null) {
    const memberEntries = se_PlatformFilterValueList(input[_Val], context);
    if (((_a = input[_Val]) == null ? void 0 : _a.length) === 0) {
      entries.Values = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Values.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_PlatformFilter");
var se_PlatformFilters = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_PlatformFilter(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_PlatformFilters");
var se_PlatformFilterValueList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_PlatformFilterValueList");
var se_RebuildEnvironmentMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  return entries;
}, "se_RebuildEnvironmentMessage");
var se_RequestEnvironmentInfoMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_IT] != null) {
    entries[_IT] = input[_IT];
  }
  return entries;
}, "se_RequestEnvironmentInfoMessage");
var se_RestartAppServerMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  return entries;
}, "se_RestartAppServerMessage");
var se_RetrieveEnvironmentInfoMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_IT] != null) {
    entries[_IT] = input[_IT];
  }
  return entries;
}, "se_RetrieveEnvironmentInfoMessage");
var se_S3Location = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SBu] != null) {
    entries[_SBu] = input[_SBu];
  }
  if (input[_SK] != null) {
    entries[_SK] = input[_SK];
  }
  return entries;
}, "se_S3Location");
var se_SearchFilter = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_At] != null) {
    entries[_At] = input[_At];
  }
  if (input[_Op] != null) {
    entries[_Op] = input[_Op];
  }
  if (input[_Val] != null) {
    const memberEntries = se_SearchFilterValues(input[_Val], context);
    if (((_a = input[_Val]) == null ? void 0 : _a.length) === 0) {
      entries.Values = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Values.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_SearchFilter");
var se_SearchFilters = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_SearchFilter(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_SearchFilters");
var se_SearchFilterValues = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_SearchFilterValues");
var se_SourceBuildInformation = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_STo] != null) {
    entries[_STo] = input[_STo];
  }
  if (input[_SRo] != null) {
    entries[_SRo] = input[_SRo];
  }
  if (input[_SL] != null) {
    entries[_SL] = input[_SL];
  }
  return entries;
}, "se_SourceBuildInformation");
var se_SourceConfiguration = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  return entries;
}, "se_SourceConfiguration");
var se_SwapEnvironmentCNAMEsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SEI] != null) {
    entries[_SEI] = input[_SEI];
  }
  if (input[_SEN] != null) {
    entries[_SEN] = input[_SEN];
  }
  if (input[_DEI] != null) {
    entries[_DEI] = input[_DEI];
  }
  if (input[_DEN] != null) {
    entries[_DEN] = input[_DEN];
  }
  return entries;
}, "se_SwapEnvironmentCNAMEsMessage");
var se_Tag = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_K] != null) {
    entries[_K] = input[_K];
  }
  if (input[_Va] != null) {
    entries[_Va] = input[_Va];
  }
  return entries;
}, "se_Tag");
var se_TagKeyList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_TagKeyList");
var se_TagList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_Tag(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_TagList");
var se_Tags = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_Tag(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_Tags");
var se_TerminateEnvironmentMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_TR] != null) {
    entries[_TR] = input[_TR];
  }
  if (input[_FT] != null) {
    entries[_FT] = input[_FT];
  }
  return entries;
}, "se_TerminateEnvironmentMessage");
var se_UpdateApplicationMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  return entries;
}, "se_UpdateApplicationMessage");
var se_UpdateApplicationResourceLifecycleMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_RLC] != null) {
    const memberEntries = se_ApplicationResourceLifecycleConfig(input[_RLC], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ResourceLifecycleConfig.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UpdateApplicationResourceLifecycleMessage");
var se_UpdateApplicationVersionMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_VLe] != null) {
    entries[_VLe] = input[_VLe];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  return entries;
}, "se_UpdateApplicationVersionMessage");
var se_UpdateConfigurationTemplateMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_OS] != null) {
    const memberEntries = se_ConfigurationOptionSettingsList(input[_OS], context);
    if (((_a = input[_OS]) == null ? void 0 : _a.length) === 0) {
      entries.OptionSettings = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `OptionSettings.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_OTR] != null) {
    const memberEntries = se_OptionsSpecifierList(input[_OTR], context);
    if (((_b = input[_OTR]) == null ? void 0 : _b.length) === 0) {
      entries.OptionsToRemove = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `OptionsToRemove.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UpdateConfigurationTemplateMessage");
var se_UpdateEnvironmentMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_Ti] != null) {
    const memberEntries = se_EnvironmentTier(input[_Ti], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tier.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_VLe] != null) {
    entries[_VLe] = input[_VLe];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  if (input[_SSN] != null) {
    entries[_SSN] = input[_SSN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_OS] != null) {
    const memberEntries = se_ConfigurationOptionSettingsList(input[_OS], context);
    if (((_a = input[_OS]) == null ? void 0 : _a.length) === 0) {
      entries.OptionSettings = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `OptionSettings.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_OTR] != null) {
    const memberEntries = se_OptionsSpecifierList(input[_OTR], context);
    if (((_b = input[_OTR]) == null ? void 0 : _b.length) === 0) {
      entries.OptionsToRemove = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `OptionsToRemove.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UpdateEnvironmentMessage");
var se_UpdateTagsForResourceMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_RA] != null) {
    entries[_RA] = input[_RA];
  }
  if (input[_TTA] != null) {
    const memberEntries = se_TagList(input[_TTA], context);
    if (((_a = input[_TTA]) == null ? void 0 : _a.length) === 0) {
      entries.TagsToAdd = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagsToAdd.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TTR] != null) {
    const memberEntries = se_TagKeyList(input[_TTR], context);
    if (((_b = input[_TTR]) == null ? void 0 : _b.length) === 0) {
      entries.TagsToRemove = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagsToRemove.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UpdateTagsForResourceMessage");
var se_ValidateConfigurationSettingsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_ANp] != null) {
    entries[_ANp] = input[_ANp];
  }
  if (input[_TN] != null) {
    entries[_TN] = input[_TN];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_OS] != null) {
    const memberEntries = se_ConfigurationOptionSettingsList(input[_OS], context);
    if (((_a = input[_OS]) == null ? void 0 : _a.length) === 0) {
      entries.OptionSettings = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `OptionSettings.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ValidateConfigurationSettingsMessage");
var se_VersionLabels = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_VersionLabels");
var se_VersionLabelsList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_VersionLabelsList");
var de_ApplicationDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AA] != null) {
    contents[_AA] = (0, import_smithy_client.expectString)(output[_AA]);
  }
  if (output[_ANp] != null) {
    contents[_ANp] = (0, import_smithy_client.expectString)(output[_ANp]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_DC] != null) {
    contents[_DC] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DC]));
  }
  if (output[_DU] != null) {
    contents[_DU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DU]));
  }
  if (output.Versions === "") {
    contents[_Ve] = [];
  } else if (output[_Ve] != null && output[_Ve][_m] != null) {
    contents[_Ve] = de_VersionLabelsList((0, import_smithy_client.getArrayIfSingleItem)(output[_Ve][_m]), context);
  }
  if (output.ConfigurationTemplates === "") {
    contents[_CTo] = [];
  } else if (output[_CTo] != null && output[_CTo][_m] != null) {
    contents[_CTo] = de_ConfigurationTemplateNamesList((0, import_smithy_client.getArrayIfSingleItem)(output[_CTo][_m]), context);
  }
  if (output[_RLC] != null) {
    contents[_RLC] = de_ApplicationResourceLifecycleConfig(output[_RLC], context);
  }
  return contents;
}, "de_ApplicationDescription");
var de_ApplicationDescriptionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ApplicationDescription(entry, context);
  });
}, "de_ApplicationDescriptionList");
var de_ApplicationDescriptionMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ap] != null) {
    contents[_Ap] = de_ApplicationDescription(output[_Ap], context);
  }
  return contents;
}, "de_ApplicationDescriptionMessage");
var de_ApplicationDescriptionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Applications === "") {
    contents[_App] = [];
  } else if (output[_App] != null && output[_App][_m] != null) {
    contents[_App] = de_ApplicationDescriptionList((0, import_smithy_client.getArrayIfSingleItem)(output[_App][_m]), context);
  }
  return contents;
}, "de_ApplicationDescriptionsMessage");
var de_ApplicationMetrics = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Du] != null) {
    contents[_Du] = (0, import_smithy_client.strictParseInt32)(output[_Du]);
  }
  if (output[_RC] != null) {
    contents[_RC] = (0, import_smithy_client.strictParseInt32)(output[_RC]);
  }
  if (output[_SCt] != null) {
    contents[_SCt] = de_StatusCodes(output[_SCt], context);
  }
  if (output[_L] != null) {
    contents[_L] = de_Latency(output[_L], context);
  }
  return contents;
}, "de_ApplicationMetrics");
var de_ApplicationResourceLifecycleConfig = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SR] != null) {
    contents[_SR] = (0, import_smithy_client.expectString)(output[_SR]);
  }
  if (output[_VLC] != null) {
    contents[_VLC] = de_ApplicationVersionLifecycleConfig(output[_VLC], context);
  }
  return contents;
}, "de_ApplicationResourceLifecycleConfig");
var de_ApplicationResourceLifecycleDescriptionMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ANp] != null) {
    contents[_ANp] = (0, import_smithy_client.expectString)(output[_ANp]);
  }
  if (output[_RLC] != null) {
    contents[_RLC] = de_ApplicationResourceLifecycleConfig(output[_RLC], context);
  }
  return contents;
}, "de_ApplicationResourceLifecycleDescriptionMessage");
var de_ApplicationVersionDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AVA] != null) {
    contents[_AVA] = (0, import_smithy_client.expectString)(output[_AVA]);
  }
  if (output[_ANp] != null) {
    contents[_ANp] = (0, import_smithy_client.expectString)(output[_ANp]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_VLe] != null) {
    contents[_VLe] = (0, import_smithy_client.expectString)(output[_VLe]);
  }
  if (output[_SBI] != null) {
    contents[_SBI] = de_SourceBuildInformation(output[_SBI], context);
  }
  if (output[_BA] != null) {
    contents[_BA] = (0, import_smithy_client.expectString)(output[_BA]);
  }
  if (output[_SB] != null) {
    contents[_SB] = de_S3Location(output[_SB], context);
  }
  if (output[_DC] != null) {
    contents[_DC] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DC]));
  }
  if (output[_DU] != null) {
    contents[_DU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DU]));
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  return contents;
}, "de_ApplicationVersionDescription");
var de_ApplicationVersionDescriptionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ApplicationVersionDescription(entry, context);
  });
}, "de_ApplicationVersionDescriptionList");
var de_ApplicationVersionDescriptionMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AV] != null) {
    contents[_AV] = de_ApplicationVersionDescription(output[_AV], context);
  }
  return contents;
}, "de_ApplicationVersionDescriptionMessage");
var de_ApplicationVersionDescriptionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.ApplicationVersions === "") {
    contents[_AVp] = [];
  } else if (output[_AVp] != null && output[_AVp][_m] != null) {
    contents[_AVp] = de_ApplicationVersionDescriptionList((0, import_smithy_client.getArrayIfSingleItem)(output[_AVp][_m]), context);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  return contents;
}, "de_ApplicationVersionDescriptionsMessage");
var de_ApplicationVersionLifecycleConfig = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_MCR] != null) {
    contents[_MCR] = de_MaxCountRule(output[_MCR], context);
  }
  if (output[_MAR] != null) {
    contents[_MAR] = de_MaxAgeRule(output[_MAR], context);
  }
  return contents;
}, "de_ApplicationVersionLifecycleConfig");
var de_ApplyEnvironmentManagedActionResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AI] != null) {
    contents[_AI] = (0, import_smithy_client.expectString)(output[_AI]);
  }
  if (output[_AD] != null) {
    contents[_AD] = (0, import_smithy_client.expectString)(output[_AD]);
  }
  if (output[_AT] != null) {
    contents[_AT] = (0, import_smithy_client.expectString)(output[_AT]);
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  return contents;
}, "de_ApplyEnvironmentManagedActionResult");
var de_AutoScalingGroup = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Na] != null) {
    contents[_Na] = (0, import_smithy_client.expectString)(output[_Na]);
  }
  return contents;
}, "de_AutoScalingGroup");
var de_AutoScalingGroupList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AutoScalingGroup(entry, context);
  });
}, "de_AutoScalingGroupList");
var de_AvailableSolutionStackDetailsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SolutionStackDescription(entry, context);
  });
}, "de_AvailableSolutionStackDetailsList");
var de_AvailableSolutionStackNamesList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_AvailableSolutionStackNamesList");
var de_Builder = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ARN] != null) {
    contents[_ARN] = (0, import_smithy_client.expectString)(output[_ARN]);
  }
  return contents;
}, "de_Builder");
var de_Causes = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_Causes");
var de_CheckDNSAvailabilityResultMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Av] != null) {
    contents[_Av] = (0, import_smithy_client.parseBoolean)(output[_Av]);
  }
  if (output[_FQCNAME] != null) {
    contents[_FQCNAME] = (0, import_smithy_client.expectString)(output[_FQCNAME]);
  }
  return contents;
}, "de_CheckDNSAvailabilityResultMessage");
var de_CodeBuildNotInServiceRegionException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_CodeBuildNotInServiceRegionException");
var de_ConfigurationOptionDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_N] != null) {
    contents[_N] = (0, import_smithy_client.expectString)(output[_N]);
  }
  if (output[_Na] != null) {
    contents[_Na] = (0, import_smithy_client.expectString)(output[_Na]);
  }
  if (output[_DV] != null) {
    contents[_DV] = (0, import_smithy_client.expectString)(output[_DV]);
  }
  if (output[_CS] != null) {
    contents[_CS] = (0, import_smithy_client.expectString)(output[_CS]);
  }
  if (output[_UD] != null) {
    contents[_UD] = (0, import_smithy_client.parseBoolean)(output[_UD]);
  }
  if (output[_VT] != null) {
    contents[_VT] = (0, import_smithy_client.expectString)(output[_VT]);
  }
  if (output.ValueOptions === "") {
    contents[_VO] = [];
  } else if (output[_VO] != null && output[_VO][_m] != null) {
    contents[_VO] = de_ConfigurationOptionPossibleValues((0, import_smithy_client.getArrayIfSingleItem)(output[_VO][_m]), context);
  }
  if (output[_MV] != null) {
    contents[_MV] = (0, import_smithy_client.strictParseInt32)(output[_MV]);
  }
  if (output[_MVa] != null) {
    contents[_MVa] = (0, import_smithy_client.strictParseInt32)(output[_MVa]);
  }
  if (output[_ML] != null) {
    contents[_ML] = (0, import_smithy_client.strictParseInt32)(output[_ML]);
  }
  if (output[_R] != null) {
    contents[_R] = de_OptionRestrictionRegex(output[_R], context);
  }
  return contents;
}, "de_ConfigurationOptionDescription");
var de_ConfigurationOptionDescriptionsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ConfigurationOptionDescription(entry, context);
  });
}, "de_ConfigurationOptionDescriptionsList");
var de_ConfigurationOptionPossibleValues = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_ConfigurationOptionPossibleValues");
var de_ConfigurationOptionsDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SSN] != null) {
    contents[_SSN] = (0, import_smithy_client.expectString)(output[_SSN]);
  }
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);
  }
  if (output.Options === "") {
    contents[_O] = [];
  } else if (output[_O] != null && output[_O][_m] != null) {
    contents[_O] = de_ConfigurationOptionDescriptionsList((0, import_smithy_client.getArrayIfSingleItem)(output[_O][_m]), context);
  }
  return contents;
}, "de_ConfigurationOptionsDescription");
var de_ConfigurationOptionSetting = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RN] != null) {
    contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);
  }
  if (output[_N] != null) {
    contents[_N] = (0, import_smithy_client.expectString)(output[_N]);
  }
  if (output[_ON] != null) {
    contents[_ON] = (0, import_smithy_client.expectString)(output[_ON]);
  }
  if (output[_Va] != null) {
    contents[_Va] = (0, import_smithy_client.expectString)(output[_Va]);
  }
  return contents;
}, "de_ConfigurationOptionSetting");
var de_ConfigurationOptionSettingsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ConfigurationOptionSetting(entry, context);
  });
}, "de_ConfigurationOptionSettingsList");
var de_ConfigurationSettingsDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SSN] != null) {
    contents[_SSN] = (0, import_smithy_client.expectString)(output[_SSN]);
  }
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);
  }
  if (output[_ANp] != null) {
    contents[_ANp] = (0, import_smithy_client.expectString)(output[_ANp]);
  }
  if (output[_TN] != null) {
    contents[_TN] = (0, import_smithy_client.expectString)(output[_TN]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_EN] != null) {
    contents[_EN] = (0, import_smithy_client.expectString)(output[_EN]);
  }
  if (output[_DS] != null) {
    contents[_DS] = (0, import_smithy_client.expectString)(output[_DS]);
  }
  if (output[_DC] != null) {
    contents[_DC] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DC]));
  }
  if (output[_DU] != null) {
    contents[_DU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DU]));
  }
  if (output.OptionSettings === "") {
    contents[_OS] = [];
  } else if (output[_OS] != null && output[_OS][_m] != null) {
    contents[_OS] = de_ConfigurationOptionSettingsList((0, import_smithy_client.getArrayIfSingleItem)(output[_OS][_m]), context);
  }
  return contents;
}, "de_ConfigurationSettingsDescription");
var de_ConfigurationSettingsDescriptionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ConfigurationSettingsDescription(entry, context);
  });
}, "de_ConfigurationSettingsDescriptionList");
var de_ConfigurationSettingsDescriptions = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.ConfigurationSettings === "") {
    contents[_CSo] = [];
  } else if (output[_CSo] != null && output[_CSo][_m] != null) {
    contents[_CSo] = de_ConfigurationSettingsDescriptionList((0, import_smithy_client.getArrayIfSingleItem)(output[_CSo][_m]), context);
  }
  return contents;
}, "de_ConfigurationSettingsDescriptions");
var de_ConfigurationSettingsValidationMessages = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Messages === "") {
    contents[_M] = [];
  } else if (output[_M] != null && output[_M][_m] != null) {
    contents[_M] = de_ValidationMessagesList((0, import_smithy_client.getArrayIfSingleItem)(output[_M][_m]), context);
  }
  return contents;
}, "de_ConfigurationSettingsValidationMessages");
var de_ConfigurationTemplateNamesList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_ConfigurationTemplateNamesList");
var de_CPUUtilization = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_U] != null) {
    contents[_U] = (0, import_smithy_client.strictParseFloat)(output[_U]);
  }
  if (output[_Ni] != null) {
    contents[_Ni] = (0, import_smithy_client.strictParseFloat)(output[_Ni]);
  }
  if (output[_Sy] != null) {
    contents[_Sy] = (0, import_smithy_client.strictParseFloat)(output[_Sy]);
  }
  if (output[_Id] != null) {
    contents[_Id] = (0, import_smithy_client.strictParseFloat)(output[_Id]);
  }
  if (output[_IOW] != null) {
    contents[_IOW] = (0, import_smithy_client.strictParseFloat)(output[_IOW]);
  }
  if (output[_IRQ] != null) {
    contents[_IRQ] = (0, import_smithy_client.strictParseFloat)(output[_IRQ]);
  }
  if (output[_SIRQ] != null) {
    contents[_SIRQ] = (0, import_smithy_client.strictParseFloat)(output[_SIRQ]);
  }
  if (output[_Pr] != null) {
    contents[_Pr] = (0, import_smithy_client.strictParseFloat)(output[_Pr]);
  }
  return contents;
}, "de_CPUUtilization");
var de_CreatePlatformVersionResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PS] != null) {
    contents[_PS] = de_PlatformSummary(output[_PS], context);
  }
  if (output[_B] != null) {
    contents[_B] = de_Builder(output[_B], context);
  }
  return contents;
}, "de_CreatePlatformVersionResult");
var de_CreateStorageLocationResultMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SBu] != null) {
    contents[_SBu] = (0, import_smithy_client.expectString)(output[_SBu]);
  }
  return contents;
}, "de_CreateStorageLocationResultMessage");
var de_CustomAmi = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_VTi] != null) {
    contents[_VTi] = (0, import_smithy_client.expectString)(output[_VTi]);
  }
  if (output[_II] != null) {
    contents[_II] = (0, import_smithy_client.expectString)(output[_II]);
  }
  return contents;
}, "de_CustomAmi");
var de_CustomAmiList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_CustomAmi(entry, context);
  });
}, "de_CustomAmiList");
var de_DeletePlatformVersionResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PS] != null) {
    contents[_PS] = de_PlatformSummary(output[_PS], context);
  }
  return contents;
}, "de_DeletePlatformVersionResult");
var de_Deployment = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_VLe] != null) {
    contents[_VLe] = (0, import_smithy_client.expectString)(output[_VLe]);
  }
  if (output[_DI] != null) {
    contents[_DI] = (0, import_smithy_client.strictParseLong)(output[_DI]);
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  if (output[_DT] != null) {
    contents[_DT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DT]));
  }
  return contents;
}, "de_Deployment");
var de_DescribeAccountAttributesResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RQ] != null) {
    contents[_RQ] = de_ResourceQuotas(output[_RQ], context);
  }
  return contents;
}, "de_DescribeAccountAttributesResult");
var de_DescribeEnvironmentHealthResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_EN] != null) {
    contents[_EN] = (0, import_smithy_client.expectString)(output[_EN]);
  }
  if (output[_HS] != null) {
    contents[_HS] = (0, import_smithy_client.expectString)(output[_HS]);
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  if (output[_C] != null) {
    contents[_C] = (0, import_smithy_client.expectString)(output[_C]);
  }
  if (output.Causes === "") {
    contents[_Ca] = [];
  } else if (output[_Ca] != null && output[_Ca][_m] != null) {
    contents[_Ca] = de_Causes((0, import_smithy_client.getArrayIfSingleItem)(output[_Ca][_m]), context);
  }
  if (output[_AM] != null) {
    contents[_AM] = de_ApplicationMetrics(output[_AM], context);
  }
  if (output[_IH] != null) {
    contents[_IH] = de_InstanceHealthSummary(output[_IH], context);
  }
  if (output[_RAe] != null) {
    contents[_RAe] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_RAe]));
  }
  return contents;
}, "de_DescribeEnvironmentHealthResult");
var de_DescribeEnvironmentManagedActionHistoryResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.ManagedActionHistoryItems === "") {
    contents[_MAHI] = [];
  } else if (output[_MAHI] != null && output[_MAHI][_m] != null) {
    contents[_MAHI] = de_ManagedActionHistoryItems((0, import_smithy_client.getArrayIfSingleItem)(output[_MAHI][_m]), context);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  return contents;
}, "de_DescribeEnvironmentManagedActionHistoryResult");
var de_DescribeEnvironmentManagedActionsResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.ManagedActions === "") {
    contents[_MA] = [];
  } else if (output[_MA] != null && output[_MA][_m] != null) {
    contents[_MA] = de_ManagedActions((0, import_smithy_client.getArrayIfSingleItem)(output[_MA][_m]), context);
  }
  return contents;
}, "de_DescribeEnvironmentManagedActionsResult");
var de_DescribeInstancesHealthResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.InstanceHealthList === "") {
    contents[_IHL] = [];
  } else if (output[_IHL] != null && output[_IHL][_m] != null) {
    contents[_IHL] = de_InstanceHealthList((0, import_smithy_client.getArrayIfSingleItem)(output[_IHL][_m]), context);
  }
  if (output[_RAe] != null) {
    contents[_RAe] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_RAe]));
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  return contents;
}, "de_DescribeInstancesHealthResult");
var de_DescribePlatformVersionResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PD] != null) {
    contents[_PD] = de_PlatformDescription(output[_PD], context);
  }
  return contents;
}, "de_DescribePlatformVersionResult");
var de_ElasticBeanstalkServiceException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_ElasticBeanstalkServiceException");
var de_EnvironmentDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_EN] != null) {
    contents[_EN] = (0, import_smithy_client.expectString)(output[_EN]);
  }
  if (output[_EI] != null) {
    contents[_EI] = (0, import_smithy_client.expectString)(output[_EI]);
  }
  if (output[_ANp] != null) {
    contents[_ANp] = (0, import_smithy_client.expectString)(output[_ANp]);
  }
  if (output[_VLe] != null) {
    contents[_VLe] = (0, import_smithy_client.expectString)(output[_VLe]);
  }
  if (output[_SSN] != null) {
    contents[_SSN] = (0, import_smithy_client.expectString)(output[_SSN]);
  }
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);
  }
  if (output[_TN] != null) {
    contents[_TN] = (0, import_smithy_client.expectString)(output[_TN]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_EURL] != null) {
    contents[_EURL] = (0, import_smithy_client.expectString)(output[_EURL]);
  }
  if (output[_CNAME] != null) {
    contents[_CNAME] = (0, import_smithy_client.expectString)(output[_CNAME]);
  }
  if (output[_DC] != null) {
    contents[_DC] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DC]));
  }
  if (output[_DU] != null) {
    contents[_DU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DU]));
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  if (output[_AOIP] != null) {
    contents[_AOIP] = (0, import_smithy_client.parseBoolean)(output[_AOIP]);
  }
  if (output[_H] != null) {
    contents[_H] = (0, import_smithy_client.expectString)(output[_H]);
  }
  if (output[_HS] != null) {
    contents[_HS] = (0, import_smithy_client.expectString)(output[_HS]);
  }
  if (output[_Re] != null) {
    contents[_Re] = de_EnvironmentResourcesDescription(output[_Re], context);
  }
  if (output[_Ti] != null) {
    contents[_Ti] = de_EnvironmentTier(output[_Ti], context);
  }
  if (output.EnvironmentLinks === "") {
    contents[_EL] = [];
  } else if (output[_EL] != null && output[_EL][_m] != null) {
    contents[_EL] = de_EnvironmentLinks((0, import_smithy_client.getArrayIfSingleItem)(output[_EL][_m]), context);
  }
  if (output[_EA] != null) {
    contents[_EA] = (0, import_smithy_client.expectString)(output[_EA]);
  }
  if (output[_OR] != null) {
    contents[_OR] = (0, import_smithy_client.expectString)(output[_OR]);
  }
  return contents;
}, "de_EnvironmentDescription");
var de_EnvironmentDescriptionsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EnvironmentDescription(entry, context);
  });
}, "de_EnvironmentDescriptionsList");
var de_EnvironmentDescriptionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Environments === "") {
    contents[_En] = [];
  } else if (output[_En] != null && output[_En][_m] != null) {
    contents[_En] = de_EnvironmentDescriptionsList((0, import_smithy_client.getArrayIfSingleItem)(output[_En][_m]), context);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  return contents;
}, "de_EnvironmentDescriptionsMessage");
var de_EnvironmentInfoDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.expectString)(output[_IT]);
  }
  if (output[_EII] != null) {
    contents[_EII] = (0, import_smithy_client.expectString)(output[_EII]);
  }
  if (output[_STa] != null) {
    contents[_STa] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_STa]));
  }
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  return contents;
}, "de_EnvironmentInfoDescription");
var de_EnvironmentInfoDescriptionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EnvironmentInfoDescription(entry, context);
  });
}, "de_EnvironmentInfoDescriptionList");
var de_EnvironmentLink = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_LN] != null) {
    contents[_LN] = (0, import_smithy_client.expectString)(output[_LN]);
  }
  if (output[_EN] != null) {
    contents[_EN] = (0, import_smithy_client.expectString)(output[_EN]);
  }
  return contents;
}, "de_EnvironmentLink");
var de_EnvironmentLinks = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EnvironmentLink(entry, context);
  });
}, "de_EnvironmentLinks");
var de_EnvironmentResourceDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_EN] != null) {
    contents[_EN] = (0, import_smithy_client.expectString)(output[_EN]);
  }
  if (output.AutoScalingGroups === "") {
    contents[_ASG] = [];
  } else if (output[_ASG] != null && output[_ASG][_m] != null) {
    contents[_ASG] = de_AutoScalingGroupList((0, import_smithy_client.getArrayIfSingleItem)(output[_ASG][_m]), context);
  }
  if (output.Instances === "") {
    contents[_In] = [];
  } else if (output[_In] != null && output[_In][_m] != null) {
    contents[_In] = de_InstanceList((0, import_smithy_client.getArrayIfSingleItem)(output[_In][_m]), context);
  }
  if (output.LaunchConfigurations === "") {
    contents[_LC] = [];
  } else if (output[_LC] != null && output[_LC][_m] != null) {
    contents[_LC] = de_LaunchConfigurationList((0, import_smithy_client.getArrayIfSingleItem)(output[_LC][_m]), context);
  }
  if (output.LaunchTemplates === "") {
    contents[_LT] = [];
  } else if (output[_LT] != null && output[_LT][_m] != null) {
    contents[_LT] = de_LaunchTemplateList((0, import_smithy_client.getArrayIfSingleItem)(output[_LT][_m]), context);
  }
  if (output.LoadBalancers === "") {
    contents[_LB] = [];
  } else if (output[_LB] != null && output[_LB][_m] != null) {
    contents[_LB] = de_LoadBalancerList((0, import_smithy_client.getArrayIfSingleItem)(output[_LB][_m]), context);
  }
  if (output.Triggers === "") {
    contents[_Tr] = [];
  } else if (output[_Tr] != null && output[_Tr][_m] != null) {
    contents[_Tr] = de_TriggerList((0, import_smithy_client.getArrayIfSingleItem)(output[_Tr][_m]), context);
  }
  if (output.Queues === "") {
    contents[_Q] = [];
  } else if (output[_Q] != null && output[_Q][_m] != null) {
    contents[_Q] = de_QueueList((0, import_smithy_client.getArrayIfSingleItem)(output[_Q][_m]), context);
  }
  return contents;
}, "de_EnvironmentResourceDescription");
var de_EnvironmentResourceDescriptionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ER] != null) {
    contents[_ER] = de_EnvironmentResourceDescription(output[_ER], context);
  }
  return contents;
}, "de_EnvironmentResourceDescriptionsMessage");
var de_EnvironmentResourcesDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_LBo] != null) {
    contents[_LBo] = de_LoadBalancerDescription(output[_LBo], context);
  }
  return contents;
}, "de_EnvironmentResourcesDescription");
var de_EnvironmentTier = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Na] != null) {
    contents[_Na] = (0, import_smithy_client.expectString)(output[_Na]);
  }
  if (output[_Ty] != null) {
    contents[_Ty] = (0, import_smithy_client.expectString)(output[_Ty]);
  }
  if (output[_V] != null) {
    contents[_V] = (0, import_smithy_client.expectString)(output[_V]);
  }
  return contents;
}, "de_EnvironmentTier");
var de_EventDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ED] != null) {
    contents[_ED] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_ED]));
  }
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  if (output[_ANp] != null) {
    contents[_ANp] = (0, import_smithy_client.expectString)(output[_ANp]);
  }
  if (output[_VLe] != null) {
    contents[_VLe] = (0, import_smithy_client.expectString)(output[_VLe]);
  }
  if (output[_TN] != null) {
    contents[_TN] = (0, import_smithy_client.expectString)(output[_TN]);
  }
  if (output[_EN] != null) {
    contents[_EN] = (0, import_smithy_client.expectString)(output[_EN]);
  }
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);
  }
  if (output[_RI] != null) {
    contents[_RI] = (0, import_smithy_client.expectString)(output[_RI]);
  }
  if (output[_Se] != null) {
    contents[_Se] = (0, import_smithy_client.expectString)(output[_Se]);
  }
  return contents;
}, "de_EventDescription");
var de_EventDescriptionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EventDescription(entry, context);
  });
}, "de_EventDescriptionList");
var de_EventDescriptionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Events === "") {
    contents[_Ev] = [];
  } else if (output[_Ev] != null && output[_Ev][_m] != null) {
    contents[_Ev] = de_EventDescriptionList((0, import_smithy_client.getArrayIfSingleItem)(output[_Ev][_m]), context);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  return contents;
}, "de_EventDescriptionsMessage");
var de_Instance = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Id_] != null) {
    contents[_Id_] = (0, import_smithy_client.expectString)(output[_Id_]);
  }
  return contents;
}, "de_Instance");
var de_InstanceHealthList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SingleInstanceHealth(entry, context);
  });
}, "de_InstanceHealthList");
var de_InstanceHealthSummary = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ND] != null) {
    contents[_ND] = (0, import_smithy_client.strictParseInt32)(output[_ND]);
  }
  if (output[_Un] != null) {
    contents[_Un] = (0, import_smithy_client.strictParseInt32)(output[_Un]);
  }
  if (output[_Pe] != null) {
    contents[_Pe] = (0, import_smithy_client.strictParseInt32)(output[_Pe]);
  }
  if (output[_Ok] != null) {
    contents[_Ok] = (0, import_smithy_client.strictParseInt32)(output[_Ok]);
  }
  if (output[_Inf] != null) {
    contents[_Inf] = (0, import_smithy_client.strictParseInt32)(output[_Inf]);
  }
  if (output[_W] != null) {
    contents[_W] = (0, import_smithy_client.strictParseInt32)(output[_W]);
  }
  if (output[_De] != null) {
    contents[_De] = (0, import_smithy_client.strictParseInt32)(output[_De]);
  }
  if (output[_Sev] != null) {
    contents[_Sev] = (0, import_smithy_client.strictParseInt32)(output[_Sev]);
  }
  return contents;
}, "de_InstanceHealthSummary");
var de_InstanceList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Instance(entry, context);
  });
}, "de_InstanceList");
var de_InsufficientPrivilegesException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_InsufficientPrivilegesException");
var de_InvalidRequestException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_InvalidRequestException");
var de_Latency = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_P_] != null) {
    contents[_P_] = (0, import_smithy_client.strictParseFloat)(output[_P_]);
  }
  if (output[_P__] != null) {
    contents[_P__] = (0, import_smithy_client.strictParseFloat)(output[_P__]);
  }
  if (output[_P___] != null) {
    contents[_P___] = (0, import_smithy_client.strictParseFloat)(output[_P___]);
  }
  if (output[_P____] != null) {
    contents[_P____] = (0, import_smithy_client.strictParseFloat)(output[_P____]);
  }
  if (output[_P_____] != null) {
    contents[_P_____] = (0, import_smithy_client.strictParseFloat)(output[_P_____]);
  }
  if (output[_P______] != null) {
    contents[_P______] = (0, import_smithy_client.strictParseFloat)(output[_P______]);
  }
  if (output[_P_______] != null) {
    contents[_P_______] = (0, import_smithy_client.strictParseFloat)(output[_P_______]);
  }
  if (output[_P________] != null) {
    contents[_P________] = (0, import_smithy_client.strictParseFloat)(output[_P________]);
  }
  return contents;
}, "de_Latency");
var de_LaunchConfiguration = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Na] != null) {
    contents[_Na] = (0, import_smithy_client.expectString)(output[_Na]);
  }
  return contents;
}, "de_LaunchConfiguration");
var de_LaunchConfigurationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_LaunchConfiguration(entry, context);
  });
}, "de_LaunchConfigurationList");
var de_LaunchTemplate = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Id_] != null) {
    contents[_Id_] = (0, import_smithy_client.expectString)(output[_Id_]);
  }
  return contents;
}, "de_LaunchTemplate");
var de_LaunchTemplateList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_LaunchTemplate(entry, context);
  });
}, "de_LaunchTemplateList");
var de_ListAvailableSolutionStacksResultMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.SolutionStacks === "") {
    contents[_SS] = [];
  } else if (output[_SS] != null && output[_SS][_m] != null) {
    contents[_SS] = de_AvailableSolutionStackNamesList((0, import_smithy_client.getArrayIfSingleItem)(output[_SS][_m]), context);
  }
  if (output.SolutionStackDetails === "") {
    contents[_SSD] = [];
  } else if (output[_SSD] != null && output[_SSD][_m] != null) {
    contents[_SSD] = de_AvailableSolutionStackDetailsList((0, import_smithy_client.getArrayIfSingleItem)(output[_SSD][_m]), context);
  }
  return contents;
}, "de_ListAvailableSolutionStacksResultMessage");
var de_Listener = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Pro] != null) {
    contents[_Pro] = (0, import_smithy_client.expectString)(output[_Pro]);
  }
  if (output[_Po] != null) {
    contents[_Po] = (0, import_smithy_client.strictParseInt32)(output[_Po]);
  }
  return contents;
}, "de_Listener");
var de_ListPlatformBranchesResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.PlatformBranchSummaryList === "") {
    contents[_PBSL] = [];
  } else if (output[_PBSL] != null && output[_PBSL][_m] != null) {
    contents[_PBSL] = de_PlatformBranchSummaryList((0, import_smithy_client.getArrayIfSingleItem)(output[_PBSL][_m]), context);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  return contents;
}, "de_ListPlatformBranchesResult");
var de_ListPlatformVersionsResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.PlatformSummaryList === "") {
    contents[_PSL] = [];
  } else if (output[_PSL] != null && output[_PSL][_m] != null) {
    contents[_PSL] = de_PlatformSummaryList((0, import_smithy_client.getArrayIfSingleItem)(output[_PSL][_m]), context);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  return contents;
}, "de_ListPlatformVersionsResult");
var de_LoadAverage = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.strictParseFloat)(entry);
  });
}, "de_LoadAverage");
var de_LoadBalancer = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Na] != null) {
    contents[_Na] = (0, import_smithy_client.expectString)(output[_Na]);
  }
  return contents;
}, "de_LoadBalancer");
var de_LoadBalancerDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_LBN] != null) {
    contents[_LBN] = (0, import_smithy_client.expectString)(output[_LBN]);
  }
  if (output[_Do] != null) {
    contents[_Do] = (0, import_smithy_client.expectString)(output[_Do]);
  }
  if (output.Listeners === "") {
    contents[_Li] = [];
  } else if (output[_Li] != null && output[_Li][_m] != null) {
    contents[_Li] = de_LoadBalancerListenersDescription((0, import_smithy_client.getArrayIfSingleItem)(output[_Li][_m]), context);
  }
  return contents;
}, "de_LoadBalancerDescription");
var de_LoadBalancerList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_LoadBalancer(entry, context);
  });
}, "de_LoadBalancerList");
var de_LoadBalancerListenersDescription = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Listener(entry, context);
  });
}, "de_LoadBalancerListenersDescription");
var de_ManagedAction = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AI] != null) {
    contents[_AI] = (0, import_smithy_client.expectString)(output[_AI]);
  }
  if (output[_AD] != null) {
    contents[_AD] = (0, import_smithy_client.expectString)(output[_AD]);
  }
  if (output[_AT] != null) {
    contents[_AT] = (0, import_smithy_client.expectString)(output[_AT]);
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  if (output[_WST] != null) {
    contents[_WST] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_WST]));
  }
  return contents;
}, "de_ManagedAction");
var de_ManagedActionHistoryItem = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AI] != null) {
    contents[_AI] = (0, import_smithy_client.expectString)(output[_AI]);
  }
  if (output[_AT] != null) {
    contents[_AT] = (0, import_smithy_client.expectString)(output[_AT]);
  }
  if (output[_AD] != null) {
    contents[_AD] = (0, import_smithy_client.expectString)(output[_AD]);
  }
  if (output[_FTa] != null) {
    contents[_FTa] = (0, import_smithy_client.expectString)(output[_FTa]);
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  if (output[_FD] != null) {
    contents[_FD] = (0, import_smithy_client.expectString)(output[_FD]);
  }
  if (output[_ETx] != null) {
    contents[_ETx] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_ETx]));
  }
  if (output[_FTi] != null) {
    contents[_FTi] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_FTi]));
  }
  return contents;
}, "de_ManagedActionHistoryItem");
var de_ManagedActionHistoryItems = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ManagedActionHistoryItem(entry, context);
  });
}, "de_ManagedActionHistoryItems");
var de_ManagedActionInvalidStateException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_ManagedActionInvalidStateException");
var de_ManagedActions = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ManagedAction(entry, context);
  });
}, "de_ManagedActions");
var de_MaxAgeRule = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_E] != null) {
    contents[_E] = (0, import_smithy_client.parseBoolean)(output[_E]);
  }
  if (output[_MAID] != null) {
    contents[_MAID] = (0, import_smithy_client.strictParseInt32)(output[_MAID]);
  }
  if (output[_DSFS] != null) {
    contents[_DSFS] = (0, import_smithy_client.parseBoolean)(output[_DSFS]);
  }
  return contents;
}, "de_MaxAgeRule");
var de_MaxCountRule = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_E] != null) {
    contents[_E] = (0, import_smithy_client.parseBoolean)(output[_E]);
  }
  if (output[_MC] != null) {
    contents[_MC] = (0, import_smithy_client.strictParseInt32)(output[_MC]);
  }
  if (output[_DSFS] != null) {
    contents[_DSFS] = (0, import_smithy_client.parseBoolean)(output[_DSFS]);
  }
  return contents;
}, "de_MaxCountRule");
var de_OperationInProgressException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_OperationInProgressException");
var de_OptionRestrictionRegex = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Pa] != null) {
    contents[_Pa] = (0, import_smithy_client.expectString)(output[_Pa]);
  }
  if (output[_La] != null) {
    contents[_La] = (0, import_smithy_client.expectString)(output[_La]);
  }
  return contents;
}, "de_OptionRestrictionRegex");
var de_PlatformBranchSummary = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_BN] != null) {
    contents[_BN] = (0, import_smithy_client.expectString)(output[_BN]);
  }
  if (output[_LS] != null) {
    contents[_LS] = (0, import_smithy_client.expectString)(output[_LS]);
  }
  if (output[_BO] != null) {
    contents[_BO] = (0, import_smithy_client.strictParseInt32)(output[_BO]);
  }
  if (output.SupportedTierList === "") {
    contents[_STL] = [];
  } else if (output[_STL] != null && output[_STL][_m] != null) {
    contents[_STL] = de_SupportedTierList((0, import_smithy_client.getArrayIfSingleItem)(output[_STL][_m]), context);
  }
  return contents;
}, "de_PlatformBranchSummary");
var de_PlatformBranchSummaryList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PlatformBranchSummary(entry, context);
  });
}, "de_PlatformBranchSummaryList");
var de_PlatformDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);
  }
  if (output[_PO] != null) {
    contents[_PO] = (0, import_smithy_client.expectString)(output[_PO]);
  }
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_PV] != null) {
    contents[_PV] = (0, import_smithy_client.expectString)(output[_PV]);
  }
  if (output[_SSN] != null) {
    contents[_SSN] = (0, import_smithy_client.expectString)(output[_SSN]);
  }
  if (output[_PSl] != null) {
    contents[_PSl] = (0, import_smithy_client.expectString)(output[_PSl]);
  }
  if (output[_DC] != null) {
    contents[_DC] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DC]));
  }
  if (output[_DU] != null) {
    contents[_DU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DU]));
  }
  if (output[_PC] != null) {
    contents[_PC] = (0, import_smithy_client.expectString)(output[_PC]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_Ma] != null) {
    contents[_Ma] = (0, import_smithy_client.expectString)(output[_Ma]);
  }
  if (output[_OSN] != null) {
    contents[_OSN] = (0, import_smithy_client.expectString)(output[_OSN]);
  }
  if (output[_OSV] != null) {
    contents[_OSV] = (0, import_smithy_client.expectString)(output[_OSV]);
  }
  if (output.ProgrammingLanguages === "") {
    contents[_PL] = [];
  } else if (output[_PL] != null && output[_PL][_m] != null) {
    contents[_PL] = de_PlatformProgrammingLanguages((0, import_smithy_client.getArrayIfSingleItem)(output[_PL][_m]), context);
  }
  if (output.Frameworks === "") {
    contents[_Fr] = [];
  } else if (output[_Fr] != null && output[_Fr][_m] != null) {
    contents[_Fr] = de_PlatformFrameworks((0, import_smithy_client.getArrayIfSingleItem)(output[_Fr][_m]), context);
  }
  if (output.CustomAmiList === "") {
    contents[_CAL] = [];
  } else if (output[_CAL] != null && output[_CAL][_m] != null) {
    contents[_CAL] = de_CustomAmiList((0, import_smithy_client.getArrayIfSingleItem)(output[_CAL][_m]), context);
  }
  if (output.SupportedTierList === "") {
    contents[_STL] = [];
  } else if (output[_STL] != null && output[_STL][_m] != null) {
    contents[_STL] = de_SupportedTierList((0, import_smithy_client.getArrayIfSingleItem)(output[_STL][_m]), context);
  }
  if (output.SupportedAddonList === "") {
    contents[_SAL] = [];
  } else if (output[_SAL] != null && output[_SAL][_m] != null) {
    contents[_SAL] = de_SupportedAddonList((0, import_smithy_client.getArrayIfSingleItem)(output[_SAL][_m]), context);
  }
  if (output[_PLS] != null) {
    contents[_PLS] = (0, import_smithy_client.expectString)(output[_PLS]);
  }
  if (output[_PBN] != null) {
    contents[_PBN] = (0, import_smithy_client.expectString)(output[_PBN]);
  }
  if (output[_PBLS] != null) {
    contents[_PBLS] = (0, import_smithy_client.expectString)(output[_PBLS]);
  }
  return contents;
}, "de_PlatformDescription");
var de_PlatformFramework = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Na] != null) {
    contents[_Na] = (0, import_smithy_client.expectString)(output[_Na]);
  }
  if (output[_V] != null) {
    contents[_V] = (0, import_smithy_client.expectString)(output[_V]);
  }
  return contents;
}, "de_PlatformFramework");
var de_PlatformFrameworks = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PlatformFramework(entry, context);
  });
}, "de_PlatformFrameworks");
var de_PlatformProgrammingLanguage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Na] != null) {
    contents[_Na] = (0, import_smithy_client.expectString)(output[_Na]);
  }
  if (output[_V] != null) {
    contents[_V] = (0, import_smithy_client.expectString)(output[_V]);
  }
  return contents;
}, "de_PlatformProgrammingLanguage");
var de_PlatformProgrammingLanguages = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PlatformProgrammingLanguage(entry, context);
  });
}, "de_PlatformProgrammingLanguages");
var de_PlatformSummary = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);
  }
  if (output[_PO] != null) {
    contents[_PO] = (0, import_smithy_client.expectString)(output[_PO]);
  }
  if (output[_PSl] != null) {
    contents[_PSl] = (0, import_smithy_client.expectString)(output[_PSl]);
  }
  if (output[_PC] != null) {
    contents[_PC] = (0, import_smithy_client.expectString)(output[_PC]);
  }
  if (output[_OSN] != null) {
    contents[_OSN] = (0, import_smithy_client.expectString)(output[_OSN]);
  }
  if (output[_OSV] != null) {
    contents[_OSV] = (0, import_smithy_client.expectString)(output[_OSV]);
  }
  if (output.SupportedTierList === "") {
    contents[_STL] = [];
  } else if (output[_STL] != null && output[_STL][_m] != null) {
    contents[_STL] = de_SupportedTierList((0, import_smithy_client.getArrayIfSingleItem)(output[_STL][_m]), context);
  }
  if (output.SupportedAddonList === "") {
    contents[_SAL] = [];
  } else if (output[_SAL] != null && output[_SAL][_m] != null) {
    contents[_SAL] = de_SupportedAddonList((0, import_smithy_client.getArrayIfSingleItem)(output[_SAL][_m]), context);
  }
  if (output[_PLS] != null) {
    contents[_PLS] = (0, import_smithy_client.expectString)(output[_PLS]);
  }
  if (output[_PV] != null) {
    contents[_PV] = (0, import_smithy_client.expectString)(output[_PV]);
  }
  if (output[_PBN] != null) {
    contents[_PBN] = (0, import_smithy_client.expectString)(output[_PBN]);
  }
  if (output[_PBLS] != null) {
    contents[_PBLS] = (0, import_smithy_client.expectString)(output[_PBLS]);
  }
  return contents;
}, "de_PlatformSummary");
var de_PlatformSummaryList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PlatformSummary(entry, context);
  });
}, "de_PlatformSummaryList");
var de_PlatformVersionStillReferencedException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_PlatformVersionStillReferencedException");
var de_Queue = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Na] != null) {
    contents[_Na] = (0, import_smithy_client.expectString)(output[_Na]);
  }
  if (output[_URL] != null) {
    contents[_URL] = (0, import_smithy_client.expectString)(output[_URL]);
  }
  return contents;
}, "de_Queue");
var de_QueueList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Queue(entry, context);
  });
}, "de_QueueList");
var de_ResourceNotFoundException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_ResourceNotFoundException");
var de_ResourceQuota = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Max] != null) {
    contents[_Max] = (0, import_smithy_client.strictParseInt32)(output[_Max]);
  }
  return contents;
}, "de_ResourceQuota");
var de_ResourceQuotas = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AQ] != null) {
    contents[_AQ] = de_ResourceQuota(output[_AQ], context);
  }
  if (output[_AVQ] != null) {
    contents[_AVQ] = de_ResourceQuota(output[_AVQ], context);
  }
  if (output[_EQ] != null) {
    contents[_EQ] = de_ResourceQuota(output[_EQ], context);
  }
  if (output[_CTQ] != null) {
    contents[_CTQ] = de_ResourceQuota(output[_CTQ], context);
  }
  if (output[_CPQ] != null) {
    contents[_CPQ] = de_ResourceQuota(output[_CPQ], context);
  }
  return contents;
}, "de_ResourceQuotas");
var de_ResourceTagsDescriptionMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RA] != null) {
    contents[_RA] = (0, import_smithy_client.expectString)(output[_RA]);
  }
  if (output.ResourceTags === "") {
    contents[_RT] = [];
  } else if (output[_RT] != null && output[_RT][_m] != null) {
    contents[_RT] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_RT][_m]), context);
  }
  return contents;
}, "de_ResourceTagsDescriptionMessage");
var de_ResourceTypeNotSupportedException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_ResourceTypeNotSupportedException");
var de_RetrieveEnvironmentInfoResultMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.EnvironmentInfo === "") {
    contents[_EInv] = [];
  } else if (output[_EInv] != null && output[_EInv][_m] != null) {
    contents[_EInv] = de_EnvironmentInfoDescriptionList((0, import_smithy_client.getArrayIfSingleItem)(output[_EInv][_m]), context);
  }
  return contents;
}, "de_RetrieveEnvironmentInfoResultMessage");
var de_S3Location = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SBu] != null) {
    contents[_SBu] = (0, import_smithy_client.expectString)(output[_SBu]);
  }
  if (output[_SK] != null) {
    contents[_SK] = (0, import_smithy_client.expectString)(output[_SK]);
  }
  return contents;
}, "de_S3Location");
var de_S3LocationNotInServiceRegionException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_S3LocationNotInServiceRegionException");
var de_S3SubscriptionRequiredException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_S3SubscriptionRequiredException");
var de_SingleInstanceHealth = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_IIn] != null) {
    contents[_IIn] = (0, import_smithy_client.expectString)(output[_IIn]);
  }
  if (output[_HS] != null) {
    contents[_HS] = (0, import_smithy_client.expectString)(output[_HS]);
  }
  if (output[_C] != null) {
    contents[_C] = (0, import_smithy_client.expectString)(output[_C]);
  }
  if (output.Causes === "") {
    contents[_Ca] = [];
  } else if (output[_Ca] != null && output[_Ca][_m] != null) {
    contents[_Ca] = de_Causes((0, import_smithy_client.getArrayIfSingleItem)(output[_Ca][_m]), context);
  }
  if (output[_LA] != null) {
    contents[_LA] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LA]));
  }
  if (output[_AM] != null) {
    contents[_AM] = de_ApplicationMetrics(output[_AM], context);
  }
  if (output[_Sy] != null) {
    contents[_Sy] = de_SystemStatus(output[_Sy], context);
  }
  if (output[_Dep] != null) {
    contents[_Dep] = de_Deployment(output[_Dep], context);
  }
  if (output[_AZ] != null) {
    contents[_AZ] = (0, import_smithy_client.expectString)(output[_AZ]);
  }
  if (output[_ITn] != null) {
    contents[_ITn] = (0, import_smithy_client.expectString)(output[_ITn]);
  }
  return contents;
}, "de_SingleInstanceHealth");
var de_SolutionStackDescription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SSN] != null) {
    contents[_SSN] = (0, import_smithy_client.expectString)(output[_SSN]);
  }
  if (output.PermittedFileTypes === "") {
    contents[_PFT] = [];
  } else if (output[_PFT] != null && output[_PFT][_m] != null) {
    contents[_PFT] = de_SolutionStackFileTypeList((0, import_smithy_client.getArrayIfSingleItem)(output[_PFT][_m]), context);
  }
  return contents;
}, "de_SolutionStackDescription");
var de_SolutionStackFileTypeList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_SolutionStackFileTypeList");
var de_SourceBuildInformation = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_STo] != null) {
    contents[_STo] = (0, import_smithy_client.expectString)(output[_STo]);
  }
  if (output[_SRo] != null) {
    contents[_SRo] = (0, import_smithy_client.expectString)(output[_SRo]);
  }
  if (output[_SL] != null) {
    contents[_SL] = (0, import_smithy_client.expectString)(output[_SL]);
  }
  return contents;
}, "de_SourceBuildInformation");
var de_SourceBundleDeletionException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_SourceBundleDeletionException");
var de_StatusCodes = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.strictParseInt32)(output[_St]);
  }
  if (output[_Sta] != null) {
    contents[_Sta] = (0, import_smithy_client.strictParseInt32)(output[_Sta]);
  }
  if (output[_Stat] != null) {
    contents[_Stat] = (0, import_smithy_client.strictParseInt32)(output[_Stat]);
  }
  if (output[_Statu] != null) {
    contents[_Statu] = (0, import_smithy_client.strictParseInt32)(output[_Statu]);
  }
  return contents;
}, "de_StatusCodes");
var de_SupportedAddonList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_SupportedAddonList");
var de_SupportedTierList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_SupportedTierList");
var de_SystemStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CPUU] != null) {
    contents[_CPUU] = de_CPUUtilization(output[_CPUU], context);
  }
  if (output.LoadAverage === "") {
    contents[_LAo] = [];
  } else if (output[_LAo] != null && output[_LAo][_m] != null) {
    contents[_LAo] = de_LoadAverage((0, import_smithy_client.getArrayIfSingleItem)(output[_LAo][_m]), context);
  }
  return contents;
}, "de_SystemStatus");
var de_Tag = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_K] != null) {
    contents[_K] = (0, import_smithy_client.expectString)(output[_K]);
  }
  if (output[_Va] != null) {
    contents[_Va] = (0, import_smithy_client.expectString)(output[_Va]);
  }
  return contents;
}, "de_Tag");
var de_TagList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Tag(entry, context);
  });
}, "de_TagList");
var de_TooManyApplicationsException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_TooManyApplicationsException");
var de_TooManyApplicationVersionsException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_TooManyApplicationVersionsException");
var de_TooManyBucketsException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_TooManyBucketsException");
var de_TooManyConfigurationTemplatesException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_TooManyConfigurationTemplatesException");
var de_TooManyEnvironmentsException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_TooManyEnvironmentsException");
var de_TooManyPlatformsException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_TooManyPlatformsException");
var de_TooManyTagsException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_me] != null) {
    contents[_me] = (0, import_smithy_client.expectString)(output[_me]);
  }
  return contents;
}, "de_TooManyTagsException");
var de_Trigger = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Na] != null) {
    contents[_Na] = (0, import_smithy_client.expectString)(output[_Na]);
  }
  return contents;
}, "de_Trigger");
var de_TriggerList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Trigger(entry, context);
  });
}, "de_TriggerList");
var de_ValidationMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  if (output[_Se] != null) {
    contents[_Se] = (0, import_smithy_client.expectString)(output[_Se]);
  }
  if (output[_N] != null) {
    contents[_N] = (0, import_smithy_client.expectString)(output[_N]);
  }
  if (output[_ON] != null) {
    contents[_ON] = (0, import_smithy_client.expectString)(output[_ON]);
  }
  return contents;
}, "de_ValidationMessage");
var de_ValidationMessagesList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ValidationMessage(entry, context);
  });
}, "de_ValidationMessagesList");
var de_VersionLabelsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_VersionLabelsList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ElasticBeanstalkServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
var SHARED_HEADERS = {
  "content-type": "application/x-www-form-urlencoded"
};
var _ = "2010-12-01";
var _A = "Action";
var _AA = "ApplicationArn";
var _ACA = "AutoCreateApplication";
var _AD = "ActionDescription";
var _AEMA = "ApplyEnvironmentManagedAction";
var _AEOR = "AssociateEnvironmentOperationsRole";
var _AEU = "AbortEnvironmentUpdate";
var _AI = "ActionId";
var _AM = "ApplicationMetrics";
var _AN = "ArtifactName";
var _ANp = "ApplicationName";
var _ANpp = "ApplicationNames";
var _ANt = "AttributeNames";
var _AOIP = "AbortableOperationInProgress";
var _AQ = "ApplicationQuota";
var _ARN = "ARN";
var _ASG = "AutoScalingGroups";
var _AT = "ActionType";
var _AV = "ApplicationVersion";
var _AVA = "ApplicationVersionArn";
var _AVQ = "ApplicationVersionQuota";
var _AVp = "ApplicationVersions";
var _AZ = "AvailabilityZone";
var _Ap = "Application";
var _App = "Applications";
var _At = "Attribute";
var _Av = "Available";
var _B = "Builder";
var _BA = "BuildArn";
var _BC = "BuildConfiguration";
var _BN = "BranchName";
var _BO = "BranchOrder";
var _C = "Color";
var _CA = "CreateApplication";
var _CAL = "CustomAmiList";
var _CAV = "CreateApplicationVersion";
var _CBSR = "CodeBuildServiceRole";
var _CCT = "CreateConfigurationTemplate";
var _CDNSA = "CheckDNSAvailability";
var _CE = "ComposeEnvironments";
var _CEr = "CreateEnvironment";
var _CNAME = "CNAME";
var _CNAMEP = "CNAMEPrefix";
var _CPQ = "CustomPlatformQuota";
var _CPUU = "CPUUtilization";
var _CPV = "CreatePlatformVersion";
var _CS = "ChangeSeverity";
var _CSL = "CreateStorageLocation";
var _CSo = "ConfigurationSettings";
var _CT = "ComputeType";
var _CTQ = "ConfigurationTemplateQuota";
var _CTo = "ConfigurationTemplates";
var _Ca = "Causes";
var _D = "Description";
var _DA = "DeleteApplication";
var _DAA = "DescribeAccountAttributes";
var _DAV = "DeleteApplicationVersion";
var _DAVe = "DescribeApplicationVersions";
var _DAe = "DescribeApplications";
var _DC = "DateCreated";
var _DCO = "DescribeConfigurationOptions";
var _DCS = "DescribeConfigurationSettings";
var _DCT = "DeleteConfigurationTemplate";
var _DE = "DescribeEnvironments";
var _DEC = "DeleteEnvironmentConfiguration";
var _DEH = "DescribeEnvironmentHealth";
var _DEI = "DestinationEnvironmentId";
var _DEMA = "DescribeEnvironmentManagedActions";
var _DEMAH = "DescribeEnvironmentManagedActionHistory";
var _DEN = "DestinationEnvironmentName";
var _DEOR = "DisassociateEnvironmentOperationsRole";
var _DER = "DescribeEnvironmentResources";
var _DEe = "DescribeEvents";
var _DI = "DeploymentId";
var _DIH = "DescribeInstancesHealth";
var _DPV = "DeletePlatformVersion";
var _DPVe = "DescribePlatformVersion";
var _DS = "DeploymentStatus";
var _DSB = "DeleteSourceBundle";
var _DSFS = "DeleteSourceFromS3";
var _DT = "DeploymentTime";
var _DU = "DateUpdated";
var _DV = "DefaultValue";
var _De = "Degraded";
var _Dep = "Deployment";
var _Do = "Domain";
var _Du = "Duration";
var _E = "Enabled";
var _EA = "EnvironmentArn";
var _ED = "EventDate";
var _EI = "EnvironmentId";
var _EII = "Ec2InstanceId";
var _EIn = "EnvironmentIds";
var _EInv = "EnvironmentInfo";
var _EL = "EnvironmentLinks";
var _EN = "EnvironmentName";
var _ENn = "EnvironmentNames";
var _EQ = "EnvironmentQuota";
var _ER = "EnvironmentResources";
var _ET = "EndTime";
var _ETx = "ExecutedTime";
var _EURL = "EndpointURL";
var _En = "Environments";
var _Ev = "Events";
var _F = "Filters";
var _FD = "FailureDescription";
var _FQCNAME = "FullyQualifiedCNAME";
var _FT = "ForceTerminate";
var _FTa = "FailureType";
var _FTi = "FinishedTime";
var _Fr = "Frameworks";
var _GN = "GroupName";
var _H = "Health";
var _HS = "HealthStatus";
var _I = "Image";
var _ID = "IncludeDeleted";
var _IDBT = "IncludedDeletedBackTo";
var _IH = "InstancesHealth";
var _IHL = "InstanceHealthList";
var _II = "ImageId";
var _IIn = "InstanceId";
var _IOW = "IOWait";
var _IRQ = "IRQ";
var _IT = "InfoType";
var _ITn = "InstanceType";
var _Id = "Idle";
var _Id_ = "Id";
var _In = "Instances";
var _Inf = "Info";
var _K = "Key";
var _L = "Latency";
var _LA = "LaunchedAt";
var _LASS = "ListAvailableSolutionStacks";
var _LAo = "LoadAverage";
var _LB = "LoadBalancers";
var _LBN = "LoadBalancerName";
var _LBo = "LoadBalancer";
var _LC = "LaunchConfigurations";
var _LN = "LinkName";
var _LPB = "ListPlatformBranches";
var _LPV = "ListPlatformVersions";
var _LS = "LifecycleState";
var _LT = "LaunchTemplates";
var _LTFR = "ListTagsForResource";
var _La = "Label";
var _Li = "Listeners";
var _M = "Messages";
var _MA = "ManagedActions";
var _MAHI = "ManagedActionHistoryItems";
var _MAID = "MaxAgeInDays";
var _MAR = "MaxAgeRule";
var _MC = "MaxCount";
var _MCR = "MaxCountRule";
var _MI = "MaxItems";
var _ML = "MaxLength";
var _MR = "MaxRecords";
var _MV = "MinValue";
var _MVa = "MaxValue";
var _Ma = "Maintainer";
var _Max = "Maximum";
var _Me = "Message";
var _N = "Namespace";
var _ND = "NoData";
var _NT = "NextToken";
var _Na = "Name";
var _Ni = "Nice";
var _O = "Options";
var _ON = "OptionName";
var _OR = "OperationsRole";
var _OS = "OptionSettings";
var _OSN = "OperatingSystemName";
var _OSV = "OperatingSystemVersion";
var _OTR = "OptionsToRemove";
var _Ok = "Ok";
var _Op = "Operator";
var _P = "Process";
var _PA = "PlatformArn";
var _PBLS = "PlatformBranchLifecycleState";
var _PBN = "PlatformBranchName";
var _PBSL = "PlatformBranchSummaryList";
var _PC = "PlatformCategory";
var _PD = "PlatformDescription";
var _PDB = "PlatformDefinitionBundle";
var _PFT = "PermittedFileTypes";
var _PL = "ProgrammingLanguages";
var _PLS = "PlatformLifecycleState";
var _PN = "PlatformName";
var _PO = "PlatformOwner";
var _PS = "PlatformSummary";
var _PSL = "PlatformSummaryList";
var _PSl = "PlatformStatus";
var _PV = "PlatformVersion";
var _P_ = "P999";
var _P__ = "P99";
var _P___ = "P95";
var _P____ = "P90";
var _P_____ = "P85";
var _P______ = "P75";
var _P_______ = "P50";
var _P________ = "P10";
var _Pa = "Pattern";
var _Pe = "Pending";
var _Po = "Port";
var _Pr = "Privileged";
var _Pro = "Protocol";
var _Q = "Queues";
var _R = "Regex";
var _RA = "ResourceArn";
var _RAS = "RestartAppServer";
var _RAe = "RefreshedAt";
var _RC = "RequestCount";
var _RE = "RebuildEnvironment";
var _REI = "RequestEnvironmentInfo";
var _REIe = "RetrieveEnvironmentInfo";
var _RI = "RequestId";
var _RLC = "ResourceLifecycleConfig";
var _RN = "ResourceName";
var _RQ = "ResourceQuotas";
var _RT = "ResourceTags";
var _Re = "Resources";
var _S = "Status";
var _SAL = "SupportedAddonList";
var _SB = "SourceBundle";
var _SBI = "SourceBuildInformation";
var _SBu = "S3Bucket";
var _SC = "SourceConfiguration";
var _SCt = "StatusCodes";
var _SECNAME = "SwapEnvironmentCNAMEs";
var _SEI = "SourceEnvironmentId";
var _SEN = "SourceEnvironmentName";
var _SIRQ = "SoftIRQ";
var _SK = "S3Key";
var _SL = "SourceLocation";
var _SR = "ServiceRole";
var _SRo = "SourceRepository";
var _SS = "SolutionStacks";
var _SSD = "SolutionStackDetails";
var _SSN = "SolutionStackName";
var _ST = "StartTime";
var _STL = "SupportedTierList";
var _STa = "SampleTimestamp";
var _STo = "SourceType";
var _Se = "Severity";
var _Sev = "Severe";
var _St = "Status2xx";
var _Sta = "Status3xx";
var _Stat = "Status4xx";
var _Statu = "Status5xx";
var _Sy = "System";
var _T = "Tags";
var _TE = "TerminateEnvironment";
var _TEBF = "TerminateEnvByForce";
var _TIM = "TimeoutInMinutes";
var _TN = "TemplateName";
var _TR = "TerminateResources";
var _TTA = "TagsToAdd";
var _TTR = "TagsToRemove";
var _Ti = "Tier";
var _Tr = "Triggers";
var _Ty = "Type";
var _U = "User";
var _UA = "UpdateApplication";
var _UARL = "UpdateApplicationResourceLifecycle";
var _UAV = "UpdateApplicationVersion";
var _UCT = "UpdateConfigurationTemplate";
var _UD = "UserDefined";
var _UE = "UpdateEnvironment";
var _URL = "URL";
var _UTFR = "UpdateTagsForResource";
var _Un = "Unknown";
var _V = "Version";
var _VCS = "ValidateConfigurationSettings";
var _VL = "VersionLabels";
var _VLC = "VersionLifecycleConfig";
var _VLe = "VersionLabel";
var _VO = "ValueOptions";
var _VT = "ValueType";
var _VTi = "VirtualizationType";
var _Va = "Value";
var _Val = "Values";
var _Ve = "Versions";
var _W = "Warning";
var _WST = "WindowStartTime";
var _m = "member";
var _me = "message";
var buildFormUrlencodedString = /* @__PURE__ */ __name((formEntries) => Object.entries(formEntries).map(([key, value]) => (0, import_smithy_client.extendedEncodeURIComponent)(key) + "=" + (0, import_smithy_client.extendedEncodeURIComponent)(value)).join("&"), "buildFormUrlencodedString");
var loadQueryErrorCode = /* @__PURE__ */ __name((output, data) => {
  var _a;
  if (((_a = data.Error) == null ? void 0 : _a.Code) !== void 0) {
    return data.Error.Code;
  }
  if (output.statusCode == 404) {
    return "NotFound";
  }
}, "loadQueryErrorCode");

// src/commands/AbortEnvironmentUpdateCommand.ts
var _AbortEnvironmentUpdateCommand = class _AbortEnvironmentUpdateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "AbortEnvironmentUpdate", {}).n("ElasticBeanstalkClient", "AbortEnvironmentUpdateCommand").f(void 0, void 0).ser(se_AbortEnvironmentUpdateCommand).de(de_AbortEnvironmentUpdateCommand).build() {
};
__name(_AbortEnvironmentUpdateCommand, "AbortEnvironmentUpdateCommand");
var AbortEnvironmentUpdateCommand = _AbortEnvironmentUpdateCommand;

// src/commands/ApplyEnvironmentManagedActionCommand.ts




var _ApplyEnvironmentManagedActionCommand = class _ApplyEnvironmentManagedActionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "ApplyEnvironmentManagedAction", {}).n("ElasticBeanstalkClient", "ApplyEnvironmentManagedActionCommand").f(void 0, void 0).ser(se_ApplyEnvironmentManagedActionCommand).de(de_ApplyEnvironmentManagedActionCommand).build() {
};
__name(_ApplyEnvironmentManagedActionCommand, "ApplyEnvironmentManagedActionCommand");
var ApplyEnvironmentManagedActionCommand = _ApplyEnvironmentManagedActionCommand;

// src/commands/AssociateEnvironmentOperationsRoleCommand.ts




var _AssociateEnvironmentOperationsRoleCommand = class _AssociateEnvironmentOperationsRoleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "AssociateEnvironmentOperationsRole", {}).n("ElasticBeanstalkClient", "AssociateEnvironmentOperationsRoleCommand").f(void 0, void 0).ser(se_AssociateEnvironmentOperationsRoleCommand).de(de_AssociateEnvironmentOperationsRoleCommand).build() {
};
__name(_AssociateEnvironmentOperationsRoleCommand, "AssociateEnvironmentOperationsRoleCommand");
var AssociateEnvironmentOperationsRoleCommand = _AssociateEnvironmentOperationsRoleCommand;

// src/commands/CheckDNSAvailabilityCommand.ts




var _CheckDNSAvailabilityCommand = class _CheckDNSAvailabilityCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "CheckDNSAvailability", {}).n("ElasticBeanstalkClient", "CheckDNSAvailabilityCommand").f(void 0, void 0).ser(se_CheckDNSAvailabilityCommand).de(de_CheckDNSAvailabilityCommand).build() {
};
__name(_CheckDNSAvailabilityCommand, "CheckDNSAvailabilityCommand");
var CheckDNSAvailabilityCommand = _CheckDNSAvailabilityCommand;

// src/commands/ComposeEnvironmentsCommand.ts




var _ComposeEnvironmentsCommand = class _ComposeEnvironmentsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "ComposeEnvironments", {}).n("ElasticBeanstalkClient", "ComposeEnvironmentsCommand").f(void 0, void 0).ser(se_ComposeEnvironmentsCommand).de(de_ComposeEnvironmentsCommand).build() {
};
__name(_ComposeEnvironmentsCommand, "ComposeEnvironmentsCommand");
var ComposeEnvironmentsCommand = _ComposeEnvironmentsCommand;

// src/commands/CreateApplicationCommand.ts




var _CreateApplicationCommand = class _CreateApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "CreateApplication", {}).n("ElasticBeanstalkClient", "CreateApplicationCommand").f(void 0, void 0).ser(se_CreateApplicationCommand).de(de_CreateApplicationCommand).build() {
};
__name(_CreateApplicationCommand, "CreateApplicationCommand");
var CreateApplicationCommand = _CreateApplicationCommand;

// src/commands/CreateApplicationVersionCommand.ts




var _CreateApplicationVersionCommand = class _CreateApplicationVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "CreateApplicationVersion", {}).n("ElasticBeanstalkClient", "CreateApplicationVersionCommand").f(void 0, void 0).ser(se_CreateApplicationVersionCommand).de(de_CreateApplicationVersionCommand).build() {
};
__name(_CreateApplicationVersionCommand, "CreateApplicationVersionCommand");
var CreateApplicationVersionCommand = _CreateApplicationVersionCommand;

// src/commands/CreateConfigurationTemplateCommand.ts




var _CreateConfigurationTemplateCommand = class _CreateConfigurationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "CreateConfigurationTemplate", {}).n("ElasticBeanstalkClient", "CreateConfigurationTemplateCommand").f(void 0, void 0).ser(se_CreateConfigurationTemplateCommand).de(de_CreateConfigurationTemplateCommand).build() {
};
__name(_CreateConfigurationTemplateCommand, "CreateConfigurationTemplateCommand");
var CreateConfigurationTemplateCommand = _CreateConfigurationTemplateCommand;

// src/commands/CreateEnvironmentCommand.ts




var _CreateEnvironmentCommand = class _CreateEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "CreateEnvironment", {}).n("ElasticBeanstalkClient", "CreateEnvironmentCommand").f(void 0, void 0).ser(se_CreateEnvironmentCommand).de(de_CreateEnvironmentCommand).build() {
};
__name(_CreateEnvironmentCommand, "CreateEnvironmentCommand");
var CreateEnvironmentCommand = _CreateEnvironmentCommand;

// src/commands/CreatePlatformVersionCommand.ts




var _CreatePlatformVersionCommand = class _CreatePlatformVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "CreatePlatformVersion", {}).n("ElasticBeanstalkClient", "CreatePlatformVersionCommand").f(void 0, void 0).ser(se_CreatePlatformVersionCommand).de(de_CreatePlatformVersionCommand).build() {
};
__name(_CreatePlatformVersionCommand, "CreatePlatformVersionCommand");
var CreatePlatformVersionCommand = _CreatePlatformVersionCommand;

// src/commands/CreateStorageLocationCommand.ts




var _CreateStorageLocationCommand = class _CreateStorageLocationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "CreateStorageLocation", {}).n("ElasticBeanstalkClient", "CreateStorageLocationCommand").f(void 0, void 0).ser(se_CreateStorageLocationCommand).de(de_CreateStorageLocationCommand).build() {
};
__name(_CreateStorageLocationCommand, "CreateStorageLocationCommand");
var CreateStorageLocationCommand = _CreateStorageLocationCommand;

// src/commands/DeleteApplicationCommand.ts




var _DeleteApplicationCommand = class _DeleteApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DeleteApplication", {}).n("ElasticBeanstalkClient", "DeleteApplicationCommand").f(void 0, void 0).ser(se_DeleteApplicationCommand).de(de_DeleteApplicationCommand).build() {
};
__name(_DeleteApplicationCommand, "DeleteApplicationCommand");
var DeleteApplicationCommand = _DeleteApplicationCommand;

// src/commands/DeleteApplicationVersionCommand.ts




var _DeleteApplicationVersionCommand = class _DeleteApplicationVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DeleteApplicationVersion", {}).n("ElasticBeanstalkClient", "DeleteApplicationVersionCommand").f(void 0, void 0).ser(se_DeleteApplicationVersionCommand).de(de_DeleteApplicationVersionCommand).build() {
};
__name(_DeleteApplicationVersionCommand, "DeleteApplicationVersionCommand");
var DeleteApplicationVersionCommand = _DeleteApplicationVersionCommand;

// src/commands/DeleteConfigurationTemplateCommand.ts




var _DeleteConfigurationTemplateCommand = class _DeleteConfigurationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DeleteConfigurationTemplate", {}).n("ElasticBeanstalkClient", "DeleteConfigurationTemplateCommand").f(void 0, void 0).ser(se_DeleteConfigurationTemplateCommand).de(de_DeleteConfigurationTemplateCommand).build() {
};
__name(_DeleteConfigurationTemplateCommand, "DeleteConfigurationTemplateCommand");
var DeleteConfigurationTemplateCommand = _DeleteConfigurationTemplateCommand;

// src/commands/DeleteEnvironmentConfigurationCommand.ts




var _DeleteEnvironmentConfigurationCommand = class _DeleteEnvironmentConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DeleteEnvironmentConfiguration", {}).n("ElasticBeanstalkClient", "DeleteEnvironmentConfigurationCommand").f(void 0, void 0).ser(se_DeleteEnvironmentConfigurationCommand).de(de_DeleteEnvironmentConfigurationCommand).build() {
};
__name(_DeleteEnvironmentConfigurationCommand, "DeleteEnvironmentConfigurationCommand");
var DeleteEnvironmentConfigurationCommand = _DeleteEnvironmentConfigurationCommand;

// src/commands/DeletePlatformVersionCommand.ts




var _DeletePlatformVersionCommand = class _DeletePlatformVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DeletePlatformVersion", {}).n("ElasticBeanstalkClient", "DeletePlatformVersionCommand").f(void 0, void 0).ser(se_DeletePlatformVersionCommand).de(de_DeletePlatformVersionCommand).build() {
};
__name(_DeletePlatformVersionCommand, "DeletePlatformVersionCommand");
var DeletePlatformVersionCommand = _DeletePlatformVersionCommand;

// src/commands/DescribeAccountAttributesCommand.ts




var _DescribeAccountAttributesCommand = class _DescribeAccountAttributesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeAccountAttributes", {}).n("ElasticBeanstalkClient", "DescribeAccountAttributesCommand").f(void 0, void 0).ser(se_DescribeAccountAttributesCommand).de(de_DescribeAccountAttributesCommand).build() {
};
__name(_DescribeAccountAttributesCommand, "DescribeAccountAttributesCommand");
var DescribeAccountAttributesCommand = _DescribeAccountAttributesCommand;

// src/commands/DescribeApplicationsCommand.ts




var _DescribeApplicationsCommand = class _DescribeApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeApplications", {}).n("ElasticBeanstalkClient", "DescribeApplicationsCommand").f(void 0, void 0).ser(se_DescribeApplicationsCommand).de(de_DescribeApplicationsCommand).build() {
};
__name(_DescribeApplicationsCommand, "DescribeApplicationsCommand");
var DescribeApplicationsCommand = _DescribeApplicationsCommand;

// src/commands/DescribeApplicationVersionsCommand.ts




var _DescribeApplicationVersionsCommand = class _DescribeApplicationVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeApplicationVersions", {}).n("ElasticBeanstalkClient", "DescribeApplicationVersionsCommand").f(void 0, void 0).ser(se_DescribeApplicationVersionsCommand).de(de_DescribeApplicationVersionsCommand).build() {
};
__name(_DescribeApplicationVersionsCommand, "DescribeApplicationVersionsCommand");
var DescribeApplicationVersionsCommand = _DescribeApplicationVersionsCommand;

// src/commands/DescribeConfigurationOptionsCommand.ts




var _DescribeConfigurationOptionsCommand = class _DescribeConfigurationOptionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeConfigurationOptions", {}).n("ElasticBeanstalkClient", "DescribeConfigurationOptionsCommand").f(void 0, void 0).ser(se_DescribeConfigurationOptionsCommand).de(de_DescribeConfigurationOptionsCommand).build() {
};
__name(_DescribeConfigurationOptionsCommand, "DescribeConfigurationOptionsCommand");
var DescribeConfigurationOptionsCommand = _DescribeConfigurationOptionsCommand;

// src/commands/DescribeConfigurationSettingsCommand.ts




var _DescribeConfigurationSettingsCommand = class _DescribeConfigurationSettingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeConfigurationSettings", {}).n("ElasticBeanstalkClient", "DescribeConfigurationSettingsCommand").f(void 0, void 0).ser(se_DescribeConfigurationSettingsCommand).de(de_DescribeConfigurationSettingsCommand).build() {
};
__name(_DescribeConfigurationSettingsCommand, "DescribeConfigurationSettingsCommand");
var DescribeConfigurationSettingsCommand = _DescribeConfigurationSettingsCommand;

// src/commands/DescribeEnvironmentHealthCommand.ts




var _DescribeEnvironmentHealthCommand = class _DescribeEnvironmentHealthCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeEnvironmentHealth", {}).n("ElasticBeanstalkClient", "DescribeEnvironmentHealthCommand").f(void 0, void 0).ser(se_DescribeEnvironmentHealthCommand).de(de_DescribeEnvironmentHealthCommand).build() {
};
__name(_DescribeEnvironmentHealthCommand, "DescribeEnvironmentHealthCommand");
var DescribeEnvironmentHealthCommand = _DescribeEnvironmentHealthCommand;

// src/commands/DescribeEnvironmentManagedActionHistoryCommand.ts




var _DescribeEnvironmentManagedActionHistoryCommand = class _DescribeEnvironmentManagedActionHistoryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeEnvironmentManagedActionHistory", {}).n("ElasticBeanstalkClient", "DescribeEnvironmentManagedActionHistoryCommand").f(void 0, void 0).ser(se_DescribeEnvironmentManagedActionHistoryCommand).de(de_DescribeEnvironmentManagedActionHistoryCommand).build() {
};
__name(_DescribeEnvironmentManagedActionHistoryCommand, "DescribeEnvironmentManagedActionHistoryCommand");
var DescribeEnvironmentManagedActionHistoryCommand = _DescribeEnvironmentManagedActionHistoryCommand;

// src/commands/DescribeEnvironmentManagedActionsCommand.ts




var _DescribeEnvironmentManagedActionsCommand = class _DescribeEnvironmentManagedActionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeEnvironmentManagedActions", {}).n("ElasticBeanstalkClient", "DescribeEnvironmentManagedActionsCommand").f(void 0, void 0).ser(se_DescribeEnvironmentManagedActionsCommand).de(de_DescribeEnvironmentManagedActionsCommand).build() {
};
__name(_DescribeEnvironmentManagedActionsCommand, "DescribeEnvironmentManagedActionsCommand");
var DescribeEnvironmentManagedActionsCommand = _DescribeEnvironmentManagedActionsCommand;

// src/commands/DescribeEnvironmentResourcesCommand.ts




var _DescribeEnvironmentResourcesCommand = class _DescribeEnvironmentResourcesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeEnvironmentResources", {}).n("ElasticBeanstalkClient", "DescribeEnvironmentResourcesCommand").f(void 0, void 0).ser(se_DescribeEnvironmentResourcesCommand).de(de_DescribeEnvironmentResourcesCommand).build() {
};
__name(_DescribeEnvironmentResourcesCommand, "DescribeEnvironmentResourcesCommand");
var DescribeEnvironmentResourcesCommand = _DescribeEnvironmentResourcesCommand;

// src/commands/DescribeEnvironmentsCommand.ts




var _DescribeEnvironmentsCommand = class _DescribeEnvironmentsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeEnvironments", {}).n("ElasticBeanstalkClient", "DescribeEnvironmentsCommand").f(void 0, void 0).ser(se_DescribeEnvironmentsCommand).de(de_DescribeEnvironmentsCommand).build() {
};
__name(_DescribeEnvironmentsCommand, "DescribeEnvironmentsCommand");
var DescribeEnvironmentsCommand = _DescribeEnvironmentsCommand;

// src/commands/DescribeEventsCommand.ts




var _DescribeEventsCommand = class _DescribeEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeEvents", {}).n("ElasticBeanstalkClient", "DescribeEventsCommand").f(void 0, void 0).ser(se_DescribeEventsCommand).de(de_DescribeEventsCommand).build() {
};
__name(_DescribeEventsCommand, "DescribeEventsCommand");
var DescribeEventsCommand = _DescribeEventsCommand;

// src/commands/DescribeInstancesHealthCommand.ts




var _DescribeInstancesHealthCommand = class _DescribeInstancesHealthCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribeInstancesHealth", {}).n("ElasticBeanstalkClient", "DescribeInstancesHealthCommand").f(void 0, void 0).ser(se_DescribeInstancesHealthCommand).de(de_DescribeInstancesHealthCommand).build() {
};
__name(_DescribeInstancesHealthCommand, "DescribeInstancesHealthCommand");
var DescribeInstancesHealthCommand = _DescribeInstancesHealthCommand;

// src/commands/DescribePlatformVersionCommand.ts




var _DescribePlatformVersionCommand = class _DescribePlatformVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DescribePlatformVersion", {}).n("ElasticBeanstalkClient", "DescribePlatformVersionCommand").f(void 0, void 0).ser(se_DescribePlatformVersionCommand).de(de_DescribePlatformVersionCommand).build() {
};
__name(_DescribePlatformVersionCommand, "DescribePlatformVersionCommand");
var DescribePlatformVersionCommand = _DescribePlatformVersionCommand;

// src/commands/DisassociateEnvironmentOperationsRoleCommand.ts




var _DisassociateEnvironmentOperationsRoleCommand = class _DisassociateEnvironmentOperationsRoleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "DisassociateEnvironmentOperationsRole", {}).n("ElasticBeanstalkClient", "DisassociateEnvironmentOperationsRoleCommand").f(void 0, void 0).ser(se_DisassociateEnvironmentOperationsRoleCommand).de(de_DisassociateEnvironmentOperationsRoleCommand).build() {
};
__name(_DisassociateEnvironmentOperationsRoleCommand, "DisassociateEnvironmentOperationsRoleCommand");
var DisassociateEnvironmentOperationsRoleCommand = _DisassociateEnvironmentOperationsRoleCommand;

// src/commands/ListAvailableSolutionStacksCommand.ts




var _ListAvailableSolutionStacksCommand = class _ListAvailableSolutionStacksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "ListAvailableSolutionStacks", {}).n("ElasticBeanstalkClient", "ListAvailableSolutionStacksCommand").f(void 0, void 0).ser(se_ListAvailableSolutionStacksCommand).de(de_ListAvailableSolutionStacksCommand).build() {
};
__name(_ListAvailableSolutionStacksCommand, "ListAvailableSolutionStacksCommand");
var ListAvailableSolutionStacksCommand = _ListAvailableSolutionStacksCommand;

// src/commands/ListPlatformBranchesCommand.ts




var _ListPlatformBranchesCommand = class _ListPlatformBranchesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "ListPlatformBranches", {}).n("ElasticBeanstalkClient", "ListPlatformBranchesCommand").f(void 0, void 0).ser(se_ListPlatformBranchesCommand).de(de_ListPlatformBranchesCommand).build() {
};
__name(_ListPlatformBranchesCommand, "ListPlatformBranchesCommand");
var ListPlatformBranchesCommand = _ListPlatformBranchesCommand;

// src/commands/ListPlatformVersionsCommand.ts




var _ListPlatformVersionsCommand = class _ListPlatformVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "ListPlatformVersions", {}).n("ElasticBeanstalkClient", "ListPlatformVersionsCommand").f(void 0, void 0).ser(se_ListPlatformVersionsCommand).de(de_ListPlatformVersionsCommand).build() {
};
__name(_ListPlatformVersionsCommand, "ListPlatformVersionsCommand");
var ListPlatformVersionsCommand = _ListPlatformVersionsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "ListTagsForResource", {}).n("ElasticBeanstalkClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/RebuildEnvironmentCommand.ts




var _RebuildEnvironmentCommand = class _RebuildEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "RebuildEnvironment", {}).n("ElasticBeanstalkClient", "RebuildEnvironmentCommand").f(void 0, void 0).ser(se_RebuildEnvironmentCommand).de(de_RebuildEnvironmentCommand).build() {
};
__name(_RebuildEnvironmentCommand, "RebuildEnvironmentCommand");
var RebuildEnvironmentCommand = _RebuildEnvironmentCommand;

// src/commands/RequestEnvironmentInfoCommand.ts




var _RequestEnvironmentInfoCommand = class _RequestEnvironmentInfoCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "RequestEnvironmentInfo", {}).n("ElasticBeanstalkClient", "RequestEnvironmentInfoCommand").f(void 0, void 0).ser(se_RequestEnvironmentInfoCommand).de(de_RequestEnvironmentInfoCommand).build() {
};
__name(_RequestEnvironmentInfoCommand, "RequestEnvironmentInfoCommand");
var RequestEnvironmentInfoCommand = _RequestEnvironmentInfoCommand;

// src/commands/RestartAppServerCommand.ts




var _RestartAppServerCommand = class _RestartAppServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "RestartAppServer", {}).n("ElasticBeanstalkClient", "RestartAppServerCommand").f(void 0, void 0).ser(se_RestartAppServerCommand).de(de_RestartAppServerCommand).build() {
};
__name(_RestartAppServerCommand, "RestartAppServerCommand");
var RestartAppServerCommand = _RestartAppServerCommand;

// src/commands/RetrieveEnvironmentInfoCommand.ts




var _RetrieveEnvironmentInfoCommand = class _RetrieveEnvironmentInfoCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "RetrieveEnvironmentInfo", {}).n("ElasticBeanstalkClient", "RetrieveEnvironmentInfoCommand").f(void 0, void 0).ser(se_RetrieveEnvironmentInfoCommand).de(de_RetrieveEnvironmentInfoCommand).build() {
};
__name(_RetrieveEnvironmentInfoCommand, "RetrieveEnvironmentInfoCommand");
var RetrieveEnvironmentInfoCommand = _RetrieveEnvironmentInfoCommand;

// src/commands/SwapEnvironmentCNAMEsCommand.ts




var _SwapEnvironmentCNAMEsCommand = class _SwapEnvironmentCNAMEsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "SwapEnvironmentCNAMEs", {}).n("ElasticBeanstalkClient", "SwapEnvironmentCNAMEsCommand").f(void 0, void 0).ser(se_SwapEnvironmentCNAMEsCommand).de(de_SwapEnvironmentCNAMEsCommand).build() {
};
__name(_SwapEnvironmentCNAMEsCommand, "SwapEnvironmentCNAMEsCommand");
var SwapEnvironmentCNAMEsCommand = _SwapEnvironmentCNAMEsCommand;

// src/commands/TerminateEnvironmentCommand.ts




var _TerminateEnvironmentCommand = class _TerminateEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "TerminateEnvironment", {}).n("ElasticBeanstalkClient", "TerminateEnvironmentCommand").f(void 0, void 0).ser(se_TerminateEnvironmentCommand).de(de_TerminateEnvironmentCommand).build() {
};
__name(_TerminateEnvironmentCommand, "TerminateEnvironmentCommand");
var TerminateEnvironmentCommand = _TerminateEnvironmentCommand;

// src/commands/UpdateApplicationCommand.ts




var _UpdateApplicationCommand = class _UpdateApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "UpdateApplication", {}).n("ElasticBeanstalkClient", "UpdateApplicationCommand").f(void 0, void 0).ser(se_UpdateApplicationCommand).de(de_UpdateApplicationCommand).build() {
};
__name(_UpdateApplicationCommand, "UpdateApplicationCommand");
var UpdateApplicationCommand = _UpdateApplicationCommand;

// src/commands/UpdateApplicationResourceLifecycleCommand.ts




var _UpdateApplicationResourceLifecycleCommand = class _UpdateApplicationResourceLifecycleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "UpdateApplicationResourceLifecycle", {}).n("ElasticBeanstalkClient", "UpdateApplicationResourceLifecycleCommand").f(void 0, void 0).ser(se_UpdateApplicationResourceLifecycleCommand).de(de_UpdateApplicationResourceLifecycleCommand).build() {
};
__name(_UpdateApplicationResourceLifecycleCommand, "UpdateApplicationResourceLifecycleCommand");
var UpdateApplicationResourceLifecycleCommand = _UpdateApplicationResourceLifecycleCommand;

// src/commands/UpdateApplicationVersionCommand.ts




var _UpdateApplicationVersionCommand = class _UpdateApplicationVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "UpdateApplicationVersion", {}).n("ElasticBeanstalkClient", "UpdateApplicationVersionCommand").f(void 0, void 0).ser(se_UpdateApplicationVersionCommand).de(de_UpdateApplicationVersionCommand).build() {
};
__name(_UpdateApplicationVersionCommand, "UpdateApplicationVersionCommand");
var UpdateApplicationVersionCommand = _UpdateApplicationVersionCommand;

// src/commands/UpdateConfigurationTemplateCommand.ts




var _UpdateConfigurationTemplateCommand = class _UpdateConfigurationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "UpdateConfigurationTemplate", {}).n("ElasticBeanstalkClient", "UpdateConfigurationTemplateCommand").f(void 0, void 0).ser(se_UpdateConfigurationTemplateCommand).de(de_UpdateConfigurationTemplateCommand).build() {
};
__name(_UpdateConfigurationTemplateCommand, "UpdateConfigurationTemplateCommand");
var UpdateConfigurationTemplateCommand = _UpdateConfigurationTemplateCommand;

// src/commands/UpdateEnvironmentCommand.ts




var _UpdateEnvironmentCommand = class _UpdateEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "UpdateEnvironment", {}).n("ElasticBeanstalkClient", "UpdateEnvironmentCommand").f(void 0, void 0).ser(se_UpdateEnvironmentCommand).de(de_UpdateEnvironmentCommand).build() {
};
__name(_UpdateEnvironmentCommand, "UpdateEnvironmentCommand");
var UpdateEnvironmentCommand = _UpdateEnvironmentCommand;

// src/commands/UpdateTagsForResourceCommand.ts




var _UpdateTagsForResourceCommand = class _UpdateTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "UpdateTagsForResource", {}).n("ElasticBeanstalkClient", "UpdateTagsForResourceCommand").f(void 0, void 0).ser(se_UpdateTagsForResourceCommand).de(de_UpdateTagsForResourceCommand).build() {
};
__name(_UpdateTagsForResourceCommand, "UpdateTagsForResourceCommand");
var UpdateTagsForResourceCommand = _UpdateTagsForResourceCommand;

// src/commands/ValidateConfigurationSettingsCommand.ts




var _ValidateConfigurationSettingsCommand = class _ValidateConfigurationSettingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSElasticBeanstalkService", "ValidateConfigurationSettings", {}).n("ElasticBeanstalkClient", "ValidateConfigurationSettingsCommand").f(void 0, void 0).ser(se_ValidateConfigurationSettingsCommand).de(de_ValidateConfigurationSettingsCommand).build() {
};
__name(_ValidateConfigurationSettingsCommand, "ValidateConfigurationSettingsCommand");
var ValidateConfigurationSettingsCommand = _ValidateConfigurationSettingsCommand;

// src/ElasticBeanstalk.ts
var commands = {
  AbortEnvironmentUpdateCommand,
  ApplyEnvironmentManagedActionCommand,
  AssociateEnvironmentOperationsRoleCommand,
  CheckDNSAvailabilityCommand,
  ComposeEnvironmentsCommand,
  CreateApplicationCommand,
  CreateApplicationVersionCommand,
  CreateConfigurationTemplateCommand,
  CreateEnvironmentCommand,
  CreatePlatformVersionCommand,
  CreateStorageLocationCommand,
  DeleteApplicationCommand,
  DeleteApplicationVersionCommand,
  DeleteConfigurationTemplateCommand,
  DeleteEnvironmentConfigurationCommand,
  DeletePlatformVersionCommand,
  DescribeAccountAttributesCommand,
  DescribeApplicationsCommand,
  DescribeApplicationVersionsCommand,
  DescribeConfigurationOptionsCommand,
  DescribeConfigurationSettingsCommand,
  DescribeEnvironmentHealthCommand,
  DescribeEnvironmentManagedActionHistoryCommand,
  DescribeEnvironmentManagedActionsCommand,
  DescribeEnvironmentResourcesCommand,
  DescribeEnvironmentsCommand,
  DescribeEventsCommand,
  DescribeInstancesHealthCommand,
  DescribePlatformVersionCommand,
  DisassociateEnvironmentOperationsRoleCommand,
  ListAvailableSolutionStacksCommand,
  ListPlatformBranchesCommand,
  ListPlatformVersionsCommand,
  ListTagsForResourceCommand,
  RebuildEnvironmentCommand,
  RequestEnvironmentInfoCommand,
  RestartAppServerCommand,
  RetrieveEnvironmentInfoCommand,
  SwapEnvironmentCNAMEsCommand,
  TerminateEnvironmentCommand,
  UpdateApplicationCommand,
  UpdateApplicationResourceLifecycleCommand,
  UpdateApplicationVersionCommand,
  UpdateConfigurationTemplateCommand,
  UpdateEnvironmentCommand,
  UpdateTagsForResourceCommand,
  ValidateConfigurationSettingsCommand
};
var _ElasticBeanstalk = class _ElasticBeanstalk extends ElasticBeanstalkClient {
};
__name(_ElasticBeanstalk, "ElasticBeanstalk");
var ElasticBeanstalk = _ElasticBeanstalk;
(0, import_smithy_client.createAggregatedClient)(commands, ElasticBeanstalk);

// src/pagination/DescribeEnvironmentManagedActionHistoryPaginator.ts

var paginateDescribeEnvironmentManagedActionHistory = (0, import_core.createPaginator)(ElasticBeanstalkClient, DescribeEnvironmentManagedActionHistoryCommand, "NextToken", "NextToken", "MaxItems");

// src/pagination/DescribeEventsPaginator.ts

var paginateDescribeEvents = (0, import_core.createPaginator)(ElasticBeanstalkClient, DescribeEventsCommand, "NextToken", "NextToken", "MaxRecords");

// src/pagination/ListPlatformBranchesPaginator.ts

var paginateListPlatformBranches = (0, import_core.createPaginator)(ElasticBeanstalkClient, ListPlatformBranchesCommand, "NextToken", "NextToken", "MaxRecords");

// src/pagination/ListPlatformVersionsPaginator.ts

var paginateListPlatformVersions = (0, import_core.createPaginator)(ElasticBeanstalkClient, ListPlatformVersionsCommand, "NextToken", "NextToken", "MaxRecords");

// src/waiters/waitForEnvironmentExists.ts
var import_util_waiter = require("@smithy/util-waiter");
var checkState = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeEnvironmentsCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Environments);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "Ready";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Environments);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "Launching";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.RETRY, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForEnvironmentExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 20, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
}, "waitForEnvironmentExists");
var waitUntilEnvironmentExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 20, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilEnvironmentExists");

// src/waiters/waitForEnvironmentTerminated.ts

var checkState2 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeEnvironmentsCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Environments);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "Terminated";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Environments);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "Terminating";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.RETRY, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForEnvironmentTerminated = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 20, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
}, "waitForEnvironmentTerminated");
var waitUntilEnvironmentTerminated = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 20, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilEnvironmentTerminated");

// src/waiters/waitForEnvironmentUpdated.ts

var checkState3 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeEnvironmentsCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Environments);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "Ready";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Environments);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "Updating";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.RETRY, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForEnvironmentUpdated = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 20, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
}, "waitForEnvironmentUpdated");
var waitUntilEnvironmentUpdated = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 20, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilEnvironmentUpdated");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ElasticBeanstalkServiceException,
  __Client,
  ElasticBeanstalkClient,
  ElasticBeanstalk,
  $Command,
  AbortEnvironmentUpdateCommand,
  ApplyEnvironmentManagedActionCommand,
  AssociateEnvironmentOperationsRoleCommand,
  CheckDNSAvailabilityCommand,
  ComposeEnvironmentsCommand,
  CreateApplicationCommand,
  CreateApplicationVersionCommand,
  CreateConfigurationTemplateCommand,
  CreateEnvironmentCommand,
  CreatePlatformVersionCommand,
  CreateStorageLocationCommand,
  DeleteApplicationCommand,
  DeleteApplicationVersionCommand,
  DeleteConfigurationTemplateCommand,
  DeleteEnvironmentConfigurationCommand,
  DeletePlatformVersionCommand,
  DescribeAccountAttributesCommand,
  DescribeApplicationVersionsCommand,
  DescribeApplicationsCommand,
  DescribeConfigurationOptionsCommand,
  DescribeConfigurationSettingsCommand,
  DescribeEnvironmentHealthCommand,
  DescribeEnvironmentManagedActionHistoryCommand,
  DescribeEnvironmentManagedActionsCommand,
  DescribeEnvironmentResourcesCommand,
  DescribeEnvironmentsCommand,
  DescribeEventsCommand,
  DescribeInstancesHealthCommand,
  DescribePlatformVersionCommand,
  DisassociateEnvironmentOperationsRoleCommand,
  ListAvailableSolutionStacksCommand,
  ListPlatformBranchesCommand,
  ListPlatformVersionsCommand,
  ListTagsForResourceCommand,
  RebuildEnvironmentCommand,
  RequestEnvironmentInfoCommand,
  RestartAppServerCommand,
  RetrieveEnvironmentInfoCommand,
  SwapEnvironmentCNAMEsCommand,
  TerminateEnvironmentCommand,
  UpdateApplicationCommand,
  UpdateApplicationResourceLifecycleCommand,
  UpdateApplicationVersionCommand,
  UpdateConfigurationTemplateCommand,
  UpdateEnvironmentCommand,
  UpdateTagsForResourceCommand,
  ValidateConfigurationSettingsCommand,
  paginateDescribeEnvironmentManagedActionHistory,
  paginateDescribeEvents,
  paginateListPlatformBranches,
  paginateListPlatformVersions,
  waitForEnvironmentExists,
  waitUntilEnvironmentExists,
  waitForEnvironmentTerminated,
  waitUntilEnvironmentTerminated,
  waitForEnvironmentUpdated,
  waitUntilEnvironmentUpdated,
  InsufficientPrivilegesException,
  ActionHistoryStatus,
  ActionStatus,
  ActionType,
  SourceRepository,
  SourceType,
  ApplicationVersionStatus,
  ManagedActionInvalidStateException,
  EnvironmentHealth,
  EnvironmentHealthStatus,
  EnvironmentStatus,
  TooManyEnvironmentsException,
  TooManyApplicationsException,
  CodeBuildNotInServiceRegionException,
  ComputeType,
  S3LocationNotInServiceRegionException,
  TooManyApplicationVersionsException,
  ConfigurationDeploymentStatus,
  TooManyBucketsException,
  TooManyConfigurationTemplatesException,
  PlatformStatus,
  TooManyPlatformsException,
  S3SubscriptionRequiredException,
  OperationInProgressException,
  SourceBundleDeletionException,
  PlatformVersionStillReferencedException,
  ConfigurationOptionValueType,
  EnvironmentHealthAttribute,
  InvalidRequestException,
  FailureType,
  EventSeverity,
  InstancesHealthAttribute,
  ResourceNotFoundException,
  ResourceTypeNotSupportedException,
  EnvironmentInfoType,
  TooManyTagsException,
  ValidationSeverity
});

