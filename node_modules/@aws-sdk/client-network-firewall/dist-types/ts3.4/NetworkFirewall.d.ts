import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AssociateFirewallPolicyCommandInput,
  AssociateFirewallPolicyCommandOutput,
} from "./commands/AssociateFirewallPolicyCommand";
import {
  AssociateSubnetsCommandInput,
  AssociateSubnetsCommandOutput,
} from "./commands/AssociateSubnetsCommand";
import {
  CreateFirewallCommandInput,
  CreateFirewallCommandOutput,
} from "./commands/CreateFirewallCommand";
import {
  CreateFirewallPolicyCommandInput,
  CreateFirewallPolicyCommandOutput,
} from "./commands/CreateFirewallPolicyCommand";
import {
  CreateRuleGroupCommandInput,
  CreateRuleGroupCommandOutput,
} from "./commands/CreateRuleGroupCommand";
import {
  CreateTLSInspectionConfigurationCommandInput,
  CreateTLSInspectionConfigurationCommandOutput,
} from "./commands/CreateTLSInspectionConfigurationCommand";
import {
  DeleteFirewallCommandInput,
  DeleteFirewallCommandOutput,
} from "./commands/DeleteFirewallCommand";
import {
  DeleteFirewallPolicyCommandInput,
  DeleteFirewallPolicyCommandOutput,
} from "./commands/DeleteFirewallPolicyCommand";
import {
  DeleteResourcePolicyCommandInput,
  DeleteResourcePolicyCommandOutput,
} from "./commands/DeleteResourcePolicyCommand";
import {
  DeleteRuleGroupCommandInput,
  DeleteRuleGroupCommandOutput,
} from "./commands/DeleteRuleGroupCommand";
import {
  DeleteTLSInspectionConfigurationCommandInput,
  DeleteTLSInspectionConfigurationCommandOutput,
} from "./commands/DeleteTLSInspectionConfigurationCommand";
import {
  DescribeFirewallCommandInput,
  DescribeFirewallCommandOutput,
} from "./commands/DescribeFirewallCommand";
import {
  DescribeFirewallPolicyCommandInput,
  DescribeFirewallPolicyCommandOutput,
} from "./commands/DescribeFirewallPolicyCommand";
import {
  DescribeLoggingConfigurationCommandInput,
  DescribeLoggingConfigurationCommandOutput,
} from "./commands/DescribeLoggingConfigurationCommand";
import {
  DescribeResourcePolicyCommandInput,
  DescribeResourcePolicyCommandOutput,
} from "./commands/DescribeResourcePolicyCommand";
import {
  DescribeRuleGroupCommandInput,
  DescribeRuleGroupCommandOutput,
} from "./commands/DescribeRuleGroupCommand";
import {
  DescribeRuleGroupMetadataCommandInput,
  DescribeRuleGroupMetadataCommandOutput,
} from "./commands/DescribeRuleGroupMetadataCommand";
import {
  DescribeTLSInspectionConfigurationCommandInput,
  DescribeTLSInspectionConfigurationCommandOutput,
} from "./commands/DescribeTLSInspectionConfigurationCommand";
import {
  DisassociateSubnetsCommandInput,
  DisassociateSubnetsCommandOutput,
} from "./commands/DisassociateSubnetsCommand";
import {
  ListFirewallPoliciesCommandInput,
  ListFirewallPoliciesCommandOutput,
} from "./commands/ListFirewallPoliciesCommand";
import {
  ListFirewallsCommandInput,
  ListFirewallsCommandOutput,
} from "./commands/ListFirewallsCommand";
import {
  ListRuleGroupsCommandInput,
  ListRuleGroupsCommandOutput,
} from "./commands/ListRuleGroupsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListTLSInspectionConfigurationsCommandInput,
  ListTLSInspectionConfigurationsCommandOutput,
} from "./commands/ListTLSInspectionConfigurationsCommand";
import {
  PutResourcePolicyCommandInput,
  PutResourcePolicyCommandOutput,
} from "./commands/PutResourcePolicyCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateFirewallDeleteProtectionCommandInput,
  UpdateFirewallDeleteProtectionCommandOutput,
} from "./commands/UpdateFirewallDeleteProtectionCommand";
import {
  UpdateFirewallDescriptionCommandInput,
  UpdateFirewallDescriptionCommandOutput,
} from "./commands/UpdateFirewallDescriptionCommand";
import {
  UpdateFirewallEncryptionConfigurationCommandInput,
  UpdateFirewallEncryptionConfigurationCommandOutput,
} from "./commands/UpdateFirewallEncryptionConfigurationCommand";
import {
  UpdateFirewallPolicyChangeProtectionCommandInput,
  UpdateFirewallPolicyChangeProtectionCommandOutput,
} from "./commands/UpdateFirewallPolicyChangeProtectionCommand";
import {
  UpdateFirewallPolicyCommandInput,
  UpdateFirewallPolicyCommandOutput,
} from "./commands/UpdateFirewallPolicyCommand";
import {
  UpdateLoggingConfigurationCommandInput,
  UpdateLoggingConfigurationCommandOutput,
} from "./commands/UpdateLoggingConfigurationCommand";
import {
  UpdateRuleGroupCommandInput,
  UpdateRuleGroupCommandOutput,
} from "./commands/UpdateRuleGroupCommand";
import {
  UpdateSubnetChangeProtectionCommandInput,
  UpdateSubnetChangeProtectionCommandOutput,
} from "./commands/UpdateSubnetChangeProtectionCommand";
import {
  UpdateTLSInspectionConfigurationCommandInput,
  UpdateTLSInspectionConfigurationCommandOutput,
} from "./commands/UpdateTLSInspectionConfigurationCommand";
import { NetworkFirewallClient } from "./NetworkFirewallClient";
export interface NetworkFirewall {
  associateFirewallPolicy(
    args: AssociateFirewallPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateFirewallPolicyCommandOutput>;
  associateFirewallPolicy(
    args: AssociateFirewallPolicyCommandInput,
    cb: (err: any, data?: AssociateFirewallPolicyCommandOutput) => void
  ): void;
  associateFirewallPolicy(
    args: AssociateFirewallPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateFirewallPolicyCommandOutput) => void
  ): void;
  associateSubnets(
    args: AssociateSubnetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateSubnetsCommandOutput>;
  associateSubnets(
    args: AssociateSubnetsCommandInput,
    cb: (err: any, data?: AssociateSubnetsCommandOutput) => void
  ): void;
  associateSubnets(
    args: AssociateSubnetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateSubnetsCommandOutput) => void
  ): void;
  createFirewall(
    args: CreateFirewallCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFirewallCommandOutput>;
  createFirewall(
    args: CreateFirewallCommandInput,
    cb: (err: any, data?: CreateFirewallCommandOutput) => void
  ): void;
  createFirewall(
    args: CreateFirewallCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFirewallCommandOutput) => void
  ): void;
  createFirewallPolicy(
    args: CreateFirewallPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFirewallPolicyCommandOutput>;
  createFirewallPolicy(
    args: CreateFirewallPolicyCommandInput,
    cb: (err: any, data?: CreateFirewallPolicyCommandOutput) => void
  ): void;
  createFirewallPolicy(
    args: CreateFirewallPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFirewallPolicyCommandOutput) => void
  ): void;
  createRuleGroup(
    args: CreateRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRuleGroupCommandOutput>;
  createRuleGroup(
    args: CreateRuleGroupCommandInput,
    cb: (err: any, data?: CreateRuleGroupCommandOutput) => void
  ): void;
  createRuleGroup(
    args: CreateRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRuleGroupCommandOutput) => void
  ): void;
  createTLSInspectionConfiguration(
    args: CreateTLSInspectionConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateTLSInspectionConfigurationCommandOutput>;
  createTLSInspectionConfiguration(
    args: CreateTLSInspectionConfigurationCommandInput,
    cb: (err: any, data?: CreateTLSInspectionConfigurationCommandOutput) => void
  ): void;
  createTLSInspectionConfiguration(
    args: CreateTLSInspectionConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateTLSInspectionConfigurationCommandOutput) => void
  ): void;
  deleteFirewall(): Promise<DeleteFirewallCommandOutput>;
  deleteFirewall(
    args: DeleteFirewallCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFirewallCommandOutput>;
  deleteFirewall(
    args: DeleteFirewallCommandInput,
    cb: (err: any, data?: DeleteFirewallCommandOutput) => void
  ): void;
  deleteFirewall(
    args: DeleteFirewallCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFirewallCommandOutput) => void
  ): void;
  deleteFirewallPolicy(): Promise<DeleteFirewallPolicyCommandOutput>;
  deleteFirewallPolicy(
    args: DeleteFirewallPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFirewallPolicyCommandOutput>;
  deleteFirewallPolicy(
    args: DeleteFirewallPolicyCommandInput,
    cb: (err: any, data?: DeleteFirewallPolicyCommandOutput) => void
  ): void;
  deleteFirewallPolicy(
    args: DeleteFirewallPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFirewallPolicyCommandOutput) => void
  ): void;
  deleteResourcePolicy(
    args: DeleteResourcePolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteResourcePolicyCommandOutput>;
  deleteResourcePolicy(
    args: DeleteResourcePolicyCommandInput,
    cb: (err: any, data?: DeleteResourcePolicyCommandOutput) => void
  ): void;
  deleteResourcePolicy(
    args: DeleteResourcePolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteResourcePolicyCommandOutput) => void
  ): void;
  deleteRuleGroup(): Promise<DeleteRuleGroupCommandOutput>;
  deleteRuleGroup(
    args: DeleteRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRuleGroupCommandOutput>;
  deleteRuleGroup(
    args: DeleteRuleGroupCommandInput,
    cb: (err: any, data?: DeleteRuleGroupCommandOutput) => void
  ): void;
  deleteRuleGroup(
    args: DeleteRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRuleGroupCommandOutput) => void
  ): void;
  deleteTLSInspectionConfiguration(): Promise<DeleteTLSInspectionConfigurationCommandOutput>;
  deleteTLSInspectionConfiguration(
    args: DeleteTLSInspectionConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteTLSInspectionConfigurationCommandOutput>;
  deleteTLSInspectionConfiguration(
    args: DeleteTLSInspectionConfigurationCommandInput,
    cb: (err: any, data?: DeleteTLSInspectionConfigurationCommandOutput) => void
  ): void;
  deleteTLSInspectionConfiguration(
    args: DeleteTLSInspectionConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteTLSInspectionConfigurationCommandOutput) => void
  ): void;
  describeFirewall(): Promise<DescribeFirewallCommandOutput>;
  describeFirewall(
    args: DescribeFirewallCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFirewallCommandOutput>;
  describeFirewall(
    args: DescribeFirewallCommandInput,
    cb: (err: any, data?: DescribeFirewallCommandOutput) => void
  ): void;
  describeFirewall(
    args: DescribeFirewallCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFirewallCommandOutput) => void
  ): void;
  describeFirewallPolicy(): Promise<DescribeFirewallPolicyCommandOutput>;
  describeFirewallPolicy(
    args: DescribeFirewallPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFirewallPolicyCommandOutput>;
  describeFirewallPolicy(
    args: DescribeFirewallPolicyCommandInput,
    cb: (err: any, data?: DescribeFirewallPolicyCommandOutput) => void
  ): void;
  describeFirewallPolicy(
    args: DescribeFirewallPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFirewallPolicyCommandOutput) => void
  ): void;
  describeLoggingConfiguration(): Promise<DescribeLoggingConfigurationCommandOutput>;
  describeLoggingConfiguration(
    args: DescribeLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeLoggingConfigurationCommandOutput>;
  describeLoggingConfiguration(
    args: DescribeLoggingConfigurationCommandInput,
    cb: (err: any, data?: DescribeLoggingConfigurationCommandOutput) => void
  ): void;
  describeLoggingConfiguration(
    args: DescribeLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeLoggingConfigurationCommandOutput) => void
  ): void;
  describeResourcePolicy(
    args: DescribeResourcePolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeResourcePolicyCommandOutput>;
  describeResourcePolicy(
    args: DescribeResourcePolicyCommandInput,
    cb: (err: any, data?: DescribeResourcePolicyCommandOutput) => void
  ): void;
  describeResourcePolicy(
    args: DescribeResourcePolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeResourcePolicyCommandOutput) => void
  ): void;
  describeRuleGroup(): Promise<DescribeRuleGroupCommandOutput>;
  describeRuleGroup(
    args: DescribeRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRuleGroupCommandOutput>;
  describeRuleGroup(
    args: DescribeRuleGroupCommandInput,
    cb: (err: any, data?: DescribeRuleGroupCommandOutput) => void
  ): void;
  describeRuleGroup(
    args: DescribeRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRuleGroupCommandOutput) => void
  ): void;
  describeRuleGroupMetadata(): Promise<DescribeRuleGroupMetadataCommandOutput>;
  describeRuleGroupMetadata(
    args: DescribeRuleGroupMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRuleGroupMetadataCommandOutput>;
  describeRuleGroupMetadata(
    args: DescribeRuleGroupMetadataCommandInput,
    cb: (err: any, data?: DescribeRuleGroupMetadataCommandOutput) => void
  ): void;
  describeRuleGroupMetadata(
    args: DescribeRuleGroupMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRuleGroupMetadataCommandOutput) => void
  ): void;
  describeTLSInspectionConfiguration(): Promise<DescribeTLSInspectionConfigurationCommandOutput>;
  describeTLSInspectionConfiguration(
    args: DescribeTLSInspectionConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTLSInspectionConfigurationCommandOutput>;
  describeTLSInspectionConfiguration(
    args: DescribeTLSInspectionConfigurationCommandInput,
    cb: (
      err: any,
      data?: DescribeTLSInspectionConfigurationCommandOutput
    ) => void
  ): void;
  describeTLSInspectionConfiguration(
    args: DescribeTLSInspectionConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeTLSInspectionConfigurationCommandOutput
    ) => void
  ): void;
  disassociateSubnets(
    args: DisassociateSubnetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateSubnetsCommandOutput>;
  disassociateSubnets(
    args: DisassociateSubnetsCommandInput,
    cb: (err: any, data?: DisassociateSubnetsCommandOutput) => void
  ): void;
  disassociateSubnets(
    args: DisassociateSubnetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateSubnetsCommandOutput) => void
  ): void;
  listFirewallPolicies(): Promise<ListFirewallPoliciesCommandOutput>;
  listFirewallPolicies(
    args: ListFirewallPoliciesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFirewallPoliciesCommandOutput>;
  listFirewallPolicies(
    args: ListFirewallPoliciesCommandInput,
    cb: (err: any, data?: ListFirewallPoliciesCommandOutput) => void
  ): void;
  listFirewallPolicies(
    args: ListFirewallPoliciesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFirewallPoliciesCommandOutput) => void
  ): void;
  listFirewalls(): Promise<ListFirewallsCommandOutput>;
  listFirewalls(
    args: ListFirewallsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFirewallsCommandOutput>;
  listFirewalls(
    args: ListFirewallsCommandInput,
    cb: (err: any, data?: ListFirewallsCommandOutput) => void
  ): void;
  listFirewalls(
    args: ListFirewallsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFirewallsCommandOutput) => void
  ): void;
  listRuleGroups(): Promise<ListRuleGroupsCommandOutput>;
  listRuleGroups(
    args: ListRuleGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRuleGroupsCommandOutput>;
  listRuleGroups(
    args: ListRuleGroupsCommandInput,
    cb: (err: any, data?: ListRuleGroupsCommandOutput) => void
  ): void;
  listRuleGroups(
    args: ListRuleGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRuleGroupsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTLSInspectionConfigurations(): Promise<ListTLSInspectionConfigurationsCommandOutput>;
  listTLSInspectionConfigurations(
    args: ListTLSInspectionConfigurationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTLSInspectionConfigurationsCommandOutput>;
  listTLSInspectionConfigurations(
    args: ListTLSInspectionConfigurationsCommandInput,
    cb: (err: any, data?: ListTLSInspectionConfigurationsCommandOutput) => void
  ): void;
  listTLSInspectionConfigurations(
    args: ListTLSInspectionConfigurationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTLSInspectionConfigurationsCommandOutput) => void
  ): void;
  putResourcePolicy(
    args: PutResourcePolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutResourcePolicyCommandOutput>;
  putResourcePolicy(
    args: PutResourcePolicyCommandInput,
    cb: (err: any, data?: PutResourcePolicyCommandOutput) => void
  ): void;
  putResourcePolicy(
    args: PutResourcePolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutResourcePolicyCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateFirewallDeleteProtection(
    args: UpdateFirewallDeleteProtectionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFirewallDeleteProtectionCommandOutput>;
  updateFirewallDeleteProtection(
    args: UpdateFirewallDeleteProtectionCommandInput,
    cb: (err: any, data?: UpdateFirewallDeleteProtectionCommandOutput) => void
  ): void;
  updateFirewallDeleteProtection(
    args: UpdateFirewallDeleteProtectionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFirewallDeleteProtectionCommandOutput) => void
  ): void;
  updateFirewallDescription(): Promise<UpdateFirewallDescriptionCommandOutput>;
  updateFirewallDescription(
    args: UpdateFirewallDescriptionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFirewallDescriptionCommandOutput>;
  updateFirewallDescription(
    args: UpdateFirewallDescriptionCommandInput,
    cb: (err: any, data?: UpdateFirewallDescriptionCommandOutput) => void
  ): void;
  updateFirewallDescription(
    args: UpdateFirewallDescriptionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFirewallDescriptionCommandOutput) => void
  ): void;
  updateFirewallEncryptionConfiguration(): Promise<UpdateFirewallEncryptionConfigurationCommandOutput>;
  updateFirewallEncryptionConfiguration(
    args: UpdateFirewallEncryptionConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFirewallEncryptionConfigurationCommandOutput>;
  updateFirewallEncryptionConfiguration(
    args: UpdateFirewallEncryptionConfigurationCommandInput,
    cb: (
      err: any,
      data?: UpdateFirewallEncryptionConfigurationCommandOutput
    ) => void
  ): void;
  updateFirewallEncryptionConfiguration(
    args: UpdateFirewallEncryptionConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: UpdateFirewallEncryptionConfigurationCommandOutput
    ) => void
  ): void;
  updateFirewallPolicy(
    args: UpdateFirewallPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFirewallPolicyCommandOutput>;
  updateFirewallPolicy(
    args: UpdateFirewallPolicyCommandInput,
    cb: (err: any, data?: UpdateFirewallPolicyCommandOutput) => void
  ): void;
  updateFirewallPolicy(
    args: UpdateFirewallPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFirewallPolicyCommandOutput) => void
  ): void;
  updateFirewallPolicyChangeProtection(
    args: UpdateFirewallPolicyChangeProtectionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFirewallPolicyChangeProtectionCommandOutput>;
  updateFirewallPolicyChangeProtection(
    args: UpdateFirewallPolicyChangeProtectionCommandInput,
    cb: (
      err: any,
      data?: UpdateFirewallPolicyChangeProtectionCommandOutput
    ) => void
  ): void;
  updateFirewallPolicyChangeProtection(
    args: UpdateFirewallPolicyChangeProtectionCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: UpdateFirewallPolicyChangeProtectionCommandOutput
    ) => void
  ): void;
  updateLoggingConfiguration(): Promise<UpdateLoggingConfigurationCommandOutput>;
  updateLoggingConfiguration(
    args: UpdateLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateLoggingConfigurationCommandOutput>;
  updateLoggingConfiguration(
    args: UpdateLoggingConfigurationCommandInput,
    cb: (err: any, data?: UpdateLoggingConfigurationCommandOutput) => void
  ): void;
  updateLoggingConfiguration(
    args: UpdateLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateLoggingConfigurationCommandOutput) => void
  ): void;
  updateRuleGroup(
    args: UpdateRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRuleGroupCommandOutput>;
  updateRuleGroup(
    args: UpdateRuleGroupCommandInput,
    cb: (err: any, data?: UpdateRuleGroupCommandOutput) => void
  ): void;
  updateRuleGroup(
    args: UpdateRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRuleGroupCommandOutput) => void
  ): void;
  updateSubnetChangeProtection(
    args: UpdateSubnetChangeProtectionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSubnetChangeProtectionCommandOutput>;
  updateSubnetChangeProtection(
    args: UpdateSubnetChangeProtectionCommandInput,
    cb: (err: any, data?: UpdateSubnetChangeProtectionCommandOutput) => void
  ): void;
  updateSubnetChangeProtection(
    args: UpdateSubnetChangeProtectionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSubnetChangeProtectionCommandOutput) => void
  ): void;
  updateTLSInspectionConfiguration(
    args: UpdateTLSInspectionConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateTLSInspectionConfigurationCommandOutput>;
  updateTLSInspectionConfiguration(
    args: UpdateTLSInspectionConfigurationCommandInput,
    cb: (err: any, data?: UpdateTLSInspectionConfigurationCommandOutput) => void
  ): void;
  updateTLSInspectionConfiguration(
    args: UpdateTLSInspectionConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateTLSInspectionConfigurationCommandOutput) => void
  ): void;
}
export declare class NetworkFirewall
  extends NetworkFirewallClient
  implements NetworkFirewall {}
