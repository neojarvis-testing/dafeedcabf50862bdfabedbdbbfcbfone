import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { CodePipelineServiceException as __BaseException } from "./CodePipelineServiceException";
export const JobStatus = {
    Created: "Created",
    Dispatched: "Dispatched",
    Failed: "Failed",
    InProgress: "InProgress",
    Queued: "Queued",
    Succeeded: "Succeeded",
    TimedOut: "TimedOut",
};
export class InvalidNonceException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidNonceException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNonceException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNonceException.prototype);
    }
}
export class JobNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "JobNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "JobNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, JobNotFoundException.prototype);
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export class InvalidClientTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidClientTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClientTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClientTokenException.prototype);
    }
}
export const ActionCategory = {
    Approval: "Approval",
    Build: "Build",
    Deploy: "Deploy",
    Invoke: "Invoke",
    Source: "Source",
    Test: "Test",
};
export const ActionConfigurationPropertyType = {
    Boolean: "Boolean",
    Number: "Number",
    String: "String",
};
export const ActionOwner = {
    AWS: "AWS",
    Custom: "Custom",
    ThirdParty: "ThirdParty",
};
export const ActionExecutionStatus = {
    Abandoned: "Abandoned",
    Failed: "Failed",
    InProgress: "InProgress",
    Succeeded: "Succeeded",
};
export const StartTimeRange = {
    All: "All",
    Latest: "Latest",
};
export class ActionNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ActionNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ActionNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ActionNotFoundException.prototype);
    }
}
export const ExecutorType = {
    JobWorker: "JobWorker",
    Lambda: "Lambda",
};
export class ActionTypeNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ActionTypeNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ActionTypeNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ActionTypeNotFoundException.prototype);
    }
}
export class ApprovalAlreadyCompletedException extends __BaseException {
    constructor(opts) {
        super({
            name: "ApprovalAlreadyCompletedException",
            $fault: "client",
            ...opts,
        });
        this.name = "ApprovalAlreadyCompletedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ApprovalAlreadyCompletedException.prototype);
    }
}
export const ApprovalStatus = {
    Approved: "Approved",
    Rejected: "Rejected",
};
export const ArtifactLocationType = {
    S3: "S3",
};
export const EncryptionKeyType = {
    KMS: "KMS",
};
export const ArtifactStoreType = {
    S3: "S3",
};
export const BlockerType = {
    Schedule: "Schedule",
};
export class ConcurrentModificationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentModificationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
    }
}
export class InvalidTagsException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTagsException.prototype);
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class TooManyTagsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
    }
}
export const ExecutionMode = {
    PARALLEL: "PARALLEL",
    QUEUED: "QUEUED",
    SUPERSEDED: "SUPERSEDED",
};
export const PipelineType = {
    V1: "V1",
    V2: "V2",
};
export const Result = {
    ROLLBACK: "ROLLBACK",
};
export const GitPullRequestEventType = {
    CLOSED: "CLOSED",
    OPEN: "OPEN",
    UPDATED: "UPDATED",
};
export const PipelineTriggerProviderType = {
    CodeStarSourceConnection: "CodeStarSourceConnection",
};
export class InvalidActionDeclarationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidActionDeclarationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidActionDeclarationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidActionDeclarationException.prototype);
    }
}
export class InvalidBlockerDeclarationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidBlockerDeclarationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidBlockerDeclarationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidBlockerDeclarationException.prototype);
    }
}
export class InvalidStageDeclarationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidStageDeclarationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidStageDeclarationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidStageDeclarationException.prototype);
    }
}
export class InvalidStructureException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidStructureException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidStructureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidStructureException.prototype);
    }
}
export class PipelineNameInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "PipelineNameInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineNameInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineNameInUseException.prototype);
    }
}
export class WebhookNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "WebhookNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "WebhookNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WebhookNotFoundException.prototype);
    }
}
export const StageTransitionType = {
    Inbound: "Inbound",
    Outbound: "Outbound",
};
export class PipelineNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "PipelineNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineNotFoundException.prototype);
    }
}
export class StageNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "StageNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "StageNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, StageNotFoundException.prototype);
    }
}
export class PipelineVersionNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "PipelineVersionNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineVersionNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineVersionNotFoundException.prototype);
    }
}
export const ExecutionType = {
    ROLLBACK: "ROLLBACK",
    STANDARD: "STANDARD",
};
export const PipelineExecutionStatus = {
    Cancelled: "Cancelled",
    Failed: "Failed",
    InProgress: "InProgress",
    Stopped: "Stopped",
    Stopping: "Stopping",
    Succeeded: "Succeeded",
    Superseded: "Superseded",
};
export const TriggerType = {
    AutomatedRollback: "AutomatedRollback",
    CloudWatchEvent: "CloudWatchEvent",
    CreatePipeline: "CreatePipeline",
    ManualRollback: "ManualRollback",
    PollForSourceChanges: "PollForSourceChanges",
    PutActionRevision: "PutActionRevision",
    StartPipelineExecution: "StartPipelineExecution",
    Webhook: "Webhook",
    WebhookV2: "WebhookV2",
};
export class PipelineExecutionNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "PipelineExecutionNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineExecutionNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineExecutionNotFoundException.prototype);
    }
}
export const StageExecutionStatus = {
    Cancelled: "Cancelled",
    Failed: "Failed",
    InProgress: "InProgress",
    Stopped: "Stopped",
    Stopping: "Stopping",
    Succeeded: "Succeeded",
};
export class InvalidJobException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidJobException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidJobException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidJobException.prototype);
    }
}
export class InvalidNextTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
    }
}
export class InvalidArnException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidArnException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArnException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArnException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export const WebhookAuthenticationType = {
    GITHUB_HMAC: "GITHUB_HMAC",
    IP: "IP",
    UNAUTHENTICATED: "UNAUTHENTICATED",
};
export class InvalidApprovalTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidApprovalTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidApprovalTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidApprovalTokenException.prototype);
    }
}
export class InvalidJobStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidJobStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidJobStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidJobStateException.prototype);
    }
}
export const FailureType = {
    ConfigurationError: "ConfigurationError",
    JobFailed: "JobFailed",
    PermissionError: "PermissionError",
    RevisionOutOfSync: "RevisionOutOfSync",
    RevisionUnavailable: "RevisionUnavailable",
    SystemUnavailable: "SystemUnavailable",
};
export class OutputVariablesSizeExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "OutputVariablesSizeExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "OutputVariablesSizeExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OutputVariablesSizeExceededException.prototype);
    }
}
export class InvalidWebhookAuthenticationParametersException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidWebhookAuthenticationParametersException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidWebhookAuthenticationParametersException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidWebhookAuthenticationParametersException.prototype);
    }
}
export class InvalidWebhookFilterPatternException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidWebhookFilterPatternException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidWebhookFilterPatternException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidWebhookFilterPatternException.prototype);
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export class NotLatestPipelineExecutionException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotLatestPipelineExecutionException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotLatestPipelineExecutionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotLatestPipelineExecutionException.prototype);
    }
}
export const StageRetryMode = {
    ALL_ACTIONS: "ALL_ACTIONS",
    FAILED_ACTIONS: "FAILED_ACTIONS",
};
export class StageNotRetryableException extends __BaseException {
    constructor(opts) {
        super({
            name: "StageNotRetryableException",
            $fault: "client",
            ...opts,
        });
        this.name = "StageNotRetryableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, StageNotRetryableException.prototype);
    }
}
export class PipelineExecutionOutdatedException extends __BaseException {
    constructor(opts) {
        super({
            name: "PipelineExecutionOutdatedException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineExecutionOutdatedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineExecutionOutdatedException.prototype);
    }
}
export class UnableToRollbackStageException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnableToRollbackStageException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnableToRollbackStageException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnableToRollbackStageException.prototype);
    }
}
export class ConcurrentPipelineExecutionsLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConcurrentPipelineExecutionsLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentPipelineExecutionsLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentPipelineExecutionsLimitExceededException.prototype);
    }
}
export const SourceRevisionType = {
    COMMIT_ID: "COMMIT_ID",
    IMAGE_DIGEST: "IMAGE_DIGEST",
    S3_OBJECT_VERSION_ID: "S3_OBJECT_VERSION_ID",
};
export class DuplicatedStopRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicatedStopRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicatedStopRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicatedStopRequestException.prototype);
    }
}
export class PipelineExecutionNotStoppableException extends __BaseException {
    constructor(opts) {
        super({
            name: "PipelineExecutionNotStoppableException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineExecutionNotStoppableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineExecutionNotStoppableException.prototype);
    }
}
export class RequestFailedException extends __BaseException {
    constructor(opts) {
        super({
            name: "RequestFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "RequestFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RequestFailedException.prototype);
    }
}
export const AWSSessionCredentialsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.accessKeyId && { accessKeyId: SENSITIVE_STRING }),
    ...(obj.secretAccessKey && { secretAccessKey: SENSITIVE_STRING }),
    ...(obj.sessionToken && { sessionToken: SENSITIVE_STRING }),
});
export const JobDataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.artifactCredentials && { artifactCredentials: SENSITIVE_STRING }),
});
export const JobDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.data && { data: JobDataFilterSensitiveLog(obj.data) }),
});
export const GetJobDetailsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.jobDetails && { jobDetails: JobDetailsFilterSensitiveLog(obj.jobDetails) }),
});
export const ThirdPartyJobDataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.artifactCredentials && { artifactCredentials: SENSITIVE_STRING }),
});
export const ThirdPartyJobDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.data && { data: ThirdPartyJobDataFilterSensitiveLog(obj.data) }),
});
export const GetThirdPartyJobDetailsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.jobDetails && { jobDetails: ThirdPartyJobDetailsFilterSensitiveLog(obj.jobDetails) }),
});
export const JobFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.data && { data: JobDataFilterSensitiveLog(obj.data) }),
});
export const PollForJobsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.jobs && { jobs: obj.jobs.map((item) => JobFilterSensitiveLog(item)) }),
});
