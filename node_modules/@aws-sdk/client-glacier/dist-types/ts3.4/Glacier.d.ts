import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AbortMultipartUploadCommandInput,
  AbortMultipartUploadCommandOutput,
} from "./commands/AbortMultipartUploadCommand";
import {
  AbortVaultLockCommandInput,
  AbortVaultLockCommandOutput,
} from "./commands/AbortVaultLockCommand";
import {
  AddTagsToVaultCommandInput,
  AddTagsToVaultCommandOutput,
} from "./commands/AddTagsToVaultCommand";
import {
  CompleteMultipartUploadCommandInput,
  CompleteMultipartUploadCommandOutput,
} from "./commands/CompleteMultipartUploadCommand";
import {
  CompleteVaultLockCommandInput,
  CompleteVaultLockCommandOutput,
} from "./commands/CompleteVaultLockCommand";
import {
  CreateVaultCommandInput,
  CreateVaultCommandOutput,
} from "./commands/CreateVaultCommand";
import {
  DeleteArchiveCommandInput,
  DeleteArchiveCommandOutput,
} from "./commands/DeleteArchiveCommand";
import {
  DeleteVaultAccessPolicyCommandInput,
  DeleteVaultAccessPolicyCommandOutput,
} from "./commands/DeleteVaultAccessPolicyCommand";
import {
  DeleteVaultCommandInput,
  DeleteVaultCommandOutput,
} from "./commands/DeleteVaultCommand";
import {
  DeleteVaultNotificationsCommandInput,
  DeleteVaultNotificationsCommandOutput,
} from "./commands/DeleteVaultNotificationsCommand";
import {
  DescribeJobCommandInput,
  DescribeJobCommandOutput,
} from "./commands/DescribeJobCommand";
import {
  DescribeVaultCommandInput,
  DescribeVaultCommandOutput,
} from "./commands/DescribeVaultCommand";
import {
  GetDataRetrievalPolicyCommandInput,
  GetDataRetrievalPolicyCommandOutput,
} from "./commands/GetDataRetrievalPolicyCommand";
import {
  GetJobOutputCommandInput,
  GetJobOutputCommandOutput,
} from "./commands/GetJobOutputCommand";
import {
  GetVaultAccessPolicyCommandInput,
  GetVaultAccessPolicyCommandOutput,
} from "./commands/GetVaultAccessPolicyCommand";
import {
  GetVaultLockCommandInput,
  GetVaultLockCommandOutput,
} from "./commands/GetVaultLockCommand";
import {
  GetVaultNotificationsCommandInput,
  GetVaultNotificationsCommandOutput,
} from "./commands/GetVaultNotificationsCommand";
import {
  InitiateJobCommandInput,
  InitiateJobCommandOutput,
} from "./commands/InitiateJobCommand";
import {
  InitiateMultipartUploadCommandInput,
  InitiateMultipartUploadCommandOutput,
} from "./commands/InitiateMultipartUploadCommand";
import {
  InitiateVaultLockCommandInput,
  InitiateVaultLockCommandOutput,
} from "./commands/InitiateVaultLockCommand";
import {
  ListJobsCommandInput,
  ListJobsCommandOutput,
} from "./commands/ListJobsCommand";
import {
  ListMultipartUploadsCommandInput,
  ListMultipartUploadsCommandOutput,
} from "./commands/ListMultipartUploadsCommand";
import {
  ListPartsCommandInput,
  ListPartsCommandOutput,
} from "./commands/ListPartsCommand";
import {
  ListProvisionedCapacityCommandInput,
  ListProvisionedCapacityCommandOutput,
} from "./commands/ListProvisionedCapacityCommand";
import {
  ListTagsForVaultCommandInput,
  ListTagsForVaultCommandOutput,
} from "./commands/ListTagsForVaultCommand";
import {
  ListVaultsCommandInput,
  ListVaultsCommandOutput,
} from "./commands/ListVaultsCommand";
import {
  PurchaseProvisionedCapacityCommandInput,
  PurchaseProvisionedCapacityCommandOutput,
} from "./commands/PurchaseProvisionedCapacityCommand";
import {
  RemoveTagsFromVaultCommandInput,
  RemoveTagsFromVaultCommandOutput,
} from "./commands/RemoveTagsFromVaultCommand";
import {
  SetDataRetrievalPolicyCommandInput,
  SetDataRetrievalPolicyCommandOutput,
} from "./commands/SetDataRetrievalPolicyCommand";
import {
  SetVaultAccessPolicyCommandInput,
  SetVaultAccessPolicyCommandOutput,
} from "./commands/SetVaultAccessPolicyCommand";
import {
  SetVaultNotificationsCommandInput,
  SetVaultNotificationsCommandOutput,
} from "./commands/SetVaultNotificationsCommand";
import {
  UploadArchiveCommandInput,
  UploadArchiveCommandOutput,
} from "./commands/UploadArchiveCommand";
import {
  UploadMultipartPartCommandInput,
  UploadMultipartPartCommandOutput,
} from "./commands/UploadMultipartPartCommand";
import { GlacierClient } from "./GlacierClient";
export interface Glacier {
  abortMultipartUpload(
    args: AbortMultipartUploadCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AbortMultipartUploadCommandOutput>;
  abortMultipartUpload(
    args: AbortMultipartUploadCommandInput,
    cb: (err: any, data?: AbortMultipartUploadCommandOutput) => void
  ): void;
  abortMultipartUpload(
    args: AbortMultipartUploadCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AbortMultipartUploadCommandOutput) => void
  ): void;
  abortVaultLock(
    args: AbortVaultLockCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AbortVaultLockCommandOutput>;
  abortVaultLock(
    args: AbortVaultLockCommandInput,
    cb: (err: any, data?: AbortVaultLockCommandOutput) => void
  ): void;
  abortVaultLock(
    args: AbortVaultLockCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AbortVaultLockCommandOutput) => void
  ): void;
  addTagsToVault(
    args: AddTagsToVaultCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddTagsToVaultCommandOutput>;
  addTagsToVault(
    args: AddTagsToVaultCommandInput,
    cb: (err: any, data?: AddTagsToVaultCommandOutput) => void
  ): void;
  addTagsToVault(
    args: AddTagsToVaultCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddTagsToVaultCommandOutput) => void
  ): void;
  completeMultipartUpload(
    args: CompleteMultipartUploadCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CompleteMultipartUploadCommandOutput>;
  completeMultipartUpload(
    args: CompleteMultipartUploadCommandInput,
    cb: (err: any, data?: CompleteMultipartUploadCommandOutput) => void
  ): void;
  completeMultipartUpload(
    args: CompleteMultipartUploadCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CompleteMultipartUploadCommandOutput) => void
  ): void;
  completeVaultLock(
    args: CompleteVaultLockCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CompleteVaultLockCommandOutput>;
  completeVaultLock(
    args: CompleteVaultLockCommandInput,
    cb: (err: any, data?: CompleteVaultLockCommandOutput) => void
  ): void;
  completeVaultLock(
    args: CompleteVaultLockCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CompleteVaultLockCommandOutput) => void
  ): void;
  createVault(
    args: CreateVaultCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateVaultCommandOutput>;
  createVault(
    args: CreateVaultCommandInput,
    cb: (err: any, data?: CreateVaultCommandOutput) => void
  ): void;
  createVault(
    args: CreateVaultCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateVaultCommandOutput) => void
  ): void;
  deleteArchive(
    args: DeleteArchiveCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteArchiveCommandOutput>;
  deleteArchive(
    args: DeleteArchiveCommandInput,
    cb: (err: any, data?: DeleteArchiveCommandOutput) => void
  ): void;
  deleteArchive(
    args: DeleteArchiveCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteArchiveCommandOutput) => void
  ): void;
  deleteVault(
    args: DeleteVaultCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVaultCommandOutput>;
  deleteVault(
    args: DeleteVaultCommandInput,
    cb: (err: any, data?: DeleteVaultCommandOutput) => void
  ): void;
  deleteVault(
    args: DeleteVaultCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVaultCommandOutput) => void
  ): void;
  deleteVaultAccessPolicy(
    args: DeleteVaultAccessPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVaultAccessPolicyCommandOutput>;
  deleteVaultAccessPolicy(
    args: DeleteVaultAccessPolicyCommandInput,
    cb: (err: any, data?: DeleteVaultAccessPolicyCommandOutput) => void
  ): void;
  deleteVaultAccessPolicy(
    args: DeleteVaultAccessPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVaultAccessPolicyCommandOutput) => void
  ): void;
  deleteVaultNotifications(
    args: DeleteVaultNotificationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVaultNotificationsCommandOutput>;
  deleteVaultNotifications(
    args: DeleteVaultNotificationsCommandInput,
    cb: (err: any, data?: DeleteVaultNotificationsCommandOutput) => void
  ): void;
  deleteVaultNotifications(
    args: DeleteVaultNotificationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVaultNotificationsCommandOutput) => void
  ): void;
  describeJob(
    args: DescribeJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeJobCommandOutput>;
  describeJob(
    args: DescribeJobCommandInput,
    cb: (err: any, data?: DescribeJobCommandOutput) => void
  ): void;
  describeJob(
    args: DescribeJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeJobCommandOutput) => void
  ): void;
  describeVault(
    args: DescribeVaultCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVaultCommandOutput>;
  describeVault(
    args: DescribeVaultCommandInput,
    cb: (err: any, data?: DescribeVaultCommandOutput) => void
  ): void;
  describeVault(
    args: DescribeVaultCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVaultCommandOutput) => void
  ): void;
  getDataRetrievalPolicy(
    args: GetDataRetrievalPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDataRetrievalPolicyCommandOutput>;
  getDataRetrievalPolicy(
    args: GetDataRetrievalPolicyCommandInput,
    cb: (err: any, data?: GetDataRetrievalPolicyCommandOutput) => void
  ): void;
  getDataRetrievalPolicy(
    args: GetDataRetrievalPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDataRetrievalPolicyCommandOutput) => void
  ): void;
  getJobOutput(
    args: GetJobOutputCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetJobOutputCommandOutput>;
  getJobOutput(
    args: GetJobOutputCommandInput,
    cb: (err: any, data?: GetJobOutputCommandOutput) => void
  ): void;
  getJobOutput(
    args: GetJobOutputCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetJobOutputCommandOutput) => void
  ): void;
  getVaultAccessPolicy(
    args: GetVaultAccessPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetVaultAccessPolicyCommandOutput>;
  getVaultAccessPolicy(
    args: GetVaultAccessPolicyCommandInput,
    cb: (err: any, data?: GetVaultAccessPolicyCommandOutput) => void
  ): void;
  getVaultAccessPolicy(
    args: GetVaultAccessPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetVaultAccessPolicyCommandOutput) => void
  ): void;
  getVaultLock(
    args: GetVaultLockCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetVaultLockCommandOutput>;
  getVaultLock(
    args: GetVaultLockCommandInput,
    cb: (err: any, data?: GetVaultLockCommandOutput) => void
  ): void;
  getVaultLock(
    args: GetVaultLockCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetVaultLockCommandOutput) => void
  ): void;
  getVaultNotifications(
    args: GetVaultNotificationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetVaultNotificationsCommandOutput>;
  getVaultNotifications(
    args: GetVaultNotificationsCommandInput,
    cb: (err: any, data?: GetVaultNotificationsCommandOutput) => void
  ): void;
  getVaultNotifications(
    args: GetVaultNotificationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetVaultNotificationsCommandOutput) => void
  ): void;
  initiateJob(
    args: InitiateJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<InitiateJobCommandOutput>;
  initiateJob(
    args: InitiateJobCommandInput,
    cb: (err: any, data?: InitiateJobCommandOutput) => void
  ): void;
  initiateJob(
    args: InitiateJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: InitiateJobCommandOutput) => void
  ): void;
  initiateMultipartUpload(
    args: InitiateMultipartUploadCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<InitiateMultipartUploadCommandOutput>;
  initiateMultipartUpload(
    args: InitiateMultipartUploadCommandInput,
    cb: (err: any, data?: InitiateMultipartUploadCommandOutput) => void
  ): void;
  initiateMultipartUpload(
    args: InitiateMultipartUploadCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: InitiateMultipartUploadCommandOutput) => void
  ): void;
  initiateVaultLock(
    args: InitiateVaultLockCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<InitiateVaultLockCommandOutput>;
  initiateVaultLock(
    args: InitiateVaultLockCommandInput,
    cb: (err: any, data?: InitiateVaultLockCommandOutput) => void
  ): void;
  initiateVaultLock(
    args: InitiateVaultLockCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: InitiateVaultLockCommandOutput) => void
  ): void;
  listJobs(
    args: ListJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListJobsCommandOutput>;
  listJobs(
    args: ListJobsCommandInput,
    cb: (err: any, data?: ListJobsCommandOutput) => void
  ): void;
  listJobs(
    args: ListJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListJobsCommandOutput) => void
  ): void;
  listMultipartUploads(
    args: ListMultipartUploadsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListMultipartUploadsCommandOutput>;
  listMultipartUploads(
    args: ListMultipartUploadsCommandInput,
    cb: (err: any, data?: ListMultipartUploadsCommandOutput) => void
  ): void;
  listMultipartUploads(
    args: ListMultipartUploadsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListMultipartUploadsCommandOutput) => void
  ): void;
  listParts(
    args: ListPartsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListPartsCommandOutput>;
  listParts(
    args: ListPartsCommandInput,
    cb: (err: any, data?: ListPartsCommandOutput) => void
  ): void;
  listParts(
    args: ListPartsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListPartsCommandOutput) => void
  ): void;
  listProvisionedCapacity(
    args: ListProvisionedCapacityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListProvisionedCapacityCommandOutput>;
  listProvisionedCapacity(
    args: ListProvisionedCapacityCommandInput,
    cb: (err: any, data?: ListProvisionedCapacityCommandOutput) => void
  ): void;
  listProvisionedCapacity(
    args: ListProvisionedCapacityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListProvisionedCapacityCommandOutput) => void
  ): void;
  listTagsForVault(
    args: ListTagsForVaultCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForVaultCommandOutput>;
  listTagsForVault(
    args: ListTagsForVaultCommandInput,
    cb: (err: any, data?: ListTagsForVaultCommandOutput) => void
  ): void;
  listTagsForVault(
    args: ListTagsForVaultCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForVaultCommandOutput) => void
  ): void;
  listVaults(
    args: ListVaultsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListVaultsCommandOutput>;
  listVaults(
    args: ListVaultsCommandInput,
    cb: (err: any, data?: ListVaultsCommandOutput) => void
  ): void;
  listVaults(
    args: ListVaultsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListVaultsCommandOutput) => void
  ): void;
  purchaseProvisionedCapacity(
    args: PurchaseProvisionedCapacityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PurchaseProvisionedCapacityCommandOutput>;
  purchaseProvisionedCapacity(
    args: PurchaseProvisionedCapacityCommandInput,
    cb: (err: any, data?: PurchaseProvisionedCapacityCommandOutput) => void
  ): void;
  purchaseProvisionedCapacity(
    args: PurchaseProvisionedCapacityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PurchaseProvisionedCapacityCommandOutput) => void
  ): void;
  removeTagsFromVault(
    args: RemoveTagsFromVaultCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveTagsFromVaultCommandOutput>;
  removeTagsFromVault(
    args: RemoveTagsFromVaultCommandInput,
    cb: (err: any, data?: RemoveTagsFromVaultCommandOutput) => void
  ): void;
  removeTagsFromVault(
    args: RemoveTagsFromVaultCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveTagsFromVaultCommandOutput) => void
  ): void;
  setDataRetrievalPolicy(
    args: SetDataRetrievalPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetDataRetrievalPolicyCommandOutput>;
  setDataRetrievalPolicy(
    args: SetDataRetrievalPolicyCommandInput,
    cb: (err: any, data?: SetDataRetrievalPolicyCommandOutput) => void
  ): void;
  setDataRetrievalPolicy(
    args: SetDataRetrievalPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetDataRetrievalPolicyCommandOutput) => void
  ): void;
  setVaultAccessPolicy(
    args: SetVaultAccessPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetVaultAccessPolicyCommandOutput>;
  setVaultAccessPolicy(
    args: SetVaultAccessPolicyCommandInput,
    cb: (err: any, data?: SetVaultAccessPolicyCommandOutput) => void
  ): void;
  setVaultAccessPolicy(
    args: SetVaultAccessPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetVaultAccessPolicyCommandOutput) => void
  ): void;
  setVaultNotifications(
    args: SetVaultNotificationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetVaultNotificationsCommandOutput>;
  setVaultNotifications(
    args: SetVaultNotificationsCommandInput,
    cb: (err: any, data?: SetVaultNotificationsCommandOutput) => void
  ): void;
  setVaultNotifications(
    args: SetVaultNotificationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetVaultNotificationsCommandOutput) => void
  ): void;
  uploadArchive(
    args: UploadArchiveCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UploadArchiveCommandOutput>;
  uploadArchive(
    args: UploadArchiveCommandInput,
    cb: (err: any, data?: UploadArchiveCommandOutput) => void
  ): void;
  uploadArchive(
    args: UploadArchiveCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UploadArchiveCommandOutput) => void
  ): void;
  uploadMultipartPart(
    args: UploadMultipartPartCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UploadMultipartPartCommandOutput>;
  uploadMultipartPart(
    args: UploadMultipartPartCommandInput,
    cb: (err: any, data?: UploadMultipartPartCommandOutput) => void
  ): void;
  uploadMultipartPart(
    args: UploadMultipartPartCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UploadMultipartPartCommandOutput) => void
  ): void;
}
export declare class Glacier extends GlacierClient implements Glacier {}
