"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AcceptReservedNodeExchangeCommand: () => AcceptReservedNodeExchangeCommand,
  AccessToClusterDeniedFault: () => AccessToClusterDeniedFault,
  AccessToSnapshotDeniedFault: () => AccessToSnapshotDeniedFault,
  ActionType: () => ActionType,
  AddPartnerCommand: () => AddPartnerCommand,
  AquaConfigurationStatus: () => AquaConfigurationStatus,
  AquaStatus: () => AquaStatus,
  AssociateDataShareConsumerCommand: () => AssociateDataShareConsumerCommand,
  AuthenticationProfileAlreadyExistsFault: () => AuthenticationProfileAlreadyExistsFault,
  AuthenticationProfileNotFoundFault: () => AuthenticationProfileNotFoundFault,
  AuthenticationProfileQuotaExceededFault: () => AuthenticationProfileQuotaExceededFault,
  AuthorizationAlreadyExistsFault: () => AuthorizationAlreadyExistsFault,
  AuthorizationNotFoundFault: () => AuthorizationNotFoundFault,
  AuthorizationQuotaExceededFault: () => AuthorizationQuotaExceededFault,
  AuthorizationStatus: () => AuthorizationStatus,
  AuthorizeClusterSecurityGroupIngressCommand: () => AuthorizeClusterSecurityGroupIngressCommand,
  AuthorizeDataShareCommand: () => AuthorizeDataShareCommand,
  AuthorizeEndpointAccessCommand: () => AuthorizeEndpointAccessCommand,
  AuthorizeSnapshotAccessCommand: () => AuthorizeSnapshotAccessCommand,
  BatchDeleteClusterSnapshotsCommand: () => BatchDeleteClusterSnapshotsCommand,
  BatchDeleteRequestSizeExceededFault: () => BatchDeleteRequestSizeExceededFault,
  BatchModifyClusterSnapshotsCommand: () => BatchModifyClusterSnapshotsCommand,
  BatchModifyClusterSnapshotsLimitExceededFault: () => BatchModifyClusterSnapshotsLimitExceededFault,
  BucketNotFoundFault: () => BucketNotFoundFault,
  CancelResizeCommand: () => CancelResizeCommand,
  ClusterAlreadyExistsFault: () => ClusterAlreadyExistsFault,
  ClusterCredentialsFilterSensitiveLog: () => ClusterCredentialsFilterSensitiveLog,
  ClusterExtendedCredentialsFilterSensitiveLog: () => ClusterExtendedCredentialsFilterSensitiveLog,
  ClusterFilterSensitiveLog: () => ClusterFilterSensitiveLog,
  ClusterNotFoundFault: () => ClusterNotFoundFault,
  ClusterOnLatestRevisionFault: () => ClusterOnLatestRevisionFault,
  ClusterParameterGroupAlreadyExistsFault: () => ClusterParameterGroupAlreadyExistsFault,
  ClusterParameterGroupNotFoundFault: () => ClusterParameterGroupNotFoundFault,
  ClusterParameterGroupQuotaExceededFault: () => ClusterParameterGroupQuotaExceededFault,
  ClusterQuotaExceededFault: () => ClusterQuotaExceededFault,
  ClusterSecurityGroupAlreadyExistsFault: () => ClusterSecurityGroupAlreadyExistsFault,
  ClusterSecurityGroupNotFoundFault: () => ClusterSecurityGroupNotFoundFault,
  ClusterSecurityGroupQuotaExceededFault: () => ClusterSecurityGroupQuotaExceededFault,
  ClusterSnapshotAlreadyExistsFault: () => ClusterSnapshotAlreadyExistsFault,
  ClusterSnapshotNotFoundFault: () => ClusterSnapshotNotFoundFault,
  ClusterSnapshotQuotaExceededFault: () => ClusterSnapshotQuotaExceededFault,
  ClusterSubnetGroupAlreadyExistsFault: () => ClusterSubnetGroupAlreadyExistsFault,
  ClusterSubnetGroupNotFoundFault: () => ClusterSubnetGroupNotFoundFault,
  ClusterSubnetGroupQuotaExceededFault: () => ClusterSubnetGroupQuotaExceededFault,
  ClusterSubnetQuotaExceededFault: () => ClusterSubnetQuotaExceededFault,
  ClustersMessageFilterSensitiveLog: () => ClustersMessageFilterSensitiveLog,
  ConflictPolicyUpdateFault: () => ConflictPolicyUpdateFault,
  CopyClusterSnapshotCommand: () => CopyClusterSnapshotCommand,
  CopyToRegionDisabledFault: () => CopyToRegionDisabledFault,
  CreateAuthenticationProfileCommand: () => CreateAuthenticationProfileCommand,
  CreateClusterCommand: () => CreateClusterCommand,
  CreateClusterMessageFilterSensitiveLog: () => CreateClusterMessageFilterSensitiveLog,
  CreateClusterParameterGroupCommand: () => CreateClusterParameterGroupCommand,
  CreateClusterResultFilterSensitiveLog: () => CreateClusterResultFilterSensitiveLog,
  CreateClusterSecurityGroupCommand: () => CreateClusterSecurityGroupCommand,
  CreateClusterSnapshotCommand: () => CreateClusterSnapshotCommand,
  CreateClusterSubnetGroupCommand: () => CreateClusterSubnetGroupCommand,
  CreateCustomDomainAssociationCommand: () => CreateCustomDomainAssociationCommand,
  CreateEndpointAccessCommand: () => CreateEndpointAccessCommand,
  CreateEventSubscriptionCommand: () => CreateEventSubscriptionCommand,
  CreateHsmClientCertificateCommand: () => CreateHsmClientCertificateCommand,
  CreateHsmConfigurationCommand: () => CreateHsmConfigurationCommand,
  CreateRedshiftIdcApplicationCommand: () => CreateRedshiftIdcApplicationCommand,
  CreateScheduledActionCommand: () => CreateScheduledActionCommand,
  CreateSnapshotCopyGrantCommand: () => CreateSnapshotCopyGrantCommand,
  CreateSnapshotScheduleCommand: () => CreateSnapshotScheduleCommand,
  CreateTagsCommand: () => CreateTagsCommand,
  CreateUsageLimitCommand: () => CreateUsageLimitCommand,
  CustomCnameAssociationFault: () => CustomCnameAssociationFault,
  CustomDomainAssociationNotFoundFault: () => CustomDomainAssociationNotFoundFault,
  DataShareStatus: () => DataShareStatus,
  DataShareStatusForConsumer: () => DataShareStatusForConsumer,
  DataShareStatusForProducer: () => DataShareStatusForProducer,
  DeauthorizeDataShareCommand: () => DeauthorizeDataShareCommand,
  DeleteAuthenticationProfileCommand: () => DeleteAuthenticationProfileCommand,
  DeleteClusterCommand: () => DeleteClusterCommand,
  DeleteClusterParameterGroupCommand: () => DeleteClusterParameterGroupCommand,
  DeleteClusterResultFilterSensitiveLog: () => DeleteClusterResultFilterSensitiveLog,
  DeleteClusterSecurityGroupCommand: () => DeleteClusterSecurityGroupCommand,
  DeleteClusterSnapshotCommand: () => DeleteClusterSnapshotCommand,
  DeleteClusterSubnetGroupCommand: () => DeleteClusterSubnetGroupCommand,
  DeleteCustomDomainAssociationCommand: () => DeleteCustomDomainAssociationCommand,
  DeleteEndpointAccessCommand: () => DeleteEndpointAccessCommand,
  DeleteEventSubscriptionCommand: () => DeleteEventSubscriptionCommand,
  DeleteHsmClientCertificateCommand: () => DeleteHsmClientCertificateCommand,
  DeleteHsmConfigurationCommand: () => DeleteHsmConfigurationCommand,
  DeletePartnerCommand: () => DeletePartnerCommand,
  DeleteRedshiftIdcApplicationCommand: () => DeleteRedshiftIdcApplicationCommand,
  DeleteResourcePolicyCommand: () => DeleteResourcePolicyCommand,
  DeleteScheduledActionCommand: () => DeleteScheduledActionCommand,
  DeleteSnapshotCopyGrantCommand: () => DeleteSnapshotCopyGrantCommand,
  DeleteSnapshotScheduleCommand: () => DeleteSnapshotScheduleCommand,
  DeleteTagsCommand: () => DeleteTagsCommand,
  DeleteUsageLimitCommand: () => DeleteUsageLimitCommand,
  DependentServiceAccessDeniedFault: () => DependentServiceAccessDeniedFault,
  DependentServiceRequestThrottlingFault: () => DependentServiceRequestThrottlingFault,
  DependentServiceUnavailableFault: () => DependentServiceUnavailableFault,
  DescribeAccountAttributesCommand: () => DescribeAccountAttributesCommand,
  DescribeAuthenticationProfilesCommand: () => DescribeAuthenticationProfilesCommand,
  DescribeClusterDbRevisionsCommand: () => DescribeClusterDbRevisionsCommand,
  DescribeClusterParameterGroupsCommand: () => DescribeClusterParameterGroupsCommand,
  DescribeClusterParametersCommand: () => DescribeClusterParametersCommand,
  DescribeClusterSecurityGroupsCommand: () => DescribeClusterSecurityGroupsCommand,
  DescribeClusterSnapshotsCommand: () => DescribeClusterSnapshotsCommand,
  DescribeClusterSubnetGroupsCommand: () => DescribeClusterSubnetGroupsCommand,
  DescribeClusterTracksCommand: () => DescribeClusterTracksCommand,
  DescribeClusterVersionsCommand: () => DescribeClusterVersionsCommand,
  DescribeClustersCommand: () => DescribeClustersCommand,
  DescribeCustomDomainAssociationsCommand: () => DescribeCustomDomainAssociationsCommand,
  DescribeDataSharesCommand: () => DescribeDataSharesCommand,
  DescribeDataSharesForConsumerCommand: () => DescribeDataSharesForConsumerCommand,
  DescribeDataSharesForProducerCommand: () => DescribeDataSharesForProducerCommand,
  DescribeDefaultClusterParametersCommand: () => DescribeDefaultClusterParametersCommand,
  DescribeEndpointAccessCommand: () => DescribeEndpointAccessCommand,
  DescribeEndpointAuthorizationCommand: () => DescribeEndpointAuthorizationCommand,
  DescribeEventCategoriesCommand: () => DescribeEventCategoriesCommand,
  DescribeEventSubscriptionsCommand: () => DescribeEventSubscriptionsCommand,
  DescribeEventsCommand: () => DescribeEventsCommand,
  DescribeHsmClientCertificatesCommand: () => DescribeHsmClientCertificatesCommand,
  DescribeHsmConfigurationsCommand: () => DescribeHsmConfigurationsCommand,
  DescribeInboundIntegrationsCommand: () => DescribeInboundIntegrationsCommand,
  DescribeLoggingStatusCommand: () => DescribeLoggingStatusCommand,
  DescribeNodeConfigurationOptionsCommand: () => DescribeNodeConfigurationOptionsCommand,
  DescribeOrderableClusterOptionsCommand: () => DescribeOrderableClusterOptionsCommand,
  DescribePartnersCommand: () => DescribePartnersCommand,
  DescribeRedshiftIdcApplicationsCommand: () => DescribeRedshiftIdcApplicationsCommand,
  DescribeReservedNodeExchangeStatusCommand: () => DescribeReservedNodeExchangeStatusCommand,
  DescribeReservedNodeOfferingsCommand: () => DescribeReservedNodeOfferingsCommand,
  DescribeReservedNodesCommand: () => DescribeReservedNodesCommand,
  DescribeResizeCommand: () => DescribeResizeCommand,
  DescribeScheduledActionsCommand: () => DescribeScheduledActionsCommand,
  DescribeSnapshotCopyGrantsCommand: () => DescribeSnapshotCopyGrantsCommand,
  DescribeSnapshotSchedulesCommand: () => DescribeSnapshotSchedulesCommand,
  DescribeStorageCommand: () => DescribeStorageCommand,
  DescribeTableRestoreStatusCommand: () => DescribeTableRestoreStatusCommand,
  DescribeTagsCommand: () => DescribeTagsCommand,
  DescribeUsageLimitsCommand: () => DescribeUsageLimitsCommand,
  DisableLoggingCommand: () => DisableLoggingCommand,
  DisableSnapshotCopyCommand: () => DisableSnapshotCopyCommand,
  DisableSnapshotCopyResultFilterSensitiveLog: () => DisableSnapshotCopyResultFilterSensitiveLog,
  DisassociateDataShareConsumerCommand: () => DisassociateDataShareConsumerCommand,
  EnableLoggingCommand: () => EnableLoggingCommand,
  EnableSnapshotCopyCommand: () => EnableSnapshotCopyCommand,
  EnableSnapshotCopyResultFilterSensitiveLog: () => EnableSnapshotCopyResultFilterSensitiveLog,
  EndpointAlreadyExistsFault: () => EndpointAlreadyExistsFault,
  EndpointAuthorizationAlreadyExistsFault: () => EndpointAuthorizationAlreadyExistsFault,
  EndpointAuthorizationNotFoundFault: () => EndpointAuthorizationNotFoundFault,
  EndpointAuthorizationsPerClusterLimitExceededFault: () => EndpointAuthorizationsPerClusterLimitExceededFault,
  EndpointNotFoundFault: () => EndpointNotFoundFault,
  EndpointsPerAuthorizationLimitExceededFault: () => EndpointsPerAuthorizationLimitExceededFault,
  EndpointsPerClusterLimitExceededFault: () => EndpointsPerClusterLimitExceededFault,
  EventSubscriptionQuotaExceededFault: () => EventSubscriptionQuotaExceededFault,
  FailoverPrimaryComputeCommand: () => FailoverPrimaryComputeCommand,
  FailoverPrimaryComputeResultFilterSensitiveLog: () => FailoverPrimaryComputeResultFilterSensitiveLog,
  GetClusterCredentialsCommand: () => GetClusterCredentialsCommand,
  GetClusterCredentialsWithIAMCommand: () => GetClusterCredentialsWithIAMCommand,
  GetReservedNodeExchangeConfigurationOptionsCommand: () => GetReservedNodeExchangeConfigurationOptionsCommand,
  GetReservedNodeExchangeOfferingsCommand: () => GetReservedNodeExchangeOfferingsCommand,
  GetResourcePolicyCommand: () => GetResourcePolicyCommand,
  HsmClientCertificateAlreadyExistsFault: () => HsmClientCertificateAlreadyExistsFault,
  HsmClientCertificateNotFoundFault: () => HsmClientCertificateNotFoundFault,
  HsmClientCertificateQuotaExceededFault: () => HsmClientCertificateQuotaExceededFault,
  HsmConfigurationAlreadyExistsFault: () => HsmConfigurationAlreadyExistsFault,
  HsmConfigurationNotFoundFault: () => HsmConfigurationNotFoundFault,
  HsmConfigurationQuotaExceededFault: () => HsmConfigurationQuotaExceededFault,
  ImpactRankingType: () => ImpactRankingType,
  InProgressTableRestoreQuotaExceededFault: () => InProgressTableRestoreQuotaExceededFault,
  IncompatibleOrderableOptions: () => IncompatibleOrderableOptions,
  InsufficientClusterCapacityFault: () => InsufficientClusterCapacityFault,
  InsufficientS3BucketPolicyFault: () => InsufficientS3BucketPolicyFault,
  IntegrationNotFoundFault: () => IntegrationNotFoundFault,
  InvalidAuthenticationProfileRequestFault: () => InvalidAuthenticationProfileRequestFault,
  InvalidAuthorizationStateFault: () => InvalidAuthorizationStateFault,
  InvalidClusterParameterGroupStateFault: () => InvalidClusterParameterGroupStateFault,
  InvalidClusterSecurityGroupStateFault: () => InvalidClusterSecurityGroupStateFault,
  InvalidClusterSnapshotScheduleStateFault: () => InvalidClusterSnapshotScheduleStateFault,
  InvalidClusterSnapshotStateFault: () => InvalidClusterSnapshotStateFault,
  InvalidClusterStateFault: () => InvalidClusterStateFault,
  InvalidClusterSubnetGroupStateFault: () => InvalidClusterSubnetGroupStateFault,
  InvalidClusterSubnetStateFault: () => InvalidClusterSubnetStateFault,
  InvalidClusterTrackFault: () => InvalidClusterTrackFault,
  InvalidDataShareFault: () => InvalidDataShareFault,
  InvalidElasticIpFault: () => InvalidElasticIpFault,
  InvalidEndpointStateFault: () => InvalidEndpointStateFault,
  InvalidHsmClientCertificateStateFault: () => InvalidHsmClientCertificateStateFault,
  InvalidHsmConfigurationStateFault: () => InvalidHsmConfigurationStateFault,
  InvalidNamespaceFault: () => InvalidNamespaceFault,
  InvalidPolicyFault: () => InvalidPolicyFault,
  InvalidReservedNodeStateFault: () => InvalidReservedNodeStateFault,
  InvalidRestoreFault: () => InvalidRestoreFault,
  InvalidRetentionPeriodFault: () => InvalidRetentionPeriodFault,
  InvalidS3BucketNameFault: () => InvalidS3BucketNameFault,
  InvalidS3KeyPrefixFault: () => InvalidS3KeyPrefixFault,
  InvalidScheduleFault: () => InvalidScheduleFault,
  InvalidScheduledActionFault: () => InvalidScheduledActionFault,
  InvalidSnapshotCopyGrantStateFault: () => InvalidSnapshotCopyGrantStateFault,
  InvalidSubnet: () => InvalidSubnet,
  InvalidSubscriptionStateFault: () => InvalidSubscriptionStateFault,
  InvalidTableRestoreArgumentFault: () => InvalidTableRestoreArgumentFault,
  InvalidTagFault: () => InvalidTagFault,
  InvalidUsageLimitFault: () => InvalidUsageLimitFault,
  InvalidVPCNetworkStateFault: () => InvalidVPCNetworkStateFault,
  Ipv6CidrBlockNotFoundFault: () => Ipv6CidrBlockNotFoundFault,
  LakeFormationScopeUnion: () => LakeFormationScopeUnion,
  LimitExceededFault: () => LimitExceededFault,
  ListRecommendationsCommand: () => ListRecommendationsCommand,
  LogDestinationType: () => LogDestinationType,
  Mode: () => Mode,
  ModifyAquaConfigurationCommand: () => ModifyAquaConfigurationCommand,
  ModifyAuthenticationProfileCommand: () => ModifyAuthenticationProfileCommand,
  ModifyClusterCommand: () => ModifyClusterCommand,
  ModifyClusterDbRevisionCommand: () => ModifyClusterDbRevisionCommand,
  ModifyClusterDbRevisionResultFilterSensitiveLog: () => ModifyClusterDbRevisionResultFilterSensitiveLog,
  ModifyClusterIamRolesCommand: () => ModifyClusterIamRolesCommand,
  ModifyClusterIamRolesResultFilterSensitiveLog: () => ModifyClusterIamRolesResultFilterSensitiveLog,
  ModifyClusterMaintenanceCommand: () => ModifyClusterMaintenanceCommand,
  ModifyClusterMaintenanceResultFilterSensitiveLog: () => ModifyClusterMaintenanceResultFilterSensitiveLog,
  ModifyClusterMessageFilterSensitiveLog: () => ModifyClusterMessageFilterSensitiveLog,
  ModifyClusterParameterGroupCommand: () => ModifyClusterParameterGroupCommand,
  ModifyClusterResultFilterSensitiveLog: () => ModifyClusterResultFilterSensitiveLog,
  ModifyClusterSnapshotCommand: () => ModifyClusterSnapshotCommand,
  ModifyClusterSnapshotScheduleCommand: () => ModifyClusterSnapshotScheduleCommand,
  ModifyClusterSubnetGroupCommand: () => ModifyClusterSubnetGroupCommand,
  ModifyCustomDomainAssociationCommand: () => ModifyCustomDomainAssociationCommand,
  ModifyEndpointAccessCommand: () => ModifyEndpointAccessCommand,
  ModifyEventSubscriptionCommand: () => ModifyEventSubscriptionCommand,
  ModifyRedshiftIdcApplicationCommand: () => ModifyRedshiftIdcApplicationCommand,
  ModifyScheduledActionCommand: () => ModifyScheduledActionCommand,
  ModifySnapshotCopyRetentionPeriodCommand: () => ModifySnapshotCopyRetentionPeriodCommand,
  ModifySnapshotCopyRetentionPeriodResultFilterSensitiveLog: () => ModifySnapshotCopyRetentionPeriodResultFilterSensitiveLog,
  ModifySnapshotScheduleCommand: () => ModifySnapshotScheduleCommand,
  ModifyUsageLimitCommand: () => ModifyUsageLimitCommand,
  NodeConfigurationOptionsFilterName: () => NodeConfigurationOptionsFilterName,
  NumberOfNodesPerClusterLimitExceededFault: () => NumberOfNodesPerClusterLimitExceededFault,
  NumberOfNodesQuotaExceededFault: () => NumberOfNodesQuotaExceededFault,
  OperatorType: () => OperatorType,
  ParameterApplyType: () => ParameterApplyType,
  PartnerIntegrationStatus: () => PartnerIntegrationStatus,
  PartnerNotFoundFault: () => PartnerNotFoundFault,
  PauseClusterCommand: () => PauseClusterCommand,
  PauseClusterResultFilterSensitiveLog: () => PauseClusterResultFilterSensitiveLog,
  PendingModifiedValuesFilterSensitiveLog: () => PendingModifiedValuesFilterSensitiveLog,
  PurchaseReservedNodeOfferingCommand: () => PurchaseReservedNodeOfferingCommand,
  PutResourcePolicyCommand: () => PutResourcePolicyCommand,
  RebootClusterCommand: () => RebootClusterCommand,
  RebootClusterResultFilterSensitiveLog: () => RebootClusterResultFilterSensitiveLog,
  RecommendedActionType: () => RecommendedActionType,
  Redshift: () => Redshift,
  RedshiftClient: () => RedshiftClient,
  RedshiftIdcApplicationAlreadyExistsFault: () => RedshiftIdcApplicationAlreadyExistsFault,
  RedshiftIdcApplicationNotExistsFault: () => RedshiftIdcApplicationNotExistsFault,
  RedshiftIdcApplicationQuotaExceededFault: () => RedshiftIdcApplicationQuotaExceededFault,
  RedshiftServiceException: () => RedshiftServiceException,
  RejectDataShareCommand: () => RejectDataShareCommand,
  ReservedNodeAlreadyExistsFault: () => ReservedNodeAlreadyExistsFault,
  ReservedNodeAlreadyMigratedFault: () => ReservedNodeAlreadyMigratedFault,
  ReservedNodeExchangeActionType: () => ReservedNodeExchangeActionType,
  ReservedNodeExchangeNotFoundFault: () => ReservedNodeExchangeNotFoundFault,
  ReservedNodeExchangeStatusType: () => ReservedNodeExchangeStatusType,
  ReservedNodeNotFoundFault: () => ReservedNodeNotFoundFault,
  ReservedNodeOfferingNotFoundFault: () => ReservedNodeOfferingNotFoundFault,
  ReservedNodeOfferingType: () => ReservedNodeOfferingType,
  ReservedNodeQuotaExceededFault: () => ReservedNodeQuotaExceededFault,
  ResetClusterParameterGroupCommand: () => ResetClusterParameterGroupCommand,
  ResizeClusterCommand: () => ResizeClusterCommand,
  ResizeClusterResultFilterSensitiveLog: () => ResizeClusterResultFilterSensitiveLog,
  ResizeNotFoundFault: () => ResizeNotFoundFault,
  ResourceNotFoundFault: () => ResourceNotFoundFault,
  RestoreFromClusterSnapshotCommand: () => RestoreFromClusterSnapshotCommand,
  RestoreFromClusterSnapshotResultFilterSensitiveLog: () => RestoreFromClusterSnapshotResultFilterSensitiveLog,
  RestoreTableFromClusterSnapshotCommand: () => RestoreTableFromClusterSnapshotCommand,
  ResumeClusterCommand: () => ResumeClusterCommand,
  ResumeClusterResultFilterSensitiveLog: () => ResumeClusterResultFilterSensitiveLog,
  RevokeClusterSecurityGroupIngressCommand: () => RevokeClusterSecurityGroupIngressCommand,
  RevokeEndpointAccessCommand: () => RevokeEndpointAccessCommand,
  RevokeSnapshotAccessCommand: () => RevokeSnapshotAccessCommand,
  RotateEncryptionKeyCommand: () => RotateEncryptionKeyCommand,
  RotateEncryptionKeyResultFilterSensitiveLog: () => RotateEncryptionKeyResultFilterSensitiveLog,
  SNSInvalidTopicFault: () => SNSInvalidTopicFault,
  SNSNoAuthorizationFault: () => SNSNoAuthorizationFault,
  SNSTopicArnNotFoundFault: () => SNSTopicArnNotFoundFault,
  ScheduleDefinitionTypeUnsupportedFault: () => ScheduleDefinitionTypeUnsupportedFault,
  ScheduleState: () => ScheduleState,
  ScheduledActionAlreadyExistsFault: () => ScheduledActionAlreadyExistsFault,
  ScheduledActionFilterName: () => ScheduledActionFilterName,
  ScheduledActionNotFoundFault: () => ScheduledActionNotFoundFault,
  ScheduledActionQuotaExceededFault: () => ScheduledActionQuotaExceededFault,
  ScheduledActionState: () => ScheduledActionState,
  ScheduledActionTypeUnsupportedFault: () => ScheduledActionTypeUnsupportedFault,
  ScheduledActionTypeValues: () => ScheduledActionTypeValues,
  ServiceAuthorization: () => ServiceAuthorization,
  ServiceIntegrationsUnion: () => ServiceIntegrationsUnion,
  SnapshotAttributeToSortBy: () => SnapshotAttributeToSortBy,
  SnapshotCopyAlreadyDisabledFault: () => SnapshotCopyAlreadyDisabledFault,
  SnapshotCopyAlreadyEnabledFault: () => SnapshotCopyAlreadyEnabledFault,
  SnapshotCopyDisabledFault: () => SnapshotCopyDisabledFault,
  SnapshotCopyGrantAlreadyExistsFault: () => SnapshotCopyGrantAlreadyExistsFault,
  SnapshotCopyGrantNotFoundFault: () => SnapshotCopyGrantNotFoundFault,
  SnapshotCopyGrantQuotaExceededFault: () => SnapshotCopyGrantQuotaExceededFault,
  SnapshotScheduleAlreadyExistsFault: () => SnapshotScheduleAlreadyExistsFault,
  SnapshotScheduleNotFoundFault: () => SnapshotScheduleNotFoundFault,
  SnapshotScheduleQuotaExceededFault: () => SnapshotScheduleQuotaExceededFault,
  SnapshotScheduleUpdateInProgressFault: () => SnapshotScheduleUpdateInProgressFault,
  SortByOrder: () => SortByOrder,
  SourceNotFoundFault: () => SourceNotFoundFault,
  SourceType: () => SourceType,
  SubnetAlreadyInUse: () => SubnetAlreadyInUse,
  SubscriptionAlreadyExistFault: () => SubscriptionAlreadyExistFault,
  SubscriptionCategoryNotFoundFault: () => SubscriptionCategoryNotFoundFault,
  SubscriptionEventIdNotFoundFault: () => SubscriptionEventIdNotFoundFault,
  SubscriptionNotFoundFault: () => SubscriptionNotFoundFault,
  SubscriptionSeverityNotFoundFault: () => SubscriptionSeverityNotFoundFault,
  TableLimitExceededFault: () => TableLimitExceededFault,
  TableRestoreNotFoundFault: () => TableRestoreNotFoundFault,
  TableRestoreStatusType: () => TableRestoreStatusType,
  TagLimitExceededFault: () => TagLimitExceededFault,
  UnauthorizedOperation: () => UnauthorizedOperation,
  UnauthorizedPartnerIntegrationFault: () => UnauthorizedPartnerIntegrationFault,
  UnknownSnapshotCopyRegionFault: () => UnknownSnapshotCopyRegionFault,
  UnsupportedOperationFault: () => UnsupportedOperationFault,
  UnsupportedOptionFault: () => UnsupportedOptionFault,
  UpdatePartnerStatusCommand: () => UpdatePartnerStatusCommand,
  UsageLimitAlreadyExistsFault: () => UsageLimitAlreadyExistsFault,
  UsageLimitBreachAction: () => UsageLimitBreachAction,
  UsageLimitFeatureType: () => UsageLimitFeatureType,
  UsageLimitLimitType: () => UsageLimitLimitType,
  UsageLimitNotFoundFault: () => UsageLimitNotFoundFault,
  UsageLimitPeriod: () => UsageLimitPeriod,
  ZeroETLIntegrationStatus: () => ZeroETLIntegrationStatus,
  __Client: () => import_smithy_client.Client,
  paginateDescribeClusterDbRevisions: () => paginateDescribeClusterDbRevisions,
  paginateDescribeClusterParameterGroups: () => paginateDescribeClusterParameterGroups,
  paginateDescribeClusterParameters: () => paginateDescribeClusterParameters,
  paginateDescribeClusterSecurityGroups: () => paginateDescribeClusterSecurityGroups,
  paginateDescribeClusterSnapshots: () => paginateDescribeClusterSnapshots,
  paginateDescribeClusterSubnetGroups: () => paginateDescribeClusterSubnetGroups,
  paginateDescribeClusterTracks: () => paginateDescribeClusterTracks,
  paginateDescribeClusterVersions: () => paginateDescribeClusterVersions,
  paginateDescribeClusters: () => paginateDescribeClusters,
  paginateDescribeCustomDomainAssociations: () => paginateDescribeCustomDomainAssociations,
  paginateDescribeDataShares: () => paginateDescribeDataShares,
  paginateDescribeDataSharesForConsumer: () => paginateDescribeDataSharesForConsumer,
  paginateDescribeDataSharesForProducer: () => paginateDescribeDataSharesForProducer,
  paginateDescribeDefaultClusterParameters: () => paginateDescribeDefaultClusterParameters,
  paginateDescribeEndpointAccess: () => paginateDescribeEndpointAccess,
  paginateDescribeEndpointAuthorization: () => paginateDescribeEndpointAuthorization,
  paginateDescribeEventSubscriptions: () => paginateDescribeEventSubscriptions,
  paginateDescribeEvents: () => paginateDescribeEvents,
  paginateDescribeHsmClientCertificates: () => paginateDescribeHsmClientCertificates,
  paginateDescribeHsmConfigurations: () => paginateDescribeHsmConfigurations,
  paginateDescribeInboundIntegrations: () => paginateDescribeInboundIntegrations,
  paginateDescribeNodeConfigurationOptions: () => paginateDescribeNodeConfigurationOptions,
  paginateDescribeOrderableClusterOptions: () => paginateDescribeOrderableClusterOptions,
  paginateDescribeRedshiftIdcApplications: () => paginateDescribeRedshiftIdcApplications,
  paginateDescribeReservedNodeExchangeStatus: () => paginateDescribeReservedNodeExchangeStatus,
  paginateDescribeReservedNodeOfferings: () => paginateDescribeReservedNodeOfferings,
  paginateDescribeReservedNodes: () => paginateDescribeReservedNodes,
  paginateDescribeScheduledActions: () => paginateDescribeScheduledActions,
  paginateDescribeSnapshotCopyGrants: () => paginateDescribeSnapshotCopyGrants,
  paginateDescribeSnapshotSchedules: () => paginateDescribeSnapshotSchedules,
  paginateDescribeTableRestoreStatus: () => paginateDescribeTableRestoreStatus,
  paginateDescribeTags: () => paginateDescribeTags,
  paginateDescribeUsageLimits: () => paginateDescribeUsageLimits,
  paginateGetReservedNodeExchangeConfigurationOptions: () => paginateGetReservedNodeExchangeConfigurationOptions,
  paginateGetReservedNodeExchangeOfferings: () => paginateGetReservedNodeExchangeOfferings,
  paginateListRecommendations: () => paginateListRecommendations,
  waitForClusterAvailable: () => waitForClusterAvailable,
  waitForClusterDeleted: () => waitForClusterDeleted,
  waitForClusterRestored: () => waitForClusterRestored,
  waitForSnapshotAvailable: () => waitForSnapshotAvailable,
  waitUntilClusterAvailable: () => waitUntilClusterAvailable,
  waitUntilClusterDeleted: () => waitUntilClusterDeleted,
  waitUntilClusterRestored: () => waitUntilClusterRestored,
  waitUntilSnapshotAvailable: () => waitUntilSnapshotAvailable
});
module.exports = __toCommonJS(src_exports);

// src/RedshiftClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "redshift"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/RedshiftClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/RedshiftClient.ts
var _RedshiftClient = class _RedshiftClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultRedshiftHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_RedshiftClient, "RedshiftClient");
var RedshiftClient = _RedshiftClient;

// src/Redshift.ts


// src/commands/AcceptReservedNodeExchangeCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_query.ts
var import_core2 = require("@aws-sdk/core");



// src/models/models_0.ts


// src/models/RedshiftServiceException.ts

var _RedshiftServiceException = class _RedshiftServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _RedshiftServiceException.prototype);
  }
};
__name(_RedshiftServiceException, "RedshiftServiceException");
var RedshiftServiceException = _RedshiftServiceException;

// src/models/models_0.ts
var ReservedNodeOfferingType = {
  Regular: "Regular",
  Upgradable: "Upgradable"
};
var _DependentServiceUnavailableFault = class _DependentServiceUnavailableFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DependentServiceUnavailableFault",
      $fault: "client",
      ...opts
    });
    this.name = "DependentServiceUnavailableFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DependentServiceUnavailableFault.prototype);
  }
};
__name(_DependentServiceUnavailableFault, "DependentServiceUnavailableFault");
var DependentServiceUnavailableFault = _DependentServiceUnavailableFault;
var _InvalidReservedNodeStateFault = class _InvalidReservedNodeStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidReservedNodeStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidReservedNodeStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidReservedNodeStateFault.prototype);
  }
};
__name(_InvalidReservedNodeStateFault, "InvalidReservedNodeStateFault");
var InvalidReservedNodeStateFault = _InvalidReservedNodeStateFault;
var _ReservedNodeAlreadyExistsFault = class _ReservedNodeAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodeAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodeAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodeAlreadyExistsFault.prototype);
  }
};
__name(_ReservedNodeAlreadyExistsFault, "ReservedNodeAlreadyExistsFault");
var ReservedNodeAlreadyExistsFault = _ReservedNodeAlreadyExistsFault;
var _ReservedNodeAlreadyMigratedFault = class _ReservedNodeAlreadyMigratedFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodeAlreadyMigratedFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodeAlreadyMigratedFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodeAlreadyMigratedFault.prototype);
  }
};
__name(_ReservedNodeAlreadyMigratedFault, "ReservedNodeAlreadyMigratedFault");
var ReservedNodeAlreadyMigratedFault = _ReservedNodeAlreadyMigratedFault;
var _ReservedNodeNotFoundFault = class _ReservedNodeNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodeNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodeNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodeNotFoundFault.prototype);
  }
};
__name(_ReservedNodeNotFoundFault, "ReservedNodeNotFoundFault");
var ReservedNodeNotFoundFault = _ReservedNodeNotFoundFault;
var _ReservedNodeOfferingNotFoundFault = class _ReservedNodeOfferingNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodeOfferingNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodeOfferingNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodeOfferingNotFoundFault.prototype);
  }
};
__name(_ReservedNodeOfferingNotFoundFault, "ReservedNodeOfferingNotFoundFault");
var ReservedNodeOfferingNotFoundFault = _ReservedNodeOfferingNotFoundFault;
var _UnsupportedOperationFault = class _UnsupportedOperationFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnsupportedOperationFault",
      $fault: "client",
      ...opts
    });
    this.name = "UnsupportedOperationFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnsupportedOperationFault.prototype);
  }
};
__name(_UnsupportedOperationFault, "UnsupportedOperationFault");
var UnsupportedOperationFault = _UnsupportedOperationFault;
var _AccessToClusterDeniedFault = class _AccessToClusterDeniedFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessToClusterDeniedFault",
      $fault: "client",
      ...opts
    });
    this.name = "AccessToClusterDeniedFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessToClusterDeniedFault.prototype);
  }
};
__name(_AccessToClusterDeniedFault, "AccessToClusterDeniedFault");
var AccessToClusterDeniedFault = _AccessToClusterDeniedFault;
var _AccessToSnapshotDeniedFault = class _AccessToSnapshotDeniedFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessToSnapshotDeniedFault",
      $fault: "client",
      ...opts
    });
    this.name = "AccessToSnapshotDeniedFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessToSnapshotDeniedFault.prototype);
  }
};
__name(_AccessToSnapshotDeniedFault, "AccessToSnapshotDeniedFault");
var AccessToSnapshotDeniedFault = _AccessToSnapshotDeniedFault;
var ActionType = {
  RECOMMEND_NODE_CONFIG: "recommend-node-config",
  RESIZE_CLUSTER: "resize-cluster",
  RESTORE_CLUSTER: "restore-cluster"
};
var _ClusterNotFoundFault = class _ClusterNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterNotFoundFault.prototype);
  }
};
__name(_ClusterNotFoundFault, "ClusterNotFoundFault");
var ClusterNotFoundFault = _ClusterNotFoundFault;
var _PartnerNotFoundFault = class _PartnerNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "PartnerNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "PartnerNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _PartnerNotFoundFault.prototype);
  }
};
__name(_PartnerNotFoundFault, "PartnerNotFoundFault");
var PartnerNotFoundFault = _PartnerNotFoundFault;
var _UnauthorizedPartnerIntegrationFault = class _UnauthorizedPartnerIntegrationFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnauthorizedPartnerIntegrationFault",
      $fault: "client",
      ...opts
    });
    this.name = "UnauthorizedPartnerIntegrationFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnauthorizedPartnerIntegrationFault.prototype);
  }
};
__name(_UnauthorizedPartnerIntegrationFault, "UnauthorizedPartnerIntegrationFault");
var UnauthorizedPartnerIntegrationFault = _UnauthorizedPartnerIntegrationFault;
var AquaConfigurationStatus = {
  AUTO: "auto",
  DISABLED: "disabled",
  ENABLED: "enabled"
};
var AquaStatus = {
  APPLYING: "applying",
  DISABLED: "disabled",
  ENABLED: "enabled"
};
var DataShareStatus = {
  ACTIVE: "ACTIVE",
  AUTHORIZED: "AUTHORIZED",
  AVAILABLE: "AVAILABLE",
  DEAUTHORIZED: "DEAUTHORIZED",
  PENDING_AUTHORIZATION: "PENDING_AUTHORIZATION",
  REJECTED: "REJECTED"
};
var _InvalidDataShareFault = class _InvalidDataShareFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidDataShareFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidDataShareFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidDataShareFault.prototype);
  }
};
__name(_InvalidDataShareFault, "InvalidDataShareFault");
var InvalidDataShareFault = _InvalidDataShareFault;
var _InvalidNamespaceFault = class _InvalidNamespaceFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidNamespaceFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidNamespaceFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidNamespaceFault.prototype);
  }
};
__name(_InvalidNamespaceFault, "InvalidNamespaceFault");
var InvalidNamespaceFault = _InvalidNamespaceFault;
var ScheduleState = {
  ACTIVE: "ACTIVE",
  FAILED: "FAILED",
  MODIFYING: "MODIFYING"
};
var _AuthenticationProfileAlreadyExistsFault = class _AuthenticationProfileAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AuthenticationProfileAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "AuthenticationProfileAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AuthenticationProfileAlreadyExistsFault.prototype);
  }
};
__name(_AuthenticationProfileAlreadyExistsFault, "AuthenticationProfileAlreadyExistsFault");
var AuthenticationProfileAlreadyExistsFault = _AuthenticationProfileAlreadyExistsFault;
var _AuthenticationProfileNotFoundFault = class _AuthenticationProfileNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AuthenticationProfileNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "AuthenticationProfileNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AuthenticationProfileNotFoundFault.prototype);
  }
};
__name(_AuthenticationProfileNotFoundFault, "AuthenticationProfileNotFoundFault");
var AuthenticationProfileNotFoundFault = _AuthenticationProfileNotFoundFault;
var _AuthenticationProfileQuotaExceededFault = class _AuthenticationProfileQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AuthenticationProfileQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "AuthenticationProfileQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AuthenticationProfileQuotaExceededFault.prototype);
  }
};
__name(_AuthenticationProfileQuotaExceededFault, "AuthenticationProfileQuotaExceededFault");
var AuthenticationProfileQuotaExceededFault = _AuthenticationProfileQuotaExceededFault;
var _AuthorizationAlreadyExistsFault = class _AuthorizationAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AuthorizationAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "AuthorizationAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AuthorizationAlreadyExistsFault.prototype);
  }
};
__name(_AuthorizationAlreadyExistsFault, "AuthorizationAlreadyExistsFault");
var AuthorizationAlreadyExistsFault = _AuthorizationAlreadyExistsFault;
var _AuthorizationNotFoundFault = class _AuthorizationNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AuthorizationNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "AuthorizationNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AuthorizationNotFoundFault.prototype);
  }
};
__name(_AuthorizationNotFoundFault, "AuthorizationNotFoundFault");
var AuthorizationNotFoundFault = _AuthorizationNotFoundFault;
var _AuthorizationQuotaExceededFault = class _AuthorizationQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AuthorizationQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "AuthorizationQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AuthorizationQuotaExceededFault.prototype);
  }
};
__name(_AuthorizationQuotaExceededFault, "AuthorizationQuotaExceededFault");
var AuthorizationQuotaExceededFault = _AuthorizationQuotaExceededFault;
var AuthorizationStatus = {
  AUTHORIZED: "Authorized",
  REVOKING: "Revoking"
};
var _ClusterSecurityGroupNotFoundFault = class _ClusterSecurityGroupNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSecurityGroupNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSecurityGroupNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSecurityGroupNotFoundFault.prototype);
  }
};
__name(_ClusterSecurityGroupNotFoundFault, "ClusterSecurityGroupNotFoundFault");
var ClusterSecurityGroupNotFoundFault = _ClusterSecurityGroupNotFoundFault;
var _InvalidClusterSecurityGroupStateFault = class _InvalidClusterSecurityGroupStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidClusterSecurityGroupStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidClusterSecurityGroupStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidClusterSecurityGroupStateFault.prototype);
  }
};
__name(_InvalidClusterSecurityGroupStateFault, "InvalidClusterSecurityGroupStateFault");
var InvalidClusterSecurityGroupStateFault = _InvalidClusterSecurityGroupStateFault;
var _EndpointAuthorizationAlreadyExistsFault = class _EndpointAuthorizationAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EndpointAuthorizationAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "EndpointAuthorizationAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _EndpointAuthorizationAlreadyExistsFault.prototype);
  }
};
__name(_EndpointAuthorizationAlreadyExistsFault, "EndpointAuthorizationAlreadyExistsFault");
var EndpointAuthorizationAlreadyExistsFault = _EndpointAuthorizationAlreadyExistsFault;
var _EndpointAuthorizationsPerClusterLimitExceededFault = class _EndpointAuthorizationsPerClusterLimitExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EndpointAuthorizationsPerClusterLimitExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "EndpointAuthorizationsPerClusterLimitExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _EndpointAuthorizationsPerClusterLimitExceededFault.prototype);
  }
};
__name(_EndpointAuthorizationsPerClusterLimitExceededFault, "EndpointAuthorizationsPerClusterLimitExceededFault");
var EndpointAuthorizationsPerClusterLimitExceededFault = _EndpointAuthorizationsPerClusterLimitExceededFault;
var _InvalidAuthorizationStateFault = class _InvalidAuthorizationStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidAuthorizationStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidAuthorizationStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidAuthorizationStateFault.prototype);
  }
};
__name(_InvalidAuthorizationStateFault, "InvalidAuthorizationStateFault");
var InvalidAuthorizationStateFault = _InvalidAuthorizationStateFault;
var _InvalidClusterStateFault = class _InvalidClusterStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidClusterStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidClusterStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidClusterStateFault.prototype);
  }
};
__name(_InvalidClusterStateFault, "InvalidClusterStateFault");
var InvalidClusterStateFault = _InvalidClusterStateFault;
var _ClusterSnapshotNotFoundFault = class _ClusterSnapshotNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSnapshotNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSnapshotNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSnapshotNotFoundFault.prototype);
  }
};
__name(_ClusterSnapshotNotFoundFault, "ClusterSnapshotNotFoundFault");
var ClusterSnapshotNotFoundFault = _ClusterSnapshotNotFoundFault;
var _DependentServiceRequestThrottlingFault = class _DependentServiceRequestThrottlingFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DependentServiceRequestThrottlingFault",
      $fault: "client",
      ...opts
    });
    this.name = "DependentServiceRequestThrottlingFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DependentServiceRequestThrottlingFault.prototype);
  }
};
__name(_DependentServiceRequestThrottlingFault, "DependentServiceRequestThrottlingFault");
var DependentServiceRequestThrottlingFault = _DependentServiceRequestThrottlingFault;
var _InvalidClusterSnapshotStateFault = class _InvalidClusterSnapshotStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidClusterSnapshotStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidClusterSnapshotStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidClusterSnapshotStateFault.prototype);
  }
};
__name(_InvalidClusterSnapshotStateFault, "InvalidClusterSnapshotStateFault");
var InvalidClusterSnapshotStateFault = _InvalidClusterSnapshotStateFault;
var _LimitExceededFault = class _LimitExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededFault.prototype);
  }
};
__name(_LimitExceededFault, "LimitExceededFault");
var LimitExceededFault = _LimitExceededFault;
var _BatchDeleteRequestSizeExceededFault = class _BatchDeleteRequestSizeExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BatchDeleteRequestSizeExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "BatchDeleteRequestSizeExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BatchDeleteRequestSizeExceededFault.prototype);
  }
};
__name(_BatchDeleteRequestSizeExceededFault, "BatchDeleteRequestSizeExceededFault");
var BatchDeleteRequestSizeExceededFault = _BatchDeleteRequestSizeExceededFault;
var _BatchModifyClusterSnapshotsLimitExceededFault = class _BatchModifyClusterSnapshotsLimitExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BatchModifyClusterSnapshotsLimitExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "BatchModifyClusterSnapshotsLimitExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BatchModifyClusterSnapshotsLimitExceededFault.prototype);
  }
};
__name(_BatchModifyClusterSnapshotsLimitExceededFault, "BatchModifyClusterSnapshotsLimitExceededFault");
var BatchModifyClusterSnapshotsLimitExceededFault = _BatchModifyClusterSnapshotsLimitExceededFault;
var _InvalidRetentionPeriodFault = class _InvalidRetentionPeriodFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidRetentionPeriodFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidRetentionPeriodFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidRetentionPeriodFault.prototype);
  }
};
__name(_InvalidRetentionPeriodFault, "InvalidRetentionPeriodFault");
var InvalidRetentionPeriodFault = _InvalidRetentionPeriodFault;
var _BucketNotFoundFault = class _BucketNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BucketNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "BucketNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BucketNotFoundFault.prototype);
  }
};
__name(_BucketNotFoundFault, "BucketNotFoundFault");
var BucketNotFoundFault = _BucketNotFoundFault;
var _ResizeNotFoundFault = class _ResizeNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResizeNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ResizeNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResizeNotFoundFault.prototype);
  }
};
__name(_ResizeNotFoundFault, "ResizeNotFoundFault");
var ResizeNotFoundFault = _ResizeNotFoundFault;
var ReservedNodeExchangeStatusType = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  PENDING: "PENDING",
  REQUESTED: "REQUESTED",
  RETRYING: "RETRYING",
  SUCCEEDED: "SUCCEEDED"
};
var _ClusterAlreadyExistsFault = class _ClusterAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterAlreadyExistsFault.prototype);
  }
};
__name(_ClusterAlreadyExistsFault, "ClusterAlreadyExistsFault");
var ClusterAlreadyExistsFault = _ClusterAlreadyExistsFault;
var _ClusterOnLatestRevisionFault = class _ClusterOnLatestRevisionFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterOnLatestRevisionFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterOnLatestRevisionFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterOnLatestRevisionFault.prototype);
  }
};
__name(_ClusterOnLatestRevisionFault, "ClusterOnLatestRevisionFault");
var ClusterOnLatestRevisionFault = _ClusterOnLatestRevisionFault;
var _ClusterParameterGroupAlreadyExistsFault = class _ClusterParameterGroupAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterParameterGroupAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterParameterGroupAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterParameterGroupAlreadyExistsFault.prototype);
  }
};
__name(_ClusterParameterGroupAlreadyExistsFault, "ClusterParameterGroupAlreadyExistsFault");
var ClusterParameterGroupAlreadyExistsFault = _ClusterParameterGroupAlreadyExistsFault;
var ParameterApplyType = {
  dynamic: "dynamic",
  static: "static"
};
var _ClusterParameterGroupNotFoundFault = class _ClusterParameterGroupNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterParameterGroupNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterParameterGroupNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterParameterGroupNotFoundFault.prototype);
  }
};
__name(_ClusterParameterGroupNotFoundFault, "ClusterParameterGroupNotFoundFault");
var ClusterParameterGroupNotFoundFault = _ClusterParameterGroupNotFoundFault;
var _ClusterParameterGroupQuotaExceededFault = class _ClusterParameterGroupQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterParameterGroupQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterParameterGroupQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterParameterGroupQuotaExceededFault.prototype);
  }
};
__name(_ClusterParameterGroupQuotaExceededFault, "ClusterParameterGroupQuotaExceededFault");
var ClusterParameterGroupQuotaExceededFault = _ClusterParameterGroupQuotaExceededFault;
var _ClusterQuotaExceededFault = class _ClusterQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterQuotaExceededFault.prototype);
  }
};
__name(_ClusterQuotaExceededFault, "ClusterQuotaExceededFault");
var ClusterQuotaExceededFault = _ClusterQuotaExceededFault;
var _ClusterSecurityGroupAlreadyExistsFault = class _ClusterSecurityGroupAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSecurityGroupAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSecurityGroupAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSecurityGroupAlreadyExistsFault.prototype);
  }
};
__name(_ClusterSecurityGroupAlreadyExistsFault, "ClusterSecurityGroupAlreadyExistsFault");
var ClusterSecurityGroupAlreadyExistsFault = _ClusterSecurityGroupAlreadyExistsFault;
var _ClusterSecurityGroupQuotaExceededFault = class _ClusterSecurityGroupQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSecurityGroupQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSecurityGroupQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSecurityGroupQuotaExceededFault.prototype);
  }
};
__name(_ClusterSecurityGroupQuotaExceededFault, "ClusterSecurityGroupQuotaExceededFault");
var ClusterSecurityGroupQuotaExceededFault = _ClusterSecurityGroupQuotaExceededFault;
var _ClusterSnapshotAlreadyExistsFault = class _ClusterSnapshotAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSnapshotAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSnapshotAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSnapshotAlreadyExistsFault.prototype);
  }
};
__name(_ClusterSnapshotAlreadyExistsFault, "ClusterSnapshotAlreadyExistsFault");
var ClusterSnapshotAlreadyExistsFault = _ClusterSnapshotAlreadyExistsFault;
var _ClusterSnapshotQuotaExceededFault = class _ClusterSnapshotQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSnapshotQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSnapshotQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSnapshotQuotaExceededFault.prototype);
  }
};
__name(_ClusterSnapshotQuotaExceededFault, "ClusterSnapshotQuotaExceededFault");
var ClusterSnapshotQuotaExceededFault = _ClusterSnapshotQuotaExceededFault;
var _ClusterSubnetGroupAlreadyExistsFault = class _ClusterSubnetGroupAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSubnetGroupAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSubnetGroupAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSubnetGroupAlreadyExistsFault.prototype);
  }
};
__name(_ClusterSubnetGroupAlreadyExistsFault, "ClusterSubnetGroupAlreadyExistsFault");
var ClusterSubnetGroupAlreadyExistsFault = _ClusterSubnetGroupAlreadyExistsFault;
var _ClusterSubnetGroupNotFoundFault = class _ClusterSubnetGroupNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSubnetGroupNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSubnetGroupNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSubnetGroupNotFoundFault.prototype);
  }
};
__name(_ClusterSubnetGroupNotFoundFault, "ClusterSubnetGroupNotFoundFault");
var ClusterSubnetGroupNotFoundFault = _ClusterSubnetGroupNotFoundFault;
var _ClusterSubnetGroupQuotaExceededFault = class _ClusterSubnetGroupQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSubnetGroupQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSubnetGroupQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSubnetGroupQuotaExceededFault.prototype);
  }
};
__name(_ClusterSubnetGroupQuotaExceededFault, "ClusterSubnetGroupQuotaExceededFault");
var ClusterSubnetGroupQuotaExceededFault = _ClusterSubnetGroupQuotaExceededFault;
var _ClusterSubnetQuotaExceededFault = class _ClusterSubnetQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterSubnetQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterSubnetQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterSubnetQuotaExceededFault.prototype);
  }
};
__name(_ClusterSubnetQuotaExceededFault, "ClusterSubnetQuotaExceededFault");
var ClusterSubnetQuotaExceededFault = _ClusterSubnetQuotaExceededFault;
var _ConflictPolicyUpdateFault = class _ConflictPolicyUpdateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictPolicyUpdateFault",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictPolicyUpdateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictPolicyUpdateFault.prototype);
  }
};
__name(_ConflictPolicyUpdateFault, "ConflictPolicyUpdateFault");
var ConflictPolicyUpdateFault = _ConflictPolicyUpdateFault;
var _CopyToRegionDisabledFault = class _CopyToRegionDisabledFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "CopyToRegionDisabledFault",
      $fault: "client",
      ...opts
    });
    this.name = "CopyToRegionDisabledFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _CopyToRegionDisabledFault.prototype);
  }
};
__name(_CopyToRegionDisabledFault, "CopyToRegionDisabledFault");
var CopyToRegionDisabledFault = _CopyToRegionDisabledFault;
var _InvalidAuthenticationProfileRequestFault = class _InvalidAuthenticationProfileRequestFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidAuthenticationProfileRequestFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidAuthenticationProfileRequestFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidAuthenticationProfileRequestFault.prototype);
  }
};
__name(_InvalidAuthenticationProfileRequestFault, "InvalidAuthenticationProfileRequestFault");
var InvalidAuthenticationProfileRequestFault = _InvalidAuthenticationProfileRequestFault;
var _HsmClientCertificateNotFoundFault = class _HsmClientCertificateNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "HsmClientCertificateNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "HsmClientCertificateNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _HsmClientCertificateNotFoundFault.prototype);
  }
};
__name(_HsmClientCertificateNotFoundFault, "HsmClientCertificateNotFoundFault");
var HsmClientCertificateNotFoundFault = _HsmClientCertificateNotFoundFault;
var _HsmConfigurationNotFoundFault = class _HsmConfigurationNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "HsmConfigurationNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "HsmConfigurationNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _HsmConfigurationNotFoundFault.prototype);
  }
};
__name(_HsmConfigurationNotFoundFault, "HsmConfigurationNotFoundFault");
var HsmConfigurationNotFoundFault = _HsmConfigurationNotFoundFault;
var _InsufficientClusterCapacityFault = class _InsufficientClusterCapacityFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InsufficientClusterCapacityFault",
      $fault: "client",
      ...opts
    });
    this.name = "InsufficientClusterCapacityFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InsufficientClusterCapacityFault.prototype);
  }
};
__name(_InsufficientClusterCapacityFault, "InsufficientClusterCapacityFault");
var InsufficientClusterCapacityFault = _InsufficientClusterCapacityFault;
var _InvalidClusterSubnetGroupStateFault = class _InvalidClusterSubnetGroupStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidClusterSubnetGroupStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidClusterSubnetGroupStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidClusterSubnetGroupStateFault.prototype);
  }
};
__name(_InvalidClusterSubnetGroupStateFault, "InvalidClusterSubnetGroupStateFault");
var InvalidClusterSubnetGroupStateFault = _InvalidClusterSubnetGroupStateFault;
var _InvalidClusterTrackFault = class _InvalidClusterTrackFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidClusterTrackFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidClusterTrackFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidClusterTrackFault.prototype);
  }
};
__name(_InvalidClusterTrackFault, "InvalidClusterTrackFault");
var InvalidClusterTrackFault = _InvalidClusterTrackFault;
var _InvalidElasticIpFault = class _InvalidElasticIpFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidElasticIpFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidElasticIpFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidElasticIpFault.prototype);
  }
};
__name(_InvalidElasticIpFault, "InvalidElasticIpFault");
var InvalidElasticIpFault = _InvalidElasticIpFault;
var _InvalidSubnet = class _InvalidSubnet extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidSubnet",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidSubnet";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidSubnet.prototype);
  }
};
__name(_InvalidSubnet, "InvalidSubnet");
var InvalidSubnet = _InvalidSubnet;
var _InvalidTagFault = class _InvalidTagFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidTagFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidTagFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidTagFault.prototype);
  }
};
__name(_InvalidTagFault, "InvalidTagFault");
var InvalidTagFault = _InvalidTagFault;
var _InvalidVPCNetworkStateFault = class _InvalidVPCNetworkStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidVPCNetworkStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidVPCNetworkStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidVPCNetworkStateFault.prototype);
  }
};
__name(_InvalidVPCNetworkStateFault, "InvalidVPCNetworkStateFault");
var InvalidVPCNetworkStateFault = _InvalidVPCNetworkStateFault;
var _Ipv6CidrBlockNotFoundFault = class _Ipv6CidrBlockNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "Ipv6CidrBlockNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "Ipv6CidrBlockNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _Ipv6CidrBlockNotFoundFault.prototype);
  }
};
__name(_Ipv6CidrBlockNotFoundFault, "Ipv6CidrBlockNotFoundFault");
var Ipv6CidrBlockNotFoundFault = _Ipv6CidrBlockNotFoundFault;
var _NumberOfNodesPerClusterLimitExceededFault = class _NumberOfNodesPerClusterLimitExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NumberOfNodesPerClusterLimitExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "NumberOfNodesPerClusterLimitExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NumberOfNodesPerClusterLimitExceededFault.prototype);
  }
};
__name(_NumberOfNodesPerClusterLimitExceededFault, "NumberOfNodesPerClusterLimitExceededFault");
var NumberOfNodesPerClusterLimitExceededFault = _NumberOfNodesPerClusterLimitExceededFault;
var _NumberOfNodesQuotaExceededFault = class _NumberOfNodesQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NumberOfNodesQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "NumberOfNodesQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NumberOfNodesQuotaExceededFault.prototype);
  }
};
__name(_NumberOfNodesQuotaExceededFault, "NumberOfNodesQuotaExceededFault");
var NumberOfNodesQuotaExceededFault = _NumberOfNodesQuotaExceededFault;
var _RedshiftIdcApplicationNotExistsFault = class _RedshiftIdcApplicationNotExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "RedshiftIdcApplicationNotExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "RedshiftIdcApplicationNotExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _RedshiftIdcApplicationNotExistsFault.prototype);
  }
};
__name(_RedshiftIdcApplicationNotExistsFault, "RedshiftIdcApplicationNotExistsFault");
var RedshiftIdcApplicationNotExistsFault = _RedshiftIdcApplicationNotExistsFault;
var _SnapshotScheduleNotFoundFault = class _SnapshotScheduleNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotScheduleNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotScheduleNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotScheduleNotFoundFault.prototype);
  }
};
__name(_SnapshotScheduleNotFoundFault, "SnapshotScheduleNotFoundFault");
var SnapshotScheduleNotFoundFault = _SnapshotScheduleNotFoundFault;
var _TagLimitExceededFault = class _TagLimitExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TagLimitExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "TagLimitExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TagLimitExceededFault.prototype);
  }
};
__name(_TagLimitExceededFault, "TagLimitExceededFault");
var TagLimitExceededFault = _TagLimitExceededFault;
var _UnauthorizedOperation = class _UnauthorizedOperation extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnauthorizedOperation",
      $fault: "client",
      ...opts
    });
    this.name = "UnauthorizedOperation";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnauthorizedOperation.prototype);
  }
};
__name(_UnauthorizedOperation, "UnauthorizedOperation");
var UnauthorizedOperation = _UnauthorizedOperation;
var _CustomCnameAssociationFault = class _CustomCnameAssociationFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "CustomCnameAssociationFault",
      $fault: "client",
      ...opts
    });
    this.name = "CustomCnameAssociationFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _CustomCnameAssociationFault.prototype);
  }
};
__name(_CustomCnameAssociationFault, "CustomCnameAssociationFault");
var CustomCnameAssociationFault = _CustomCnameAssociationFault;
var _EndpointAlreadyExistsFault = class _EndpointAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EndpointAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "EndpointAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _EndpointAlreadyExistsFault.prototype);
  }
};
__name(_EndpointAlreadyExistsFault, "EndpointAlreadyExistsFault");
var EndpointAlreadyExistsFault = _EndpointAlreadyExistsFault;
var _EndpointsPerAuthorizationLimitExceededFault = class _EndpointsPerAuthorizationLimitExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EndpointsPerAuthorizationLimitExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "EndpointsPerAuthorizationLimitExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _EndpointsPerAuthorizationLimitExceededFault.prototype);
  }
};
__name(_EndpointsPerAuthorizationLimitExceededFault, "EndpointsPerAuthorizationLimitExceededFault");
var EndpointsPerAuthorizationLimitExceededFault = _EndpointsPerAuthorizationLimitExceededFault;
var _EndpointsPerClusterLimitExceededFault = class _EndpointsPerClusterLimitExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EndpointsPerClusterLimitExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "EndpointsPerClusterLimitExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _EndpointsPerClusterLimitExceededFault.prototype);
  }
};
__name(_EndpointsPerClusterLimitExceededFault, "EndpointsPerClusterLimitExceededFault");
var EndpointsPerClusterLimitExceededFault = _EndpointsPerClusterLimitExceededFault;
var _EventSubscriptionQuotaExceededFault = class _EventSubscriptionQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EventSubscriptionQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "EventSubscriptionQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _EventSubscriptionQuotaExceededFault.prototype);
  }
};
__name(_EventSubscriptionQuotaExceededFault, "EventSubscriptionQuotaExceededFault");
var EventSubscriptionQuotaExceededFault = _EventSubscriptionQuotaExceededFault;
var _SNSInvalidTopicFault = class _SNSInvalidTopicFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SNSInvalidTopicFault",
      $fault: "client",
      ...opts
    });
    this.name = "SNSInvalidTopicFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SNSInvalidTopicFault.prototype);
  }
};
__name(_SNSInvalidTopicFault, "SNSInvalidTopicFault");
var SNSInvalidTopicFault = _SNSInvalidTopicFault;
var _SNSNoAuthorizationFault = class _SNSNoAuthorizationFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SNSNoAuthorizationFault",
      $fault: "client",
      ...opts
    });
    this.name = "SNSNoAuthorizationFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SNSNoAuthorizationFault.prototype);
  }
};
__name(_SNSNoAuthorizationFault, "SNSNoAuthorizationFault");
var SNSNoAuthorizationFault = _SNSNoAuthorizationFault;
var _SNSTopicArnNotFoundFault = class _SNSTopicArnNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SNSTopicArnNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SNSTopicArnNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SNSTopicArnNotFoundFault.prototype);
  }
};
__name(_SNSTopicArnNotFoundFault, "SNSTopicArnNotFoundFault");
var SNSTopicArnNotFoundFault = _SNSTopicArnNotFoundFault;
var _SourceNotFoundFault = class _SourceNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SourceNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SourceNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SourceNotFoundFault.prototype);
  }
};
__name(_SourceNotFoundFault, "SourceNotFoundFault");
var SourceNotFoundFault = _SourceNotFoundFault;
var _SubscriptionAlreadyExistFault = class _SubscriptionAlreadyExistFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubscriptionAlreadyExistFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubscriptionAlreadyExistFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubscriptionAlreadyExistFault.prototype);
  }
};
__name(_SubscriptionAlreadyExistFault, "SubscriptionAlreadyExistFault");
var SubscriptionAlreadyExistFault = _SubscriptionAlreadyExistFault;
var _SubscriptionCategoryNotFoundFault = class _SubscriptionCategoryNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubscriptionCategoryNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubscriptionCategoryNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubscriptionCategoryNotFoundFault.prototype);
  }
};
__name(_SubscriptionCategoryNotFoundFault, "SubscriptionCategoryNotFoundFault");
var SubscriptionCategoryNotFoundFault = _SubscriptionCategoryNotFoundFault;
var _SubscriptionEventIdNotFoundFault = class _SubscriptionEventIdNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubscriptionEventIdNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubscriptionEventIdNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubscriptionEventIdNotFoundFault.prototype);
  }
};
__name(_SubscriptionEventIdNotFoundFault, "SubscriptionEventIdNotFoundFault");
var SubscriptionEventIdNotFoundFault = _SubscriptionEventIdNotFoundFault;
var _SubscriptionSeverityNotFoundFault = class _SubscriptionSeverityNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubscriptionSeverityNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubscriptionSeverityNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubscriptionSeverityNotFoundFault.prototype);
  }
};
__name(_SubscriptionSeverityNotFoundFault, "SubscriptionSeverityNotFoundFault");
var SubscriptionSeverityNotFoundFault = _SubscriptionSeverityNotFoundFault;
var _HsmClientCertificateAlreadyExistsFault = class _HsmClientCertificateAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "HsmClientCertificateAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "HsmClientCertificateAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _HsmClientCertificateAlreadyExistsFault.prototype);
  }
};
__name(_HsmClientCertificateAlreadyExistsFault, "HsmClientCertificateAlreadyExistsFault");
var HsmClientCertificateAlreadyExistsFault = _HsmClientCertificateAlreadyExistsFault;
var _HsmClientCertificateQuotaExceededFault = class _HsmClientCertificateQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "HsmClientCertificateQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "HsmClientCertificateQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _HsmClientCertificateQuotaExceededFault.prototype);
  }
};
__name(_HsmClientCertificateQuotaExceededFault, "HsmClientCertificateQuotaExceededFault");
var HsmClientCertificateQuotaExceededFault = _HsmClientCertificateQuotaExceededFault;
var _HsmConfigurationAlreadyExistsFault = class _HsmConfigurationAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "HsmConfigurationAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "HsmConfigurationAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _HsmConfigurationAlreadyExistsFault.prototype);
  }
};
__name(_HsmConfigurationAlreadyExistsFault, "HsmConfigurationAlreadyExistsFault");
var HsmConfigurationAlreadyExistsFault = _HsmConfigurationAlreadyExistsFault;
var _HsmConfigurationQuotaExceededFault = class _HsmConfigurationQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "HsmConfigurationQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "HsmConfigurationQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _HsmConfigurationQuotaExceededFault.prototype);
  }
};
__name(_HsmConfigurationQuotaExceededFault, "HsmConfigurationQuotaExceededFault");
var HsmConfigurationQuotaExceededFault = _HsmConfigurationQuotaExceededFault;
var ServiceAuthorization = {
  DISABLED: "Disabled",
  ENABLED: "Enabled"
};
var LakeFormationScopeUnion;
((LakeFormationScopeUnion2) => {
  LakeFormationScopeUnion2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.LakeFormationQuery !== void 0)
      return visitor.LakeFormationQuery(value.LakeFormationQuery);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(LakeFormationScopeUnion || (LakeFormationScopeUnion = {}));
var ServiceIntegrationsUnion;
((ServiceIntegrationsUnion3) => {
  ServiceIntegrationsUnion3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.LakeFormation !== void 0)
      return visitor.LakeFormation(value.LakeFormation);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ServiceIntegrationsUnion || (ServiceIntegrationsUnion = {}));
var _DependentServiceAccessDeniedFault = class _DependentServiceAccessDeniedFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DependentServiceAccessDeniedFault",
      $fault: "client",
      ...opts
    });
    this.name = "DependentServiceAccessDeniedFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DependentServiceAccessDeniedFault.prototype);
  }
};
__name(_DependentServiceAccessDeniedFault, "DependentServiceAccessDeniedFault");
var DependentServiceAccessDeniedFault = _DependentServiceAccessDeniedFault;
var _RedshiftIdcApplicationAlreadyExistsFault = class _RedshiftIdcApplicationAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "RedshiftIdcApplicationAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "RedshiftIdcApplicationAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _RedshiftIdcApplicationAlreadyExistsFault.prototype);
  }
};
__name(_RedshiftIdcApplicationAlreadyExistsFault, "RedshiftIdcApplicationAlreadyExistsFault");
var RedshiftIdcApplicationAlreadyExistsFault = _RedshiftIdcApplicationAlreadyExistsFault;
var _RedshiftIdcApplicationQuotaExceededFault = class _RedshiftIdcApplicationQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "RedshiftIdcApplicationQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "RedshiftIdcApplicationQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _RedshiftIdcApplicationQuotaExceededFault.prototype);
  }
};
__name(_RedshiftIdcApplicationQuotaExceededFault, "RedshiftIdcApplicationQuotaExceededFault");
var RedshiftIdcApplicationQuotaExceededFault = _RedshiftIdcApplicationQuotaExceededFault;
var _InvalidScheduledActionFault = class _InvalidScheduledActionFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidScheduledActionFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidScheduledActionFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidScheduledActionFault.prototype);
  }
};
__name(_InvalidScheduledActionFault, "InvalidScheduledActionFault");
var InvalidScheduledActionFault = _InvalidScheduledActionFault;
var _InvalidScheduleFault = class _InvalidScheduleFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidScheduleFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidScheduleFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidScheduleFault.prototype);
  }
};
__name(_InvalidScheduleFault, "InvalidScheduleFault");
var InvalidScheduleFault = _InvalidScheduleFault;
var ScheduledActionState = {
  ACTIVE: "ACTIVE",
  DISABLED: "DISABLED"
};
var _ScheduledActionAlreadyExistsFault = class _ScheduledActionAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ScheduledActionAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ScheduledActionAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ScheduledActionAlreadyExistsFault.prototype);
  }
};
__name(_ScheduledActionAlreadyExistsFault, "ScheduledActionAlreadyExistsFault");
var ScheduledActionAlreadyExistsFault = _ScheduledActionAlreadyExistsFault;
var _ScheduledActionQuotaExceededFault = class _ScheduledActionQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ScheduledActionQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ScheduledActionQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ScheduledActionQuotaExceededFault.prototype);
  }
};
__name(_ScheduledActionQuotaExceededFault, "ScheduledActionQuotaExceededFault");
var ScheduledActionQuotaExceededFault = _ScheduledActionQuotaExceededFault;
var _ScheduledActionTypeUnsupportedFault = class _ScheduledActionTypeUnsupportedFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ScheduledActionTypeUnsupportedFault",
      $fault: "client",
      ...opts
    });
    this.name = "ScheduledActionTypeUnsupportedFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ScheduledActionTypeUnsupportedFault.prototype);
  }
};
__name(_ScheduledActionTypeUnsupportedFault, "ScheduledActionTypeUnsupportedFault");
var ScheduledActionTypeUnsupportedFault = _ScheduledActionTypeUnsupportedFault;
var _SnapshotCopyGrantAlreadyExistsFault = class _SnapshotCopyGrantAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotCopyGrantAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotCopyGrantAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotCopyGrantAlreadyExistsFault.prototype);
  }
};
__name(_SnapshotCopyGrantAlreadyExistsFault, "SnapshotCopyGrantAlreadyExistsFault");
var SnapshotCopyGrantAlreadyExistsFault = _SnapshotCopyGrantAlreadyExistsFault;
var _SnapshotCopyGrantQuotaExceededFault = class _SnapshotCopyGrantQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotCopyGrantQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotCopyGrantQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotCopyGrantQuotaExceededFault.prototype);
  }
};
__name(_SnapshotCopyGrantQuotaExceededFault, "SnapshotCopyGrantQuotaExceededFault");
var SnapshotCopyGrantQuotaExceededFault = _SnapshotCopyGrantQuotaExceededFault;
var _ScheduleDefinitionTypeUnsupportedFault = class _ScheduleDefinitionTypeUnsupportedFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ScheduleDefinitionTypeUnsupportedFault",
      $fault: "client",
      ...opts
    });
    this.name = "ScheduleDefinitionTypeUnsupportedFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ScheduleDefinitionTypeUnsupportedFault.prototype);
  }
};
__name(_ScheduleDefinitionTypeUnsupportedFault, "ScheduleDefinitionTypeUnsupportedFault");
var ScheduleDefinitionTypeUnsupportedFault = _ScheduleDefinitionTypeUnsupportedFault;
var _SnapshotScheduleAlreadyExistsFault = class _SnapshotScheduleAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotScheduleAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotScheduleAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotScheduleAlreadyExistsFault.prototype);
  }
};
__name(_SnapshotScheduleAlreadyExistsFault, "SnapshotScheduleAlreadyExistsFault");
var SnapshotScheduleAlreadyExistsFault = _SnapshotScheduleAlreadyExistsFault;
var _SnapshotScheduleQuotaExceededFault = class _SnapshotScheduleQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotScheduleQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotScheduleQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotScheduleQuotaExceededFault.prototype);
  }
};
__name(_SnapshotScheduleQuotaExceededFault, "SnapshotScheduleQuotaExceededFault");
var SnapshotScheduleQuotaExceededFault = _SnapshotScheduleQuotaExceededFault;
var _ResourceNotFoundFault = class _ResourceNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundFault.prototype);
  }
};
__name(_ResourceNotFoundFault, "ResourceNotFoundFault");
var ResourceNotFoundFault = _ResourceNotFoundFault;
var UsageLimitBreachAction = {
  DISABLE: "disable",
  EMIT_METRIC: "emit-metric",
  LOG: "log"
};
var UsageLimitFeatureType = {
  CONCURRENCY_SCALING: "concurrency-scaling",
  CROSS_REGION_DATASHARING: "cross-region-datasharing",
  SPECTRUM: "spectrum"
};
var UsageLimitLimitType = {
  DATA_SCANNED: "data-scanned",
  TIME: "time"
};
var UsageLimitPeriod = {
  DAILY: "daily",
  MONTHLY: "monthly",
  WEEKLY: "weekly"
};
var _InvalidUsageLimitFault = class _InvalidUsageLimitFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidUsageLimitFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidUsageLimitFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidUsageLimitFault.prototype);
  }
};
__name(_InvalidUsageLimitFault, "InvalidUsageLimitFault");
var InvalidUsageLimitFault = _InvalidUsageLimitFault;
var _UsageLimitAlreadyExistsFault = class _UsageLimitAlreadyExistsFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UsageLimitAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "UsageLimitAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UsageLimitAlreadyExistsFault.prototype);
  }
};
__name(_UsageLimitAlreadyExistsFault, "UsageLimitAlreadyExistsFault");
var UsageLimitAlreadyExistsFault = _UsageLimitAlreadyExistsFault;
var _CustomDomainAssociationNotFoundFault = class _CustomDomainAssociationNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "CustomDomainAssociationNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "CustomDomainAssociationNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _CustomDomainAssociationNotFoundFault.prototype);
  }
};
__name(_CustomDomainAssociationNotFoundFault, "CustomDomainAssociationNotFoundFault");
var CustomDomainAssociationNotFoundFault = _CustomDomainAssociationNotFoundFault;
var DataShareStatusForConsumer = {
  ACTIVE: "ACTIVE",
  AVAILABLE: "AVAILABLE"
};
var DataShareStatusForProducer = {
  ACTIVE: "ACTIVE",
  AUTHORIZED: "AUTHORIZED",
  DEAUTHORIZED: "DEAUTHORIZED",
  PENDING_AUTHORIZATION: "PENDING_AUTHORIZATION",
  REJECTED: "REJECTED"
};
var _InvalidClusterParameterGroupStateFault = class _InvalidClusterParameterGroupStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidClusterParameterGroupStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidClusterParameterGroupStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidClusterParameterGroupStateFault.prototype);
  }
};
__name(_InvalidClusterParameterGroupStateFault, "InvalidClusterParameterGroupStateFault");
var InvalidClusterParameterGroupStateFault = _InvalidClusterParameterGroupStateFault;
var _InvalidClusterSubnetStateFault = class _InvalidClusterSubnetStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidClusterSubnetStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidClusterSubnetStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidClusterSubnetStateFault.prototype);
  }
};
__name(_InvalidClusterSubnetStateFault, "InvalidClusterSubnetStateFault");
var InvalidClusterSubnetStateFault = _InvalidClusterSubnetStateFault;
var _EndpointNotFoundFault = class _EndpointNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EndpointNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "EndpointNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _EndpointNotFoundFault.prototype);
  }
};
__name(_EndpointNotFoundFault, "EndpointNotFoundFault");
var EndpointNotFoundFault = _EndpointNotFoundFault;
var _InvalidEndpointStateFault = class _InvalidEndpointStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidEndpointStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidEndpointStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidEndpointStateFault.prototype);
  }
};
__name(_InvalidEndpointStateFault, "InvalidEndpointStateFault");
var InvalidEndpointStateFault = _InvalidEndpointStateFault;
var _InvalidSubscriptionStateFault = class _InvalidSubscriptionStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidSubscriptionStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidSubscriptionStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidSubscriptionStateFault.prototype);
  }
};
__name(_InvalidSubscriptionStateFault, "InvalidSubscriptionStateFault");
var InvalidSubscriptionStateFault = _InvalidSubscriptionStateFault;
var _SubscriptionNotFoundFault = class _SubscriptionNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubscriptionNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubscriptionNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubscriptionNotFoundFault.prototype);
  }
};
__name(_SubscriptionNotFoundFault, "SubscriptionNotFoundFault");
var SubscriptionNotFoundFault = _SubscriptionNotFoundFault;
var _InvalidHsmClientCertificateStateFault = class _InvalidHsmClientCertificateStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidHsmClientCertificateStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidHsmClientCertificateStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidHsmClientCertificateStateFault.prototype);
  }
};
__name(_InvalidHsmClientCertificateStateFault, "InvalidHsmClientCertificateStateFault");
var InvalidHsmClientCertificateStateFault = _InvalidHsmClientCertificateStateFault;
var _InvalidHsmConfigurationStateFault = class _InvalidHsmConfigurationStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidHsmConfigurationStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidHsmConfigurationStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidHsmConfigurationStateFault.prototype);
  }
};
__name(_InvalidHsmConfigurationStateFault, "InvalidHsmConfigurationStateFault");
var InvalidHsmConfigurationStateFault = _InvalidHsmConfigurationStateFault;
var _ScheduledActionNotFoundFault = class _ScheduledActionNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ScheduledActionNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ScheduledActionNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ScheduledActionNotFoundFault.prototype);
  }
};
__name(_ScheduledActionNotFoundFault, "ScheduledActionNotFoundFault");
var ScheduledActionNotFoundFault = _ScheduledActionNotFoundFault;
var _InvalidSnapshotCopyGrantStateFault = class _InvalidSnapshotCopyGrantStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidSnapshotCopyGrantStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidSnapshotCopyGrantStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidSnapshotCopyGrantStateFault.prototype);
  }
};
__name(_InvalidSnapshotCopyGrantStateFault, "InvalidSnapshotCopyGrantStateFault");
var InvalidSnapshotCopyGrantStateFault = _InvalidSnapshotCopyGrantStateFault;
var _SnapshotCopyGrantNotFoundFault = class _SnapshotCopyGrantNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotCopyGrantNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotCopyGrantNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotCopyGrantNotFoundFault.prototype);
  }
};
__name(_SnapshotCopyGrantNotFoundFault, "SnapshotCopyGrantNotFoundFault");
var SnapshotCopyGrantNotFoundFault = _SnapshotCopyGrantNotFoundFault;
var _InvalidClusterSnapshotScheduleStateFault = class _InvalidClusterSnapshotScheduleStateFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidClusterSnapshotScheduleStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidClusterSnapshotScheduleStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidClusterSnapshotScheduleStateFault.prototype);
  }
};
__name(_InvalidClusterSnapshotScheduleStateFault, "InvalidClusterSnapshotScheduleStateFault");
var InvalidClusterSnapshotScheduleStateFault = _InvalidClusterSnapshotScheduleStateFault;
var _UsageLimitNotFoundFault = class _UsageLimitNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UsageLimitNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "UsageLimitNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UsageLimitNotFoundFault.prototype);
  }
};
__name(_UsageLimitNotFoundFault, "UsageLimitNotFoundFault");
var UsageLimitNotFoundFault = _UsageLimitNotFoundFault;
var SnapshotAttributeToSortBy = {
  CREATE_TIME: "CREATE_TIME",
  SOURCE_TYPE: "SOURCE_TYPE",
  TOTAL_SIZE: "TOTAL_SIZE"
};
var SortByOrder = {
  ASCENDING: "ASC",
  DESCENDING: "DESC"
};
var PendingModifiedValuesFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MasterUserPassword && { MasterUserPassword: import_smithy_client.SENSITIVE_STRING }
}), "PendingModifiedValuesFilterSensitiveLog");
var ClusterFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.PendingModifiedValues && {
    PendingModifiedValues: PendingModifiedValuesFilterSensitiveLog(obj.PendingModifiedValues)
  }
}), "ClusterFilterSensitiveLog");
var ClusterCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.DbPassword && { DbPassword: import_smithy_client.SENSITIVE_STRING }
}), "ClusterCredentialsFilterSensitiveLog");
var ClusterExtendedCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.DbPassword && { DbPassword: import_smithy_client.SENSITIVE_STRING }
}), "ClusterExtendedCredentialsFilterSensitiveLog");
var ClustersMessageFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Clusters && { Clusters: obj.Clusters.map((item) => ClusterFilterSensitiveLog(item)) }
}), "ClustersMessageFilterSensitiveLog");
var CreateClusterMessageFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MasterUserPassword && { MasterUserPassword: import_smithy_client.SENSITIVE_STRING }
}), "CreateClusterMessageFilterSensitiveLog");
var CreateClusterResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "CreateClusterResultFilterSensitiveLog");
var DeleteClusterResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "DeleteClusterResultFilterSensitiveLog");

// src/models/models_1.ts

var SourceType = {
  cluster: "cluster",
  cluster_parameter_group: "cluster-parameter-group",
  cluster_security_group: "cluster-security-group",
  cluster_snapshot: "cluster-snapshot",
  scheduled_action: "scheduled-action"
};
var ZeroETLIntegrationStatus = {
  ACTIVE: "active",
  CREATING: "creating",
  DELETING: "deleting",
  FAILED: "failed",
  MODIFYING: "modifying",
  NEEDS_ATTENTION: "needs_attention",
  SYNCING: "syncing"
};
var _IntegrationNotFoundFault = class _IntegrationNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "IntegrationNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "IntegrationNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _IntegrationNotFoundFault.prototype);
  }
};
__name(_IntegrationNotFoundFault, "IntegrationNotFoundFault");
var IntegrationNotFoundFault = _IntegrationNotFoundFault;
var LogDestinationType = {
  CLOUDWATCH: "cloudwatch",
  S3: "s3"
};
var NodeConfigurationOptionsFilterName = {
  ESTIMATED_DISK_UTILIZATION_PERCENT: "EstimatedDiskUtilizationPercent",
  MODE: "Mode",
  NODE_TYPE: "NodeType",
  NUM_NODES: "NumberOfNodes"
};
var OperatorType = {
  BETWEEN: "between",
  EQ: "eq",
  GE: "ge",
  GT: "gt",
  IN: "in",
  LE: "le",
  LT: "lt"
};
var Mode = {
  HIGH_PERFORMANCE: "high-performance",
  STANDARD: "standard"
};
var PartnerIntegrationStatus = {
  Active: "Active",
  ConnectionFailure: "ConnectionFailure",
  Inactive: "Inactive",
  RuntimeFailure: "RuntimeFailure"
};
var _ReservedNodeExchangeNotFoundFault = class _ReservedNodeExchangeNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodeExchangeNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodeExchangeNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodeExchangeNotFoundFault.prototype);
  }
};
__name(_ReservedNodeExchangeNotFoundFault, "ReservedNodeExchangeNotFoundFault");
var ReservedNodeExchangeNotFoundFault = _ReservedNodeExchangeNotFoundFault;
var ScheduledActionFilterName = {
  CLUSTER_IDENTIFIER: "cluster-identifier",
  IAM_ROLE: "iam-role"
};
var ScheduledActionTypeValues = {
  PAUSE_CLUSTER: "PauseCluster",
  RESIZE_CLUSTER: "ResizeCluster",
  RESUME_CLUSTER: "ResumeCluster"
};
var _TableRestoreNotFoundFault = class _TableRestoreNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TableRestoreNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "TableRestoreNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TableRestoreNotFoundFault.prototype);
  }
};
__name(_TableRestoreNotFoundFault, "TableRestoreNotFoundFault");
var TableRestoreNotFoundFault = _TableRestoreNotFoundFault;
var TableRestoreStatusType = {
  CANCELED: "CANCELED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  PENDING: "PENDING",
  SUCCEEDED: "SUCCEEDED"
};
var _SnapshotCopyAlreadyDisabledFault = class _SnapshotCopyAlreadyDisabledFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotCopyAlreadyDisabledFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotCopyAlreadyDisabledFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotCopyAlreadyDisabledFault.prototype);
  }
};
__name(_SnapshotCopyAlreadyDisabledFault, "SnapshotCopyAlreadyDisabledFault");
var SnapshotCopyAlreadyDisabledFault = _SnapshotCopyAlreadyDisabledFault;
var _InsufficientS3BucketPolicyFault = class _InsufficientS3BucketPolicyFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InsufficientS3BucketPolicyFault",
      $fault: "client",
      ...opts
    });
    this.name = "InsufficientS3BucketPolicyFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InsufficientS3BucketPolicyFault.prototype);
  }
};
__name(_InsufficientS3BucketPolicyFault, "InsufficientS3BucketPolicyFault");
var InsufficientS3BucketPolicyFault = _InsufficientS3BucketPolicyFault;
var _InvalidS3BucketNameFault = class _InvalidS3BucketNameFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidS3BucketNameFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidS3BucketNameFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidS3BucketNameFault.prototype);
  }
};
__name(_InvalidS3BucketNameFault, "InvalidS3BucketNameFault");
var InvalidS3BucketNameFault = _InvalidS3BucketNameFault;
var _InvalidS3KeyPrefixFault = class _InvalidS3KeyPrefixFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidS3KeyPrefixFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidS3KeyPrefixFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidS3KeyPrefixFault.prototype);
  }
};
__name(_InvalidS3KeyPrefixFault, "InvalidS3KeyPrefixFault");
var InvalidS3KeyPrefixFault = _InvalidS3KeyPrefixFault;
var _IncompatibleOrderableOptions = class _IncompatibleOrderableOptions extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "IncompatibleOrderableOptions",
      $fault: "client",
      ...opts
    });
    this.name = "IncompatibleOrderableOptions";
    this.$fault = "client";
    Object.setPrototypeOf(this, _IncompatibleOrderableOptions.prototype);
  }
};
__name(_IncompatibleOrderableOptions, "IncompatibleOrderableOptions");
var IncompatibleOrderableOptions = _IncompatibleOrderableOptions;
var _SnapshotCopyAlreadyEnabledFault = class _SnapshotCopyAlreadyEnabledFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotCopyAlreadyEnabledFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotCopyAlreadyEnabledFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotCopyAlreadyEnabledFault.prototype);
  }
};
__name(_SnapshotCopyAlreadyEnabledFault, "SnapshotCopyAlreadyEnabledFault");
var SnapshotCopyAlreadyEnabledFault = _SnapshotCopyAlreadyEnabledFault;
var _UnknownSnapshotCopyRegionFault = class _UnknownSnapshotCopyRegionFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnknownSnapshotCopyRegionFault",
      $fault: "client",
      ...opts
    });
    this.name = "UnknownSnapshotCopyRegionFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnknownSnapshotCopyRegionFault.prototype);
  }
};
__name(_UnknownSnapshotCopyRegionFault, "UnknownSnapshotCopyRegionFault");
var UnknownSnapshotCopyRegionFault = _UnknownSnapshotCopyRegionFault;
var _EndpointAuthorizationNotFoundFault = class _EndpointAuthorizationNotFoundFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EndpointAuthorizationNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "EndpointAuthorizationNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _EndpointAuthorizationNotFoundFault.prototype);
  }
};
__name(_EndpointAuthorizationNotFoundFault, "EndpointAuthorizationNotFoundFault");
var EndpointAuthorizationNotFoundFault = _EndpointAuthorizationNotFoundFault;
var ReservedNodeExchangeActionType = {
  RESIZE_CLUSTER: "resize-cluster",
  RESTORE_CLUSTER: "restore-cluster"
};
var _InvalidPolicyFault = class _InvalidPolicyFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidPolicyFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidPolicyFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidPolicyFault.prototype);
  }
};
__name(_InvalidPolicyFault, "InvalidPolicyFault");
var InvalidPolicyFault = _InvalidPolicyFault;
var ImpactRankingType = {
  HIGH: "HIGH",
  LOW: "LOW",
  MEDIUM: "MEDIUM"
};
var _InProgressTableRestoreQuotaExceededFault = class _InProgressTableRestoreQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InProgressTableRestoreQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "InProgressTableRestoreQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InProgressTableRestoreQuotaExceededFault.prototype);
  }
};
__name(_InProgressTableRestoreQuotaExceededFault, "InProgressTableRestoreQuotaExceededFault");
var InProgressTableRestoreQuotaExceededFault = _InProgressTableRestoreQuotaExceededFault;
var _InvalidRestoreFault = class _InvalidRestoreFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidRestoreFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidRestoreFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidRestoreFault.prototype);
  }
};
__name(_InvalidRestoreFault, "InvalidRestoreFault");
var InvalidRestoreFault = _InvalidRestoreFault;
var _InvalidTableRestoreArgumentFault = class _InvalidTableRestoreArgumentFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidTableRestoreArgumentFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidTableRestoreArgumentFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidTableRestoreArgumentFault.prototype);
  }
};
__name(_InvalidTableRestoreArgumentFault, "InvalidTableRestoreArgumentFault");
var InvalidTableRestoreArgumentFault = _InvalidTableRestoreArgumentFault;
var RecommendedActionType = {
  CLI: "CLI",
  SQL: "SQL"
};
var _TableLimitExceededFault = class _TableLimitExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TableLimitExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "TableLimitExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TableLimitExceededFault.prototype);
  }
};
__name(_TableLimitExceededFault, "TableLimitExceededFault");
var TableLimitExceededFault = _TableLimitExceededFault;
var _UnsupportedOptionFault = class _UnsupportedOptionFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnsupportedOptionFault",
      $fault: "client",
      ...opts
    });
    this.name = "UnsupportedOptionFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnsupportedOptionFault.prototype);
  }
};
__name(_UnsupportedOptionFault, "UnsupportedOptionFault");
var UnsupportedOptionFault = _UnsupportedOptionFault;
var _SubnetAlreadyInUse = class _SubnetAlreadyInUse extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubnetAlreadyInUse",
      $fault: "client",
      ...opts
    });
    this.name = "SubnetAlreadyInUse";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubnetAlreadyInUse.prototype);
  }
};
__name(_SubnetAlreadyInUse, "SubnetAlreadyInUse");
var SubnetAlreadyInUse = _SubnetAlreadyInUse;
var _SnapshotCopyDisabledFault = class _SnapshotCopyDisabledFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotCopyDisabledFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotCopyDisabledFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotCopyDisabledFault.prototype);
  }
};
__name(_SnapshotCopyDisabledFault, "SnapshotCopyDisabledFault");
var SnapshotCopyDisabledFault = _SnapshotCopyDisabledFault;
var _SnapshotScheduleUpdateInProgressFault = class _SnapshotScheduleUpdateInProgressFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotScheduleUpdateInProgressFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotScheduleUpdateInProgressFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotScheduleUpdateInProgressFault.prototype);
  }
};
__name(_SnapshotScheduleUpdateInProgressFault, "SnapshotScheduleUpdateInProgressFault");
var SnapshotScheduleUpdateInProgressFault = _SnapshotScheduleUpdateInProgressFault;
var _ReservedNodeQuotaExceededFault = class _ReservedNodeQuotaExceededFault extends RedshiftServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodeQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodeQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodeQuotaExceededFault.prototype);
  }
};
__name(_ReservedNodeQuotaExceededFault, "ReservedNodeQuotaExceededFault");
var ReservedNodeQuotaExceededFault = _ReservedNodeQuotaExceededFault;
var DisableSnapshotCopyResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "DisableSnapshotCopyResultFilterSensitiveLog");
var EnableSnapshotCopyResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "EnableSnapshotCopyResultFilterSensitiveLog");
var FailoverPrimaryComputeResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "FailoverPrimaryComputeResultFilterSensitiveLog");
var ModifyClusterMessageFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MasterUserPassword && { MasterUserPassword: import_smithy_client.SENSITIVE_STRING }
}), "ModifyClusterMessageFilterSensitiveLog");
var ModifyClusterResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "ModifyClusterResultFilterSensitiveLog");
var ModifyClusterDbRevisionResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "ModifyClusterDbRevisionResultFilterSensitiveLog");
var ModifyClusterIamRolesResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "ModifyClusterIamRolesResultFilterSensitiveLog");
var ModifyClusterMaintenanceResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "ModifyClusterMaintenanceResultFilterSensitiveLog");
var ModifySnapshotCopyRetentionPeriodResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "ModifySnapshotCopyRetentionPeriodResultFilterSensitiveLog");
var PauseClusterResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "PauseClusterResultFilterSensitiveLog");
var RebootClusterResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "RebootClusterResultFilterSensitiveLog");
var ResizeClusterResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "ResizeClusterResultFilterSensitiveLog");
var RestoreFromClusterSnapshotResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "RestoreFromClusterSnapshotResultFilterSensitiveLog");
var ResumeClusterResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "ResumeClusterResultFilterSensitiveLog");
var RotateEncryptionKeyResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }
}), "RotateEncryptionKeyResultFilterSensitiveLog");

// src/protocols/Aws_query.ts
var se_AcceptReservedNodeExchangeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AcceptReservedNodeExchangeInputMessage(input, context),
    [_A]: _ARNE,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AcceptReservedNodeExchangeCommand");
var se_AddPartnerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PartnerIntegrationInputMessage(input, context),
    [_A]: _AP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AddPartnerCommand");
var se_AssociateDataShareConsumerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AssociateDataShareConsumerMessage(input, context),
    [_A]: _ADSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AssociateDataShareConsumerCommand");
var se_AuthorizeClusterSecurityGroupIngressCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AuthorizeClusterSecurityGroupIngressMessage(input, context),
    [_A]: _ACSGI,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AuthorizeClusterSecurityGroupIngressCommand");
var se_AuthorizeDataShareCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AuthorizeDataShareMessage(input, context),
    [_A]: _ADS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AuthorizeDataShareCommand");
var se_AuthorizeEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AuthorizeEndpointAccessMessage(input, context),
    [_A]: _AEA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AuthorizeEndpointAccessCommand");
var se_AuthorizeSnapshotAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AuthorizeSnapshotAccessMessage(input, context),
    [_A]: _ASA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AuthorizeSnapshotAccessCommand");
var se_BatchDeleteClusterSnapshotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_BatchDeleteClusterSnapshotsRequest(input, context),
    [_A]: _BDCS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_BatchDeleteClusterSnapshotsCommand");
var se_BatchModifyClusterSnapshotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_BatchModifyClusterSnapshotsMessage(input, context),
    [_A]: _BMCS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_BatchModifyClusterSnapshotsCommand");
var se_CancelResizeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CancelResizeMessage(input, context),
    [_A]: _CR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CancelResizeCommand");
var se_CopyClusterSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CopyClusterSnapshotMessage(input, context),
    [_A]: _CCS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CopyClusterSnapshotCommand");
var se_CreateAuthenticationProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateAuthenticationProfileMessage(input, context),
    [_A]: _CAP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateAuthenticationProfileCommand");
var se_CreateClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateClusterMessage(input, context),
    [_A]: _CC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateClusterCommand");
var se_CreateClusterParameterGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateClusterParameterGroupMessage(input, context),
    [_A]: _CCPG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateClusterParameterGroupCommand");
var se_CreateClusterSecurityGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateClusterSecurityGroupMessage(input, context),
    [_A]: _CCSG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateClusterSecurityGroupCommand");
var se_CreateClusterSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateClusterSnapshotMessage(input, context),
    [_A]: _CCSr,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateClusterSnapshotCommand");
var se_CreateClusterSubnetGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateClusterSubnetGroupMessage(input, context),
    [_A]: _CCSGr,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateClusterSubnetGroupCommand");
var se_CreateCustomDomainAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateCustomDomainAssociationMessage(input, context),
    [_A]: _CCDA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateCustomDomainAssociationCommand");
var se_CreateEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateEndpointAccessMessage(input, context),
    [_A]: _CEA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateEndpointAccessCommand");
var se_CreateEventSubscriptionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateEventSubscriptionMessage(input, context),
    [_A]: _CES,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateEventSubscriptionCommand");
var se_CreateHsmClientCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateHsmClientCertificateMessage(input, context),
    [_A]: _CHCC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateHsmClientCertificateCommand");
var se_CreateHsmConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateHsmConfigurationMessage(input, context),
    [_A]: _CHC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateHsmConfigurationCommand");
var se_CreateRedshiftIdcApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateRedshiftIdcApplicationMessage(input, context),
    [_A]: _CRIA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateRedshiftIdcApplicationCommand");
var se_CreateScheduledActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateScheduledActionMessage(input, context),
    [_A]: _CSA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateScheduledActionCommand");
var se_CreateSnapshotCopyGrantCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateSnapshotCopyGrantMessage(input, context),
    [_A]: _CSCG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateSnapshotCopyGrantCommand");
var se_CreateSnapshotScheduleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateSnapshotScheduleMessage(input, context),
    [_A]: _CSS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateSnapshotScheduleCommand");
var se_CreateTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateTagsMessage(input, context),
    [_A]: _CT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateTagsCommand");
var se_CreateUsageLimitCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateUsageLimitMessage(input, context),
    [_A]: _CUL,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateUsageLimitCommand");
var se_DeauthorizeDataShareCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeauthorizeDataShareMessage(input, context),
    [_A]: _DDS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeauthorizeDataShareCommand");
var se_DeleteAuthenticationProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteAuthenticationProfileMessage(input, context),
    [_A]: _DAP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteAuthenticationProfileCommand");
var se_DeleteClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteClusterMessage(input, context),
    [_A]: _DC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteClusterCommand");
var se_DeleteClusterParameterGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteClusterParameterGroupMessage(input, context),
    [_A]: _DCPG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteClusterParameterGroupCommand");
var se_DeleteClusterSecurityGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteClusterSecurityGroupMessage(input, context),
    [_A]: _DCSG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteClusterSecurityGroupCommand");
var se_DeleteClusterSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteClusterSnapshotMessage(input, context),
    [_A]: _DCS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteClusterSnapshotCommand");
var se_DeleteClusterSubnetGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteClusterSubnetGroupMessage(input, context),
    [_A]: _DCSGe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteClusterSubnetGroupCommand");
var se_DeleteCustomDomainAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteCustomDomainAssociationMessage(input, context),
    [_A]: _DCDA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteCustomDomainAssociationCommand");
var se_DeleteEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteEndpointAccessMessage(input, context),
    [_A]: _DEA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteEndpointAccessCommand");
var se_DeleteEventSubscriptionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteEventSubscriptionMessage(input, context),
    [_A]: _DES,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteEventSubscriptionCommand");
var se_DeleteHsmClientCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteHsmClientCertificateMessage(input, context),
    [_A]: _DHCC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteHsmClientCertificateCommand");
var se_DeleteHsmConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteHsmConfigurationMessage(input, context),
    [_A]: _DHC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteHsmConfigurationCommand");
var se_DeletePartnerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PartnerIntegrationInputMessage(input, context),
    [_A]: _DP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeletePartnerCommand");
var se_DeleteRedshiftIdcApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteRedshiftIdcApplicationMessage(input, context),
    [_A]: _DRIA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteRedshiftIdcApplicationCommand");
var se_DeleteResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteResourcePolicyMessage(input, context),
    [_A]: _DRP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteResourcePolicyCommand");
var se_DeleteScheduledActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteScheduledActionMessage(input, context),
    [_A]: _DSA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteScheduledActionCommand");
var se_DeleteSnapshotCopyGrantCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteSnapshotCopyGrantMessage(input, context),
    [_A]: _DSCG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSnapshotCopyGrantCommand");
var se_DeleteSnapshotScheduleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteSnapshotScheduleMessage(input, context),
    [_A]: _DSS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSnapshotScheduleCommand");
var se_DeleteTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteTagsMessage(input, context),
    [_A]: _DT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteTagsCommand");
var se_DeleteUsageLimitCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteUsageLimitMessage(input, context),
    [_A]: _DUL,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteUsageLimitCommand");
var se_DescribeAccountAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeAccountAttributesMessage(input, context),
    [_A]: _DAA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeAccountAttributesCommand");
var se_DescribeAuthenticationProfilesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeAuthenticationProfilesMessage(input, context),
    [_A]: _DAPe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeAuthenticationProfilesCommand");
var se_DescribeClusterDbRevisionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeClusterDbRevisionsMessage(input, context),
    [_A]: _DCDR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClusterDbRevisionsCommand");
var se_DescribeClusterParameterGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeClusterParameterGroupsMessage(input, context),
    [_A]: _DCPGe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClusterParameterGroupsCommand");
var se_DescribeClusterParametersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeClusterParametersMessage(input, context),
    [_A]: _DCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClusterParametersCommand");
var se_DescribeClustersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeClustersMessage(input, context),
    [_A]: _DCe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClustersCommand");
var se_DescribeClusterSecurityGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeClusterSecurityGroupsMessage(input, context),
    [_A]: _DCSGes,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClusterSecurityGroupsCommand");
var se_DescribeClusterSnapshotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeClusterSnapshotsMessage(input, context),
    [_A]: _DCSe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClusterSnapshotsCommand");
var se_DescribeClusterSubnetGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeClusterSubnetGroupsMessage(input, context),
    [_A]: _DCSGesc,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClusterSubnetGroupsCommand");
var se_DescribeClusterTracksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeClusterTracksMessage(input, context),
    [_A]: _DCT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClusterTracksCommand");
var se_DescribeClusterVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeClusterVersionsMessage(input, context),
    [_A]: _DCV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClusterVersionsCommand");
var se_DescribeCustomDomainAssociationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeCustomDomainAssociationsMessage(input, context),
    [_A]: _DCDAe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeCustomDomainAssociationsCommand");
var se_DescribeDataSharesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeDataSharesMessage(input, context),
    [_A]: _DDSe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDataSharesCommand");
var se_DescribeDataSharesForConsumerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeDataSharesForConsumerMessage(input, context),
    [_A]: _DDSFC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDataSharesForConsumerCommand");
var se_DescribeDataSharesForProducerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeDataSharesForProducerMessage(input, context),
    [_A]: _DDSFP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDataSharesForProducerCommand");
var se_DescribeDefaultClusterParametersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeDefaultClusterParametersMessage(input, context),
    [_A]: _DDCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDefaultClusterParametersCommand");
var se_DescribeEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEndpointAccessMessage(input, context),
    [_A]: _DEAe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEndpointAccessCommand");
var se_DescribeEndpointAuthorizationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEndpointAuthorizationMessage(input, context),
    [_A]: _DEAes,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEndpointAuthorizationCommand");
var se_DescribeEventCategoriesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEventCategoriesMessage(input, context),
    [_A]: _DEC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEventCategoriesCommand");
var se_DescribeEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEventsMessage(input, context),
    [_A]: _DE,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEventsCommand");
var se_DescribeEventSubscriptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeEventSubscriptionsMessage(input, context),
    [_A]: _DESe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEventSubscriptionsCommand");
var se_DescribeHsmClientCertificatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeHsmClientCertificatesMessage(input, context),
    [_A]: _DHCCe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeHsmClientCertificatesCommand");
var se_DescribeHsmConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeHsmConfigurationsMessage(input, context),
    [_A]: _DHCe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeHsmConfigurationsCommand");
var se_DescribeInboundIntegrationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeInboundIntegrationsMessage(input, context),
    [_A]: _DII,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeInboundIntegrationsCommand");
var se_DescribeLoggingStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeLoggingStatusMessage(input, context),
    [_A]: _DLS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeLoggingStatusCommand");
var se_DescribeNodeConfigurationOptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeNodeConfigurationOptionsMessage(input, context),
    [_A]: _DNCO,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeNodeConfigurationOptionsCommand");
var se_DescribeOrderableClusterOptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeOrderableClusterOptionsMessage(input, context),
    [_A]: _DOCO,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeOrderableClusterOptionsCommand");
var se_DescribePartnersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribePartnersInputMessage(input, context),
    [_A]: _DPe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribePartnersCommand");
var se_DescribeRedshiftIdcApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeRedshiftIdcApplicationsMessage(input, context),
    [_A]: _DRIAe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeRedshiftIdcApplicationsCommand");
var se_DescribeReservedNodeExchangeStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeReservedNodeExchangeStatusInputMessage(input, context),
    [_A]: _DRNES,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeReservedNodeExchangeStatusCommand");
var se_DescribeReservedNodeOfferingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeReservedNodeOfferingsMessage(input, context),
    [_A]: _DRNO,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeReservedNodeOfferingsCommand");
var se_DescribeReservedNodesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeReservedNodesMessage(input, context),
    [_A]: _DRN,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeReservedNodesCommand");
var se_DescribeResizeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeResizeMessage(input, context),
    [_A]: _DR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeResizeCommand");
var se_DescribeScheduledActionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeScheduledActionsMessage(input, context),
    [_A]: _DSAe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeScheduledActionsCommand");
var se_DescribeSnapshotCopyGrantsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeSnapshotCopyGrantsMessage(input, context),
    [_A]: _DSCGe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeSnapshotCopyGrantsCommand");
var se_DescribeSnapshotSchedulesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeSnapshotSchedulesMessage(input, context),
    [_A]: _DSSe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeSnapshotSchedulesCommand");
var se_DescribeStorageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  const body = buildFormUrlencodedString({
    [_A]: _DS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeStorageCommand");
var se_DescribeTableRestoreStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeTableRestoreStatusMessage(input, context),
    [_A]: _DTRS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeTableRestoreStatusCommand");
var se_DescribeTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeTagsMessage(input, context),
    [_A]: _DTe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeTagsCommand");
var se_DescribeUsageLimitsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DescribeUsageLimitsMessage(input, context),
    [_A]: _DULe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeUsageLimitsCommand");
var se_DisableLoggingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DisableLoggingMessage(input, context),
    [_A]: _DL,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisableLoggingCommand");
var se_DisableSnapshotCopyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DisableSnapshotCopyMessage(input, context),
    [_A]: _DSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisableSnapshotCopyCommand");
var se_DisassociateDataShareConsumerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DisassociateDataShareConsumerMessage(input, context),
    [_A]: _DDSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisassociateDataShareConsumerCommand");
var se_EnableLoggingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_EnableLoggingMessage(input, context),
    [_A]: _EL,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_EnableLoggingCommand");
var se_EnableSnapshotCopyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_EnableSnapshotCopyMessage(input, context),
    [_A]: _ESC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_EnableSnapshotCopyCommand");
var se_FailoverPrimaryComputeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_FailoverPrimaryComputeInputMessage(input, context),
    [_A]: _FPC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_FailoverPrimaryComputeCommand");
var se_GetClusterCredentialsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetClusterCredentialsMessage(input, context),
    [_A]: _GCC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetClusterCredentialsCommand");
var se_GetClusterCredentialsWithIAMCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetClusterCredentialsWithIAMMessage(input, context),
    [_A]: _GCCWIAM,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetClusterCredentialsWithIAMCommand");
var se_GetReservedNodeExchangeConfigurationOptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetReservedNodeExchangeConfigurationOptionsInputMessage(input, context),
    [_A]: _GRNECO,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetReservedNodeExchangeConfigurationOptionsCommand");
var se_GetReservedNodeExchangeOfferingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetReservedNodeExchangeOfferingsInputMessage(input, context),
    [_A]: _GRNEO,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetReservedNodeExchangeOfferingsCommand");
var se_GetResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetResourcePolicyMessage(input, context),
    [_A]: _GRP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetResourcePolicyCommand");
var se_ListRecommendationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListRecommendationsMessage(input, context),
    [_A]: _LR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListRecommendationsCommand");
var se_ModifyAquaConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyAquaInputMessage(input, context),
    [_A]: _MAC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyAquaConfigurationCommand");
var se_ModifyAuthenticationProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyAuthenticationProfileMessage(input, context),
    [_A]: _MAP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyAuthenticationProfileCommand");
var se_ModifyClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyClusterMessage(input, context),
    [_A]: _MC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyClusterCommand");
var se_ModifyClusterDbRevisionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyClusterDbRevisionMessage(input, context),
    [_A]: _MCDR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyClusterDbRevisionCommand");
var se_ModifyClusterIamRolesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyClusterIamRolesMessage(input, context),
    [_A]: _MCIR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyClusterIamRolesCommand");
var se_ModifyClusterMaintenanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyClusterMaintenanceMessage(input, context),
    [_A]: _MCM,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyClusterMaintenanceCommand");
var se_ModifyClusterParameterGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyClusterParameterGroupMessage(input, context),
    [_A]: _MCPG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyClusterParameterGroupCommand");
var se_ModifyClusterSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyClusterSnapshotMessage(input, context),
    [_A]: _MCS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyClusterSnapshotCommand");
var se_ModifyClusterSnapshotScheduleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyClusterSnapshotScheduleMessage(input, context),
    [_A]: _MCSS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyClusterSnapshotScheduleCommand");
var se_ModifyClusterSubnetGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyClusterSubnetGroupMessage(input, context),
    [_A]: _MCSG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyClusterSubnetGroupCommand");
var se_ModifyCustomDomainAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyCustomDomainAssociationMessage(input, context),
    [_A]: _MCDA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyCustomDomainAssociationCommand");
var se_ModifyEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyEndpointAccessMessage(input, context),
    [_A]: _MEA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyEndpointAccessCommand");
var se_ModifyEventSubscriptionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyEventSubscriptionMessage(input, context),
    [_A]: _MES,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyEventSubscriptionCommand");
var se_ModifyRedshiftIdcApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyRedshiftIdcApplicationMessage(input, context),
    [_A]: _MRIA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyRedshiftIdcApplicationCommand");
var se_ModifyScheduledActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyScheduledActionMessage(input, context),
    [_A]: _MSA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyScheduledActionCommand");
var se_ModifySnapshotCopyRetentionPeriodCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifySnapshotCopyRetentionPeriodMessage(input, context),
    [_A]: _MSCRP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifySnapshotCopyRetentionPeriodCommand");
var se_ModifySnapshotScheduleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifySnapshotScheduleMessage(input, context),
    [_A]: _MSS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifySnapshotScheduleCommand");
var se_ModifyUsageLimitCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ModifyUsageLimitMessage(input, context),
    [_A]: _MUL,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ModifyUsageLimitCommand");
var se_PauseClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PauseClusterMessage(input, context),
    [_A]: _PC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PauseClusterCommand");
var se_PurchaseReservedNodeOfferingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PurchaseReservedNodeOfferingMessage(input, context),
    [_A]: _PRNO,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PurchaseReservedNodeOfferingCommand");
var se_PutResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PutResourcePolicyMessage(input, context),
    [_A]: _PRP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutResourcePolicyCommand");
var se_RebootClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RebootClusterMessage(input, context),
    [_A]: _RC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RebootClusterCommand");
var se_RejectDataShareCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RejectDataShareMessage(input, context),
    [_A]: _RDS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RejectDataShareCommand");
var se_ResetClusterParameterGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ResetClusterParameterGroupMessage(input, context),
    [_A]: _RCPG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ResetClusterParameterGroupCommand");
var se_ResizeClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ResizeClusterMessage(input, context),
    [_A]: _RCe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ResizeClusterCommand");
var se_RestoreFromClusterSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RestoreFromClusterSnapshotMessage(input, context),
    [_A]: _RFCS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RestoreFromClusterSnapshotCommand");
var se_RestoreTableFromClusterSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RestoreTableFromClusterSnapshotMessage(input, context),
    [_A]: _RTFCS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RestoreTableFromClusterSnapshotCommand");
var se_ResumeClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ResumeClusterMessage(input, context),
    [_A]: _RCes,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ResumeClusterCommand");
var se_RevokeClusterSecurityGroupIngressCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RevokeClusterSecurityGroupIngressMessage(input, context),
    [_A]: _RCSGI,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RevokeClusterSecurityGroupIngressCommand");
var se_RevokeEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RevokeEndpointAccessMessage(input, context),
    [_A]: _REA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RevokeEndpointAccessCommand");
var se_RevokeSnapshotAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RevokeSnapshotAccessMessage(input, context),
    [_A]: _RSA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RevokeSnapshotAccessCommand");
var se_RotateEncryptionKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RotateEncryptionKeyMessage(input, context),
    [_A]: _REK,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RotateEncryptionKeyCommand");
var se_UpdatePartnerStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdatePartnerStatusInputMessage(input, context),
    [_A]: _UPS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdatePartnerStatusCommand");
var de_AcceptReservedNodeExchangeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_AcceptReservedNodeExchangeOutputMessage(data.AcceptReservedNodeExchangeResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AcceptReservedNodeExchangeCommand");
var de_AddPartnerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_PartnerIntegrationOutputMessage(data.AddPartnerResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AddPartnerCommand");
var de_AssociateDataShareConsumerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DataShare(data.AssociateDataShareConsumerResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AssociateDataShareConsumerCommand");
var de_AuthorizeClusterSecurityGroupIngressCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_AuthorizeClusterSecurityGroupIngressResult(data.AuthorizeClusterSecurityGroupIngressResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AuthorizeClusterSecurityGroupIngressCommand");
var de_AuthorizeDataShareCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DataShare(data.AuthorizeDataShareResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AuthorizeDataShareCommand");
var de_AuthorizeEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EndpointAuthorization(data.AuthorizeEndpointAccessResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AuthorizeEndpointAccessCommand");
var de_AuthorizeSnapshotAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_AuthorizeSnapshotAccessResult(data.AuthorizeSnapshotAccessResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AuthorizeSnapshotAccessCommand");
var de_BatchDeleteClusterSnapshotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_BatchDeleteClusterSnapshotsResult(data.BatchDeleteClusterSnapshotsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_BatchDeleteClusterSnapshotsCommand");
var de_BatchModifyClusterSnapshotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_BatchModifyClusterSnapshotsOutputMessage(data.BatchModifyClusterSnapshotsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_BatchModifyClusterSnapshotsCommand");
var de_CancelResizeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ResizeProgressMessage(data.CancelResizeResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CancelResizeCommand");
var de_CopyClusterSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CopyClusterSnapshotResult(data.CopyClusterSnapshotResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CopyClusterSnapshotCommand");
var de_CreateAuthenticationProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateAuthenticationProfileResult(data.CreateAuthenticationProfileResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateAuthenticationProfileCommand");
var de_CreateClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateClusterResult(data.CreateClusterResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateClusterCommand");
var de_CreateClusterParameterGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateClusterParameterGroupResult(data.CreateClusterParameterGroupResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateClusterParameterGroupCommand");
var de_CreateClusterSecurityGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateClusterSecurityGroupResult(data.CreateClusterSecurityGroupResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateClusterSecurityGroupCommand");
var de_CreateClusterSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateClusterSnapshotResult(data.CreateClusterSnapshotResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateClusterSnapshotCommand");
var de_CreateClusterSubnetGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateClusterSubnetGroupResult(data.CreateClusterSubnetGroupResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateClusterSubnetGroupCommand");
var de_CreateCustomDomainAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateCustomDomainAssociationResult(data.CreateCustomDomainAssociationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateCustomDomainAssociationCommand");
var de_CreateEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EndpointAccess(data.CreateEndpointAccessResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateEndpointAccessCommand");
var de_CreateEventSubscriptionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateEventSubscriptionResult(data.CreateEventSubscriptionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateEventSubscriptionCommand");
var de_CreateHsmClientCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateHsmClientCertificateResult(data.CreateHsmClientCertificateResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateHsmClientCertificateCommand");
var de_CreateHsmConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateHsmConfigurationResult(data.CreateHsmConfigurationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateHsmConfigurationCommand");
var de_CreateRedshiftIdcApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateRedshiftIdcApplicationResult(data.CreateRedshiftIdcApplicationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateRedshiftIdcApplicationCommand");
var de_CreateScheduledActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ScheduledAction(data.CreateScheduledActionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateScheduledActionCommand");
var de_CreateSnapshotCopyGrantCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateSnapshotCopyGrantResult(data.CreateSnapshotCopyGrantResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateSnapshotCopyGrantCommand");
var de_CreateSnapshotScheduleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_SnapshotSchedule(data.CreateSnapshotScheduleResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateSnapshotScheduleCommand");
var de_CreateTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_CreateTagsCommand");
var de_CreateUsageLimitCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_UsageLimit(data.CreateUsageLimitResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateUsageLimitCommand");
var de_DeauthorizeDataShareCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DataShare(data.DeauthorizeDataShareResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeauthorizeDataShareCommand");
var de_DeleteAuthenticationProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DeleteAuthenticationProfileResult(data.DeleteAuthenticationProfileResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteAuthenticationProfileCommand");
var de_DeleteClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DeleteClusterResult(data.DeleteClusterResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteClusterCommand");
var de_DeleteClusterParameterGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteClusterParameterGroupCommand");
var de_DeleteClusterSecurityGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteClusterSecurityGroupCommand");
var de_DeleteClusterSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DeleteClusterSnapshotResult(data.DeleteClusterSnapshotResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteClusterSnapshotCommand");
var de_DeleteClusterSubnetGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteClusterSubnetGroupCommand");
var de_DeleteCustomDomainAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteCustomDomainAssociationCommand");
var de_DeleteEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EndpointAccess(data.DeleteEndpointAccessResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteEndpointAccessCommand");
var de_DeleteEventSubscriptionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteEventSubscriptionCommand");
var de_DeleteHsmClientCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteHsmClientCertificateCommand");
var de_DeleteHsmConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteHsmConfigurationCommand");
var de_DeletePartnerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_PartnerIntegrationOutputMessage(data.DeletePartnerResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeletePartnerCommand");
var de_DeleteRedshiftIdcApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteRedshiftIdcApplicationCommand");
var de_DeleteResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteResourcePolicyCommand");
var de_DeleteScheduledActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteScheduledActionCommand");
var de_DeleteSnapshotCopyGrantCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteSnapshotCopyGrantCommand");
var de_DeleteSnapshotScheduleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteSnapshotScheduleCommand");
var de_DeleteTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteTagsCommand");
var de_DeleteUsageLimitCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteUsageLimitCommand");
var de_DescribeAccountAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_AccountAttributeList(data.DescribeAccountAttributesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeAccountAttributesCommand");
var de_DescribeAuthenticationProfilesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeAuthenticationProfilesResult(data.DescribeAuthenticationProfilesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeAuthenticationProfilesCommand");
var de_DescribeClusterDbRevisionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterDbRevisionsMessage(data.DescribeClusterDbRevisionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClusterDbRevisionsCommand");
var de_DescribeClusterParameterGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterParameterGroupsMessage(data.DescribeClusterParameterGroupsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClusterParameterGroupsCommand");
var de_DescribeClusterParametersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterParameterGroupDetails(data.DescribeClusterParametersResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClusterParametersCommand");
var de_DescribeClustersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClustersMessage(data.DescribeClustersResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClustersCommand");
var de_DescribeClusterSecurityGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterSecurityGroupMessage(data.DescribeClusterSecurityGroupsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClusterSecurityGroupsCommand");
var de_DescribeClusterSnapshotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_SnapshotMessage(data.DescribeClusterSnapshotsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClusterSnapshotsCommand");
var de_DescribeClusterSubnetGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterSubnetGroupMessage(data.DescribeClusterSubnetGroupsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClusterSubnetGroupsCommand");
var de_DescribeClusterTracksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_TrackListMessage(data.DescribeClusterTracksResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClusterTracksCommand");
var de_DescribeClusterVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterVersionsMessage(data.DescribeClusterVersionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClusterVersionsCommand");
var de_DescribeCustomDomainAssociationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CustomDomainAssociationsMessage(data.DescribeCustomDomainAssociationsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeCustomDomainAssociationsCommand");
var de_DescribeDataSharesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeDataSharesResult(data.DescribeDataSharesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDataSharesCommand");
var de_DescribeDataSharesForConsumerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeDataSharesForConsumerResult(data.DescribeDataSharesForConsumerResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDataSharesForConsumerCommand");
var de_DescribeDataSharesForProducerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeDataSharesForProducerResult(data.DescribeDataSharesForProducerResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDataSharesForProducerCommand");
var de_DescribeDefaultClusterParametersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeDefaultClusterParametersResult(data.DescribeDefaultClusterParametersResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDefaultClusterParametersCommand");
var de_DescribeEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EndpointAccessList(data.DescribeEndpointAccessResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEndpointAccessCommand");
var de_DescribeEndpointAuthorizationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EndpointAuthorizationList(data.DescribeEndpointAuthorizationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEndpointAuthorizationCommand");
var de_DescribeEventCategoriesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EventCategoriesMessage(data.DescribeEventCategoriesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEventCategoriesCommand");
var de_DescribeEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EventsMessage(data.DescribeEventsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEventsCommand");
var de_DescribeEventSubscriptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EventSubscriptionsMessage(data.DescribeEventSubscriptionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEventSubscriptionsCommand");
var de_DescribeHsmClientCertificatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_HsmClientCertificateMessage(data.DescribeHsmClientCertificatesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeHsmClientCertificatesCommand");
var de_DescribeHsmConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_HsmConfigurationMessage(data.DescribeHsmConfigurationsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeHsmConfigurationsCommand");
var de_DescribeInboundIntegrationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_InboundIntegrationsMessage(data.DescribeInboundIntegrationsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeInboundIntegrationsCommand");
var de_DescribeLoggingStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_LoggingStatus(data.DescribeLoggingStatusResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeLoggingStatusCommand");
var de_DescribeNodeConfigurationOptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_NodeConfigurationOptionsMessage(data.DescribeNodeConfigurationOptionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeNodeConfigurationOptionsCommand");
var de_DescribeOrderableClusterOptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_OrderableClusterOptionsMessage(data.DescribeOrderableClusterOptionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeOrderableClusterOptionsCommand");
var de_DescribePartnersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribePartnersOutputMessage(data.DescribePartnersResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribePartnersCommand");
var de_DescribeRedshiftIdcApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeRedshiftIdcApplicationsResult(data.DescribeRedshiftIdcApplicationsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeRedshiftIdcApplicationsCommand");
var de_DescribeReservedNodeExchangeStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeReservedNodeExchangeStatusOutputMessage(data.DescribeReservedNodeExchangeStatusResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeReservedNodeExchangeStatusCommand");
var de_DescribeReservedNodeOfferingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ReservedNodeOfferingsMessage(data.DescribeReservedNodeOfferingsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeReservedNodeOfferingsCommand");
var de_DescribeReservedNodesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ReservedNodesMessage(data.DescribeReservedNodesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeReservedNodesCommand");
var de_DescribeResizeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ResizeProgressMessage(data.DescribeResizeResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeResizeCommand");
var de_DescribeScheduledActionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ScheduledActionsMessage(data.DescribeScheduledActionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeScheduledActionsCommand");
var de_DescribeSnapshotCopyGrantsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_SnapshotCopyGrantMessage(data.DescribeSnapshotCopyGrantsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeSnapshotCopyGrantsCommand");
var de_DescribeSnapshotSchedulesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DescribeSnapshotSchedulesOutputMessage(data.DescribeSnapshotSchedulesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeSnapshotSchedulesCommand");
var de_DescribeStorageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CustomerStorageMessage(data.DescribeStorageResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeStorageCommand");
var de_DescribeTableRestoreStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_TableRestoreStatusMessage(data.DescribeTableRestoreStatusResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeTableRestoreStatusCommand");
var de_DescribeTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_TaggedResourceListMessage(data.DescribeTagsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeTagsCommand");
var de_DescribeUsageLimitsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_UsageLimitList(data.DescribeUsageLimitsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeUsageLimitsCommand");
var de_DisableLoggingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_LoggingStatus(data.DisableLoggingResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DisableLoggingCommand");
var de_DisableSnapshotCopyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DisableSnapshotCopyResult(data.DisableSnapshotCopyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DisableSnapshotCopyCommand");
var de_DisassociateDataShareConsumerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DataShare(data.DisassociateDataShareConsumerResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DisassociateDataShareConsumerCommand");
var de_EnableLoggingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_LoggingStatus(data.EnableLoggingResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_EnableLoggingCommand");
var de_EnableSnapshotCopyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EnableSnapshotCopyResult(data.EnableSnapshotCopyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_EnableSnapshotCopyCommand");
var de_FailoverPrimaryComputeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_FailoverPrimaryComputeResult(data.FailoverPrimaryComputeResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_FailoverPrimaryComputeCommand");
var de_GetClusterCredentialsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterCredentials(data.GetClusterCredentialsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetClusterCredentialsCommand");
var de_GetClusterCredentialsWithIAMCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterExtendedCredentials(data.GetClusterCredentialsWithIAMResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetClusterCredentialsWithIAMCommand");
var de_GetReservedNodeExchangeConfigurationOptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetReservedNodeExchangeConfigurationOptionsOutputMessage(
    data.GetReservedNodeExchangeConfigurationOptionsResult,
    context
  );
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetReservedNodeExchangeConfigurationOptionsCommand");
var de_GetReservedNodeExchangeOfferingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetReservedNodeExchangeOfferingsOutputMessage(data.GetReservedNodeExchangeOfferingsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetReservedNodeExchangeOfferingsCommand");
var de_GetResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetResourcePolicyResult(data.GetResourcePolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetResourcePolicyCommand");
var de_ListRecommendationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListRecommendationsResult(data.ListRecommendationsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListRecommendationsCommand");
var de_ModifyAquaConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyAquaOutputMessage(data.ModifyAquaConfigurationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyAquaConfigurationCommand");
var de_ModifyAuthenticationProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyAuthenticationProfileResult(data.ModifyAuthenticationProfileResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyAuthenticationProfileCommand");
var de_ModifyClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyClusterResult(data.ModifyClusterResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyClusterCommand");
var de_ModifyClusterDbRevisionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyClusterDbRevisionResult(data.ModifyClusterDbRevisionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyClusterDbRevisionCommand");
var de_ModifyClusterIamRolesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyClusterIamRolesResult(data.ModifyClusterIamRolesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyClusterIamRolesCommand");
var de_ModifyClusterMaintenanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyClusterMaintenanceResult(data.ModifyClusterMaintenanceResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyClusterMaintenanceCommand");
var de_ModifyClusterParameterGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterParameterGroupNameMessage(data.ModifyClusterParameterGroupResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyClusterParameterGroupCommand");
var de_ModifyClusterSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyClusterSnapshotResult(data.ModifyClusterSnapshotResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyClusterSnapshotCommand");
var de_ModifyClusterSnapshotScheduleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_ModifyClusterSnapshotScheduleCommand");
var de_ModifyClusterSubnetGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyClusterSubnetGroupResult(data.ModifyClusterSubnetGroupResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyClusterSubnetGroupCommand");
var de_ModifyCustomDomainAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyCustomDomainAssociationResult(data.ModifyCustomDomainAssociationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyCustomDomainAssociationCommand");
var de_ModifyEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EndpointAccess(data.ModifyEndpointAccessResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyEndpointAccessCommand");
var de_ModifyEventSubscriptionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyEventSubscriptionResult(data.ModifyEventSubscriptionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyEventSubscriptionCommand");
var de_ModifyRedshiftIdcApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifyRedshiftIdcApplicationResult(data.ModifyRedshiftIdcApplicationResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyRedshiftIdcApplicationCommand");
var de_ModifyScheduledActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ScheduledAction(data.ModifyScheduledActionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyScheduledActionCommand");
var de_ModifySnapshotCopyRetentionPeriodCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ModifySnapshotCopyRetentionPeriodResult(data.ModifySnapshotCopyRetentionPeriodResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifySnapshotCopyRetentionPeriodCommand");
var de_ModifySnapshotScheduleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_SnapshotSchedule(data.ModifySnapshotScheduleResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifySnapshotScheduleCommand");
var de_ModifyUsageLimitCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_UsageLimit(data.ModifyUsageLimitResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ModifyUsageLimitCommand");
var de_PauseClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_PauseClusterResult(data.PauseClusterResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PauseClusterCommand");
var de_PurchaseReservedNodeOfferingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_PurchaseReservedNodeOfferingResult(data.PurchaseReservedNodeOfferingResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PurchaseReservedNodeOfferingCommand");
var de_PutResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_PutResourcePolicyResult(data.PutResourcePolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PutResourcePolicyCommand");
var de_RebootClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_RebootClusterResult(data.RebootClusterResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RebootClusterCommand");
var de_RejectDataShareCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DataShare(data.RejectDataShareResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RejectDataShareCommand");
var de_ResetClusterParameterGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ClusterParameterGroupNameMessage(data.ResetClusterParameterGroupResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ResetClusterParameterGroupCommand");
var de_ResizeClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ResizeClusterResult(data.ResizeClusterResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ResizeClusterCommand");
var de_RestoreFromClusterSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_RestoreFromClusterSnapshotResult(data.RestoreFromClusterSnapshotResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RestoreFromClusterSnapshotCommand");
var de_RestoreTableFromClusterSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_RestoreTableFromClusterSnapshotResult(data.RestoreTableFromClusterSnapshotResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RestoreTableFromClusterSnapshotCommand");
var de_ResumeClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ResumeClusterResult(data.ResumeClusterResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ResumeClusterCommand");
var de_RevokeClusterSecurityGroupIngressCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_RevokeClusterSecurityGroupIngressResult(data.RevokeClusterSecurityGroupIngressResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RevokeClusterSecurityGroupIngressCommand");
var de_RevokeEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EndpointAuthorization(data.RevokeEndpointAccessResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RevokeEndpointAccessCommand");
var de_RevokeSnapshotAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_RevokeSnapshotAccessResult(data.RevokeSnapshotAccessResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RevokeSnapshotAccessCommand");
var de_RotateEncryptionKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_RotateEncryptionKeyResult(data.RotateEncryptionKeyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RotateEncryptionKeyCommand");
var de_UpdatePartnerStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_PartnerIntegrationOutputMessage(data.UpdatePartnerStatusResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdatePartnerStatusCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseXmlErrorBody)(output.body, context)
  };
  const errorCode = loadQueryErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "DependentServiceUnavailableFault":
    case "com.amazonaws.redshift#DependentServiceUnavailableFault":
      throw await de_DependentServiceUnavailableFaultRes(parsedOutput, context);
    case "InvalidReservedNodeState":
    case "com.amazonaws.redshift#InvalidReservedNodeStateFault":
      throw await de_InvalidReservedNodeStateFaultRes(parsedOutput, context);
    case "ReservedNodeAlreadyExists":
    case "com.amazonaws.redshift#ReservedNodeAlreadyExistsFault":
      throw await de_ReservedNodeAlreadyExistsFaultRes(parsedOutput, context);
    case "ReservedNodeAlreadyMigrated":
    case "com.amazonaws.redshift#ReservedNodeAlreadyMigratedFault":
      throw await de_ReservedNodeAlreadyMigratedFaultRes(parsedOutput, context);
    case "ReservedNodeNotFound":
    case "com.amazonaws.redshift#ReservedNodeNotFoundFault":
      throw await de_ReservedNodeNotFoundFaultRes(parsedOutput, context);
    case "ReservedNodeOfferingNotFound":
    case "com.amazonaws.redshift#ReservedNodeOfferingNotFoundFault":
      throw await de_ReservedNodeOfferingNotFoundFaultRes(parsedOutput, context);
    case "UnsupportedOperation":
    case "com.amazonaws.redshift#UnsupportedOperationFault":
      throw await de_UnsupportedOperationFaultRes(parsedOutput, context);
    case "ClusterNotFound":
    case "com.amazonaws.redshift#ClusterNotFoundFault":
      throw await de_ClusterNotFoundFaultRes(parsedOutput, context);
    case "PartnerNotFound":
    case "com.amazonaws.redshift#PartnerNotFoundFault":
      throw await de_PartnerNotFoundFaultRes(parsedOutput, context);
    case "UnauthorizedPartnerIntegration":
    case "com.amazonaws.redshift#UnauthorizedPartnerIntegrationFault":
      throw await de_UnauthorizedPartnerIntegrationFaultRes(parsedOutput, context);
    case "InvalidDataShareFault":
    case "com.amazonaws.redshift#InvalidDataShareFault":
      throw await de_InvalidDataShareFaultRes(parsedOutput, context);
    case "InvalidNamespaceFault":
    case "com.amazonaws.redshift#InvalidNamespaceFault":
      throw await de_InvalidNamespaceFaultRes(parsedOutput, context);
    case "AuthorizationAlreadyExists":
    case "com.amazonaws.redshift#AuthorizationAlreadyExistsFault":
      throw await de_AuthorizationAlreadyExistsFaultRes(parsedOutput, context);
    case "AuthorizationQuotaExceeded":
    case "com.amazonaws.redshift#AuthorizationQuotaExceededFault":
      throw await de_AuthorizationQuotaExceededFaultRes(parsedOutput, context);
    case "ClusterSecurityGroupNotFound":
    case "com.amazonaws.redshift#ClusterSecurityGroupNotFoundFault":
      throw await de_ClusterSecurityGroupNotFoundFaultRes(parsedOutput, context);
    case "InvalidClusterSecurityGroupState":
    case "com.amazonaws.redshift#InvalidClusterSecurityGroupStateFault":
      throw await de_InvalidClusterSecurityGroupStateFaultRes(parsedOutput, context);
    case "EndpointAuthorizationAlreadyExists":
    case "com.amazonaws.redshift#EndpointAuthorizationAlreadyExistsFault":
      throw await de_EndpointAuthorizationAlreadyExistsFaultRes(parsedOutput, context);
    case "EndpointAuthorizationsPerClusterLimitExceeded":
    case "com.amazonaws.redshift#EndpointAuthorizationsPerClusterLimitExceededFault":
      throw await de_EndpointAuthorizationsPerClusterLimitExceededFaultRes(parsedOutput, context);
    case "InvalidAuthorizationState":
    case "com.amazonaws.redshift#InvalidAuthorizationStateFault":
      throw await de_InvalidAuthorizationStateFaultRes(parsedOutput, context);
    case "InvalidClusterState":
    case "com.amazonaws.redshift#InvalidClusterStateFault":
      throw await de_InvalidClusterStateFaultRes(parsedOutput, context);
    case "ClusterSnapshotNotFound":
    case "com.amazonaws.redshift#ClusterSnapshotNotFoundFault":
      throw await de_ClusterSnapshotNotFoundFaultRes(parsedOutput, context);
    case "DependentServiceRequestThrottlingFault":
    case "com.amazonaws.redshift#DependentServiceRequestThrottlingFault":
      throw await de_DependentServiceRequestThrottlingFaultRes(parsedOutput, context);
    case "InvalidClusterSnapshotState":
    case "com.amazonaws.redshift#InvalidClusterSnapshotStateFault":
      throw await de_InvalidClusterSnapshotStateFaultRes(parsedOutput, context);
    case "LimitExceededFault":
    case "com.amazonaws.redshift#LimitExceededFault":
      throw await de_LimitExceededFaultRes(parsedOutput, context);
    case "BatchDeleteRequestSizeExceeded":
    case "com.amazonaws.redshift#BatchDeleteRequestSizeExceededFault":
      throw await de_BatchDeleteRequestSizeExceededFaultRes(parsedOutput, context);
    case "BatchModifyClusterSnapshotsLimitExceededFault":
    case "com.amazonaws.redshift#BatchModifyClusterSnapshotsLimitExceededFault":
      throw await de_BatchModifyClusterSnapshotsLimitExceededFaultRes(parsedOutput, context);
    case "InvalidRetentionPeriodFault":
    case "com.amazonaws.redshift#InvalidRetentionPeriodFault":
      throw await de_InvalidRetentionPeriodFaultRes(parsedOutput, context);
    case "ResizeNotFound":
    case "com.amazonaws.redshift#ResizeNotFoundFault":
      throw await de_ResizeNotFoundFaultRes(parsedOutput, context);
    case "ClusterSnapshotAlreadyExists":
    case "com.amazonaws.redshift#ClusterSnapshotAlreadyExistsFault":
      throw await de_ClusterSnapshotAlreadyExistsFaultRes(parsedOutput, context);
    case "ClusterSnapshotQuotaExceeded":
    case "com.amazonaws.redshift#ClusterSnapshotQuotaExceededFault":
      throw await de_ClusterSnapshotQuotaExceededFaultRes(parsedOutput, context);
    case "AuthenticationProfileAlreadyExistsFault":
    case "com.amazonaws.redshift#AuthenticationProfileAlreadyExistsFault":
      throw await de_AuthenticationProfileAlreadyExistsFaultRes(parsedOutput, context);
    case "AuthenticationProfileQuotaExceededFault":
    case "com.amazonaws.redshift#AuthenticationProfileQuotaExceededFault":
      throw await de_AuthenticationProfileQuotaExceededFaultRes(parsedOutput, context);
    case "InvalidAuthenticationProfileRequestFault":
    case "com.amazonaws.redshift#InvalidAuthenticationProfileRequestFault":
      throw await de_InvalidAuthenticationProfileRequestFaultRes(parsedOutput, context);
    case "ClusterAlreadyExists":
    case "com.amazonaws.redshift#ClusterAlreadyExistsFault":
      throw await de_ClusterAlreadyExistsFaultRes(parsedOutput, context);
    case "ClusterParameterGroupNotFound":
    case "com.amazonaws.redshift#ClusterParameterGroupNotFoundFault":
      throw await de_ClusterParameterGroupNotFoundFaultRes(parsedOutput, context);
    case "ClusterQuotaExceeded":
    case "com.amazonaws.redshift#ClusterQuotaExceededFault":
      throw await de_ClusterQuotaExceededFaultRes(parsedOutput, context);
    case "ClusterSubnetGroupNotFoundFault":
    case "com.amazonaws.redshift#ClusterSubnetGroupNotFoundFault":
      throw await de_ClusterSubnetGroupNotFoundFaultRes(parsedOutput, context);
    case "HsmClientCertificateNotFoundFault":
    case "com.amazonaws.redshift#HsmClientCertificateNotFoundFault":
      throw await de_HsmClientCertificateNotFoundFaultRes(parsedOutput, context);
    case "HsmConfigurationNotFoundFault":
    case "com.amazonaws.redshift#HsmConfigurationNotFoundFault":
      throw await de_HsmConfigurationNotFoundFaultRes(parsedOutput, context);
    case "InsufficientClusterCapacity":
    case "com.amazonaws.redshift#InsufficientClusterCapacityFault":
      throw await de_InsufficientClusterCapacityFaultRes(parsedOutput, context);
    case "InvalidClusterSubnetGroupStateFault":
    case "com.amazonaws.redshift#InvalidClusterSubnetGroupStateFault":
      throw await de_InvalidClusterSubnetGroupStateFaultRes(parsedOutput, context);
    case "InvalidClusterTrack":
    case "com.amazonaws.redshift#InvalidClusterTrackFault":
      throw await de_InvalidClusterTrackFaultRes(parsedOutput, context);
    case "InvalidElasticIpFault":
    case "com.amazonaws.redshift#InvalidElasticIpFault":
      throw await de_InvalidElasticIpFaultRes(parsedOutput, context);
    case "InvalidSubnet":
    case "com.amazonaws.redshift#InvalidSubnet":
      throw await de_InvalidSubnetRes(parsedOutput, context);
    case "InvalidTagFault":
    case "com.amazonaws.redshift#InvalidTagFault":
      throw await de_InvalidTagFaultRes(parsedOutput, context);
    case "InvalidVPCNetworkStateFault":
    case "com.amazonaws.redshift#InvalidVPCNetworkStateFault":
      throw await de_InvalidVPCNetworkStateFaultRes(parsedOutput, context);
    case "Ipv6CidrBlockNotFoundFault":
    case "com.amazonaws.redshift#Ipv6CidrBlockNotFoundFault":
      throw await de_Ipv6CidrBlockNotFoundFaultRes(parsedOutput, context);
    case "NumberOfNodesPerClusterLimitExceeded":
    case "com.amazonaws.redshift#NumberOfNodesPerClusterLimitExceededFault":
      throw await de_NumberOfNodesPerClusterLimitExceededFaultRes(parsedOutput, context);
    case "NumberOfNodesQuotaExceeded":
    case "com.amazonaws.redshift#NumberOfNodesQuotaExceededFault":
      throw await de_NumberOfNodesQuotaExceededFaultRes(parsedOutput, context);
    case "RedshiftIdcApplicationNotExists":
    case "com.amazonaws.redshift#RedshiftIdcApplicationNotExistsFault":
      throw await de_RedshiftIdcApplicationNotExistsFaultRes(parsedOutput, context);
    case "SnapshotScheduleNotFound":
    case "com.amazonaws.redshift#SnapshotScheduleNotFoundFault":
      throw await de_SnapshotScheduleNotFoundFaultRes(parsedOutput, context);
    case "TagLimitExceededFault":
    case "com.amazonaws.redshift#TagLimitExceededFault":
      throw await de_TagLimitExceededFaultRes(parsedOutput, context);
    case "UnauthorizedOperation":
    case "com.amazonaws.redshift#UnauthorizedOperation":
      throw await de_UnauthorizedOperationRes(parsedOutput, context);
    case "ClusterParameterGroupAlreadyExists":
    case "com.amazonaws.redshift#ClusterParameterGroupAlreadyExistsFault":
      throw await de_ClusterParameterGroupAlreadyExistsFaultRes(parsedOutput, context);
    case "ClusterParameterGroupQuotaExceeded":
    case "com.amazonaws.redshift#ClusterParameterGroupQuotaExceededFault":
      throw await de_ClusterParameterGroupQuotaExceededFaultRes(parsedOutput, context);
    case "ClusterSecurityGroupAlreadyExists":
    case "com.amazonaws.redshift#ClusterSecurityGroupAlreadyExistsFault":
      throw await de_ClusterSecurityGroupAlreadyExistsFaultRes(parsedOutput, context);
    case "QuotaExceeded.ClusterSecurityGroup":
    case "com.amazonaws.redshift#ClusterSecurityGroupQuotaExceededFault":
      throw await de_ClusterSecurityGroupQuotaExceededFaultRes(parsedOutput, context);
    case "ClusterSubnetGroupAlreadyExists":
    case "com.amazonaws.redshift#ClusterSubnetGroupAlreadyExistsFault":
      throw await de_ClusterSubnetGroupAlreadyExistsFaultRes(parsedOutput, context);
    case "ClusterSubnetGroupQuotaExceeded":
    case "com.amazonaws.redshift#ClusterSubnetGroupQuotaExceededFault":
      throw await de_ClusterSubnetGroupQuotaExceededFaultRes(parsedOutput, context);
    case "ClusterSubnetQuotaExceededFault":
    case "com.amazonaws.redshift#ClusterSubnetQuotaExceededFault":
      throw await de_ClusterSubnetQuotaExceededFaultRes(parsedOutput, context);
    case "CustomCnameAssociationFault":
    case "com.amazonaws.redshift#CustomCnameAssociationFault":
      throw await de_CustomCnameAssociationFaultRes(parsedOutput, context);
    case "AccessToClusterDenied":
    case "com.amazonaws.redshift#AccessToClusterDeniedFault":
      throw await de_AccessToClusterDeniedFaultRes(parsedOutput, context);
    case "EndpointAlreadyExists":
    case "com.amazonaws.redshift#EndpointAlreadyExistsFault":
      throw await de_EndpointAlreadyExistsFaultRes(parsedOutput, context);
    case "EndpointsPerAuthorizationLimitExceeded":
    case "com.amazonaws.redshift#EndpointsPerAuthorizationLimitExceededFault":
      throw await de_EndpointsPerAuthorizationLimitExceededFaultRes(parsedOutput, context);
    case "EndpointsPerClusterLimitExceeded":
    case "com.amazonaws.redshift#EndpointsPerClusterLimitExceededFault":
      throw await de_EndpointsPerClusterLimitExceededFaultRes(parsedOutput, context);
    case "EventSubscriptionQuotaExceeded":
    case "com.amazonaws.redshift#EventSubscriptionQuotaExceededFault":
      throw await de_EventSubscriptionQuotaExceededFaultRes(parsedOutput, context);
    case "SNSInvalidTopic":
    case "com.amazonaws.redshift#SNSInvalidTopicFault":
      throw await de_SNSInvalidTopicFaultRes(parsedOutput, context);
    case "SNSNoAuthorization":
    case "com.amazonaws.redshift#SNSNoAuthorizationFault":
      throw await de_SNSNoAuthorizationFaultRes(parsedOutput, context);
    case "SNSTopicArnNotFound":
    case "com.amazonaws.redshift#SNSTopicArnNotFoundFault":
      throw await de_SNSTopicArnNotFoundFaultRes(parsedOutput, context);
    case "SourceNotFound":
    case "com.amazonaws.redshift#SourceNotFoundFault":
      throw await de_SourceNotFoundFaultRes(parsedOutput, context);
    case "SubscriptionAlreadyExist":
    case "com.amazonaws.redshift#SubscriptionAlreadyExistFault":
      throw await de_SubscriptionAlreadyExistFaultRes(parsedOutput, context);
    case "SubscriptionCategoryNotFound":
    case "com.amazonaws.redshift#SubscriptionCategoryNotFoundFault":
      throw await de_SubscriptionCategoryNotFoundFaultRes(parsedOutput, context);
    case "SubscriptionEventIdNotFound":
    case "com.amazonaws.redshift#SubscriptionEventIdNotFoundFault":
      throw await de_SubscriptionEventIdNotFoundFaultRes(parsedOutput, context);
    case "SubscriptionSeverityNotFound":
    case "com.amazonaws.redshift#SubscriptionSeverityNotFoundFault":
      throw await de_SubscriptionSeverityNotFoundFaultRes(parsedOutput, context);
    case "HsmClientCertificateAlreadyExistsFault":
    case "com.amazonaws.redshift#HsmClientCertificateAlreadyExistsFault":
      throw await de_HsmClientCertificateAlreadyExistsFaultRes(parsedOutput, context);
    case "HsmClientCertificateQuotaExceededFault":
    case "com.amazonaws.redshift#HsmClientCertificateQuotaExceededFault":
      throw await de_HsmClientCertificateQuotaExceededFaultRes(parsedOutput, context);
    case "HsmConfigurationAlreadyExistsFault":
    case "com.amazonaws.redshift#HsmConfigurationAlreadyExistsFault":
      throw await de_HsmConfigurationAlreadyExistsFaultRes(parsedOutput, context);
    case "HsmConfigurationQuotaExceededFault":
    case "com.amazonaws.redshift#HsmConfigurationQuotaExceededFault":
      throw await de_HsmConfigurationQuotaExceededFaultRes(parsedOutput, context);
    case "DependentServiceAccessDenied":
    case "com.amazonaws.redshift#DependentServiceAccessDeniedFault":
      throw await de_DependentServiceAccessDeniedFaultRes(parsedOutput, context);
    case "RedshiftIdcApplicationAlreadyExists":
    case "com.amazonaws.redshift#RedshiftIdcApplicationAlreadyExistsFault":
      throw await de_RedshiftIdcApplicationAlreadyExistsFaultRes(parsedOutput, context);
    case "RedshiftIdcApplicationQuotaExceeded":
    case "com.amazonaws.redshift#RedshiftIdcApplicationQuotaExceededFault":
      throw await de_RedshiftIdcApplicationQuotaExceededFaultRes(parsedOutput, context);
    case "InvalidSchedule":
    case "com.amazonaws.redshift#InvalidScheduleFault":
      throw await de_InvalidScheduleFaultRes(parsedOutput, context);
    case "InvalidScheduledAction":
    case "com.amazonaws.redshift#InvalidScheduledActionFault":
      throw await de_InvalidScheduledActionFaultRes(parsedOutput, context);
    case "ScheduledActionAlreadyExists":
    case "com.amazonaws.redshift#ScheduledActionAlreadyExistsFault":
      throw await de_ScheduledActionAlreadyExistsFaultRes(parsedOutput, context);
    case "ScheduledActionQuotaExceeded":
    case "com.amazonaws.redshift#ScheduledActionQuotaExceededFault":
      throw await de_ScheduledActionQuotaExceededFaultRes(parsedOutput, context);
    case "ScheduledActionTypeUnsupported":
    case "com.amazonaws.redshift#ScheduledActionTypeUnsupportedFault":
      throw await de_ScheduledActionTypeUnsupportedFaultRes(parsedOutput, context);
    case "SnapshotCopyGrantAlreadyExistsFault":
    case "com.amazonaws.redshift#SnapshotCopyGrantAlreadyExistsFault":
      throw await de_SnapshotCopyGrantAlreadyExistsFaultRes(parsedOutput, context);
    case "SnapshotCopyGrantQuotaExceededFault":
    case "com.amazonaws.redshift#SnapshotCopyGrantQuotaExceededFault":
      throw await de_SnapshotCopyGrantQuotaExceededFaultRes(parsedOutput, context);
    case "ScheduleDefinitionTypeUnsupported":
    case "com.amazonaws.redshift#ScheduleDefinitionTypeUnsupportedFault":
      throw await de_ScheduleDefinitionTypeUnsupportedFaultRes(parsedOutput, context);
    case "SnapshotScheduleAlreadyExists":
    case "com.amazonaws.redshift#SnapshotScheduleAlreadyExistsFault":
      throw await de_SnapshotScheduleAlreadyExistsFaultRes(parsedOutput, context);
    case "SnapshotScheduleQuotaExceeded":
    case "com.amazonaws.redshift#SnapshotScheduleQuotaExceededFault":
      throw await de_SnapshotScheduleQuotaExceededFaultRes(parsedOutput, context);
    case "ResourceNotFoundFault":
    case "com.amazonaws.redshift#ResourceNotFoundFault":
      throw await de_ResourceNotFoundFaultRes(parsedOutput, context);
    case "InvalidUsageLimit":
    case "com.amazonaws.redshift#InvalidUsageLimitFault":
      throw await de_InvalidUsageLimitFaultRes(parsedOutput, context);
    case "UsageLimitAlreadyExists":
    case "com.amazonaws.redshift#UsageLimitAlreadyExistsFault":
      throw await de_UsageLimitAlreadyExistsFaultRes(parsedOutput, context);
    case "AuthenticationProfileNotFoundFault":
    case "com.amazonaws.redshift#AuthenticationProfileNotFoundFault":
      throw await de_AuthenticationProfileNotFoundFaultRes(parsedOutput, context);
    case "InvalidClusterParameterGroupState":
    case "com.amazonaws.redshift#InvalidClusterParameterGroupStateFault":
      throw await de_InvalidClusterParameterGroupStateFaultRes(parsedOutput, context);
    case "InvalidClusterSubnetStateFault":
    case "com.amazonaws.redshift#InvalidClusterSubnetStateFault":
      throw await de_InvalidClusterSubnetStateFaultRes(parsedOutput, context);
    case "CustomDomainAssociationNotFoundFault":
    case "com.amazonaws.redshift#CustomDomainAssociationNotFoundFault":
      throw await de_CustomDomainAssociationNotFoundFaultRes(parsedOutput, context);
    case "EndpointNotFound":
    case "com.amazonaws.redshift#EndpointNotFoundFault":
      throw await de_EndpointNotFoundFaultRes(parsedOutput, context);
    case "InvalidEndpointState":
    case "com.amazonaws.redshift#InvalidEndpointStateFault":
      throw await de_InvalidEndpointStateFaultRes(parsedOutput, context);
    case "InvalidSubscriptionStateFault":
    case "com.amazonaws.redshift#InvalidSubscriptionStateFault":
      throw await de_InvalidSubscriptionStateFaultRes(parsedOutput, context);
    case "SubscriptionNotFound":
    case "com.amazonaws.redshift#SubscriptionNotFoundFault":
      throw await de_SubscriptionNotFoundFaultRes(parsedOutput, context);
    case "InvalidHsmClientCertificateStateFault":
    case "com.amazonaws.redshift#InvalidHsmClientCertificateStateFault":
      throw await de_InvalidHsmClientCertificateStateFaultRes(parsedOutput, context);
    case "InvalidHsmConfigurationStateFault":
    case "com.amazonaws.redshift#InvalidHsmConfigurationStateFault":
      throw await de_InvalidHsmConfigurationStateFaultRes(parsedOutput, context);
    case "ScheduledActionNotFound":
    case "com.amazonaws.redshift#ScheduledActionNotFoundFault":
      throw await de_ScheduledActionNotFoundFaultRes(parsedOutput, context);
    case "InvalidSnapshotCopyGrantStateFault":
    case "com.amazonaws.redshift#InvalidSnapshotCopyGrantStateFault":
      throw await de_InvalidSnapshotCopyGrantStateFaultRes(parsedOutput, context);
    case "SnapshotCopyGrantNotFoundFault":
    case "com.amazonaws.redshift#SnapshotCopyGrantNotFoundFault":
      throw await de_SnapshotCopyGrantNotFoundFaultRes(parsedOutput, context);
    case "InvalidClusterSnapshotScheduleState":
    case "com.amazonaws.redshift#InvalidClusterSnapshotScheduleStateFault":
      throw await de_InvalidClusterSnapshotScheduleStateFaultRes(parsedOutput, context);
    case "UsageLimitNotFound":
    case "com.amazonaws.redshift#UsageLimitNotFoundFault":
      throw await de_UsageLimitNotFoundFaultRes(parsedOutput, context);
    case "IntegrationNotFoundFault":
    case "com.amazonaws.redshift#IntegrationNotFoundFault":
      throw await de_IntegrationNotFoundFaultRes(parsedOutput, context);
    case "AccessToSnapshotDenied":
    case "com.amazonaws.redshift#AccessToSnapshotDeniedFault":
      throw await de_AccessToSnapshotDeniedFaultRes(parsedOutput, context);
    case "ReservedNodeExchangeNotFond":
    case "com.amazonaws.redshift#ReservedNodeExchangeNotFoundFault":
      throw await de_ReservedNodeExchangeNotFoundFaultRes(parsedOutput, context);
    case "TableRestoreNotFoundFault":
    case "com.amazonaws.redshift#TableRestoreNotFoundFault":
      throw await de_TableRestoreNotFoundFaultRes(parsedOutput, context);
    case "SnapshotCopyAlreadyDisabledFault":
    case "com.amazonaws.redshift#SnapshotCopyAlreadyDisabledFault":
      throw await de_SnapshotCopyAlreadyDisabledFaultRes(parsedOutput, context);
    case "BucketNotFoundFault":
    case "com.amazonaws.redshift#BucketNotFoundFault":
      throw await de_BucketNotFoundFaultRes(parsedOutput, context);
    case "InsufficientS3BucketPolicyFault":
    case "com.amazonaws.redshift#InsufficientS3BucketPolicyFault":
      throw await de_InsufficientS3BucketPolicyFaultRes(parsedOutput, context);
    case "InvalidS3BucketNameFault":
    case "com.amazonaws.redshift#InvalidS3BucketNameFault":
      throw await de_InvalidS3BucketNameFaultRes(parsedOutput, context);
    case "InvalidS3KeyPrefixFault":
    case "com.amazonaws.redshift#InvalidS3KeyPrefixFault":
      throw await de_InvalidS3KeyPrefixFaultRes(parsedOutput, context);
    case "CopyToRegionDisabledFault":
    case "com.amazonaws.redshift#CopyToRegionDisabledFault":
      throw await de_CopyToRegionDisabledFaultRes(parsedOutput, context);
    case "IncompatibleOrderableOptions":
    case "com.amazonaws.redshift#IncompatibleOrderableOptions":
      throw await de_IncompatibleOrderableOptionsRes(parsedOutput, context);
    case "SnapshotCopyAlreadyEnabledFault":
    case "com.amazonaws.redshift#SnapshotCopyAlreadyEnabledFault":
      throw await de_SnapshotCopyAlreadyEnabledFaultRes(parsedOutput, context);
    case "UnknownSnapshotCopyRegionFault":
    case "com.amazonaws.redshift#UnknownSnapshotCopyRegionFault":
      throw await de_UnknownSnapshotCopyRegionFaultRes(parsedOutput, context);
    case "InvalidPolicyFault":
    case "com.amazonaws.redshift#InvalidPolicyFault":
      throw await de_InvalidPolicyFaultRes(parsedOutput, context);
    case "TableLimitExceeded":
    case "com.amazonaws.redshift#TableLimitExceededFault":
      throw await de_TableLimitExceededFaultRes(parsedOutput, context);
    case "UnsupportedOptionFault":
    case "com.amazonaws.redshift#UnsupportedOptionFault":
      throw await de_UnsupportedOptionFaultRes(parsedOutput, context);
    case "ClusterOnLatestRevision":
    case "com.amazonaws.redshift#ClusterOnLatestRevisionFault":
      throw await de_ClusterOnLatestRevisionFaultRes(parsedOutput, context);
    case "SubnetAlreadyInUse":
    case "com.amazonaws.redshift#SubnetAlreadyInUse":
      throw await de_SubnetAlreadyInUseRes(parsedOutput, context);
    case "SnapshotCopyDisabledFault":
    case "com.amazonaws.redshift#SnapshotCopyDisabledFault":
      throw await de_SnapshotCopyDisabledFaultRes(parsedOutput, context);
    case "SnapshotScheduleUpdateInProgress":
    case "com.amazonaws.redshift#SnapshotScheduleUpdateInProgressFault":
      throw await de_SnapshotScheduleUpdateInProgressFaultRes(parsedOutput, context);
    case "ReservedNodeQuotaExceeded":
    case "com.amazonaws.redshift#ReservedNodeQuotaExceededFault":
      throw await de_ReservedNodeQuotaExceededFaultRes(parsedOutput, context);
    case "ConflictPolicyUpdateFault":
    case "com.amazonaws.redshift#ConflictPolicyUpdateFault":
      throw await de_ConflictPolicyUpdateFaultRes(parsedOutput, context);
    case "InvalidRestore":
    case "com.amazonaws.redshift#InvalidRestoreFault":
      throw await de_InvalidRestoreFaultRes(parsedOutput, context);
    case "InProgressTableRestoreQuotaExceededFault":
    case "com.amazonaws.redshift#InProgressTableRestoreQuotaExceededFault":
      throw await de_InProgressTableRestoreQuotaExceededFaultRes(parsedOutput, context);
    case "InvalidTableRestoreArgument":
    case "com.amazonaws.redshift#InvalidTableRestoreArgumentFault":
      throw await de_InvalidTableRestoreArgumentFaultRes(parsedOutput, context);
    case "AuthorizationNotFound":
    case "com.amazonaws.redshift#AuthorizationNotFoundFault":
      throw await de_AuthorizationNotFoundFaultRes(parsedOutput, context);
    case "EndpointAuthorizationNotFound":
    case "com.amazonaws.redshift#EndpointAuthorizationNotFoundFault":
      throw await de_EndpointAuthorizationNotFoundFaultRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody: parsedBody.Error,
        errorCode
      });
  }
}, "de_CommandError");
var de_AccessToClusterDeniedFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_AccessToClusterDeniedFault(body.Error, context);
  const exception = new AccessToClusterDeniedFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccessToClusterDeniedFaultRes");
var de_AccessToSnapshotDeniedFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_AccessToSnapshotDeniedFault(body.Error, context);
  const exception = new AccessToSnapshotDeniedFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccessToSnapshotDeniedFaultRes");
var de_AuthenticationProfileAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_AuthenticationProfileAlreadyExistsFault(body.Error, context);
  const exception = new AuthenticationProfileAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AuthenticationProfileAlreadyExistsFaultRes");
var de_AuthenticationProfileNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_AuthenticationProfileNotFoundFault(body.Error, context);
  const exception = new AuthenticationProfileNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AuthenticationProfileNotFoundFaultRes");
var de_AuthenticationProfileQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_AuthenticationProfileQuotaExceededFault(body.Error, context);
  const exception = new AuthenticationProfileQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AuthenticationProfileQuotaExceededFaultRes");
var de_AuthorizationAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_AuthorizationAlreadyExistsFault(body.Error, context);
  const exception = new AuthorizationAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AuthorizationAlreadyExistsFaultRes");
var de_AuthorizationNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_AuthorizationNotFoundFault(body.Error, context);
  const exception = new AuthorizationNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AuthorizationNotFoundFaultRes");
var de_AuthorizationQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_AuthorizationQuotaExceededFault(body.Error, context);
  const exception = new AuthorizationQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AuthorizationQuotaExceededFaultRes");
var de_BatchDeleteRequestSizeExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_BatchDeleteRequestSizeExceededFault(body.Error, context);
  const exception = new BatchDeleteRequestSizeExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BatchDeleteRequestSizeExceededFaultRes");
var de_BatchModifyClusterSnapshotsLimitExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_BatchModifyClusterSnapshotsLimitExceededFault(body.Error, context);
  const exception = new BatchModifyClusterSnapshotsLimitExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BatchModifyClusterSnapshotsLimitExceededFaultRes");
var de_BucketNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_BucketNotFoundFault(body.Error, context);
  const exception = new BucketNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BucketNotFoundFaultRes");
var de_ClusterAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterAlreadyExistsFault(body.Error, context);
  const exception = new ClusterAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterAlreadyExistsFaultRes");
var de_ClusterNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterNotFoundFault(body.Error, context);
  const exception = new ClusterNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterNotFoundFaultRes");
var de_ClusterOnLatestRevisionFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterOnLatestRevisionFault(body.Error, context);
  const exception = new ClusterOnLatestRevisionFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterOnLatestRevisionFaultRes");
var de_ClusterParameterGroupAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterParameterGroupAlreadyExistsFault(body.Error, context);
  const exception = new ClusterParameterGroupAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterParameterGroupAlreadyExistsFaultRes");
var de_ClusterParameterGroupNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterParameterGroupNotFoundFault(body.Error, context);
  const exception = new ClusterParameterGroupNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterParameterGroupNotFoundFaultRes");
var de_ClusterParameterGroupQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterParameterGroupQuotaExceededFault(body.Error, context);
  const exception = new ClusterParameterGroupQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterParameterGroupQuotaExceededFaultRes");
var de_ClusterQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterQuotaExceededFault(body.Error, context);
  const exception = new ClusterQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterQuotaExceededFaultRes");
var de_ClusterSecurityGroupAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSecurityGroupAlreadyExistsFault(body.Error, context);
  const exception = new ClusterSecurityGroupAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSecurityGroupAlreadyExistsFaultRes");
var de_ClusterSecurityGroupNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSecurityGroupNotFoundFault(body.Error, context);
  const exception = new ClusterSecurityGroupNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSecurityGroupNotFoundFaultRes");
var de_ClusterSecurityGroupQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSecurityGroupQuotaExceededFault(body.Error, context);
  const exception = new ClusterSecurityGroupQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSecurityGroupQuotaExceededFaultRes");
var de_ClusterSnapshotAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSnapshotAlreadyExistsFault(body.Error, context);
  const exception = new ClusterSnapshotAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSnapshotAlreadyExistsFaultRes");
var de_ClusterSnapshotNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSnapshotNotFoundFault(body.Error, context);
  const exception = new ClusterSnapshotNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSnapshotNotFoundFaultRes");
var de_ClusterSnapshotQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSnapshotQuotaExceededFault(body.Error, context);
  const exception = new ClusterSnapshotQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSnapshotQuotaExceededFaultRes");
var de_ClusterSubnetGroupAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSubnetGroupAlreadyExistsFault(body.Error, context);
  const exception = new ClusterSubnetGroupAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSubnetGroupAlreadyExistsFaultRes");
var de_ClusterSubnetGroupNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSubnetGroupNotFoundFault(body.Error, context);
  const exception = new ClusterSubnetGroupNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSubnetGroupNotFoundFaultRes");
var de_ClusterSubnetGroupQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSubnetGroupQuotaExceededFault(body.Error, context);
  const exception = new ClusterSubnetGroupQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSubnetGroupQuotaExceededFaultRes");
var de_ClusterSubnetQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ClusterSubnetQuotaExceededFault(body.Error, context);
  const exception = new ClusterSubnetQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterSubnetQuotaExceededFaultRes");
var de_ConflictPolicyUpdateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ConflictPolicyUpdateFault(body.Error, context);
  const exception = new ConflictPolicyUpdateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConflictPolicyUpdateFaultRes");
var de_CopyToRegionDisabledFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_CopyToRegionDisabledFault(body.Error, context);
  const exception = new CopyToRegionDisabledFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_CopyToRegionDisabledFaultRes");
var de_CustomCnameAssociationFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_CustomCnameAssociationFault(body.Error, context);
  const exception = new CustomCnameAssociationFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_CustomCnameAssociationFaultRes");
var de_CustomDomainAssociationNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_CustomDomainAssociationNotFoundFault(body.Error, context);
  const exception = new CustomDomainAssociationNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_CustomDomainAssociationNotFoundFaultRes");
var de_DependentServiceAccessDeniedFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_DependentServiceAccessDeniedFault(body.Error, context);
  const exception = new DependentServiceAccessDeniedFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DependentServiceAccessDeniedFaultRes");
var de_DependentServiceRequestThrottlingFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_DependentServiceRequestThrottlingFault(body.Error, context);
  const exception = new DependentServiceRequestThrottlingFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DependentServiceRequestThrottlingFaultRes");
var de_DependentServiceUnavailableFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_DependentServiceUnavailableFault(body.Error, context);
  const exception = new DependentServiceUnavailableFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DependentServiceUnavailableFaultRes");
var de_EndpointAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EndpointAlreadyExistsFault(body.Error, context);
  const exception = new EndpointAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EndpointAlreadyExistsFaultRes");
var de_EndpointAuthorizationAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EndpointAuthorizationAlreadyExistsFault(body.Error, context);
  const exception = new EndpointAuthorizationAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EndpointAuthorizationAlreadyExistsFaultRes");
var de_EndpointAuthorizationNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EndpointAuthorizationNotFoundFault(body.Error, context);
  const exception = new EndpointAuthorizationNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EndpointAuthorizationNotFoundFaultRes");
var de_EndpointAuthorizationsPerClusterLimitExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EndpointAuthorizationsPerClusterLimitExceededFault(body.Error, context);
  const exception = new EndpointAuthorizationsPerClusterLimitExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EndpointAuthorizationsPerClusterLimitExceededFaultRes");
var de_EndpointNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EndpointNotFoundFault(body.Error, context);
  const exception = new EndpointNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EndpointNotFoundFaultRes");
var de_EndpointsPerAuthorizationLimitExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EndpointsPerAuthorizationLimitExceededFault(body.Error, context);
  const exception = new EndpointsPerAuthorizationLimitExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EndpointsPerAuthorizationLimitExceededFaultRes");
var de_EndpointsPerClusterLimitExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EndpointsPerClusterLimitExceededFault(body.Error, context);
  const exception = new EndpointsPerClusterLimitExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EndpointsPerClusterLimitExceededFaultRes");
var de_EventSubscriptionQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EventSubscriptionQuotaExceededFault(body.Error, context);
  const exception = new EventSubscriptionQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EventSubscriptionQuotaExceededFaultRes");
var de_HsmClientCertificateAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_HsmClientCertificateAlreadyExistsFault(body.Error, context);
  const exception = new HsmClientCertificateAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_HsmClientCertificateAlreadyExistsFaultRes");
var de_HsmClientCertificateNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_HsmClientCertificateNotFoundFault(body.Error, context);
  const exception = new HsmClientCertificateNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_HsmClientCertificateNotFoundFaultRes");
var de_HsmClientCertificateQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_HsmClientCertificateQuotaExceededFault(body.Error, context);
  const exception = new HsmClientCertificateQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_HsmClientCertificateQuotaExceededFaultRes");
var de_HsmConfigurationAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_HsmConfigurationAlreadyExistsFault(body.Error, context);
  const exception = new HsmConfigurationAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_HsmConfigurationAlreadyExistsFaultRes");
var de_HsmConfigurationNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_HsmConfigurationNotFoundFault(body.Error, context);
  const exception = new HsmConfigurationNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_HsmConfigurationNotFoundFaultRes");
var de_HsmConfigurationQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_HsmConfigurationQuotaExceededFault(body.Error, context);
  const exception = new HsmConfigurationQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_HsmConfigurationQuotaExceededFaultRes");
var de_IncompatibleOrderableOptionsRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_IncompatibleOrderableOptions(body.Error, context);
  const exception = new IncompatibleOrderableOptions({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_IncompatibleOrderableOptionsRes");
var de_InProgressTableRestoreQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InProgressTableRestoreQuotaExceededFault(body.Error, context);
  const exception = new InProgressTableRestoreQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InProgressTableRestoreQuotaExceededFaultRes");
var de_InsufficientClusterCapacityFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InsufficientClusterCapacityFault(body.Error, context);
  const exception = new InsufficientClusterCapacityFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InsufficientClusterCapacityFaultRes");
var de_InsufficientS3BucketPolicyFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InsufficientS3BucketPolicyFault(body.Error, context);
  const exception = new InsufficientS3BucketPolicyFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InsufficientS3BucketPolicyFaultRes");
var de_IntegrationNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_IntegrationNotFoundFault(body.Error, context);
  const exception = new IntegrationNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_IntegrationNotFoundFaultRes");
var de_InvalidAuthenticationProfileRequestFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidAuthenticationProfileRequestFault(body.Error, context);
  const exception = new InvalidAuthenticationProfileRequestFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidAuthenticationProfileRequestFaultRes");
var de_InvalidAuthorizationStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidAuthorizationStateFault(body.Error, context);
  const exception = new InvalidAuthorizationStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidAuthorizationStateFaultRes");
var de_InvalidClusterParameterGroupStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidClusterParameterGroupStateFault(body.Error, context);
  const exception = new InvalidClusterParameterGroupStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidClusterParameterGroupStateFaultRes");
var de_InvalidClusterSecurityGroupStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidClusterSecurityGroupStateFault(body.Error, context);
  const exception = new InvalidClusterSecurityGroupStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidClusterSecurityGroupStateFaultRes");
var de_InvalidClusterSnapshotScheduleStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidClusterSnapshotScheduleStateFault(body.Error, context);
  const exception = new InvalidClusterSnapshotScheduleStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidClusterSnapshotScheduleStateFaultRes");
var de_InvalidClusterSnapshotStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidClusterSnapshotStateFault(body.Error, context);
  const exception = new InvalidClusterSnapshotStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidClusterSnapshotStateFaultRes");
var de_InvalidClusterStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidClusterStateFault(body.Error, context);
  const exception = new InvalidClusterStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidClusterStateFaultRes");
var de_InvalidClusterSubnetGroupStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidClusterSubnetGroupStateFault(body.Error, context);
  const exception = new InvalidClusterSubnetGroupStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidClusterSubnetGroupStateFaultRes");
var de_InvalidClusterSubnetStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidClusterSubnetStateFault(body.Error, context);
  const exception = new InvalidClusterSubnetStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidClusterSubnetStateFaultRes");
var de_InvalidClusterTrackFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidClusterTrackFault(body.Error, context);
  const exception = new InvalidClusterTrackFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidClusterTrackFaultRes");
var de_InvalidDataShareFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidDataShareFault(body.Error, context);
  const exception = new InvalidDataShareFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidDataShareFaultRes");
var de_InvalidElasticIpFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidElasticIpFault(body.Error, context);
  const exception = new InvalidElasticIpFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidElasticIpFaultRes");
var de_InvalidEndpointStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidEndpointStateFault(body.Error, context);
  const exception = new InvalidEndpointStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidEndpointStateFaultRes");
var de_InvalidHsmClientCertificateStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidHsmClientCertificateStateFault(body.Error, context);
  const exception = new InvalidHsmClientCertificateStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidHsmClientCertificateStateFaultRes");
var de_InvalidHsmConfigurationStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidHsmConfigurationStateFault(body.Error, context);
  const exception = new InvalidHsmConfigurationStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidHsmConfigurationStateFaultRes");
var de_InvalidNamespaceFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidNamespaceFault(body.Error, context);
  const exception = new InvalidNamespaceFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidNamespaceFaultRes");
var de_InvalidPolicyFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidPolicyFault(body.Error, context);
  const exception = new InvalidPolicyFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidPolicyFaultRes");
var de_InvalidReservedNodeStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidReservedNodeStateFault(body.Error, context);
  const exception = new InvalidReservedNodeStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidReservedNodeStateFaultRes");
var de_InvalidRestoreFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidRestoreFault(body.Error, context);
  const exception = new InvalidRestoreFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidRestoreFaultRes");
var de_InvalidRetentionPeriodFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidRetentionPeriodFault(body.Error, context);
  const exception = new InvalidRetentionPeriodFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidRetentionPeriodFaultRes");
var de_InvalidS3BucketNameFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidS3BucketNameFault(body.Error, context);
  const exception = new InvalidS3BucketNameFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidS3BucketNameFaultRes");
var de_InvalidS3KeyPrefixFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidS3KeyPrefixFault(body.Error, context);
  const exception = new InvalidS3KeyPrefixFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidS3KeyPrefixFaultRes");
var de_InvalidScheduledActionFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidScheduledActionFault(body.Error, context);
  const exception = new InvalidScheduledActionFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidScheduledActionFaultRes");
var de_InvalidScheduleFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidScheduleFault(body.Error, context);
  const exception = new InvalidScheduleFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidScheduleFaultRes");
var de_InvalidSnapshotCopyGrantStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidSnapshotCopyGrantStateFault(body.Error, context);
  const exception = new InvalidSnapshotCopyGrantStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidSnapshotCopyGrantStateFaultRes");
var de_InvalidSubnetRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidSubnet(body.Error, context);
  const exception = new InvalidSubnet({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidSubnetRes");
var de_InvalidSubscriptionStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidSubscriptionStateFault(body.Error, context);
  const exception = new InvalidSubscriptionStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidSubscriptionStateFaultRes");
var de_InvalidTableRestoreArgumentFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidTableRestoreArgumentFault(body.Error, context);
  const exception = new InvalidTableRestoreArgumentFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidTableRestoreArgumentFaultRes");
var de_InvalidTagFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidTagFault(body.Error, context);
  const exception = new InvalidTagFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidTagFaultRes");
var de_InvalidUsageLimitFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidUsageLimitFault(body.Error, context);
  const exception = new InvalidUsageLimitFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidUsageLimitFaultRes");
var de_InvalidVPCNetworkStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidVPCNetworkStateFault(body.Error, context);
  const exception = new InvalidVPCNetworkStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidVPCNetworkStateFaultRes");
var de_Ipv6CidrBlockNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_Ipv6CidrBlockNotFoundFault(body.Error, context);
  const exception = new Ipv6CidrBlockNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_Ipv6CidrBlockNotFoundFaultRes");
var de_LimitExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_LimitExceededFault(body.Error, context);
  const exception = new LimitExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_LimitExceededFaultRes");
var de_NumberOfNodesPerClusterLimitExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_NumberOfNodesPerClusterLimitExceededFault(body.Error, context);
  const exception = new NumberOfNodesPerClusterLimitExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_NumberOfNodesPerClusterLimitExceededFaultRes");
var de_NumberOfNodesQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_NumberOfNodesQuotaExceededFault(body.Error, context);
  const exception = new NumberOfNodesQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_NumberOfNodesQuotaExceededFaultRes");
var de_PartnerNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_PartnerNotFoundFault(body.Error, context);
  const exception = new PartnerNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_PartnerNotFoundFaultRes");
var de_RedshiftIdcApplicationAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_RedshiftIdcApplicationAlreadyExistsFault(body.Error, context);
  const exception = new RedshiftIdcApplicationAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_RedshiftIdcApplicationAlreadyExistsFaultRes");
var de_RedshiftIdcApplicationNotExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_RedshiftIdcApplicationNotExistsFault(body.Error, context);
  const exception = new RedshiftIdcApplicationNotExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_RedshiftIdcApplicationNotExistsFaultRes");
var de_RedshiftIdcApplicationQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_RedshiftIdcApplicationQuotaExceededFault(body.Error, context);
  const exception = new RedshiftIdcApplicationQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_RedshiftIdcApplicationQuotaExceededFaultRes");
var de_ReservedNodeAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ReservedNodeAlreadyExistsFault(body.Error, context);
  const exception = new ReservedNodeAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodeAlreadyExistsFaultRes");
var de_ReservedNodeAlreadyMigratedFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ReservedNodeAlreadyMigratedFault(body.Error, context);
  const exception = new ReservedNodeAlreadyMigratedFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodeAlreadyMigratedFaultRes");
var de_ReservedNodeExchangeNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ReservedNodeExchangeNotFoundFault(body.Error, context);
  const exception = new ReservedNodeExchangeNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodeExchangeNotFoundFaultRes");
var de_ReservedNodeNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ReservedNodeNotFoundFault(body.Error, context);
  const exception = new ReservedNodeNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodeNotFoundFaultRes");
var de_ReservedNodeOfferingNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ReservedNodeOfferingNotFoundFault(body.Error, context);
  const exception = new ReservedNodeOfferingNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodeOfferingNotFoundFaultRes");
var de_ReservedNodeQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ReservedNodeQuotaExceededFault(body.Error, context);
  const exception = new ReservedNodeQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodeQuotaExceededFaultRes");
var de_ResizeNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ResizeNotFoundFault(body.Error, context);
  const exception = new ResizeNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResizeNotFoundFaultRes");
var de_ResourceNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ResourceNotFoundFault(body.Error, context);
  const exception = new ResourceNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundFaultRes");
var de_ScheduledActionAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ScheduledActionAlreadyExistsFault(body.Error, context);
  const exception = new ScheduledActionAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ScheduledActionAlreadyExistsFaultRes");
var de_ScheduledActionNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ScheduledActionNotFoundFault(body.Error, context);
  const exception = new ScheduledActionNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ScheduledActionNotFoundFaultRes");
var de_ScheduledActionQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ScheduledActionQuotaExceededFault(body.Error, context);
  const exception = new ScheduledActionQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ScheduledActionQuotaExceededFaultRes");
var de_ScheduledActionTypeUnsupportedFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ScheduledActionTypeUnsupportedFault(body.Error, context);
  const exception = new ScheduledActionTypeUnsupportedFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ScheduledActionTypeUnsupportedFaultRes");
var de_ScheduleDefinitionTypeUnsupportedFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ScheduleDefinitionTypeUnsupportedFault(body.Error, context);
  const exception = new ScheduleDefinitionTypeUnsupportedFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ScheduleDefinitionTypeUnsupportedFaultRes");
var de_SnapshotCopyAlreadyDisabledFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotCopyAlreadyDisabledFault(body.Error, context);
  const exception = new SnapshotCopyAlreadyDisabledFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotCopyAlreadyDisabledFaultRes");
var de_SnapshotCopyAlreadyEnabledFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotCopyAlreadyEnabledFault(body.Error, context);
  const exception = new SnapshotCopyAlreadyEnabledFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotCopyAlreadyEnabledFaultRes");
var de_SnapshotCopyDisabledFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotCopyDisabledFault(body.Error, context);
  const exception = new SnapshotCopyDisabledFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotCopyDisabledFaultRes");
var de_SnapshotCopyGrantAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotCopyGrantAlreadyExistsFault(body.Error, context);
  const exception = new SnapshotCopyGrantAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotCopyGrantAlreadyExistsFaultRes");
var de_SnapshotCopyGrantNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotCopyGrantNotFoundFault(body.Error, context);
  const exception = new SnapshotCopyGrantNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotCopyGrantNotFoundFaultRes");
var de_SnapshotCopyGrantQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotCopyGrantQuotaExceededFault(body.Error, context);
  const exception = new SnapshotCopyGrantQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotCopyGrantQuotaExceededFaultRes");
var de_SnapshotScheduleAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotScheduleAlreadyExistsFault(body.Error, context);
  const exception = new SnapshotScheduleAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotScheduleAlreadyExistsFaultRes");
var de_SnapshotScheduleNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotScheduleNotFoundFault(body.Error, context);
  const exception = new SnapshotScheduleNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotScheduleNotFoundFaultRes");
var de_SnapshotScheduleQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotScheduleQuotaExceededFault(body.Error, context);
  const exception = new SnapshotScheduleQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotScheduleQuotaExceededFaultRes");
var de_SnapshotScheduleUpdateInProgressFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SnapshotScheduleUpdateInProgressFault(body.Error, context);
  const exception = new SnapshotScheduleUpdateInProgressFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotScheduleUpdateInProgressFaultRes");
var de_SNSInvalidTopicFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SNSInvalidTopicFault(body.Error, context);
  const exception = new SNSInvalidTopicFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SNSInvalidTopicFaultRes");
var de_SNSNoAuthorizationFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SNSNoAuthorizationFault(body.Error, context);
  const exception = new SNSNoAuthorizationFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SNSNoAuthorizationFaultRes");
var de_SNSTopicArnNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SNSTopicArnNotFoundFault(body.Error, context);
  const exception = new SNSTopicArnNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SNSTopicArnNotFoundFaultRes");
var de_SourceNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SourceNotFoundFault(body.Error, context);
  const exception = new SourceNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SourceNotFoundFaultRes");
var de_SubnetAlreadyInUseRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SubnetAlreadyInUse(body.Error, context);
  const exception = new SubnetAlreadyInUse({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubnetAlreadyInUseRes");
var de_SubscriptionAlreadyExistFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SubscriptionAlreadyExistFault(body.Error, context);
  const exception = new SubscriptionAlreadyExistFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubscriptionAlreadyExistFaultRes");
var de_SubscriptionCategoryNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SubscriptionCategoryNotFoundFault(body.Error, context);
  const exception = new SubscriptionCategoryNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubscriptionCategoryNotFoundFaultRes");
var de_SubscriptionEventIdNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SubscriptionEventIdNotFoundFault(body.Error, context);
  const exception = new SubscriptionEventIdNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubscriptionEventIdNotFoundFaultRes");
var de_SubscriptionNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SubscriptionNotFoundFault(body.Error, context);
  const exception = new SubscriptionNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubscriptionNotFoundFaultRes");
var de_SubscriptionSeverityNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_SubscriptionSeverityNotFoundFault(body.Error, context);
  const exception = new SubscriptionSeverityNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubscriptionSeverityNotFoundFaultRes");
var de_TableLimitExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TableLimitExceededFault(body.Error, context);
  const exception = new TableLimitExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TableLimitExceededFaultRes");
var de_TableRestoreNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TableRestoreNotFoundFault(body.Error, context);
  const exception = new TableRestoreNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TableRestoreNotFoundFaultRes");
var de_TagLimitExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_TagLimitExceededFault(body.Error, context);
  const exception = new TagLimitExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TagLimitExceededFaultRes");
var de_UnauthorizedOperationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_UnauthorizedOperation(body.Error, context);
  const exception = new UnauthorizedOperation({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnauthorizedOperationRes");
var de_UnauthorizedPartnerIntegrationFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_UnauthorizedPartnerIntegrationFault(body.Error, context);
  const exception = new UnauthorizedPartnerIntegrationFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnauthorizedPartnerIntegrationFaultRes");
var de_UnknownSnapshotCopyRegionFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_UnknownSnapshotCopyRegionFault(body.Error, context);
  const exception = new UnknownSnapshotCopyRegionFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnknownSnapshotCopyRegionFaultRes");
var de_UnsupportedOperationFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_UnsupportedOperationFault(body.Error, context);
  const exception = new UnsupportedOperationFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnsupportedOperationFaultRes");
var de_UnsupportedOptionFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_UnsupportedOptionFault(body.Error, context);
  const exception = new UnsupportedOptionFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnsupportedOptionFaultRes");
var de_UsageLimitAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_UsageLimitAlreadyExistsFault(body.Error, context);
  const exception = new UsageLimitAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UsageLimitAlreadyExistsFaultRes");
var de_UsageLimitNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_UsageLimitNotFoundFault(body.Error, context);
  const exception = new UsageLimitNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UsageLimitNotFoundFaultRes");
var se_AcceptReservedNodeExchangeInputMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RNI] != null) {
    entries[_RNI] = input[_RNI];
  }
  if (input[_TRNOI] != null) {
    entries[_TRNOI] = input[_TRNOI];
  }
  return entries;
}, "se_AcceptReservedNodeExchangeInputMessage");
var se_AssociateDataShareConsumerMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_DSAa] != null) {
    entries[_DSAa] = input[_DSAa];
  }
  if (input[_AEAs] != null) {
    entries[_AEAs] = input[_AEAs];
  }
  if (input[_CA] != null) {
    entries[_CA] = input[_CA];
  }
  if (input[_CRo] != null) {
    entries[_CRo] = input[_CRo];
  }
  if (input[_AW] != null) {
    entries[_AW] = input[_AW];
  }
  return entries;
}, "se_AssociateDataShareConsumerMessage");
var se_AttributeNameList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`AttributeName.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_AttributeNameList");
var se_AuthorizeClusterSecurityGroupIngressMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CSGN] != null) {
    entries[_CSGN] = input[_CSGN];
  }
  if (input[_CIDRIP] != null) {
    entries[_CIDRIP] = input[_CIDRIP];
  }
  if (input[_ECSGN] != null) {
    entries[_ECSGN] = input[_ECSGN];
  }
  if (input[_ECSGOI] != null) {
    entries[_ECSGOI] = input[_ECSGOI];
  }
  return entries;
}, "se_AuthorizeClusterSecurityGroupIngressMessage");
var se_AuthorizeDataShareMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_DSAa] != null) {
    entries[_DSAa] = input[_DSAa];
  }
  if (input[_CI] != null) {
    entries[_CI] = input[_CI];
  }
  if (input[_AW] != null) {
    entries[_AW] = input[_AW];
  }
  return entries;
}, "se_AuthorizeDataShareMessage");
var se_AuthorizedAudienceList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_AuthorizedAudienceList");
var se_AuthorizedTokenIssuer = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_TTIA] != null) {
    entries[_TTIA] = input[_TTIA];
  }
  if (input[_AAL] != null) {
    const memberEntries = se_AuthorizedAudienceList(input[_AAL], context);
    if (((_a = input[_AAL]) == null ? void 0 : _a.length) === 0) {
      entries.AuthorizedAudiencesList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `AuthorizedAudiencesList.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_AuthorizedTokenIssuer");
var se_AuthorizedTokenIssuerList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_AuthorizedTokenIssuer(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_AuthorizedTokenIssuerList");
var se_AuthorizeEndpointAccessMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_Ac] != null) {
    entries[_Ac] = input[_Ac];
  }
  if (input[_VI] != null) {
    const memberEntries = se_VpcIdentifierList(input[_VI], context);
    if (((_a = input[_VI]) == null ? void 0 : _a.length) === 0) {
      entries.VpcIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VpcIds.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_AuthorizeEndpointAccessMessage");
var se_AuthorizeSnapshotAccessMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_SA] != null) {
    entries[_SA] = input[_SA];
  }
  if (input[_SCI] != null) {
    entries[_SCI] = input[_SCI];
  }
  if (input[_AWRA] != null) {
    entries[_AWRA] = input[_AWRA];
  }
  return entries;
}, "se_AuthorizeSnapshotAccessMessage");
var se_BatchDeleteClusterSnapshotsRequest = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_I] != null) {
    const memberEntries = se_DeleteClusterSnapshotMessageList(input[_I], context);
    if (((_a = input[_I]) == null ? void 0 : _a.length) === 0) {
      entries.Identifiers = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Identifiers.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_BatchDeleteClusterSnapshotsRequest");
var se_BatchModifyClusterSnapshotsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_SIL] != null) {
    const memberEntries = se_SnapshotIdentifierList(input[_SIL], context);
    if (((_a = input[_SIL]) == null ? void 0 : _a.length) === 0) {
      entries.SnapshotIdentifierList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `SnapshotIdentifierList.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_MSRP] != null) {
    entries[_MSRP] = input[_MSRP];
  }
  if (input[_F] != null) {
    entries[_F] = input[_F];
  }
  return entries;
}, "se_BatchModifyClusterSnapshotsMessage");
var se_CancelResizeMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_CancelResizeMessage");
var se_ClusterSecurityGroupNameList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`ClusterSecurityGroupName.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_ClusterSecurityGroupNameList");
var se_CopyClusterSnapshotMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SSI] != null) {
    entries[_SSI] = input[_SSI];
  }
  if (input[_SSCI] != null) {
    entries[_SSCI] = input[_SSCI];
  }
  if (input[_TSI] != null) {
    entries[_TSI] = input[_TSI];
  }
  if (input[_MSRP] != null) {
    entries[_MSRP] = input[_MSRP];
  }
  return entries;
}, "se_CopyClusterSnapshotMessage");
var se_CreateAuthenticationProfileMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_APN] != null) {
    entries[_APN] = input[_APN];
  }
  if (input[_APC] != null) {
    entries[_APC] = input[_APC];
  }
  return entries;
}, "se_CreateAuthenticationProfileMessage");
var se_CreateClusterMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b, _c, _d;
  const entries = {};
  if (input[_DBN] != null) {
    entries[_DBN] = input[_DBN];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_CTl] != null) {
    entries[_CTl] = input[_CTl];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  if (input[_MU] != null) {
    entries[_MU] = input[_MU];
  }
  if (input[_MUP] != null) {
    entries[_MUP] = input[_MUP];
  }
  if (input[_CSG] != null) {
    const memberEntries = se_ClusterSecurityGroupNameList(input[_CSG], context);
    if (((_a = input[_CSG]) == null ? void 0 : _a.length) === 0) {
      entries.ClusterSecurityGroups = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ClusterSecurityGroups.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_VSGI] != null) {
    const memberEntries = se_VpcSecurityGroupIdList(input[_VSGI], context);
    if (((_b = input[_VSGI]) == null ? void 0 : _b.length) === 0) {
      entries.VpcSecurityGroupIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VpcSecurityGroupIds.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_CSGNl] != null) {
    entries[_CSGNl] = input[_CSGNl];
  }
  if (input[_AZ] != null) {
    entries[_AZ] = input[_AZ];
  }
  if (input[_PMW] != null) {
    entries[_PMW] = input[_PMW];
  }
  if (input[_CPGN] != null) {
    entries[_CPGN] = input[_CPGN];
  }
  if (input[_ASRP] != null) {
    entries[_ASRP] = input[_ASRP];
  }
  if (input[_MSRP] != null) {
    entries[_MSRP] = input[_MSRP];
  }
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_CV] != null) {
    entries[_CV] = input[_CV];
  }
  if (input[_AVU] != null) {
    entries[_AVU] = input[_AVU];
  }
  if (input[_NON] != null) {
    entries[_NON] = input[_NON];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_E] != null) {
    entries[_E] = input[_E];
  }
  if (input[_HCCI] != null) {
    entries[_HCCI] = input[_HCCI];
  }
  if (input[_HCI] != null) {
    entries[_HCI] = input[_HCI];
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_c = input[_T]) == null ? void 0 : _c.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_KKI] != null) {
    entries[_KKI] = input[_KKI];
  }
  if (input[_EVR] != null) {
    entries[_EVR] = input[_EVR];
  }
  if (input[_AI] != null) {
    entries[_AI] = input[_AI];
  }
  if (input[_IR] != null) {
    const memberEntries = se_IamRoleArnList(input[_IR], context);
    if (((_d = input[_IR]) == null ? void 0 : _d.length) === 0) {
      entries.IamRoles = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `IamRoles.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_MTN] != null) {
    entries[_MTN] = input[_MTN];
  }
  if (input[_SSIn] != null) {
    entries[_SSIn] = input[_SSIn];
  }
  if (input[_AZR] != null) {
    entries[_AZR] = input[_AZR];
  }
  if (input[_ACS] != null) {
    entries[_ACS] = input[_ACS];
  }
  if (input[_DIRA] != null) {
    entries[_DIRA] = input[_DIRA];
  }
  if (input[_LSD] != null) {
    entries[_LSD] = input[_LSD];
  }
  if (input[_MMP] != null) {
    entries[_MMP] = input[_MMP];
  }
  if (input[_MPSKKI] != null) {
    entries[_MPSKKI] = input[_MPSKKI];
  }
  if (input[_IAT] != null) {
    entries[_IAT] = input[_IAT];
  }
  if (input[_MAZ] != null) {
    entries[_MAZ] = input[_MAZ];
  }
  if (input[_RIAA] != null) {
    entries[_RIAA] = input[_RIAA];
  }
  return entries;
}, "se_CreateClusterMessage");
var se_CreateClusterParameterGroupMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_PGN] != null) {
    entries[_PGN] = input[_PGN];
  }
  if (input[_PGF] != null) {
    entries[_PGF] = input[_PGF];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateClusterParameterGroupMessage");
var se_CreateClusterSecurityGroupMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_CSGN] != null) {
    entries[_CSGN] = input[_CSGN];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateClusterSecurityGroupMessage");
var se_CreateClusterSnapshotMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_MSRP] != null) {
    entries[_MSRP] = input[_MSRP];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateClusterSnapshotMessage");
var se_CreateClusterSubnetGroupMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_CSGNl] != null) {
    entries[_CSGNl] = input[_CSGNl];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_SIu] != null) {
    const memberEntries = se_SubnetIdentifierList(input[_SIu], context);
    if (((_a = input[_SIu]) == null ? void 0 : _a.length) === 0) {
      entries.SubnetIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `SubnetIds.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_b = input[_T]) == null ? void 0 : _b.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateClusterSubnetGroupMessage");
var se_CreateCustomDomainAssociationMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CDN] != null) {
    entries[_CDN] = input[_CDN];
  }
  if (input[_CDCA] != null) {
    entries[_CDCA] = input[_CDCA];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_CreateCustomDomainAssociationMessage");
var se_CreateEndpointAccessMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_RO] != null) {
    entries[_RO] = input[_RO];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_SGN] != null) {
    entries[_SGN] = input[_SGN];
  }
  if (input[_VSGI] != null) {
    const memberEntries = se_VpcSecurityGroupIdList(input[_VSGI], context);
    if (((_a = input[_VSGI]) == null ? void 0 : _a.length) === 0) {
      entries.VpcSecurityGroupIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VpcSecurityGroupIds.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateEndpointAccessMessage");
var se_CreateEventSubscriptionMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b, _c;
  const entries = {};
  if (input[_SN] != null) {
    entries[_SN] = input[_SN];
  }
  if (input[_STA] != null) {
    entries[_STA] = input[_STA];
  }
  if (input[_ST] != null) {
    entries[_ST] = input[_ST];
  }
  if (input[_SIo] != null) {
    const memberEntries = se_SourceIdsList(input[_SIo], context);
    if (((_a = input[_SIo]) == null ? void 0 : _a.length) === 0) {
      entries.SourceIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `SourceIds.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_EC] != null) {
    const memberEntries = se_EventCategoriesList(input[_EC], context);
    if (((_b = input[_EC]) == null ? void 0 : _b.length) === 0) {
      entries.EventCategories = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `EventCategories.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_S] != null) {
    entries[_S] = input[_S];
  }
  if (input[_En] != null) {
    entries[_En] = input[_En];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_c = input[_T]) == null ? void 0 : _c.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateEventSubscriptionMessage");
var se_CreateHsmClientCertificateMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_HCCI] != null) {
    entries[_HCCI] = input[_HCCI];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateHsmClientCertificateMessage");
var se_CreateHsmConfigurationMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_HCI] != null) {
    entries[_HCI] = input[_HCI];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_HIA] != null) {
    entries[_HIA] = input[_HIA];
  }
  if (input[_HPN] != null) {
    entries[_HPN] = input[_HPN];
  }
  if (input[_HPP] != null) {
    entries[_HPP] = input[_HPP];
  }
  if (input[_HSPC] != null) {
    entries[_HSPC] = input[_HSPC];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateHsmConfigurationMessage");
var se_CreateRedshiftIdcApplicationMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_IIA] != null) {
    entries[_IIA] = input[_IIA];
  }
  if (input[_RIAN] != null) {
    entries[_RIAN] = input[_RIAN];
  }
  if (input[_IN] != null) {
    entries[_IN] = input[_IN];
  }
  if (input[_IDN] != null) {
    entries[_IDN] = input[_IDN];
  }
  if (input[_IRA] != null) {
    entries[_IRA] = input[_IRA];
  }
  if (input[_ATIL] != null) {
    const memberEntries = se_AuthorizedTokenIssuerList(input[_ATIL], context);
    if (((_a = input[_ATIL]) == null ? void 0 : _a.length) === 0) {
      entries.AuthorizedTokenIssuerList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `AuthorizedTokenIssuerList.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_SIe] != null) {
    const memberEntries = se_ServiceIntegrationList(input[_SIe], context);
    if (((_b = input[_SIe]) == null ? void 0 : _b.length) === 0) {
      entries.ServiceIntegrations = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ServiceIntegrations.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateRedshiftIdcApplicationMessage");
var se_CreateScheduledActionMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAN] != null) {
    entries[_SAN] = input[_SAN];
  }
  if (input[_TA] != null) {
    const memberEntries = se_ScheduledActionType(input[_TA], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TargetAction.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_Sc] != null) {
    entries[_Sc] = input[_Sc];
  }
  if (input[_IRa] != null) {
    entries[_IRa] = input[_IRa];
  }
  if (input[_SAD] != null) {
    entries[_SAD] = input[_SAD];
  }
  if (input[_STt] != null) {
    entries[_STt] = (0, import_smithy_client.serializeDateTime)(input[_STt]);
  }
  if (input[_ET] != null) {
    entries[_ET] = (0, import_smithy_client.serializeDateTime)(input[_ET]);
  }
  if (input[_Ena] != null) {
    entries[_Ena] = input[_Ena];
  }
  return entries;
}, "se_CreateScheduledActionMessage");
var se_CreateSnapshotCopyGrantMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_SCGN] != null) {
    entries[_SCGN] = input[_SCGN];
  }
  if (input[_KKI] != null) {
    entries[_KKI] = input[_KKI];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateSnapshotCopyGrantMessage");
var se_CreateSnapshotScheduleMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_SD] != null) {
    const memberEntries = se_ScheduleDefinitionList(input[_SD], context);
    if (((_a = input[_SD]) == null ? void 0 : _a.length) === 0) {
      entries.ScheduleDefinitions = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ScheduleDefinitions.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_SIc] != null) {
    entries[_SIc] = input[_SIc];
  }
  if (input[_SDc] != null) {
    entries[_SDc] = input[_SDc];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_b = input[_T]) == null ? void 0 : _b.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_DRr] != null) {
    entries[_DRr] = input[_DRr];
  }
  if (input[_NI] != null) {
    entries[_NI] = input[_NI];
  }
  return entries;
}, "se_CreateSnapshotScheduleMessage");
var se_CreateTagsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateTagsMessage");
var se_CreateUsageLimitMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_FT] != null) {
    entries[_FT] = input[_FT];
  }
  if (input[_LT] != null) {
    entries[_LT] = input[_LT];
  }
  if (input[_Am] != null) {
    entries[_Am] = input[_Am];
  }
  if (input[_Pe] != null) {
    entries[_Pe] = input[_Pe];
  }
  if (input[_BA] != null) {
    entries[_BA] = input[_BA];
  }
  if (input[_T] != null) {
    const memberEntries = se_TagList(input[_T], context);
    if (((_a = input[_T]) == null ? void 0 : _a.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateUsageLimitMessage");
var se_DbGroupList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`DbGroup.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_DbGroupList");
var se_DeauthorizeDataShareMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_DSAa] != null) {
    entries[_DSAa] = input[_DSAa];
  }
  if (input[_CI] != null) {
    entries[_CI] = input[_CI];
  }
  return entries;
}, "se_DeauthorizeDataShareMessage");
var se_DeleteAuthenticationProfileMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_APN] != null) {
    entries[_APN] = input[_APN];
  }
  return entries;
}, "se_DeleteAuthenticationProfileMessage");
var se_DeleteClusterMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_SFCS] != null) {
    entries[_SFCS] = input[_SFCS];
  }
  if (input[_FCSI] != null) {
    entries[_FCSI] = input[_FCSI];
  }
  if (input[_FCSRP] != null) {
    entries[_FCSRP] = input[_FCSRP];
  }
  return entries;
}, "se_DeleteClusterMessage");
var se_DeleteClusterParameterGroupMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PGN] != null) {
    entries[_PGN] = input[_PGN];
  }
  return entries;
}, "se_DeleteClusterParameterGroupMessage");
var se_DeleteClusterSecurityGroupMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CSGN] != null) {
    entries[_CSGN] = input[_CSGN];
  }
  return entries;
}, "se_DeleteClusterSecurityGroupMessage");
var se_DeleteClusterSnapshotMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_SCI] != null) {
    entries[_SCI] = input[_SCI];
  }
  return entries;
}, "se_DeleteClusterSnapshotMessage");
var se_DeleteClusterSnapshotMessageList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_DeleteClusterSnapshotMessage(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`DeleteClusterSnapshotMessage.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_DeleteClusterSnapshotMessageList");
var se_DeleteClusterSubnetGroupMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CSGNl] != null) {
    entries[_CSGNl] = input[_CSGNl];
  }
  return entries;
}, "se_DeleteClusterSubnetGroupMessage");
var se_DeleteCustomDomainAssociationMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_CDN] != null) {
    entries[_CDN] = input[_CDN];
  }
  return entries;
}, "se_DeleteCustomDomainAssociationMessage");
var se_DeleteEndpointAccessMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  return entries;
}, "se_DeleteEndpointAccessMessage");
var se_DeleteEventSubscriptionMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SN] != null) {
    entries[_SN] = input[_SN];
  }
  return entries;
}, "se_DeleteEventSubscriptionMessage");
var se_DeleteHsmClientCertificateMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_HCCI] != null) {
    entries[_HCCI] = input[_HCCI];
  }
  return entries;
}, "se_DeleteHsmClientCertificateMessage");
var se_DeleteHsmConfigurationMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_HCI] != null) {
    entries[_HCI] = input[_HCI];
  }
  return entries;
}, "se_DeleteHsmConfigurationMessage");
var se_DeleteRedshiftIdcApplicationMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RIAA] != null) {
    entries[_RIAA] = input[_RIAA];
  }
  return entries;
}, "se_DeleteRedshiftIdcApplicationMessage");
var se_DeleteResourcePolicyMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RA] != null) {
    entries[_RA] = input[_RA];
  }
  return entries;
}, "se_DeleteResourcePolicyMessage");
var se_DeleteScheduledActionMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAN] != null) {
    entries[_SAN] = input[_SAN];
  }
  return entries;
}, "se_DeleteScheduledActionMessage");
var se_DeleteSnapshotCopyGrantMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SCGN] != null) {
    entries[_SCGN] = input[_SCGN];
  }
  return entries;
}, "se_DeleteSnapshotCopyGrantMessage");
var se_DeleteSnapshotScheduleMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SIc] != null) {
    entries[_SIc] = input[_SIc];
  }
  return entries;
}, "se_DeleteSnapshotScheduleMessage");
var se_DeleteTagsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DeleteTagsMessage");
var se_DeleteUsageLimitMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ULI] != null) {
    entries[_ULI] = input[_ULI];
  }
  return entries;
}, "se_DeleteUsageLimitMessage");
var se_DescribeAccountAttributesMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_AN] != null) {
    const memberEntries = se_AttributeNameList(input[_AN], context);
    if (((_a = input[_AN]) == null ? void 0 : _a.length) === 0) {
      entries.AttributeNames = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `AttributeNames.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeAccountAttributesMessage");
var se_DescribeAuthenticationProfilesMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_APN] != null) {
    entries[_APN] = input[_APN];
  }
  return entries;
}, "se_DescribeAuthenticationProfilesMessage");
var se_DescribeClusterDbRevisionsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeClusterDbRevisionsMessage");
var se_DescribeClusterParameterGroupsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_PGN] != null) {
    entries[_PGN] = input[_PGN];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeClusterParameterGroupsMessage");
var se_DescribeClusterParametersMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PGN] != null) {
    entries[_PGN] = input[_PGN];
  }
  if (input[_So] != null) {
    entries[_So] = input[_So];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeClusterParametersMessage");
var se_DescribeClusterSecurityGroupsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_CSGN] != null) {
    entries[_CSGN] = input[_CSGN];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeClusterSecurityGroupsMessage");
var se_DescribeClustersMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeClustersMessage");
var se_DescribeClusterSnapshotsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b, _c;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_SA] != null) {
    entries[_SA] = input[_SA];
  }
  if (input[_STn] != null) {
    entries[_STn] = input[_STn];
  }
  if (input[_STt] != null) {
    entries[_STt] = (0, import_smithy_client.serializeDateTime)(input[_STt]);
  }
  if (input[_ET] != null) {
    entries[_ET] = (0, import_smithy_client.serializeDateTime)(input[_ET]);
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_OA] != null) {
    entries[_OA] = input[_OA];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_CE] != null) {
    entries[_CE] = input[_CE];
  }
  if (input[_SE] != null) {
    const memberEntries = se_SnapshotSortingEntityList(input[_SE], context);
    if (((_c = input[_SE]) == null ? void 0 : _c.length) === 0) {
      entries.SortingEntities = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `SortingEntities.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeClusterSnapshotsMessage");
var se_DescribeClusterSubnetGroupsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_CSGNl] != null) {
    entries[_CSGNl] = input[_CSGNl];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeClusterSubnetGroupsMessage");
var se_DescribeClusterTracksMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_MTN] != null) {
    entries[_MTN] = input[_MTN];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeClusterTracksMessage");
var se_DescribeClusterVersionsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CV] != null) {
    entries[_CV] = input[_CV];
  }
  if (input[_CPGF] != null) {
    entries[_CPGF] = input[_CPGF];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeClusterVersionsMessage");
var se_DescribeCustomDomainAssociationsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CDN] != null) {
    entries[_CDN] = input[_CDN];
  }
  if (input[_CDCA] != null) {
    entries[_CDCA] = input[_CDCA];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeCustomDomainAssociationsMessage");
var se_DescribeDataSharesForConsumerMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CA] != null) {
    entries[_CA] = input[_CA];
  }
  if (input[_St] != null) {
    entries[_St] = input[_St];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeDataSharesForConsumerMessage");
var se_DescribeDataSharesForProducerMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PAr] != null) {
    entries[_PAr] = input[_PAr];
  }
  if (input[_St] != null) {
    entries[_St] = input[_St];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeDataSharesForProducerMessage");
var se_DescribeDataSharesMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_DSAa] != null) {
    entries[_DSAa] = input[_DSAa];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeDataSharesMessage");
var se_DescribeDefaultClusterParametersMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PGF] != null) {
    entries[_PGF] = input[_PGF];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeDefaultClusterParametersMessage");
var se_DescribeEndpointAccessMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_RO] != null) {
    entries[_RO] = input[_RO];
  }
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_VIp] != null) {
    entries[_VIp] = input[_VIp];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeEndpointAccessMessage");
var se_DescribeEndpointAuthorizationMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_Ac] != null) {
    entries[_Ac] = input[_Ac];
  }
  if (input[_G] != null) {
    entries[_G] = input[_G];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeEndpointAuthorizationMessage");
var se_DescribeEventCategoriesMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ST] != null) {
    entries[_ST] = input[_ST];
  }
  return entries;
}, "se_DescribeEventCategoriesMessage");
var se_DescribeEventsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SIou] != null) {
    entries[_SIou] = input[_SIou];
  }
  if (input[_ST] != null) {
    entries[_ST] = input[_ST];
  }
  if (input[_STt] != null) {
    entries[_STt] = (0, import_smithy_client.serializeDateTime)(input[_STt]);
  }
  if (input[_ET] != null) {
    entries[_ET] = (0, import_smithy_client.serializeDateTime)(input[_ET]);
  }
  if (input[_Du] != null) {
    entries[_Du] = input[_Du];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeEventsMessage");
var se_DescribeEventSubscriptionsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_SN] != null) {
    entries[_SN] = input[_SN];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeEventSubscriptionsMessage");
var se_DescribeHsmClientCertificatesMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_HCCI] != null) {
    entries[_HCCI] = input[_HCCI];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeHsmClientCertificatesMessage");
var se_DescribeHsmConfigurationsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_HCI] != null) {
    entries[_HCI] = input[_HCI];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeHsmConfigurationsMessage");
var se_DescribeInboundIntegrationsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_IA] != null) {
    entries[_IA] = input[_IA];
  }
  if (input[_TAa] != null) {
    entries[_TAa] = input[_TAa];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeInboundIntegrationsMessage");
var se_DescribeLoggingStatusMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_DescribeLoggingStatusMessage");
var se_DescribeNodeConfigurationOptionsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_AT] != null) {
    entries[_AT] = input[_AT];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_SA] != null) {
    entries[_SA] = input[_SA];
  }
  if (input[_OA] != null) {
    entries[_OA] = input[_OA];
  }
  if (input[_Fi] != null) {
    const memberEntries = se_NodeConfigurationOptionsFilterList(input[_Fi], context);
    if (((_a = input[_Fi]) == null ? void 0 : _a.length) === 0) {
      entries.Filter = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Filter.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  return entries;
}, "se_DescribeNodeConfigurationOptionsMessage");
var se_DescribeOrderableClusterOptionsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CV] != null) {
    entries[_CV] = input[_CV];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeOrderableClusterOptionsMessage");
var se_DescribePartnersInputMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AIc] != null) {
    entries[_AIc] = input[_AIc];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_DN] != null) {
    entries[_DN] = input[_DN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  return entries;
}, "se_DescribePartnersInputMessage");
var se_DescribeRedshiftIdcApplicationsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RIAA] != null) {
    entries[_RIAA] = input[_RIAA];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeRedshiftIdcApplicationsMessage");
var se_DescribeReservedNodeExchangeStatusInputMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RNI] != null) {
    entries[_RNI] = input[_RNI];
  }
  if (input[_RNERI] != null) {
    entries[_RNERI] = input[_RNERI];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeReservedNodeExchangeStatusInputMessage");
var se_DescribeReservedNodeOfferingsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RNOI] != null) {
    entries[_RNOI] = input[_RNOI];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeReservedNodeOfferingsMessage");
var se_DescribeReservedNodesMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RNI] != null) {
    entries[_RNI] = input[_RNI];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeReservedNodesMessage");
var se_DescribeResizeMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_DescribeResizeMessage");
var se_DescribeScheduledActionsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_SAN] != null) {
    entries[_SAN] = input[_SAN];
  }
  if (input[_TAT] != null) {
    entries[_TAT] = input[_TAT];
  }
  if (input[_STt] != null) {
    entries[_STt] = (0, import_smithy_client.serializeDateTime)(input[_STt]);
  }
  if (input[_ET] != null) {
    entries[_ET] = (0, import_smithy_client.serializeDateTime)(input[_ET]);
  }
  if (input[_Act] != null) {
    entries[_Act] = input[_Act];
  }
  if (input[_Fi] != null) {
    const memberEntries = se_ScheduledActionFilterList(input[_Fi], context);
    if (((_a = input[_Fi]) == null ? void 0 : _a.length) === 0) {
      entries.Filters = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Filters.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  return entries;
}, "se_DescribeScheduledActionsMessage");
var se_DescribeSnapshotCopyGrantsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_SCGN] != null) {
    entries[_SCGN] = input[_SCGN];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeSnapshotCopyGrantsMessage");
var se_DescribeSnapshotSchedulesMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_SIc] != null) {
    entries[_SIc] = input[_SIc];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  return entries;
}, "se_DescribeSnapshotSchedulesMessage");
var se_DescribeTableRestoreStatusMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_TRRI] != null) {
    entries[_TRRI] = input[_TRRI];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_DescribeTableRestoreStatusMessage");
var se_DescribeTagsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_RT] != null) {
    entries[_RT] = input[_RT];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeTagsMessage");
var se_DescribeUsageLimitsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_ULI] != null) {
    entries[_ULI] = input[_ULI];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_FT] != null) {
    entries[_FT] = input[_FT];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_TK] != null) {
    const memberEntries = se_TagKeyList(input[_TK], context);
    if (((_a = input[_TK]) == null ? void 0 : _a.length) === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TV] != null) {
    const memberEntries = se_TagValueList(input[_TV], context);
    if (((_b = input[_TV]) == null ? void 0 : _b.length) === 0) {
      entries.TagValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagValues.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_DescribeUsageLimitsMessage");
var se_DisableLoggingMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_DisableLoggingMessage");
var se_DisableSnapshotCopyMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_DisableSnapshotCopyMessage");
var se_DisassociateDataShareConsumerMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_DSAa] != null) {
    entries[_DSAa] = input[_DSAa];
  }
  if (input[_DEAi] != null) {
    entries[_DEAi] = input[_DEAi];
  }
  if (input[_CA] != null) {
    entries[_CA] = input[_CA];
  }
  if (input[_CRo] != null) {
    entries[_CRo] = input[_CRo];
  }
  return entries;
}, "se_DisassociateDataShareConsumerMessage");
var se_EnableLoggingMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_BN] != null) {
    entries[_BN] = input[_BN];
  }
  if (input[_SKP] != null) {
    entries[_SKP] = input[_SKP];
  }
  if (input[_LDT] != null) {
    entries[_LDT] = input[_LDT];
  }
  if (input[_LE] != null) {
    const memberEntries = se_LogTypeList(input[_LE], context);
    if (((_a = input[_LE]) == null ? void 0 : _a.length) === 0) {
      entries.LogExports = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `LogExports.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_EnableLoggingMessage");
var se_EnableSnapshotCopyMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_DRe] != null) {
    entries[_DRe] = input[_DRe];
  }
  if (input[_RP] != null) {
    entries[_RP] = input[_RP];
  }
  if (input[_SCGN] != null) {
    entries[_SCGN] = input[_SCGN];
  }
  if (input[_MSRP] != null) {
    entries[_MSRP] = input[_MSRP];
  }
  return entries;
}, "se_EnableSnapshotCopyMessage");
var se_EventCategoriesList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`EventCategory.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_EventCategoriesList");
var se_FailoverPrimaryComputeInputMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_FailoverPrimaryComputeInputMessage");
var se_GetClusterCredentialsMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_DU] != null) {
    entries[_DU] = input[_DU];
  }
  if (input[_DNb] != null) {
    entries[_DNb] = input[_DNb];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_DSu] != null) {
    entries[_DSu] = input[_DSu];
  }
  if (input[_AC] != null) {
    entries[_AC] = input[_AC];
  }
  if (input[_DG] != null) {
    const memberEntries = se_DbGroupList(input[_DG], context);
    if (((_a = input[_DG]) == null ? void 0 : _a.length) === 0) {
      entries.DbGroups = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `DbGroups.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_CDN] != null) {
    entries[_CDN] = input[_CDN];
  }
  return entries;
}, "se_GetClusterCredentialsMessage");
var se_GetClusterCredentialsWithIAMMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_DNb] != null) {
    entries[_DNb] = input[_DNb];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_DSu] != null) {
    entries[_DSu] = input[_DSu];
  }
  if (input[_CDN] != null) {
    entries[_CDN] = input[_CDN];
  }
  return entries;
}, "se_GetClusterCredentialsWithIAMMessage");
var se_GetReservedNodeExchangeConfigurationOptionsInputMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AT] != null) {
    entries[_AT] = input[_AT];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_GetReservedNodeExchangeConfigurationOptionsInputMessage");
var se_GetReservedNodeExchangeOfferingsInputMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RNI] != null) {
    entries[_RNI] = input[_RNI];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_GetReservedNodeExchangeOfferingsInputMessage");
var se_GetResourcePolicyMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RA] != null) {
    entries[_RA] = input[_RA];
  }
  return entries;
}, "se_GetResourcePolicyMessage");
var se_IamRoleArnList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`IamRoleArn.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_IamRoleArnList");
var se_LakeFormationQuery = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_Au] != null) {
    entries[_Au] = input[_Au];
  }
  return entries;
}, "se_LakeFormationQuery");
var se_LakeFormationScopeUnion = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  LakeFormationScopeUnion.visit(input, {
    LakeFormationQuery: (value) => {
      const memberEntries = se_LakeFormationQuery(value, context);
      Object.entries(memberEntries).forEach(([key, value2]) => {
        const loc = `LakeFormationQuery.${key}`;
        entries[loc] = value2;
      });
    },
    _: (name, value) => {
      entries[name] = value;
    }
  });
  return entries;
}, "se_LakeFormationScopeUnion");
var se_LakeFormationServiceIntegrations = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_LakeFormationScopeUnion(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_LakeFormationServiceIntegrations");
var se_ListRecommendationsMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_NA] != null) {
    entries[_NA] = input[_NA];
  }
  if (input[_MR] != null) {
    entries[_MR] = input[_MR];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_ListRecommendationsMessage");
var se_LogTypeList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_LogTypeList");
var se_ModifyAquaInputMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_ACS] != null) {
    entries[_ACS] = input[_ACS];
  }
  return entries;
}, "se_ModifyAquaInputMessage");
var se_ModifyAuthenticationProfileMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_APN] != null) {
    entries[_APN] = input[_APN];
  }
  if (input[_APC] != null) {
    entries[_APC] = input[_APC];
  }
  return entries;
}, "se_ModifyAuthenticationProfileMessage");
var se_ModifyClusterDbRevisionMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_RTe] != null) {
    entries[_RTe] = input[_RTe];
  }
  return entries;
}, "se_ModifyClusterDbRevisionMessage");
var se_ModifyClusterIamRolesMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_AIR] != null) {
    const memberEntries = se_IamRoleArnList(input[_AIR], context);
    if (((_a = input[_AIR]) == null ? void 0 : _a.length) === 0) {
      entries.AddIamRoles = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `AddIamRoles.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_RIR] != null) {
    const memberEntries = se_IamRoleArnList(input[_RIR], context);
    if (((_b = input[_RIR]) == null ? void 0 : _b.length) === 0) {
      entries.RemoveIamRoles = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `RemoveIamRoles.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_DIRA] != null) {
    entries[_DIRA] = input[_DIRA];
  }
  return entries;
}, "se_ModifyClusterIamRolesMessage");
var se_ModifyClusterMaintenanceMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_DM] != null) {
    entries[_DM] = input[_DM];
  }
  if (input[_DMI] != null) {
    entries[_DMI] = input[_DMI];
  }
  if (input[_DMST] != null) {
    entries[_DMST] = (0, import_smithy_client.serializeDateTime)(input[_DMST]);
  }
  if (input[_DMET] != null) {
    entries[_DMET] = (0, import_smithy_client.serializeDateTime)(input[_DMET]);
  }
  if (input[_DMD] != null) {
    entries[_DMD] = input[_DMD];
  }
  return entries;
}, "se_ModifyClusterMaintenanceMessage");
var se_ModifyClusterMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_CTl] != null) {
    entries[_CTl] = input[_CTl];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  if (input[_NON] != null) {
    entries[_NON] = input[_NON];
  }
  if (input[_CSG] != null) {
    const memberEntries = se_ClusterSecurityGroupNameList(input[_CSG], context);
    if (((_a = input[_CSG]) == null ? void 0 : _a.length) === 0) {
      entries.ClusterSecurityGroups = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ClusterSecurityGroups.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_VSGI] != null) {
    const memberEntries = se_VpcSecurityGroupIdList(input[_VSGI], context);
    if (((_b = input[_VSGI]) == null ? void 0 : _b.length) === 0) {
      entries.VpcSecurityGroupIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VpcSecurityGroupIds.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_MUP] != null) {
    entries[_MUP] = input[_MUP];
  }
  if (input[_CPGN] != null) {
    entries[_CPGN] = input[_CPGN];
  }
  if (input[_ASRP] != null) {
    entries[_ASRP] = input[_ASRP];
  }
  if (input[_MSRP] != null) {
    entries[_MSRP] = input[_MSRP];
  }
  if (input[_PMW] != null) {
    entries[_PMW] = input[_PMW];
  }
  if (input[_CV] != null) {
    entries[_CV] = input[_CV];
  }
  if (input[_AVU] != null) {
    entries[_AVU] = input[_AVU];
  }
  if (input[_HCCI] != null) {
    entries[_HCCI] = input[_HCCI];
  }
  if (input[_HCI] != null) {
    entries[_HCI] = input[_HCI];
  }
  if (input[_NCI] != null) {
    entries[_NCI] = input[_NCI];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_EVR] != null) {
    entries[_EVR] = input[_EVR];
  }
  if (input[_MTN] != null) {
    entries[_MTN] = input[_MTN];
  }
  if (input[_E] != null) {
    entries[_E] = input[_E];
  }
  if (input[_KKI] != null) {
    entries[_KKI] = input[_KKI];
  }
  if (input[_AZR] != null) {
    entries[_AZR] = input[_AZR];
  }
  if (input[_AZ] != null) {
    entries[_AZ] = input[_AZ];
  }
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_MMP] != null) {
    entries[_MMP] = input[_MMP];
  }
  if (input[_MPSKKI] != null) {
    entries[_MPSKKI] = input[_MPSKKI];
  }
  if (input[_IAT] != null) {
    entries[_IAT] = input[_IAT];
  }
  if (input[_MAZ] != null) {
    entries[_MAZ] = input[_MAZ];
  }
  return entries;
}, "se_ModifyClusterMessage");
var se_ModifyClusterParameterGroupMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_PGN] != null) {
    entries[_PGN] = input[_PGN];
  }
  if (input[_Pa] != null) {
    const memberEntries = se_ParametersList(input[_Pa], context);
    if (((_a = input[_Pa]) == null ? void 0 : _a.length) === 0) {
      entries.Parameters = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Parameters.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ModifyClusterParameterGroupMessage");
var se_ModifyClusterSnapshotMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_MSRP] != null) {
    entries[_MSRP] = input[_MSRP];
  }
  if (input[_F] != null) {
    entries[_F] = input[_F];
  }
  return entries;
}, "se_ModifyClusterSnapshotMessage");
var se_ModifyClusterSnapshotScheduleMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_SIc] != null) {
    entries[_SIc] = input[_SIc];
  }
  if (input[_DSi] != null) {
    entries[_DSi] = input[_DSi];
  }
  return entries;
}, "se_ModifyClusterSnapshotScheduleMessage");
var se_ModifyClusterSubnetGroupMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_CSGNl] != null) {
    entries[_CSGNl] = input[_CSGNl];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_SIu] != null) {
    const memberEntries = se_SubnetIdentifierList(input[_SIu], context);
    if (((_a = input[_SIu]) == null ? void 0 : _a.length) === 0) {
      entries.SubnetIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `SubnetIds.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ModifyClusterSubnetGroupMessage");
var se_ModifyCustomDomainAssociationMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CDN] != null) {
    entries[_CDN] = input[_CDN];
  }
  if (input[_CDCA] != null) {
    entries[_CDCA] = input[_CDCA];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_ModifyCustomDomainAssociationMessage");
var se_ModifyEndpointAccessMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_EN] != null) {
    entries[_EN] = input[_EN];
  }
  if (input[_VSGI] != null) {
    const memberEntries = se_VpcSecurityGroupIdList(input[_VSGI], context);
    if (((_a = input[_VSGI]) == null ? void 0 : _a.length) === 0) {
      entries.VpcSecurityGroupIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VpcSecurityGroupIds.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ModifyEndpointAccessMessage");
var se_ModifyEventSubscriptionMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_SN] != null) {
    entries[_SN] = input[_SN];
  }
  if (input[_STA] != null) {
    entries[_STA] = input[_STA];
  }
  if (input[_ST] != null) {
    entries[_ST] = input[_ST];
  }
  if (input[_SIo] != null) {
    const memberEntries = se_SourceIdsList(input[_SIo], context);
    if (((_a = input[_SIo]) == null ? void 0 : _a.length) === 0) {
      entries.SourceIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `SourceIds.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_EC] != null) {
    const memberEntries = se_EventCategoriesList(input[_EC], context);
    if (((_b = input[_EC]) == null ? void 0 : _b.length) === 0) {
      entries.EventCategories = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `EventCategories.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_S] != null) {
    entries[_S] = input[_S];
  }
  if (input[_En] != null) {
    entries[_En] = input[_En];
  }
  return entries;
}, "se_ModifyEventSubscriptionMessage");
var se_ModifyRedshiftIdcApplicationMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b;
  const entries = {};
  if (input[_RIAA] != null) {
    entries[_RIAA] = input[_RIAA];
  }
  if (input[_IN] != null) {
    entries[_IN] = input[_IN];
  }
  if (input[_IRA] != null) {
    entries[_IRA] = input[_IRA];
  }
  if (input[_IDN] != null) {
    entries[_IDN] = input[_IDN];
  }
  if (input[_ATIL] != null) {
    const memberEntries = se_AuthorizedTokenIssuerList(input[_ATIL], context);
    if (((_a = input[_ATIL]) == null ? void 0 : _a.length) === 0) {
      entries.AuthorizedTokenIssuerList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `AuthorizedTokenIssuerList.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_SIe] != null) {
    const memberEntries = se_ServiceIntegrationList(input[_SIe], context);
    if (((_b = input[_SIe]) == null ? void 0 : _b.length) === 0) {
      entries.ServiceIntegrations = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ServiceIntegrations.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ModifyRedshiftIdcApplicationMessage");
var se_ModifyScheduledActionMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAN] != null) {
    entries[_SAN] = input[_SAN];
  }
  if (input[_TA] != null) {
    const memberEntries = se_ScheduledActionType(input[_TA], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TargetAction.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_Sc] != null) {
    entries[_Sc] = input[_Sc];
  }
  if (input[_IRa] != null) {
    entries[_IRa] = input[_IRa];
  }
  if (input[_SAD] != null) {
    entries[_SAD] = input[_SAD];
  }
  if (input[_STt] != null) {
    entries[_STt] = (0, import_smithy_client.serializeDateTime)(input[_STt]);
  }
  if (input[_ET] != null) {
    entries[_ET] = (0, import_smithy_client.serializeDateTime)(input[_ET]);
  }
  if (input[_Ena] != null) {
    entries[_Ena] = input[_Ena];
  }
  return entries;
}, "se_ModifyScheduledActionMessage");
var se_ModifySnapshotCopyRetentionPeriodMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_RP] != null) {
    entries[_RP] = input[_RP];
  }
  if (input[_Ma] != null) {
    entries[_Ma] = input[_Ma];
  }
  return entries;
}, "se_ModifySnapshotCopyRetentionPeriodMessage");
var se_ModifySnapshotScheduleMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_SIc] != null) {
    entries[_SIc] = input[_SIc];
  }
  if (input[_SD] != null) {
    const memberEntries = se_ScheduleDefinitionList(input[_SD], context);
    if (((_a = input[_SD]) == null ? void 0 : _a.length) === 0) {
      entries.ScheduleDefinitions = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ScheduleDefinitions.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ModifySnapshotScheduleMessage");
var se_ModifyUsageLimitMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_ULI] != null) {
    entries[_ULI] = input[_ULI];
  }
  if (input[_Am] != null) {
    entries[_Am] = input[_Am];
  }
  if (input[_BA] != null) {
    entries[_BA] = input[_BA];
  }
  return entries;
}, "se_ModifyUsageLimitMessage");
var se_NodeConfigurationOptionsFilter = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_N] != null) {
    entries[_N] = input[_N];
  }
  if (input[_O] != null) {
    entries[_O] = input[_O];
  }
  if (input[_Va] != null) {
    const memberEntries = se_ValueStringList(input[_Va], context);
    if (((_a = input[_Va]) == null ? void 0 : _a.length) === 0) {
      entries.Value = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Value.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_NodeConfigurationOptionsFilter");
var se_NodeConfigurationOptionsFilterList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_NodeConfigurationOptionsFilter(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`NodeConfigurationOptionsFilter.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_NodeConfigurationOptionsFilterList");
var se_Parameter = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PNa] != null) {
    entries[_PNa] = input[_PNa];
  }
  if (input[_PV] != null) {
    entries[_PV] = input[_PV];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_So] != null) {
    entries[_So] = input[_So];
  }
  if (input[_DTa] != null) {
    entries[_DTa] = input[_DTa];
  }
  if (input[_AV] != null) {
    entries[_AV] = input[_AV];
  }
  if (input[_ATp] != null) {
    entries[_ATp] = input[_ATp];
  }
  if (input[_IM] != null) {
    entries[_IM] = input[_IM];
  }
  if (input[_MEV] != null) {
    entries[_MEV] = input[_MEV];
  }
  return entries;
}, "se_Parameter");
var se_ParametersList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_Parameter(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`Parameter.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_ParametersList");
var se_PartnerIntegrationInputMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AIc] != null) {
    entries[_AIc] = input[_AIc];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_DN] != null) {
    entries[_DN] = input[_DN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  return entries;
}, "se_PartnerIntegrationInputMessage");
var se_PauseClusterMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_PauseClusterMessage");
var se_PurchaseReservedNodeOfferingMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RNOI] != null) {
    entries[_RNOI] = input[_RNOI];
  }
  if (input[_NC] != null) {
    entries[_NC] = input[_NC];
  }
  return entries;
}, "se_PurchaseReservedNodeOfferingMessage");
var se_PutResourcePolicyMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RA] != null) {
    entries[_RA] = input[_RA];
  }
  if (input[_Po] != null) {
    entries[_Po] = input[_Po];
  }
  return entries;
}, "se_PutResourcePolicyMessage");
var se_RebootClusterMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_RebootClusterMessage");
var se_RejectDataShareMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_DSAa] != null) {
    entries[_DSAa] = input[_DSAa];
  }
  return entries;
}, "se_RejectDataShareMessage");
var se_ResetClusterParameterGroupMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_PGN] != null) {
    entries[_PGN] = input[_PGN];
  }
  if (input[_RAP] != null) {
    entries[_RAP] = input[_RAP];
  }
  if (input[_Pa] != null) {
    const memberEntries = se_ParametersList(input[_Pa], context);
    if (((_a = input[_Pa]) == null ? void 0 : _a.length) === 0) {
      entries.Parameters = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Parameters.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ResetClusterParameterGroupMessage");
var se_ResizeClusterMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_CTl] != null) {
    entries[_CTl] = input[_CTl];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  if (input[_NON] != null) {
    entries[_NON] = input[_NON];
  }
  if (input[_C] != null) {
    entries[_C] = input[_C];
  }
  if (input[_RNI] != null) {
    entries[_RNI] = input[_RNI];
  }
  if (input[_TRNOI] != null) {
    entries[_TRNOI] = input[_TRNOI];
  }
  return entries;
}, "se_ResizeClusterMessage");
var se_RestoreFromClusterSnapshotMessage = /* @__PURE__ */ __name((input, context) => {
  var _a, _b, _c;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_SA] != null) {
    entries[_SA] = input[_SA];
  }
  if (input[_SCI] != null) {
    entries[_SCI] = input[_SCI];
  }
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_AZ] != null) {
    entries[_AZ] = input[_AZ];
  }
  if (input[_AVU] != null) {
    entries[_AVU] = input[_AVU];
  }
  if (input[_CSGNl] != null) {
    entries[_CSGNl] = input[_CSGNl];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_OA] != null) {
    entries[_OA] = input[_OA];
  }
  if (input[_HCCI] != null) {
    entries[_HCCI] = input[_HCCI];
  }
  if (input[_HCI] != null) {
    entries[_HCI] = input[_HCI];
  }
  if (input[_EI] != null) {
    entries[_EI] = input[_EI];
  }
  if (input[_CPGN] != null) {
    entries[_CPGN] = input[_CPGN];
  }
  if (input[_CSG] != null) {
    const memberEntries = se_ClusterSecurityGroupNameList(input[_CSG], context);
    if (((_a = input[_CSG]) == null ? void 0 : _a.length) === 0) {
      entries.ClusterSecurityGroups = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ClusterSecurityGroups.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_VSGI] != null) {
    const memberEntries = se_VpcSecurityGroupIdList(input[_VSGI], context);
    if (((_b = input[_VSGI]) == null ? void 0 : _b.length) === 0) {
      entries.VpcSecurityGroupIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VpcSecurityGroupIds.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_PMW] != null) {
    entries[_PMW] = input[_PMW];
  }
  if (input[_ASRP] != null) {
    entries[_ASRP] = input[_ASRP];
  }
  if (input[_MSRP] != null) {
    entries[_MSRP] = input[_MSRP];
  }
  if (input[_KKI] != null) {
    entries[_KKI] = input[_KKI];
  }
  if (input[_NT] != null) {
    entries[_NT] = input[_NT];
  }
  if (input[_EVR] != null) {
    entries[_EVR] = input[_EVR];
  }
  if (input[_AI] != null) {
    entries[_AI] = input[_AI];
  }
  if (input[_IR] != null) {
    const memberEntries = se_IamRoleArnList(input[_IR], context);
    if (((_c = input[_IR]) == null ? void 0 : _c.length) === 0) {
      entries.IamRoles = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `IamRoles.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_MTN] != null) {
    entries[_MTN] = input[_MTN];
  }
  if (input[_SSIn] != null) {
    entries[_SSIn] = input[_SSIn];
  }
  if (input[_NON] != null) {
    entries[_NON] = input[_NON];
  }
  if (input[_AZR] != null) {
    entries[_AZR] = input[_AZR];
  }
  if (input[_ACS] != null) {
    entries[_ACS] = input[_ACS];
  }
  if (input[_DIRA] != null) {
    entries[_DIRA] = input[_DIRA];
  }
  if (input[_RNI] != null) {
    entries[_RNI] = input[_RNI];
  }
  if (input[_TRNOI] != null) {
    entries[_TRNOI] = input[_TRNOI];
  }
  if (input[_E] != null) {
    entries[_E] = input[_E];
  }
  if (input[_MMP] != null) {
    entries[_MMP] = input[_MMP];
  }
  if (input[_MPSKKI] != null) {
    entries[_MPSKKI] = input[_MPSKKI];
  }
  if (input[_IAT] != null) {
    entries[_IAT] = input[_IAT];
  }
  if (input[_MAZ] != null) {
    entries[_MAZ] = input[_MAZ];
  }
  return entries;
}, "se_RestoreFromClusterSnapshotMessage");
var se_RestoreTableFromClusterSnapshotMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_SDN] != null) {
    entries[_SDN] = input[_SDN];
  }
  if (input[_SSN] != null) {
    entries[_SSN] = input[_SSN];
  }
  if (input[_STN] != null) {
    entries[_STN] = input[_STN];
  }
  if (input[_TDN] != null) {
    entries[_TDN] = input[_TDN];
  }
  if (input[_TSN] != null) {
    entries[_TSN] = input[_TSN];
  }
  if (input[_NTN] != null) {
    entries[_NTN] = input[_NTN];
  }
  if (input[_ECSI] != null) {
    entries[_ECSI] = input[_ECSI];
  }
  return entries;
}, "se_RestoreTableFromClusterSnapshotMessage");
var se_ResumeClusterMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_ResumeClusterMessage");
var se_RevokeClusterSecurityGroupIngressMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CSGN] != null) {
    entries[_CSGN] = input[_CSGN];
  }
  if (input[_CIDRIP] != null) {
    entries[_CIDRIP] = input[_CIDRIP];
  }
  if (input[_ECSGN] != null) {
    entries[_ECSGN] = input[_ECSGN];
  }
  if (input[_ECSGOI] != null) {
    entries[_ECSGOI] = input[_ECSGOI];
  }
  return entries;
}, "se_RevokeClusterSecurityGroupIngressMessage");
var se_RevokeEndpointAccessMessage = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_Ac] != null) {
    entries[_Ac] = input[_Ac];
  }
  if (input[_VI] != null) {
    const memberEntries = se_VpcIdentifierList(input[_VI], context);
    if (((_a = input[_VI]) == null ? void 0 : _a.length) === 0) {
      entries.VpcIds = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `VpcIds.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_F] != null) {
    entries[_F] = input[_F];
  }
  return entries;
}, "se_RevokeEndpointAccessMessage");
var se_RevokeSnapshotAccessMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SI] != null) {
    entries[_SI] = input[_SI];
  }
  if (input[_SA] != null) {
    entries[_SA] = input[_SA];
  }
  if (input[_SCI] != null) {
    entries[_SCI] = input[_SCI];
  }
  if (input[_AWRA] != null) {
    entries[_AWRA] = input[_AWRA];
  }
  return entries;
}, "se_RevokeSnapshotAccessMessage");
var se_RotateEncryptionKeyMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  return entries;
}, "se_RotateEncryptionKeyMessage");
var se_ScheduledActionFilter = /* @__PURE__ */ __name((input, context) => {
  var _a;
  const entries = {};
  if (input[_N] != null) {
    entries[_N] = input[_N];
  }
  if (input[_Va] != null) {
    const memberEntries = se_ValueStringList(input[_Va], context);
    if (((_a = input[_Va]) == null ? void 0 : _a.length) === 0) {
      entries.Values = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Values.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ScheduledActionFilter");
var se_ScheduledActionFilterList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_ScheduledActionFilter(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`ScheduledActionFilter.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_ScheduledActionFilterList");
var se_ScheduledActionType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RCe] != null) {
    const memberEntries = se_ResizeClusterMessage(input[_RCe], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ResizeCluster.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_PC] != null) {
    const memberEntries = se_PauseClusterMessage(input[_PC], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `PauseCluster.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_RCes] != null) {
    const memberEntries = se_ResumeClusterMessage(input[_RCes], context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ResumeCluster.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ScheduledActionType");
var se_ScheduleDefinitionList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`ScheduleDefinition.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_ScheduleDefinitionList");
var se_ServiceIntegrationList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_ServiceIntegrationsUnion(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_ServiceIntegrationList");
var se_ServiceIntegrationsUnion = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  ServiceIntegrationsUnion.visit(input, {
    LakeFormation: (value) => {
      const memberEntries = se_LakeFormationServiceIntegrations(value, context);
      if ((value == null ? void 0 : value.length) === 0) {
        entries.LakeFormation = [];
      }
      Object.entries(memberEntries).forEach(([key, value2]) => {
        const loc = `LakeFormation.${key}`;
        entries[loc] = value2;
      });
    },
    _: (name, value) => {
      entries[name] = value;
    }
  });
  return entries;
}, "se_ServiceIntegrationsUnion");
var se_SnapshotIdentifierList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`String.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_SnapshotIdentifierList");
var se_SnapshotSortingEntity = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_At] != null) {
    entries[_At] = input[_At];
  }
  if (input[_SO] != null) {
    entries[_SO] = input[_SO];
  }
  return entries;
}, "se_SnapshotSortingEntity");
var se_SnapshotSortingEntityList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_SnapshotSortingEntity(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`SnapshotSortingEntity.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_SnapshotSortingEntityList");
var se_SourceIdsList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`SourceId.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_SourceIdsList");
var se_SubnetIdentifierList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`SubnetIdentifier.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_SubnetIdentifierList");
var se_Tag = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_K] != null) {
    entries[_K] = input[_K];
  }
  if (input[_Val] != null) {
    entries[_Val] = input[_Val];
  }
  return entries;
}, "se_Tag");
var se_TagKeyList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`TagKey.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_TagKeyList");
var se_TagList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_Tag(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`Tag.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_TagList");
var se_TagValueList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`TagValue.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_TagValueList");
var se_UpdatePartnerStatusInputMessage = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AIc] != null) {
    entries[_AIc] = input[_AIc];
  }
  if (input[_CIl] != null) {
    entries[_CIl] = input[_CIl];
  }
  if (input[_DN] != null) {
    entries[_DN] = input[_DN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  if (input[_St] != null) {
    entries[_St] = input[_St];
  }
  if (input[_SM] != null) {
    entries[_SM] = input[_SM];
  }
  return entries;
}, "se_UpdatePartnerStatusInputMessage");
var se_ValueStringList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`item.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_ValueStringList");
var se_VpcIdentifierList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`VpcIdentifier.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_VpcIdentifierList");
var se_VpcSecurityGroupIdList = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`VpcSecurityGroupId.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_VpcSecurityGroupIdList");
var de_AcceptReservedNodeExchangeOutputMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ERN] != null) {
    contents[_ERN] = de_ReservedNode(output[_ERN], context);
  }
  return contents;
}, "de_AcceptReservedNodeExchangeOutputMessage");
var de_AccessToClusterDeniedFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_AccessToClusterDeniedFault");
var de_AccessToSnapshotDeniedFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_AccessToSnapshotDeniedFault");
var de_AccountAttribute = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ANt] != null) {
    contents[_ANt] = (0, import_smithy_client.expectString)(output[_ANt]);
  }
  if (output.AttributeValues === "") {
    contents[_AVt] = [];
  } else if (output[_AVt] != null && output[_AVt][_AVT] != null) {
    contents[_AVt] = de_AttributeValueList((0, import_smithy_client.getArrayIfSingleItem)(output[_AVt][_AVT]), context);
  }
  return contents;
}, "de_AccountAttribute");
var de_AccountAttributeList = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.AccountAttributes === "") {
    contents[_AA] = [];
  } else if (output[_AA] != null && output[_AA][_AAc] != null) {
    contents[_AA] = de_AttributeList((0, import_smithy_client.getArrayIfSingleItem)(output[_AA][_AAc]), context);
  }
  return contents;
}, "de_AccountAttributeList");
var de_AccountsWithRestoreAccessList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AccountWithRestoreAccess(entry, context);
  });
}, "de_AccountsWithRestoreAccessList");
var de_AccountWithRestoreAccess = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AIc] != null) {
    contents[_AIc] = (0, import_smithy_client.expectString)(output[_AIc]);
  }
  if (output[_AAcc] != null) {
    contents[_AAcc] = (0, import_smithy_client.expectString)(output[_AAcc]);
  }
  return contents;
}, "de_AccountWithRestoreAccess");
var de_AquaConfiguration = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AS] != null) {
    contents[_AS] = (0, import_smithy_client.expectString)(output[_AS]);
  }
  if (output[_ACS] != null) {
    contents[_ACS] = (0, import_smithy_client.expectString)(output[_ACS]);
  }
  return contents;
}, "de_AquaConfiguration");
var de_AssociatedClusterList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterAssociatedToSchedule(entry, context);
  });
}, "de_AssociatedClusterList");
var de_Association = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CDCA] != null) {
    contents[_CDCA] = (0, import_smithy_client.expectString)(output[_CDCA]);
  }
  if (output[_CDCED] != null) {
    contents[_CDCED] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CDCED]));
  }
  if (output.CertificateAssociations === "") {
    contents[_CAe] = [];
  } else if (output[_CAe] != null && output[_CAe][_CAer] != null) {
    contents[_CAe] = de_CertificateAssociationList((0, import_smithy_client.getArrayIfSingleItem)(output[_CAe][_CAer]), context);
  }
  return contents;
}, "de_Association");
var de_AssociationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Association(entry, context);
  });
}, "de_AssociationList");
var de_AttributeList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AccountAttribute(entry, context);
  });
}, "de_AttributeList");
var de_AttributeValueList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AttributeValueTarget(entry, context);
  });
}, "de_AttributeValueList");
var de_AttributeValueTarget = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AVtt] != null) {
    contents[_AVtt] = (0, import_smithy_client.expectString)(output[_AVtt]);
  }
  return contents;
}, "de_AttributeValueTarget");
var de_AuthenticationProfile = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_APN] != null) {
    contents[_APN] = (0, import_smithy_client.expectString)(output[_APN]);
  }
  if (output[_APC] != null) {
    contents[_APC] = (0, import_smithy_client.expectString)(output[_APC]);
  }
  return contents;
}, "de_AuthenticationProfile");
var de_AuthenticationProfileAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_AuthenticationProfileAlreadyExistsFault");
var de_AuthenticationProfileList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AuthenticationProfile(entry, context);
  });
}, "de_AuthenticationProfileList");
var de_AuthenticationProfileNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_AuthenticationProfileNotFoundFault");
var de_AuthenticationProfileQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_AuthenticationProfileQuotaExceededFault");
var de_AuthorizationAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_AuthorizationAlreadyExistsFault");
var de_AuthorizationNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_AuthorizationNotFoundFault");
var de_AuthorizationQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_AuthorizationQuotaExceededFault");
var de_AuthorizeClusterSecurityGroupIngressResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CSGl] != null) {
    contents[_CSGl] = de_ClusterSecurityGroup(output[_CSGl], context);
  }
  return contents;
}, "de_AuthorizeClusterSecurityGroupIngressResult");
var de_AuthorizedAudienceList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_AuthorizedAudienceList");
var de_AuthorizedTokenIssuer = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_TTIA] != null) {
    contents[_TTIA] = (0, import_smithy_client.expectString)(output[_TTIA]);
  }
  if (output.AuthorizedAudiencesList === "") {
    contents[_AAL] = [];
  } else if (output[_AAL] != null && output[_AAL][_me] != null) {
    contents[_AAL] = de_AuthorizedAudienceList((0, import_smithy_client.getArrayIfSingleItem)(output[_AAL][_me]), context);
  }
  return contents;
}, "de_AuthorizedTokenIssuer");
var de_AuthorizedTokenIssuerList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AuthorizedTokenIssuer(entry, context);
  });
}, "de_AuthorizedTokenIssuerList");
var de_AuthorizeSnapshotAccessResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Sn] != null) {
    contents[_Sn] = de_Snapshot(output[_Sn], context);
  }
  return contents;
}, "de_AuthorizeSnapshotAccessResult");
var de_AvailabilityZone = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_N] != null) {
    contents[_N] = (0, import_smithy_client.expectString)(output[_N]);
  }
  if (output.SupportedPlatforms === "") {
    contents[_SP] = [];
  } else if (output[_SP] != null && output[_SP][_SPu] != null) {
    contents[_SP] = de_SupportedPlatformsList((0, import_smithy_client.getArrayIfSingleItem)(output[_SP][_SPu]), context);
  }
  return contents;
}, "de_AvailabilityZone");
var de_AvailabilityZoneList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AvailabilityZone(entry, context);
  });
}, "de_AvailabilityZoneList");
var de_BatchDeleteClusterSnapshotsResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Resources === "") {
    contents[_R] = [];
  } else if (output[_R] != null && output[_R][_Str] != null) {
    contents[_R] = de_SnapshotIdentifierList((0, import_smithy_client.getArrayIfSingleItem)(output[_R][_Str]), context);
  }
  if (output.Errors === "") {
    contents[_Er] = [];
  } else if (output[_Er] != null && output[_Er][_SEM] != null) {
    contents[_Er] = de_BatchSnapshotOperationErrorList((0, import_smithy_client.getArrayIfSingleItem)(output[_Er][_SEM]), context);
  }
  return contents;
}, "de_BatchDeleteClusterSnapshotsResult");
var de_BatchDeleteRequestSizeExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_BatchDeleteRequestSizeExceededFault");
var de_BatchModifyClusterSnapshotsLimitExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_BatchModifyClusterSnapshotsLimitExceededFault");
var de_BatchModifyClusterSnapshotsOutputMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Resources === "") {
    contents[_R] = [];
  } else if (output[_R] != null && output[_R][_Str] != null) {
    contents[_R] = de_SnapshotIdentifierList((0, import_smithy_client.getArrayIfSingleItem)(output[_R][_Str]), context);
  }
  if (output.Errors === "") {
    contents[_Er] = [];
  } else if (output[_Er] != null && output[_Er][_SEM] != null) {
    contents[_Er] = de_BatchSnapshotOperationErrors((0, import_smithy_client.getArrayIfSingleItem)(output[_Er][_SEM]), context);
  }
  return contents;
}, "de_BatchModifyClusterSnapshotsOutputMessage");
var de_BatchSnapshotOperationErrorList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SnapshotErrorMessage(entry, context);
  });
}, "de_BatchSnapshotOperationErrorList");
var de_BatchSnapshotOperationErrors = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SnapshotErrorMessage(entry, context);
  });
}, "de_BatchSnapshotOperationErrors");
var de_BucketNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_BucketNotFoundFault");
var de_CertificateAssociation = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CDN] != null) {
    contents[_CDN] = (0, import_smithy_client.expectString)(output[_CDN]);
  }
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  return contents;
}, "de_CertificateAssociation");
var de_CertificateAssociationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_CertificateAssociation(entry, context);
  });
}, "de_CertificateAssociationList");
var de_Cluster = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  if (output[_CS] != null) {
    contents[_CS] = (0, import_smithy_client.expectString)(output[_CS]);
  }
  if (output[_CAS] != null) {
    contents[_CAS] = (0, import_smithy_client.expectString)(output[_CAS]);
  }
  if (output[_MS] != null) {
    contents[_MS] = (0, import_smithy_client.expectString)(output[_MS]);
  }
  if (output[_MU] != null) {
    contents[_MU] = (0, import_smithy_client.expectString)(output[_MU]);
  }
  if (output[_DBN] != null) {
    contents[_DBN] = (0, import_smithy_client.expectString)(output[_DBN]);
  }
  if (output[_End] != null) {
    contents[_End] = de_Endpoint(output[_End], context);
  }
  if (output[_CCT] != null) {
    contents[_CCT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CCT]));
  }
  if (output[_ASRP] != null) {
    contents[_ASRP] = (0, import_smithy_client.strictParseInt32)(output[_ASRP]);
  }
  if (output[_MSRP] != null) {
    contents[_MSRP] = (0, import_smithy_client.strictParseInt32)(output[_MSRP]);
  }
  if (output.ClusterSecurityGroups === "") {
    contents[_CSG] = [];
  } else if (output[_CSG] != null && output[_CSG][_CSGl] != null) {
    contents[_CSG] = de_ClusterSecurityGroupMembershipList((0, import_smithy_client.getArrayIfSingleItem)(output[_CSG][_CSGl]), context);
  }
  if (output.VpcSecurityGroups === "") {
    contents[_VSG] = [];
  } else if (output[_VSG] != null && output[_VSG][_VSGp] != null) {
    contents[_VSG] = de_VpcSecurityGroupMembershipList((0, import_smithy_client.getArrayIfSingleItem)(output[_VSG][_VSGp]), context);
  }
  if (output.ClusterParameterGroups === "") {
    contents[_CPG] = [];
  } else if (output[_CPG] != null && output[_CPG][_CPGl] != null) {
    contents[_CPG] = de_ClusterParameterGroupStatusList((0, import_smithy_client.getArrayIfSingleItem)(output[_CPG][_CPGl]), context);
  }
  if (output[_CSGNl] != null) {
    contents[_CSGNl] = (0, import_smithy_client.expectString)(output[_CSGNl]);
  }
  if (output[_VIp] != null) {
    contents[_VIp] = (0, import_smithy_client.expectString)(output[_VIp]);
  }
  if (output[_AZ] != null) {
    contents[_AZ] = (0, import_smithy_client.expectString)(output[_AZ]);
  }
  if (output[_PMW] != null) {
    contents[_PMW] = (0, import_smithy_client.expectString)(output[_PMW]);
  }
  if (output[_PMV] != null) {
    contents[_PMV] = de_PendingModifiedValues(output[_PMV], context);
  }
  if (output[_CV] != null) {
    contents[_CV] = (0, import_smithy_client.expectString)(output[_CV]);
  }
  if (output[_AVU] != null) {
    contents[_AVU] = (0, import_smithy_client.parseBoolean)(output[_AVU]);
  }
  if (output[_NON] != null) {
    contents[_NON] = (0, import_smithy_client.strictParseInt32)(output[_NON]);
  }
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.parseBoolean)(output[_PA]);
  }
  if (output[_E] != null) {
    contents[_E] = (0, import_smithy_client.parseBoolean)(output[_E]);
  }
  if (output[_RS] != null) {
    contents[_RS] = de_RestoreStatus(output[_RS], context);
  }
  if (output[_DTP] != null) {
    contents[_DTP] = de_DataTransferProgress(output[_DTP], context);
  }
  if (output[_HS] != null) {
    contents[_HS] = de_HsmStatus(output[_HS], context);
  }
  if (output[_CSCS] != null) {
    contents[_CSCS] = de_ClusterSnapshotCopyStatus(output[_CSCS], context);
  }
  if (output[_CPK] != null) {
    contents[_CPK] = (0, import_smithy_client.expectString)(output[_CPK]);
  }
  if (output.ClusterNodes === "") {
    contents[_CN] = [];
  } else if (output[_CN] != null && output[_CN][_me] != null) {
    contents[_CN] = de_ClusterNodesList((0, import_smithy_client.getArrayIfSingleItem)(output[_CN][_me]), context);
  }
  if (output[_EIS] != null) {
    contents[_EIS] = de_ElasticIpStatus(output[_EIS], context);
  }
  if (output[_CRN] != null) {
    contents[_CRN] = (0, import_smithy_client.expectString)(output[_CRN]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  if (output[_KKI] != null) {
    contents[_KKI] = (0, import_smithy_client.expectString)(output[_KKI]);
  }
  if (output[_EVR] != null) {
    contents[_EVR] = (0, import_smithy_client.parseBoolean)(output[_EVR]);
  }
  if (output.IamRoles === "") {
    contents[_IR] = [];
  } else if (output[_IR] != null && output[_IR][_CIR] != null) {
    contents[_IR] = de_ClusterIamRoleList((0, import_smithy_client.getArrayIfSingleItem)(output[_IR][_CIR]), context);
  }
  if (output.PendingActions === "") {
    contents[_PAe] = [];
  } else if (output[_PAe] != null && output[_PAe][_me] != null) {
    contents[_PAe] = de_PendingActionsList((0, import_smithy_client.getArrayIfSingleItem)(output[_PAe][_me]), context);
  }
  if (output[_MTN] != null) {
    contents[_MTN] = (0, import_smithy_client.expectString)(output[_MTN]);
  }
  if (output[_ERNONO] != null) {
    contents[_ERNONO] = (0, import_smithy_client.expectString)(output[_ERNONO]);
  }
  if (output.DeferredMaintenanceWindows === "") {
    contents[_DMW] = [];
  } else if (output[_DMW] != null && output[_DMW][_DMWe] != null) {
    contents[_DMW] = de_DeferredMaintenanceWindowsList((0, import_smithy_client.getArrayIfSingleItem)(output[_DMW][_DMWe]), context);
  }
  if (output[_SSIn] != null) {
    contents[_SSIn] = (0, import_smithy_client.expectString)(output[_SSIn]);
  }
  if (output[_SSS] != null) {
    contents[_SSS] = (0, import_smithy_client.expectString)(output[_SSS]);
  }
  if (output[_ENSST] != null) {
    contents[_ENSST] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_ENSST]));
  }
  if (output[_ENSSTS] != null) {
    contents[_ENSSTS] = (0, import_smithy_client.expectString)(output[_ENSSTS]);
  }
  if (output[_NMWST] != null) {
    contents[_NMWST] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_NMWST]));
  }
  if (output[_RI] != null) {
    contents[_RI] = de_ResizeInfo(output[_RI], context);
  }
  if (output[_AZRS] != null) {
    contents[_AZRS] = (0, import_smithy_client.expectString)(output[_AZRS]);
  }
  if (output[_CNA] != null) {
    contents[_CNA] = (0, import_smithy_client.expectString)(output[_CNA]);
  }
  if (output[_TSCIMB] != null) {
    contents[_TSCIMB] = (0, import_smithy_client.strictParseLong)(output[_TSCIMB]);
  }
  if (output[_ACq] != null) {
    contents[_ACq] = de_AquaConfiguration(output[_ACq], context);
  }
  if (output[_DIRA] != null) {
    contents[_DIRA] = (0, import_smithy_client.expectString)(output[_DIRA]);
  }
  if (output[_RNES] != null) {
    contents[_RNES] = de_ReservedNodeExchangeStatus(output[_RNES], context);
  }
  if (output[_CDN] != null) {
    contents[_CDN] = (0, import_smithy_client.expectString)(output[_CDN]);
  }
  if (output[_CDCA] != null) {
    contents[_CDCA] = (0, import_smithy_client.expectString)(output[_CDCA]);
  }
  if (output[_CDCED] != null) {
    contents[_CDCED] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CDCED]));
  }
  if (output[_MPSA] != null) {
    contents[_MPSA] = (0, import_smithy_client.expectString)(output[_MPSA]);
  }
  if (output[_MPSKKI] != null) {
    contents[_MPSKKI] = (0, import_smithy_client.expectString)(output[_MPSKKI]);
  }
  if (output[_IAT] != null) {
    contents[_IAT] = (0, import_smithy_client.expectString)(output[_IAT]);
  }
  if (output[_MAZ] != null) {
    contents[_MAZ] = (0, import_smithy_client.expectString)(output[_MAZ]);
  }
  if (output[_MAZS] != null) {
    contents[_MAZS] = de_SecondaryClusterInfo(output[_MAZS], context);
  }
  return contents;
}, "de_Cluster");
var de_ClusterAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterAlreadyExistsFault");
var de_ClusterAssociatedToSchedule = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_SAS] != null) {
    contents[_SAS] = (0, import_smithy_client.expectString)(output[_SAS]);
  }
  return contents;
}, "de_ClusterAssociatedToSchedule");
var de_ClusterCredentials = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DU] != null) {
    contents[_DU] = (0, import_smithy_client.expectString)(output[_DU]);
  }
  if (output[_DPb] != null) {
    contents[_DPb] = (0, import_smithy_client.expectString)(output[_DPb]);
  }
  if (output[_Ex] != null) {
    contents[_Ex] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_Ex]));
  }
  return contents;
}, "de_ClusterCredentials");
var de_ClusterDbRevision = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_CDR] != null) {
    contents[_CDR] = (0, import_smithy_client.expectString)(output[_CDR]);
  }
  if (output[_DRRD] != null) {
    contents[_DRRD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DRRD]));
  }
  if (output.RevisionTargets === "") {
    contents[_RTev] = [];
  } else if (output[_RTev] != null && output[_RTev][_RTe] != null) {
    contents[_RTev] = de_RevisionTargetsList((0, import_smithy_client.getArrayIfSingleItem)(output[_RTev][_RTe]), context);
  }
  return contents;
}, "de_ClusterDbRevision");
var de_ClusterDbRevisionsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterDbRevision(entry, context);
  });
}, "de_ClusterDbRevisionsList");
var de_ClusterDbRevisionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ClusterDbRevisions === "") {
    contents[_CDRl] = [];
  } else if (output[_CDRl] != null && output[_CDRl][_CDRlu] != null) {
    contents[_CDRl] = de_ClusterDbRevisionsList((0, import_smithy_client.getArrayIfSingleItem)(output[_CDRl][_CDRlu]), context);
  }
  return contents;
}, "de_ClusterDbRevisionsMessage");
var de_ClusterExtendedCredentials = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DU] != null) {
    contents[_DU] = (0, import_smithy_client.expectString)(output[_DU]);
  }
  if (output[_DPb] != null) {
    contents[_DPb] = (0, import_smithy_client.expectString)(output[_DPb]);
  }
  if (output[_Ex] != null) {
    contents[_Ex] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_Ex]));
  }
  if (output[_NRT] != null) {
    contents[_NRT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_NRT]));
  }
  return contents;
}, "de_ClusterExtendedCredentials");
var de_ClusterIamRole = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_IRA] != null) {
    contents[_IRA] = (0, import_smithy_client.expectString)(output[_IRA]);
  }
  if (output[_ASp] != null) {
    contents[_ASp] = (0, import_smithy_client.expectString)(output[_ASp]);
  }
  return contents;
}, "de_ClusterIamRole");
var de_ClusterIamRoleList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterIamRole(entry, context);
  });
}, "de_ClusterIamRoleList");
var de_ClusterList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Cluster(entry, context);
  });
}, "de_ClusterList");
var de_ClusterNode = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_NR] != null) {
    contents[_NR] = (0, import_smithy_client.expectString)(output[_NR]);
  }
  if (output[_PIPA] != null) {
    contents[_PIPA] = (0, import_smithy_client.expectString)(output[_PIPA]);
  }
  if (output[_PIPAu] != null) {
    contents[_PIPAu] = (0, import_smithy_client.expectString)(output[_PIPAu]);
  }
  return contents;
}, "de_ClusterNode");
var de_ClusterNodesList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterNode(entry, context);
  });
}, "de_ClusterNodesList");
var de_ClusterNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterNotFoundFault");
var de_ClusterOnLatestRevisionFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterOnLatestRevisionFault");
var de_ClusterParameterGroup = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PGN] != null) {
    contents[_PGN] = (0, import_smithy_client.expectString)(output[_PGN]);
  }
  if (output[_PGF] != null) {
    contents[_PGF] = (0, import_smithy_client.expectString)(output[_PGF]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  return contents;
}, "de_ClusterParameterGroup");
var de_ClusterParameterGroupAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterParameterGroupAlreadyExistsFault");
var de_ClusterParameterGroupDetails = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Parameters === "") {
    contents[_Pa] = [];
  } else if (output[_Pa] != null && output[_Pa][_Par] != null) {
    contents[_Pa] = de_ParametersList((0, import_smithy_client.getArrayIfSingleItem)(output[_Pa][_Par]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ClusterParameterGroupDetails");
var de_ClusterParameterGroupNameMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PGN] != null) {
    contents[_PGN] = (0, import_smithy_client.expectString)(output[_PGN]);
  }
  if (output[_PGS] != null) {
    contents[_PGS] = (0, import_smithy_client.expectString)(output[_PGS]);
  }
  return contents;
}, "de_ClusterParameterGroupNameMessage");
var de_ClusterParameterGroupNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterParameterGroupNotFoundFault");
var de_ClusterParameterGroupQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterParameterGroupQuotaExceededFault");
var de_ClusterParameterGroupsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ParameterGroups === "") {
    contents[_PG] = [];
  } else if (output[_PG] != null && output[_PG][_CPGl] != null) {
    contents[_PG] = de_ParameterGroupList((0, import_smithy_client.getArrayIfSingleItem)(output[_PG][_CPGl]), context);
  }
  return contents;
}, "de_ClusterParameterGroupsMessage");
var de_ClusterParameterGroupStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PGN] != null) {
    contents[_PGN] = (0, import_smithy_client.expectString)(output[_PGN]);
  }
  if (output[_PAS] != null) {
    contents[_PAS] = (0, import_smithy_client.expectString)(output[_PAS]);
  }
  if (output.ClusterParameterStatusList === "") {
    contents[_CPSL] = [];
  } else if (output[_CPSL] != null && output[_CPSL][_me] != null) {
    contents[_CPSL] = de_ClusterParameterStatusList((0, import_smithy_client.getArrayIfSingleItem)(output[_CPSL][_me]), context);
  }
  return contents;
}, "de_ClusterParameterGroupStatus");
var de_ClusterParameterGroupStatusList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterParameterGroupStatus(entry, context);
  });
}, "de_ClusterParameterGroupStatusList");
var de_ClusterParameterStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PNa] != null) {
    contents[_PNa] = (0, import_smithy_client.expectString)(output[_PNa]);
  }
  if (output[_PAS] != null) {
    contents[_PAS] = (0, import_smithy_client.expectString)(output[_PAS]);
  }
  if (output[_PAED] != null) {
    contents[_PAED] = (0, import_smithy_client.expectString)(output[_PAED]);
  }
  return contents;
}, "de_ClusterParameterStatus");
var de_ClusterParameterStatusList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterParameterStatus(entry, context);
  });
}, "de_ClusterParameterStatusList");
var de_ClusterQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterQuotaExceededFault");
var de_ClusterSecurityGroup = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CSGN] != null) {
    contents[_CSGN] = (0, import_smithy_client.expectString)(output[_CSGN]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output.EC2SecurityGroups === "") {
    contents[_ECSG] = [];
  } else if (output[_ECSG] != null && output[_ECSG][_ECSGe] != null) {
    contents[_ECSG] = de_EC2SecurityGroupList((0, import_smithy_client.getArrayIfSingleItem)(output[_ECSG][_ECSGe]), context);
  }
  if (output.IPRanges === "") {
    contents[_IPR] = [];
  } else if (output[_IPR] != null && output[_IPR][_IPRa] != null) {
    contents[_IPR] = de_IPRangeList((0, import_smithy_client.getArrayIfSingleItem)(output[_IPR][_IPRa]), context);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  return contents;
}, "de_ClusterSecurityGroup");
var de_ClusterSecurityGroupAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSecurityGroupAlreadyExistsFault");
var de_ClusterSecurityGroupMembership = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CSGN] != null) {
    contents[_CSGN] = (0, import_smithy_client.expectString)(output[_CSGN]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  return contents;
}, "de_ClusterSecurityGroupMembership");
var de_ClusterSecurityGroupMembershipList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterSecurityGroupMembership(entry, context);
  });
}, "de_ClusterSecurityGroupMembershipList");
var de_ClusterSecurityGroupMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ClusterSecurityGroups === "") {
    contents[_CSG] = [];
  } else if (output[_CSG] != null && output[_CSG][_CSGl] != null) {
    contents[_CSG] = de_ClusterSecurityGroups((0, import_smithy_client.getArrayIfSingleItem)(output[_CSG][_CSGl]), context);
  }
  return contents;
}, "de_ClusterSecurityGroupMessage");
var de_ClusterSecurityGroupNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSecurityGroupNotFoundFault");
var de_ClusterSecurityGroupQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSecurityGroupQuotaExceededFault");
var de_ClusterSecurityGroups = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterSecurityGroup(entry, context);
  });
}, "de_ClusterSecurityGroups");
var de_ClustersMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.Clusters === "") {
    contents[_Cl] = [];
  } else if (output[_Cl] != null && output[_Cl][_Clu] != null) {
    contents[_Cl] = de_ClusterList((0, import_smithy_client.getArrayIfSingleItem)(output[_Cl][_Clu]), context);
  }
  return contents;
}, "de_ClustersMessage");
var de_ClusterSnapshotAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSnapshotAlreadyExistsFault");
var de_ClusterSnapshotCopyStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DRe] != null) {
    contents[_DRe] = (0, import_smithy_client.expectString)(output[_DRe]);
  }
  if (output[_RP] != null) {
    contents[_RP] = (0, import_smithy_client.strictParseLong)(output[_RP]);
  }
  if (output[_MSRP] != null) {
    contents[_MSRP] = (0, import_smithy_client.strictParseInt32)(output[_MSRP]);
  }
  if (output[_SCGN] != null) {
    contents[_SCGN] = (0, import_smithy_client.expectString)(output[_SCGN]);
  }
  return contents;
}, "de_ClusterSnapshotCopyStatus");
var de_ClusterSnapshotNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSnapshotNotFoundFault");
var de_ClusterSnapshotQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSnapshotQuotaExceededFault");
var de_ClusterSubnetGroup = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CSGNl] != null) {
    contents[_CSGNl] = (0, import_smithy_client.expectString)(output[_CSGNl]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_VIp] != null) {
    contents[_VIp] = (0, import_smithy_client.expectString)(output[_VIp]);
  }
  if (output[_SGS] != null) {
    contents[_SGS] = (0, import_smithy_client.expectString)(output[_SGS]);
  }
  if (output.Subnets === "") {
    contents[_Su] = [];
  } else if (output[_Su] != null && output[_Su][_Sub] != null) {
    contents[_Su] = de_SubnetList((0, import_smithy_client.getArrayIfSingleItem)(output[_Su][_Sub]), context);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  if (output.SupportedClusterIpAddressTypes === "") {
    contents[_SCIAT] = [];
  } else if (output[_SCIAT] != null && output[_SCIAT][_i] != null) {
    contents[_SCIAT] = de_ValueStringList((0, import_smithy_client.getArrayIfSingleItem)(output[_SCIAT][_i]), context);
  }
  return contents;
}, "de_ClusterSubnetGroup");
var de_ClusterSubnetGroupAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSubnetGroupAlreadyExistsFault");
var de_ClusterSubnetGroupMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ClusterSubnetGroups === "") {
    contents[_CSGlu] = [];
  } else if (output[_CSGlu] != null && output[_CSGlu][_CSGlus] != null) {
    contents[_CSGlu] = de_ClusterSubnetGroups((0, import_smithy_client.getArrayIfSingleItem)(output[_CSGlu][_CSGlus]), context);
  }
  return contents;
}, "de_ClusterSubnetGroupMessage");
var de_ClusterSubnetGroupNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSubnetGroupNotFoundFault");
var de_ClusterSubnetGroupQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSubnetGroupQuotaExceededFault");
var de_ClusterSubnetGroups = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterSubnetGroup(entry, context);
  });
}, "de_ClusterSubnetGroups");
var de_ClusterSubnetQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ClusterSubnetQuotaExceededFault");
var de_ClusterVersion = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CV] != null) {
    contents[_CV] = (0, import_smithy_client.expectString)(output[_CV]);
  }
  if (output[_CPGF] != null) {
    contents[_CPGF] = (0, import_smithy_client.expectString)(output[_CPGF]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  return contents;
}, "de_ClusterVersion");
var de_ClusterVersionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterVersion(entry, context);
  });
}, "de_ClusterVersionList");
var de_ClusterVersionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ClusterVersions === "") {
    contents[_CVl] = [];
  } else if (output[_CVl] != null && output[_CVl][_CV] != null) {
    contents[_CVl] = de_ClusterVersionList((0, import_smithy_client.getArrayIfSingleItem)(output[_CVl][_CV]), context);
  }
  return contents;
}, "de_ClusterVersionsMessage");
var de_ConflictPolicyUpdateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ConflictPolicyUpdateFault");
var de_CopyClusterSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Sn] != null) {
    contents[_Sn] = de_Snapshot(output[_Sn], context);
  }
  return contents;
}, "de_CopyClusterSnapshotResult");
var de_CopyToRegionDisabledFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_CopyToRegionDisabledFault");
var de_CreateAuthenticationProfileResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_APN] != null) {
    contents[_APN] = (0, import_smithy_client.expectString)(output[_APN]);
  }
  if (output[_APC] != null) {
    contents[_APC] = (0, import_smithy_client.expectString)(output[_APC]);
  }
  return contents;
}, "de_CreateAuthenticationProfileResult");
var de_CreateClusterParameterGroupResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CPGl] != null) {
    contents[_CPGl] = de_ClusterParameterGroup(output[_CPGl], context);
  }
  return contents;
}, "de_CreateClusterParameterGroupResult");
var de_CreateClusterResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_CreateClusterResult");
var de_CreateClusterSecurityGroupResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CSGl] != null) {
    contents[_CSGl] = de_ClusterSecurityGroup(output[_CSGl], context);
  }
  return contents;
}, "de_CreateClusterSecurityGroupResult");
var de_CreateClusterSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Sn] != null) {
    contents[_Sn] = de_Snapshot(output[_Sn], context);
  }
  return contents;
}, "de_CreateClusterSnapshotResult");
var de_CreateClusterSubnetGroupResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CSGlus] != null) {
    contents[_CSGlus] = de_ClusterSubnetGroup(output[_CSGlus], context);
  }
  return contents;
}, "de_CreateClusterSubnetGroupResult");
var de_CreateCustomDomainAssociationResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CDN] != null) {
    contents[_CDN] = (0, import_smithy_client.expectString)(output[_CDN]);
  }
  if (output[_CDCA] != null) {
    contents[_CDCA] = (0, import_smithy_client.expectString)(output[_CDCA]);
  }
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_CDCET] != null) {
    contents[_CDCET] = (0, import_smithy_client.expectString)(output[_CDCET]);
  }
  return contents;
}, "de_CreateCustomDomainAssociationResult");
var de_CreateEventSubscriptionResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ES] != null) {
    contents[_ES] = de_EventSubscription(output[_ES], context);
  }
  return contents;
}, "de_CreateEventSubscriptionResult");
var de_CreateHsmClientCertificateResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_HCC] != null) {
    contents[_HCC] = de_HsmClientCertificate(output[_HCC], context);
  }
  return contents;
}, "de_CreateHsmClientCertificateResult");
var de_CreateHsmConfigurationResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_HC] != null) {
    contents[_HC] = de_HsmConfiguration(output[_HC], context);
  }
  return contents;
}, "de_CreateHsmConfigurationResult");
var de_CreateRedshiftIdcApplicationResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RIA] != null) {
    contents[_RIA] = de_RedshiftIdcApplication(output[_RIA], context);
  }
  return contents;
}, "de_CreateRedshiftIdcApplicationResult");
var de_CreateSnapshotCopyGrantResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SCG] != null) {
    contents[_SCG] = de_SnapshotCopyGrant(output[_SCG], context);
  }
  return contents;
}, "de_CreateSnapshotCopyGrantResult");
var de_CustomCnameAssociationFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_CustomCnameAssociationFault");
var de_CustomDomainAssociationNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_CustomDomainAssociationNotFoundFault");
var de_CustomDomainAssociationsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.Associations === "") {
    contents[_As] = [];
  } else if (output[_As] != null && output[_As][_Ass] != null) {
    contents[_As] = de_AssociationList((0, import_smithy_client.getArrayIfSingleItem)(output[_As][_Ass]), context);
  }
  return contents;
}, "de_CustomDomainAssociationsMessage");
var de_CustomerStorageMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_TBSIMB] != null) {
    contents[_TBSIMB] = (0, import_smithy_client.strictParseFloat)(output[_TBSIMB]);
  }
  if (output[_TPSIMB] != null) {
    contents[_TPSIMB] = (0, import_smithy_client.strictParseFloat)(output[_TPSIMB]);
  }
  return contents;
}, "de_CustomerStorageMessage");
var de_DataShare = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DSAa] != null) {
    contents[_DSAa] = (0, import_smithy_client.expectString)(output[_DSAa]);
  }
  if (output[_PAr] != null) {
    contents[_PAr] = (0, import_smithy_client.expectString)(output[_PAr]);
  }
  if (output[_APAC] != null) {
    contents[_APAC] = (0, import_smithy_client.parseBoolean)(output[_APAC]);
  }
  if (output.DataShareAssociations === "") {
    contents[_DSAat] = [];
  } else if (output[_DSAat] != null && output[_DSAat][_me] != null) {
    contents[_DSAat] = de_DataShareAssociationList((0, import_smithy_client.getArrayIfSingleItem)(output[_DSAat][_me]), context);
  }
  if (output[_MB] != null) {
    contents[_MB] = (0, import_smithy_client.expectString)(output[_MB]);
  }
  return contents;
}, "de_DataShare");
var de_DataShareAssociation = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CI] != null) {
    contents[_CI] = (0, import_smithy_client.expectString)(output[_CI]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_CRo] != null) {
    contents[_CRo] = (0, import_smithy_client.expectString)(output[_CRo]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_SCD] != null) {
    contents[_SCD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_SCD]));
  }
  if (output[_PAW] != null) {
    contents[_PAW] = (0, import_smithy_client.parseBoolean)(output[_PAW]);
  }
  if (output[_CAW] != null) {
    contents[_CAW] = (0, import_smithy_client.parseBoolean)(output[_CAW]);
  }
  return contents;
}, "de_DataShareAssociation");
var de_DataShareAssociationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_DataShareAssociation(entry, context);
  });
}, "de_DataShareAssociationList");
var de_DataShareList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_DataShare(entry, context);
  });
}, "de_DataShareList");
var de_DataTransferProgress = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_CRIMBPS] != null) {
    contents[_CRIMBPS] = (0, import_smithy_client.strictParseFloat)(output[_CRIMBPS]);
  }
  if (output[_TDIMB] != null) {
    contents[_TDIMB] = (0, import_smithy_client.strictParseLong)(output[_TDIMB]);
  }
  if (output[_DTIMB] != null) {
    contents[_DTIMB] = (0, import_smithy_client.strictParseLong)(output[_DTIMB]);
  }
  if (output[_ETTCIS] != null) {
    contents[_ETTCIS] = (0, import_smithy_client.strictParseLong)(output[_ETTCIS]);
  }
  if (output[_ETIS] != null) {
    contents[_ETIS] = (0, import_smithy_client.strictParseLong)(output[_ETIS]);
  }
  return contents;
}, "de_DataTransferProgress");
var de_DefaultClusterParameters = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PGF] != null) {
    contents[_PGF] = (0, import_smithy_client.expectString)(output[_PGF]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.Parameters === "") {
    contents[_Pa] = [];
  } else if (output[_Pa] != null && output[_Pa][_Par] != null) {
    contents[_Pa] = de_ParametersList((0, import_smithy_client.getArrayIfSingleItem)(output[_Pa][_Par]), context);
  }
  return contents;
}, "de_DefaultClusterParameters");
var de_DeferredMaintenanceWindow = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DMI] != null) {
    contents[_DMI] = (0, import_smithy_client.expectString)(output[_DMI]);
  }
  if (output[_DMST] != null) {
    contents[_DMST] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DMST]));
  }
  if (output[_DMET] != null) {
    contents[_DMET] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DMET]));
  }
  return contents;
}, "de_DeferredMaintenanceWindow");
var de_DeferredMaintenanceWindowsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_DeferredMaintenanceWindow(entry, context);
  });
}, "de_DeferredMaintenanceWindowsList");
var de_DeleteAuthenticationProfileResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_APN] != null) {
    contents[_APN] = (0, import_smithy_client.expectString)(output[_APN]);
  }
  return contents;
}, "de_DeleteAuthenticationProfileResult");
var de_DeleteClusterResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_DeleteClusterResult");
var de_DeleteClusterSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Sn] != null) {
    contents[_Sn] = de_Snapshot(output[_Sn], context);
  }
  return contents;
}, "de_DeleteClusterSnapshotResult");
var de_DependentServiceAccessDeniedFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_DependentServiceAccessDeniedFault");
var de_DependentServiceRequestThrottlingFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_DependentServiceRequestThrottlingFault");
var de_DependentServiceUnavailableFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_DependentServiceUnavailableFault");
var de_DescribeAuthenticationProfilesResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.AuthenticationProfiles === "") {
    contents[_APu] = [];
  } else if (output[_APu] != null && output[_APu][_me] != null) {
    contents[_APu] = de_AuthenticationProfileList((0, import_smithy_client.getArrayIfSingleItem)(output[_APu][_me]), context);
  }
  return contents;
}, "de_DescribeAuthenticationProfilesResult");
var de_DescribeDataSharesForConsumerResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.DataShares === "") {
    contents[_DSa] = [];
  } else if (output[_DSa] != null && output[_DSa][_me] != null) {
    contents[_DSa] = de_DataShareList((0, import_smithy_client.getArrayIfSingleItem)(output[_DSa][_me]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_DescribeDataSharesForConsumerResult");
var de_DescribeDataSharesForProducerResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.DataShares === "") {
    contents[_DSa] = [];
  } else if (output[_DSa] != null && output[_DSa][_me] != null) {
    contents[_DSa] = de_DataShareList((0, import_smithy_client.getArrayIfSingleItem)(output[_DSa][_me]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_DescribeDataSharesForProducerResult");
var de_DescribeDataSharesResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.DataShares === "") {
    contents[_DSa] = [];
  } else if (output[_DSa] != null && output[_DSa][_me] != null) {
    contents[_DSa] = de_DataShareList((0, import_smithy_client.getArrayIfSingleItem)(output[_DSa][_me]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_DescribeDataSharesResult");
var de_DescribeDefaultClusterParametersResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DCPe] != null) {
    contents[_DCPe] = de_DefaultClusterParameters(output[_DCPe], context);
  }
  return contents;
}, "de_DescribeDefaultClusterParametersResult");
var de_DescribePartnersOutputMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.PartnerIntegrationInfoList === "") {
    contents[_PIIL] = [];
  } else if (output[_PIIL] != null && output[_PIIL][_PII] != null) {
    contents[_PIIL] = de_PartnerIntegrationInfoList((0, import_smithy_client.getArrayIfSingleItem)(output[_PIIL][_PII]), context);
  }
  return contents;
}, "de_DescribePartnersOutputMessage");
var de_DescribeRedshiftIdcApplicationsResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.RedshiftIdcApplications === "") {
    contents[_RIAe] = [];
  } else if (output[_RIAe] != null && output[_RIAe][_me] != null) {
    contents[_RIAe] = de_RedshiftIdcApplicationList((0, import_smithy_client.getArrayIfSingleItem)(output[_RIAe][_me]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_DescribeRedshiftIdcApplicationsResult");
var de_DescribeReservedNodeExchangeStatusOutputMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.ReservedNodeExchangeStatusDetails === "") {
    contents[_RNESD] = [];
  } else if (output[_RNESD] != null && output[_RNESD][_RNES] != null) {
    contents[_RNESD] = de_ReservedNodeExchangeStatusList((0, import_smithy_client.getArrayIfSingleItem)(output[_RNESD][_RNES]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_DescribeReservedNodeExchangeStatusOutputMessage");
var de_DescribeSnapshotSchedulesOutputMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.SnapshotSchedules === "") {
    contents[_SS] = [];
  } else if (output[_SS] != null && output[_SS][_SSn] != null) {
    contents[_SS] = de_SnapshotScheduleList((0, import_smithy_client.getArrayIfSingleItem)(output[_SS][_SSn]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_DescribeSnapshotSchedulesOutputMessage");
var de_DisableSnapshotCopyResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_DisableSnapshotCopyResult");
var de_EC2SecurityGroup = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_ECSGN] != null) {
    contents[_ECSGN] = (0, import_smithy_client.expectString)(output[_ECSGN]);
  }
  if (output[_ECSGOI] != null) {
    contents[_ECSGOI] = (0, import_smithy_client.expectString)(output[_ECSGOI]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  return contents;
}, "de_EC2SecurityGroup");
var de_EC2SecurityGroupList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EC2SecurityGroup(entry, context);
  });
}, "de_EC2SecurityGroupList");
var de_ElasticIpStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_EI] != null) {
    contents[_EI] = (0, import_smithy_client.expectString)(output[_EI]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  return contents;
}, "de_ElasticIpStatus");
var de_EligibleTracksToUpdateList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_UpdateTarget(entry, context);
  });
}, "de_EligibleTracksToUpdateList");
var de_EnableSnapshotCopyResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_EnableSnapshotCopyResult");
var de_Endpoint = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ad] != null) {
    contents[_Ad] = (0, import_smithy_client.expectString)(output[_Ad]);
  }
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.strictParseInt32)(output[_P]);
  }
  if (output.VpcEndpoints === "") {
    contents[_VE] = [];
  } else if (output[_VE] != null && output[_VE][_VEp] != null) {
    contents[_VE] = de_VpcEndpointsList((0, import_smithy_client.getArrayIfSingleItem)(output[_VE][_VEp]), context);
  }
  return contents;
}, "de_Endpoint");
var de_EndpointAccess = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_RO] != null) {
    contents[_RO] = (0, import_smithy_client.expectString)(output[_RO]);
  }
  if (output[_SGN] != null) {
    contents[_SGN] = (0, import_smithy_client.expectString)(output[_SGN]);
  }
  if (output[_ESn] != null) {
    contents[_ESn] = (0, import_smithy_client.expectString)(output[_ESn]);
  }
  if (output[_EN] != null) {
    contents[_EN] = (0, import_smithy_client.expectString)(output[_EN]);
  }
  if (output[_ECT] != null) {
    contents[_ECT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_ECT]));
  }
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.strictParseInt32)(output[_P]);
  }
  if (output[_Ad] != null) {
    contents[_Ad] = (0, import_smithy_client.expectString)(output[_Ad]);
  }
  if (output.VpcSecurityGroups === "") {
    contents[_VSG] = [];
  } else if (output[_VSG] != null && output[_VSG][_VSGp] != null) {
    contents[_VSG] = de_VpcSecurityGroupMembershipList((0, import_smithy_client.getArrayIfSingleItem)(output[_VSG][_VSGp]), context);
  }
  if (output[_VEp] != null) {
    contents[_VEp] = de_VpcEndpoint(output[_VEp], context);
  }
  return contents;
}, "de_EndpointAccess");
var de_EndpointAccesses = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EndpointAccess(entry, context);
  });
}, "de_EndpointAccesses");
var de_EndpointAccessList = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.EndpointAccessList === "") {
    contents[_EAL] = [];
  } else if (output[_EAL] != null && output[_EAL][_me] != null) {
    contents[_EAL] = de_EndpointAccesses((0, import_smithy_client.getArrayIfSingleItem)(output[_EAL][_me]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_EndpointAccessList");
var de_EndpointAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EndpointAlreadyExistsFault");
var de_EndpointAuthorization = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Gr] != null) {
    contents[_Gr] = (0, import_smithy_client.expectString)(output[_Gr]);
  }
  if (output[_G] != null) {
    contents[_G] = (0, import_smithy_client.expectString)(output[_G]);
  }
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_ATu] != null) {
    contents[_ATu] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_ATu]));
  }
  if (output[_CS] != null) {
    contents[_CS] = (0, import_smithy_client.expectString)(output[_CS]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_AAVPC] != null) {
    contents[_AAVPC] = (0, import_smithy_client.parseBoolean)(output[_AAVPC]);
  }
  if (output.AllowedVPCs === "") {
    contents[_AVPC] = [];
  } else if (output[_AVPC] != null && output[_AVPC][_VIpc] != null) {
    contents[_AVPC] = de_VpcIdentifierList((0, import_smithy_client.getArrayIfSingleItem)(output[_AVPC][_VIpc]), context);
  }
  if (output[_ECn] != null) {
    contents[_ECn] = (0, import_smithy_client.strictParseInt32)(output[_ECn]);
  }
  return contents;
}, "de_EndpointAuthorization");
var de_EndpointAuthorizationAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EndpointAuthorizationAlreadyExistsFault");
var de_EndpointAuthorizationList = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.EndpointAuthorizationList === "") {
    contents[_EALn] = [];
  } else if (output[_EALn] != null && output[_EALn][_me] != null) {
    contents[_EALn] = de_EndpointAuthorizations((0, import_smithy_client.getArrayIfSingleItem)(output[_EALn][_me]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_EndpointAuthorizationList");
var de_EndpointAuthorizationNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EndpointAuthorizationNotFoundFault");
var de_EndpointAuthorizations = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EndpointAuthorization(entry, context);
  });
}, "de_EndpointAuthorizations");
var de_EndpointAuthorizationsPerClusterLimitExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EndpointAuthorizationsPerClusterLimitExceededFault");
var de_EndpointNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EndpointNotFoundFault");
var de_EndpointsPerAuthorizationLimitExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EndpointsPerAuthorizationLimitExceededFault");
var de_EndpointsPerClusterLimitExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EndpointsPerClusterLimitExceededFault");
var de_Event = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SIou] != null) {
    contents[_SIou] = (0, import_smithy_client.expectString)(output[_SIou]);
  }
  if (output[_ST] != null) {
    contents[_ST] = (0, import_smithy_client.expectString)(output[_ST]);
  }
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  if (output.EventCategories === "") {
    contents[_EC] = [];
  } else if (output[_EC] != null && output[_EC][_ECv] != null) {
    contents[_EC] = de_EventCategoriesList((0, import_smithy_client.getArrayIfSingleItem)(output[_EC][_ECv]), context);
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  if (output[_Da] != null) {
    contents[_Da] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_Da]));
  }
  if (output[_EIv] != null) {
    contents[_EIv] = (0, import_smithy_client.expectString)(output[_EIv]);
  }
  return contents;
}, "de_Event");
var de_EventCategoriesList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_EventCategoriesList");
var de_EventCategoriesMap = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ST] != null) {
    contents[_ST] = (0, import_smithy_client.expectString)(output[_ST]);
  }
  if (output.Events === "") {
    contents[_Ev] = [];
  } else if (output[_Ev] != null && output[_Ev][_EIM] != null) {
    contents[_Ev] = de_EventInfoMapList((0, import_smithy_client.getArrayIfSingleItem)(output[_Ev][_EIM]), context);
  }
  return contents;
}, "de_EventCategoriesMap");
var de_EventCategoriesMapList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EventCategoriesMap(entry, context);
  });
}, "de_EventCategoriesMapList");
var de_EventCategoriesMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.EventCategoriesMapList === "") {
    contents[_ECML] = [];
  } else if (output[_ECML] != null && output[_ECML][_ECM] != null) {
    contents[_ECML] = de_EventCategoriesMapList((0, import_smithy_client.getArrayIfSingleItem)(output[_ECML][_ECM]), context);
  }
  return contents;
}, "de_EventCategoriesMessage");
var de_EventInfoMap = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_EIv] != null) {
    contents[_EIv] = (0, import_smithy_client.expectString)(output[_EIv]);
  }
  if (output.EventCategories === "") {
    contents[_EC] = [];
  } else if (output[_EC] != null && output[_EC][_ECv] != null) {
    contents[_EC] = de_EventCategoriesList((0, import_smithy_client.getArrayIfSingleItem)(output[_EC][_ECv]), context);
  }
  if (output[_ED] != null) {
    contents[_ED] = (0, import_smithy_client.expectString)(output[_ED]);
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  return contents;
}, "de_EventInfoMap");
var de_EventInfoMapList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EventInfoMap(entry, context);
  });
}, "de_EventInfoMapList");
var de_EventList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Event(entry, context);
  });
}, "de_EventList");
var de_EventsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.Events === "") {
    contents[_Ev] = [];
  } else if (output[_Ev] != null && output[_Ev][_Eve] != null) {
    contents[_Ev] = de_EventList((0, import_smithy_client.getArrayIfSingleItem)(output[_Ev][_Eve]), context);
  }
  return contents;
}, "de_EventsMessage");
var de_EventSubscription = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CAI] != null) {
    contents[_CAI] = (0, import_smithy_client.expectString)(output[_CAI]);
  }
  if (output[_CSI] != null) {
    contents[_CSI] = (0, import_smithy_client.expectString)(output[_CSI]);
  }
  if (output[_STA] != null) {
    contents[_STA] = (0, import_smithy_client.expectString)(output[_STA]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_SCT] != null) {
    contents[_SCT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_SCT]));
  }
  if (output[_ST] != null) {
    contents[_ST] = (0, import_smithy_client.expectString)(output[_ST]);
  }
  if (output.SourceIdsList === "") {
    contents[_SILo] = [];
  } else if (output[_SILo] != null && output[_SILo][_SIour] != null) {
    contents[_SILo] = de_SourceIdsList((0, import_smithy_client.getArrayIfSingleItem)(output[_SILo][_SIour]), context);
  }
  if (output.EventCategoriesList === "") {
    contents[_ECL] = [];
  } else if (output[_ECL] != null && output[_ECL][_ECv] != null) {
    contents[_ECL] = de_EventCategoriesList((0, import_smithy_client.getArrayIfSingleItem)(output[_ECL][_ECv]), context);
  }
  if (output[_S] != null) {
    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);
  }
  if (output[_En] != null) {
    contents[_En] = (0, import_smithy_client.parseBoolean)(output[_En]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  return contents;
}, "de_EventSubscription");
var de_EventSubscriptionQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EventSubscriptionQuotaExceededFault");
var de_EventSubscriptionsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EventSubscription(entry, context);
  });
}, "de_EventSubscriptionsList");
var de_EventSubscriptionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.EventSubscriptionsList === "") {
    contents[_ESL] = [];
  } else if (output[_ESL] != null && output[_ESL][_ES] != null) {
    contents[_ESL] = de_EventSubscriptionsList((0, import_smithy_client.getArrayIfSingleItem)(output[_ESL][_ES]), context);
  }
  return contents;
}, "de_EventSubscriptionsMessage");
var de_FailoverPrimaryComputeResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_FailoverPrimaryComputeResult");
var de_GetReservedNodeExchangeConfigurationOptionsOutputMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ReservedNodeConfigurationOptionList === "") {
    contents[_RNCOL] = [];
  } else if (output[_RNCOL] != null && output[_RNCOL][_RNCO] != null) {
    contents[_RNCOL] = de_ReservedNodeConfigurationOptionList((0, import_smithy_client.getArrayIfSingleItem)(output[_RNCOL][_RNCO]), context);
  }
  return contents;
}, "de_GetReservedNodeExchangeConfigurationOptionsOutputMessage");
var de_GetReservedNodeExchangeOfferingsOutputMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ReservedNodeOfferings === "") {
    contents[_RNO] = [];
  } else if (output[_RNO] != null && output[_RNO][_RNOe] != null) {
    contents[_RNO] = de_ReservedNodeOfferingList((0, import_smithy_client.getArrayIfSingleItem)(output[_RNO][_RNOe]), context);
  }
  return contents;
}, "de_GetReservedNodeExchangeOfferingsOutputMessage");
var de_GetResourcePolicyResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RPe] != null) {
    contents[_RPe] = de_ResourcePolicy(output[_RPe], context);
  }
  return contents;
}, "de_GetResourcePolicyResult");
var de_HsmClientCertificate = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_HCCI] != null) {
    contents[_HCCI] = (0, import_smithy_client.expectString)(output[_HCCI]);
  }
  if (output[_HCCPK] != null) {
    contents[_HCCPK] = (0, import_smithy_client.expectString)(output[_HCCPK]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  return contents;
}, "de_HsmClientCertificate");
var de_HsmClientCertificateAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_HsmClientCertificateAlreadyExistsFault");
var de_HsmClientCertificateList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_HsmClientCertificate(entry, context);
  });
}, "de_HsmClientCertificateList");
var de_HsmClientCertificateMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.HsmClientCertificates === "") {
    contents[_HCCs] = [];
  } else if (output[_HCCs] != null && output[_HCCs][_HCC] != null) {
    contents[_HCCs] = de_HsmClientCertificateList((0, import_smithy_client.getArrayIfSingleItem)(output[_HCCs][_HCC]), context);
  }
  return contents;
}, "de_HsmClientCertificateMessage");
var de_HsmClientCertificateNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_HsmClientCertificateNotFoundFault");
var de_HsmClientCertificateQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_HsmClientCertificateQuotaExceededFault");
var de_HsmConfiguration = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_HCI] != null) {
    contents[_HCI] = (0, import_smithy_client.expectString)(output[_HCI]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_HIA] != null) {
    contents[_HIA] = (0, import_smithy_client.expectString)(output[_HIA]);
  }
  if (output[_HPN] != null) {
    contents[_HPN] = (0, import_smithy_client.expectString)(output[_HPN]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  return contents;
}, "de_HsmConfiguration");
var de_HsmConfigurationAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_HsmConfigurationAlreadyExistsFault");
var de_HsmConfigurationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_HsmConfiguration(entry, context);
  });
}, "de_HsmConfigurationList");
var de_HsmConfigurationMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.HsmConfigurations === "") {
    contents[_HCs] = [];
  } else if (output[_HCs] != null && output[_HCs][_HC] != null) {
    contents[_HCs] = de_HsmConfigurationList((0, import_smithy_client.getArrayIfSingleItem)(output[_HCs][_HC]), context);
  }
  return contents;
}, "de_HsmConfigurationMessage");
var de_HsmConfigurationNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_HsmConfigurationNotFoundFault");
var de_HsmConfigurationQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_HsmConfigurationQuotaExceededFault");
var de_HsmStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_HCCI] != null) {
    contents[_HCCI] = (0, import_smithy_client.expectString)(output[_HCCI]);
  }
  if (output[_HCI] != null) {
    contents[_HCI] = (0, import_smithy_client.expectString)(output[_HCI]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  return contents;
}, "de_HsmStatus");
var de_ImportTablesCompleted = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_ImportTablesCompleted");
var de_ImportTablesInProgress = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_ImportTablesInProgress");
var de_ImportTablesNotStarted = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_ImportTablesNotStarted");
var de_InboundIntegration = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_IA] != null) {
    contents[_IA] = (0, import_smithy_client.expectString)(output[_IA]);
  }
  if (output[_SAo] != null) {
    contents[_SAo] = (0, import_smithy_client.expectString)(output[_SAo]);
  }
  if (output[_TAa] != null) {
    contents[_TAa] = (0, import_smithy_client.expectString)(output[_TAa]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output.Errors === "") {
    contents[_Er] = [];
  } else if (output[_Er] != null && output[_Er][_IE] != null) {
    contents[_Er] = de_IntegrationErrorList((0, import_smithy_client.getArrayIfSingleItem)(output[_Er][_IE]), context);
  }
  if (output[_CTr] != null) {
    contents[_CTr] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CTr]));
  }
  return contents;
}, "de_InboundIntegration");
var de_InboundIntegrationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_InboundIntegration(entry, context);
  });
}, "de_InboundIntegrationList");
var de_InboundIntegrationsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.InboundIntegrations === "") {
    contents[_II] = [];
  } else if (output[_II] != null && output[_II][_IIn] != null) {
    contents[_II] = de_InboundIntegrationList((0, import_smithy_client.getArrayIfSingleItem)(output[_II][_IIn]), context);
  }
  return contents;
}, "de_InboundIntegrationsMessage");
var de_IncompatibleOrderableOptions = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_IncompatibleOrderableOptions");
var de_InProgressTableRestoreQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InProgressTableRestoreQuotaExceededFault");
var de_InsufficientClusterCapacityFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InsufficientClusterCapacityFault");
var de_InsufficientS3BucketPolicyFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InsufficientS3BucketPolicyFault");
var de_IntegrationError = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ECr] != null) {
    contents[_ECr] = (0, import_smithy_client.expectString)(output[_ECr]);
  }
  if (output[_EM] != null) {
    contents[_EM] = (0, import_smithy_client.expectString)(output[_EM]);
  }
  return contents;
}, "de_IntegrationError");
var de_IntegrationErrorList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_IntegrationError(entry, context);
  });
}, "de_IntegrationErrorList");
var de_IntegrationNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_IntegrationNotFoundFault");
var de_InvalidAuthenticationProfileRequestFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidAuthenticationProfileRequestFault");
var de_InvalidAuthorizationStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidAuthorizationStateFault");
var de_InvalidClusterParameterGroupStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidClusterParameterGroupStateFault");
var de_InvalidClusterSecurityGroupStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidClusterSecurityGroupStateFault");
var de_InvalidClusterSnapshotScheduleStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidClusterSnapshotScheduleStateFault");
var de_InvalidClusterSnapshotStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidClusterSnapshotStateFault");
var de_InvalidClusterStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidClusterStateFault");
var de_InvalidClusterSubnetGroupStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidClusterSubnetGroupStateFault");
var de_InvalidClusterSubnetStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidClusterSubnetStateFault");
var de_InvalidClusterTrackFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidClusterTrackFault");
var de_InvalidDataShareFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidDataShareFault");
var de_InvalidElasticIpFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidElasticIpFault");
var de_InvalidEndpointStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidEndpointStateFault");
var de_InvalidHsmClientCertificateStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidHsmClientCertificateStateFault");
var de_InvalidHsmConfigurationStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidHsmConfigurationStateFault");
var de_InvalidNamespaceFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidNamespaceFault");
var de_InvalidPolicyFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidPolicyFault");
var de_InvalidReservedNodeStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidReservedNodeStateFault");
var de_InvalidRestoreFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidRestoreFault");
var de_InvalidRetentionPeriodFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidRetentionPeriodFault");
var de_InvalidS3BucketNameFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidS3BucketNameFault");
var de_InvalidS3KeyPrefixFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidS3KeyPrefixFault");
var de_InvalidScheduledActionFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidScheduledActionFault");
var de_InvalidScheduleFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidScheduleFault");
var de_InvalidSnapshotCopyGrantStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidSnapshotCopyGrantStateFault");
var de_InvalidSubnet = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidSubnet");
var de_InvalidSubscriptionStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidSubscriptionStateFault");
var de_InvalidTableRestoreArgumentFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidTableRestoreArgumentFault");
var de_InvalidTagFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidTagFault");
var de_InvalidUsageLimitFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidUsageLimitFault");
var de_InvalidVPCNetworkStateFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidVPCNetworkStateFault");
var de_IPRange = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_CIDRIP] != null) {
    contents[_CIDRIP] = (0, import_smithy_client.expectString)(output[_CIDRIP]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  return contents;
}, "de_IPRange");
var de_IPRangeList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_IPRange(entry, context);
  });
}, "de_IPRangeList");
var de_Ipv6CidrBlockNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_Ipv6CidrBlockNotFoundFault");
var de_LakeFormationQuery = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Au] != null) {
    contents[_Au] = (0, import_smithy_client.expectString)(output[_Au]);
  }
  return contents;
}, "de_LakeFormationQuery");
var de_LakeFormationScopeUnion = /* @__PURE__ */ __name((output, context) => {
  if (output[_LFQ] != null) {
    return {
      LakeFormationQuery: de_LakeFormationQuery(output[_LFQ], context)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_LakeFormationScopeUnion");
var de_LakeFormationServiceIntegrations = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_LakeFormationScopeUnion((0, import_smithy_client.expectUnion)(entry), context);
  });
}, "de_LakeFormationServiceIntegrations");
var de_LimitExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_LimitExceededFault");
var de_ListRecommendationsResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Recommendations === "") {
    contents[_Re] = [];
  } else if (output[_Re] != null && output[_Re][_Rec] != null) {
    contents[_Re] = de_RecommendationList((0, import_smithy_client.getArrayIfSingleItem)(output[_Re][_Rec]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListRecommendationsResult");
var de_LoggingStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_LEo] != null) {
    contents[_LEo] = (0, import_smithy_client.parseBoolean)(output[_LEo]);
  }
  if (output[_BN] != null) {
    contents[_BN] = (0, import_smithy_client.expectString)(output[_BN]);
  }
  if (output[_SKP] != null) {
    contents[_SKP] = (0, import_smithy_client.expectString)(output[_SKP]);
  }
  if (output[_LSDT] != null) {
    contents[_LSDT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LSDT]));
  }
  if (output[_LFT] != null) {
    contents[_LFT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LFT]));
  }
  if (output[_LFM] != null) {
    contents[_LFM] = (0, import_smithy_client.expectString)(output[_LFM]);
  }
  if (output[_LDT] != null) {
    contents[_LDT] = (0, import_smithy_client.expectString)(output[_LDT]);
  }
  if (output.LogExports === "") {
    contents[_LE] = [];
  } else if (output[_LE] != null && output[_LE][_me] != null) {
    contents[_LE] = de_LogTypeList((0, import_smithy_client.getArrayIfSingleItem)(output[_LE][_me]), context);
  }
  return contents;
}, "de_LoggingStatus");
var de_LogTypeList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_LogTypeList");
var de_MaintenanceTrack = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_MTN] != null) {
    contents[_MTN] = (0, import_smithy_client.expectString)(output[_MTN]);
  }
  if (output[_DV] != null) {
    contents[_DV] = (0, import_smithy_client.expectString)(output[_DV]);
  }
  if (output.UpdateTargets === "") {
    contents[_UT] = [];
  } else if (output[_UT] != null && output[_UT][_UTp] != null) {
    contents[_UT] = de_EligibleTracksToUpdateList((0, import_smithy_client.getArrayIfSingleItem)(output[_UT][_UTp]), context);
  }
  return contents;
}, "de_MaintenanceTrack");
var de_ModifyAquaOutputMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ACq] != null) {
    contents[_ACq] = de_AquaConfiguration(output[_ACq], context);
  }
  return contents;
}, "de_ModifyAquaOutputMessage");
var de_ModifyAuthenticationProfileResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_APN] != null) {
    contents[_APN] = (0, import_smithy_client.expectString)(output[_APN]);
  }
  if (output[_APC] != null) {
    contents[_APC] = (0, import_smithy_client.expectString)(output[_APC]);
  }
  return contents;
}, "de_ModifyAuthenticationProfileResult");
var de_ModifyClusterDbRevisionResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_ModifyClusterDbRevisionResult");
var de_ModifyClusterIamRolesResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_ModifyClusterIamRolesResult");
var de_ModifyClusterMaintenanceResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_ModifyClusterMaintenanceResult");
var de_ModifyClusterResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_ModifyClusterResult");
var de_ModifyClusterSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Sn] != null) {
    contents[_Sn] = de_Snapshot(output[_Sn], context);
  }
  return contents;
}, "de_ModifyClusterSnapshotResult");
var de_ModifyClusterSubnetGroupResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CSGlus] != null) {
    contents[_CSGlus] = de_ClusterSubnetGroup(output[_CSGlus], context);
  }
  return contents;
}, "de_ModifyClusterSubnetGroupResult");
var de_ModifyCustomDomainAssociationResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CDN] != null) {
    contents[_CDN] = (0, import_smithy_client.expectString)(output[_CDN]);
  }
  if (output[_CDCA] != null) {
    contents[_CDCA] = (0, import_smithy_client.expectString)(output[_CDCA]);
  }
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_CDCET] != null) {
    contents[_CDCET] = (0, import_smithy_client.expectString)(output[_CDCET]);
  }
  return contents;
}, "de_ModifyCustomDomainAssociationResult");
var de_ModifyEventSubscriptionResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ES] != null) {
    contents[_ES] = de_EventSubscription(output[_ES], context);
  }
  return contents;
}, "de_ModifyEventSubscriptionResult");
var de_ModifyRedshiftIdcApplicationResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RIA] != null) {
    contents[_RIA] = de_RedshiftIdcApplication(output[_RIA], context);
  }
  return contents;
}, "de_ModifyRedshiftIdcApplicationResult");
var de_ModifySnapshotCopyRetentionPeriodResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_ModifySnapshotCopyRetentionPeriodResult");
var de_NetworkInterface = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_NII] != null) {
    contents[_NII] = (0, import_smithy_client.expectString)(output[_NII]);
  }
  if (output[_SIub] != null) {
    contents[_SIub] = (0, import_smithy_client.expectString)(output[_SIub]);
  }
  if (output[_PIA] != null) {
    contents[_PIA] = (0, import_smithy_client.expectString)(output[_PIA]);
  }
  if (output[_AZ] != null) {
    contents[_AZ] = (0, import_smithy_client.expectString)(output[_AZ]);
  }
  if (output[_IAp] != null) {
    contents[_IAp] = (0, import_smithy_client.expectString)(output[_IAp]);
  }
  return contents;
}, "de_NetworkInterface");
var de_NetworkInterfaceList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_NetworkInterface(entry, context);
  });
}, "de_NetworkInterfaceList");
var de_NodeConfigurationOption = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  if (output[_NON] != null) {
    contents[_NON] = (0, import_smithy_client.strictParseInt32)(output[_NON]);
  }
  if (output[_EDUP] != null) {
    contents[_EDUP] = (0, import_smithy_client.strictParseFloat)(output[_EDUP]);
  }
  if (output[_Mo] != null) {
    contents[_Mo] = (0, import_smithy_client.expectString)(output[_Mo]);
  }
  return contents;
}, "de_NodeConfigurationOption");
var de_NodeConfigurationOptionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_NodeConfigurationOption(entry, context);
  });
}, "de_NodeConfigurationOptionList");
var de_NodeConfigurationOptionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.NodeConfigurationOptionList === "") {
    contents[_NCOL] = [];
  } else if (output[_NCOL] != null && output[_NCOL][_NCO] != null) {
    contents[_NCOL] = de_NodeConfigurationOptionList((0, import_smithy_client.getArrayIfSingleItem)(output[_NCOL][_NCO]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_NodeConfigurationOptionsMessage");
var de_NumberOfNodesPerClusterLimitExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_NumberOfNodesPerClusterLimitExceededFault");
var de_NumberOfNodesQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_NumberOfNodesQuotaExceededFault");
var de_OrderableClusterOption = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CV] != null) {
    contents[_CV] = (0, import_smithy_client.expectString)(output[_CV]);
  }
  if (output[_CTl] != null) {
    contents[_CTl] = (0, import_smithy_client.expectString)(output[_CTl]);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  if (output.AvailabilityZones === "") {
    contents[_AZv] = [];
  } else if (output[_AZv] != null && output[_AZv][_AZ] != null) {
    contents[_AZv] = de_AvailabilityZoneList((0, import_smithy_client.getArrayIfSingleItem)(output[_AZv][_AZ]), context);
  }
  return contents;
}, "de_OrderableClusterOption");
var de_OrderableClusterOptionsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_OrderableClusterOption(entry, context);
  });
}, "de_OrderableClusterOptionsList");
var de_OrderableClusterOptionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.OrderableClusterOptions === "") {
    contents[_OCO] = [];
  } else if (output[_OCO] != null && output[_OCO][_OCOr] != null) {
    contents[_OCO] = de_OrderableClusterOptionsList((0, import_smithy_client.getArrayIfSingleItem)(output[_OCO][_OCOr]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_OrderableClusterOptionsMessage");
var de_Parameter = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PNa] != null) {
    contents[_PNa] = (0, import_smithy_client.expectString)(output[_PNa]);
  }
  if (output[_PV] != null) {
    contents[_PV] = (0, import_smithy_client.expectString)(output[_PV]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_So] != null) {
    contents[_So] = (0, import_smithy_client.expectString)(output[_So]);
  }
  if (output[_DTa] != null) {
    contents[_DTa] = (0, import_smithy_client.expectString)(output[_DTa]);
  }
  if (output[_AV] != null) {
    contents[_AV] = (0, import_smithy_client.expectString)(output[_AV]);
  }
  if (output[_ATp] != null) {
    contents[_ATp] = (0, import_smithy_client.expectString)(output[_ATp]);
  }
  if (output[_IM] != null) {
    contents[_IM] = (0, import_smithy_client.parseBoolean)(output[_IM]);
  }
  if (output[_MEV] != null) {
    contents[_MEV] = (0, import_smithy_client.expectString)(output[_MEV]);
  }
  return contents;
}, "de_Parameter");
var de_ParameterGroupList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ClusterParameterGroup(entry, context);
  });
}, "de_ParameterGroupList");
var de_ParametersList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Parameter(entry, context);
  });
}, "de_ParametersList");
var de_PartnerIntegrationInfo = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DN] != null) {
    contents[_DN] = (0, import_smithy_client.expectString)(output[_DN]);
  }
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_SM] != null) {
    contents[_SM] = (0, import_smithy_client.expectString)(output[_SM]);
  }
  if (output[_CAr] != null) {
    contents[_CAr] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CAr]));
  }
  if (output[_UA] != null) {
    contents[_UA] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UA]));
  }
  return contents;
}, "de_PartnerIntegrationInfo");
var de_PartnerIntegrationInfoList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PartnerIntegrationInfo(entry, context);
  });
}, "de_PartnerIntegrationInfoList");
var de_PartnerIntegrationOutputMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DN] != null) {
    contents[_DN] = (0, import_smithy_client.expectString)(output[_DN]);
  }
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  return contents;
}, "de_PartnerIntegrationOutputMessage");
var de_PartnerNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_PartnerNotFoundFault");
var de_PauseClusterMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  return contents;
}, "de_PauseClusterMessage");
var de_PauseClusterResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_PauseClusterResult");
var de_PendingActionsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_PendingActionsList");
var de_PendingModifiedValues = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_MUP] != null) {
    contents[_MUP] = (0, import_smithy_client.expectString)(output[_MUP]);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  if (output[_NON] != null) {
    contents[_NON] = (0, import_smithy_client.strictParseInt32)(output[_NON]);
  }
  if (output[_CTl] != null) {
    contents[_CTl] = (0, import_smithy_client.expectString)(output[_CTl]);
  }
  if (output[_CV] != null) {
    contents[_CV] = (0, import_smithy_client.expectString)(output[_CV]);
  }
  if (output[_ASRP] != null) {
    contents[_ASRP] = (0, import_smithy_client.strictParseInt32)(output[_ASRP]);
  }
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.parseBoolean)(output[_PA]);
  }
  if (output[_EVR] != null) {
    contents[_EVR] = (0, import_smithy_client.parseBoolean)(output[_EVR]);
  }
  if (output[_MTN] != null) {
    contents[_MTN] = (0, import_smithy_client.expectString)(output[_MTN]);
  }
  if (output[_ETn] != null) {
    contents[_ETn] = (0, import_smithy_client.expectString)(output[_ETn]);
  }
  return contents;
}, "de_PendingModifiedValues");
var de_PurchaseReservedNodeOfferingResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RNe] != null) {
    contents[_RNe] = de_ReservedNode(output[_RNe], context);
  }
  return contents;
}, "de_PurchaseReservedNodeOfferingResult");
var de_PutResourcePolicyResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RPe] != null) {
    contents[_RPe] = de_ResourcePolicy(output[_RPe], context);
  }
  return contents;
}, "de_PutResourcePolicyResult");
var de_RebootClusterResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_RebootClusterResult");
var de_Recommendation = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Id] != null) {
    contents[_Id] = (0, import_smithy_client.expectString)(output[_Id]);
  }
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_NA] != null) {
    contents[_NA] = (0, import_smithy_client.expectString)(output[_NA]);
  }
  if (output[_CAr] != null) {
    contents[_CAr] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CAr]));
  }
  if (output[_RTec] != null) {
    contents[_RTec] = (0, import_smithy_client.expectString)(output[_RTec]);
  }
  if (output[_Ti] != null) {
    contents[_Ti] = (0, import_smithy_client.expectString)(output[_Ti]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_Ob] != null) {
    contents[_Ob] = (0, import_smithy_client.expectString)(output[_Ob]);
  }
  if (output[_IRm] != null) {
    contents[_IRm] = (0, import_smithy_client.expectString)(output[_IRm]);
  }
  if (output[_RTeco] != null) {
    contents[_RTeco] = (0, import_smithy_client.expectString)(output[_RTeco]);
  }
  if (output.RecommendedActions === "") {
    contents[_RAe] = [];
  } else if (output[_RAe] != null && output[_RAe][_RAec] != null) {
    contents[_RAe] = de_RecommendedActionList((0, import_smithy_client.getArrayIfSingleItem)(output[_RAe][_RAec]), context);
  }
  if (output.ReferenceLinks === "") {
    contents[_RL] = [];
  } else if (output[_RL] != null && output[_RL][_RLe] != null) {
    contents[_RL] = de_ReferenceLinkList((0, import_smithy_client.getArrayIfSingleItem)(output[_RL][_RLe]), context);
  }
  return contents;
}, "de_Recommendation");
var de_RecommendationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Recommendation(entry, context);
  });
}, "de_RecommendationList");
var de_RecommendedAction = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Te] != null) {
    contents[_Te] = (0, import_smithy_client.expectString)(output[_Te]);
  }
  if (output[_Dat] != null) {
    contents[_Dat] = (0, import_smithy_client.expectString)(output[_Dat]);
  }
  if (output[_Co] != null) {
    contents[_Co] = (0, import_smithy_client.expectString)(output[_Co]);
  }
  if (output[_Ty] != null) {
    contents[_Ty] = (0, import_smithy_client.expectString)(output[_Ty]);
  }
  return contents;
}, "de_RecommendedAction");
var de_RecommendedActionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_RecommendedAction(entry, context);
  });
}, "de_RecommendedActionList");
var de_RecurringCharge = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RCA] != null) {
    contents[_RCA] = (0, import_smithy_client.strictParseFloat)(output[_RCA]);
  }
  if (output[_RCF] != null) {
    contents[_RCF] = (0, import_smithy_client.expectString)(output[_RCF]);
  }
  return contents;
}, "de_RecurringCharge");
var de_RecurringChargeList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_RecurringCharge(entry, context);
  });
}, "de_RecurringChargeList");
var de_RedshiftIdcApplication = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_IIA] != null) {
    contents[_IIA] = (0, import_smithy_client.expectString)(output[_IIA]);
  }
  if (output[_RIAN] != null) {
    contents[_RIAN] = (0, import_smithy_client.expectString)(output[_RIAN]);
  }
  if (output[_RIAA] != null) {
    contents[_RIAA] = (0, import_smithy_client.expectString)(output[_RIAA]);
  }
  if (output[_IN] != null) {
    contents[_IN] = (0, import_smithy_client.expectString)(output[_IN]);
  }
  if (output[_IDN] != null) {
    contents[_IDN] = (0, import_smithy_client.expectString)(output[_IDN]);
  }
  if (output[_IRA] != null) {
    contents[_IRA] = (0, import_smithy_client.expectString)(output[_IRA]);
  }
  if (output[_IMAA] != null) {
    contents[_IMAA] = (0, import_smithy_client.expectString)(output[_IMAA]);
  }
  if (output[_IOS] != null) {
    contents[_IOS] = (0, import_smithy_client.expectString)(output[_IOS]);
  }
  if (output.AuthorizedTokenIssuerList === "") {
    contents[_ATIL] = [];
  } else if (output[_ATIL] != null && output[_ATIL][_me] != null) {
    contents[_ATIL] = de_AuthorizedTokenIssuerList((0, import_smithy_client.getArrayIfSingleItem)(output[_ATIL][_me]), context);
  }
  if (output.ServiceIntegrations === "") {
    contents[_SIe] = [];
  } else if (output[_SIe] != null && output[_SIe][_me] != null) {
    contents[_SIe] = de_ServiceIntegrationList((0, import_smithy_client.getArrayIfSingleItem)(output[_SIe][_me]), context);
  }
  return contents;
}, "de_RedshiftIdcApplication");
var de_RedshiftIdcApplicationAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_RedshiftIdcApplicationAlreadyExistsFault");
var de_RedshiftIdcApplicationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_RedshiftIdcApplication(entry, context);
  });
}, "de_RedshiftIdcApplicationList");
var de_RedshiftIdcApplicationNotExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_RedshiftIdcApplicationNotExistsFault");
var de_RedshiftIdcApplicationQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_RedshiftIdcApplicationQuotaExceededFault");
var de_ReferenceLink = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Te] != null) {
    contents[_Te] = (0, import_smithy_client.expectString)(output[_Te]);
  }
  if (output[_L] != null) {
    contents[_L] = (0, import_smithy_client.expectString)(output[_L]);
  }
  return contents;
}, "de_ReferenceLink");
var de_ReferenceLinkList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ReferenceLink(entry, context);
  });
}, "de_ReferenceLinkList");
var de_ReservedNode = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RNI] != null) {
    contents[_RNI] = (0, import_smithy_client.expectString)(output[_RNI]);
  }
  if (output[_RNOI] != null) {
    contents[_RNOI] = (0, import_smithy_client.expectString)(output[_RNOI]);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  if (output[_STt] != null) {
    contents[_STt] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_STt]));
  }
  if (output[_Du] != null) {
    contents[_Du] = (0, import_smithy_client.strictParseInt32)(output[_Du]);
  }
  if (output[_FP] != null) {
    contents[_FP] = (0, import_smithy_client.strictParseFloat)(output[_FP]);
  }
  if (output[_UP] != null) {
    contents[_UP] = (0, import_smithy_client.strictParseFloat)(output[_UP]);
  }
  if (output[_CCu] != null) {
    contents[_CCu] = (0, import_smithy_client.expectString)(output[_CCu]);
  }
  if (output[_NC] != null) {
    contents[_NC] = (0, import_smithy_client.strictParseInt32)(output[_NC]);
  }
  if (output[_Sta] != null) {
    contents[_Sta] = (0, import_smithy_client.expectString)(output[_Sta]);
  }
  if (output[_OT] != null) {
    contents[_OT] = (0, import_smithy_client.expectString)(output[_OT]);
  }
  if (output.RecurringCharges === "") {
    contents[_RCec] = [];
  } else if (output[_RCec] != null && output[_RCec][_RCecu] != null) {
    contents[_RCec] = de_RecurringChargeList((0, import_smithy_client.getArrayIfSingleItem)(output[_RCec][_RCecu]), context);
  }
  if (output[_RNOT] != null) {
    contents[_RNOT] = (0, import_smithy_client.expectString)(output[_RNOT]);
  }
  return contents;
}, "de_ReservedNode");
var de_ReservedNodeAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ReservedNodeAlreadyExistsFault");
var de_ReservedNodeAlreadyMigratedFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ReservedNodeAlreadyMigratedFault");
var de_ReservedNodeConfigurationOption = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SRN] != null) {
    contents[_SRN] = de_ReservedNode(output[_SRN], context);
  }
  if (output[_TRNC] != null) {
    contents[_TRNC] = (0, import_smithy_client.strictParseInt32)(output[_TRNC]);
  }
  if (output[_TRNO] != null) {
    contents[_TRNO] = de_ReservedNodeOffering(output[_TRNO], context);
  }
  return contents;
}, "de_ReservedNodeConfigurationOption");
var de_ReservedNodeConfigurationOptionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedNodeConfigurationOption(entry, context);
  });
}, "de_ReservedNodeConfigurationOptionList");
var de_ReservedNodeExchangeNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ReservedNodeExchangeNotFoundFault");
var de_ReservedNodeExchangeStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RNERI] != null) {
    contents[_RNERI] = (0, import_smithy_client.expectString)(output[_RNERI]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_RTeq] != null) {
    contents[_RTeq] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_RTeq]));
  }
  if (output[_SRNI] != null) {
    contents[_SRNI] = (0, import_smithy_client.expectString)(output[_SRNI]);
  }
  if (output[_SRNT] != null) {
    contents[_SRNT] = (0, import_smithy_client.expectString)(output[_SRNT]);
  }
  if (output[_SRNC] != null) {
    contents[_SRNC] = (0, import_smithy_client.strictParseInt32)(output[_SRNC]);
  }
  if (output[_TRNOI] != null) {
    contents[_TRNOI] = (0, import_smithy_client.expectString)(output[_TRNOI]);
  }
  if (output[_TRNT] != null) {
    contents[_TRNT] = (0, import_smithy_client.expectString)(output[_TRNT]);
  }
  if (output[_TRNC] != null) {
    contents[_TRNC] = (0, import_smithy_client.strictParseInt32)(output[_TRNC]);
  }
  return contents;
}, "de_ReservedNodeExchangeStatus");
var de_ReservedNodeExchangeStatusList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedNodeExchangeStatus(entry, context);
  });
}, "de_ReservedNodeExchangeStatusList");
var de_ReservedNodeList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedNode(entry, context);
  });
}, "de_ReservedNodeList");
var de_ReservedNodeNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ReservedNodeNotFoundFault");
var de_ReservedNodeOffering = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RNOI] != null) {
    contents[_RNOI] = (0, import_smithy_client.expectString)(output[_RNOI]);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  if (output[_Du] != null) {
    contents[_Du] = (0, import_smithy_client.strictParseInt32)(output[_Du]);
  }
  if (output[_FP] != null) {
    contents[_FP] = (0, import_smithy_client.strictParseFloat)(output[_FP]);
  }
  if (output[_UP] != null) {
    contents[_UP] = (0, import_smithy_client.strictParseFloat)(output[_UP]);
  }
  if (output[_CCu] != null) {
    contents[_CCu] = (0, import_smithy_client.expectString)(output[_CCu]);
  }
  if (output[_OT] != null) {
    contents[_OT] = (0, import_smithy_client.expectString)(output[_OT]);
  }
  if (output.RecurringCharges === "") {
    contents[_RCec] = [];
  } else if (output[_RCec] != null && output[_RCec][_RCecu] != null) {
    contents[_RCec] = de_RecurringChargeList((0, import_smithy_client.getArrayIfSingleItem)(output[_RCec][_RCecu]), context);
  }
  if (output[_RNOT] != null) {
    contents[_RNOT] = (0, import_smithy_client.expectString)(output[_RNOT]);
  }
  return contents;
}, "de_ReservedNodeOffering");
var de_ReservedNodeOfferingList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedNodeOffering(entry, context);
  });
}, "de_ReservedNodeOfferingList");
var de_ReservedNodeOfferingNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ReservedNodeOfferingNotFoundFault");
var de_ReservedNodeOfferingsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ReservedNodeOfferings === "") {
    contents[_RNO] = [];
  } else if (output[_RNO] != null && output[_RNO][_RNOe] != null) {
    contents[_RNO] = de_ReservedNodeOfferingList((0, import_smithy_client.getArrayIfSingleItem)(output[_RNO][_RNOe]), context);
  }
  return contents;
}, "de_ReservedNodeOfferingsMessage");
var de_ReservedNodeQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ReservedNodeQuotaExceededFault");
var de_ReservedNodesMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ReservedNodes === "") {
    contents[_RNes] = [];
  } else if (output[_RNes] != null && output[_RNes][_RNe] != null) {
    contents[_RNes] = de_ReservedNodeList((0, import_smithy_client.getArrayIfSingleItem)(output[_RNes][_RNe]), context);
  }
  return contents;
}, "de_ReservedNodesMessage");
var de_ResizeClusterMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_CTl] != null) {
    contents[_CTl] = (0, import_smithy_client.expectString)(output[_CTl]);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  if (output[_NON] != null) {
    contents[_NON] = (0, import_smithy_client.strictParseInt32)(output[_NON]);
  }
  if (output[_C] != null) {
    contents[_C] = (0, import_smithy_client.parseBoolean)(output[_C]);
  }
  if (output[_RNI] != null) {
    contents[_RNI] = (0, import_smithy_client.expectString)(output[_RNI]);
  }
  if (output[_TRNOI] != null) {
    contents[_TRNOI] = (0, import_smithy_client.expectString)(output[_TRNOI]);
  }
  return contents;
}, "de_ResizeClusterMessage");
var de_ResizeClusterResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_ResizeClusterResult");
var de_ResizeInfo = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RTes] != null) {
    contents[_RTes] = (0, import_smithy_client.expectString)(output[_RTes]);
  }
  if (output[_ACR] != null) {
    contents[_ACR] = (0, import_smithy_client.parseBoolean)(output[_ACR]);
  }
  return contents;
}, "de_ResizeInfo");
var de_ResizeNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ResizeNotFoundFault");
var de_ResizeProgressMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_TNT] != null) {
    contents[_TNT] = (0, import_smithy_client.expectString)(output[_TNT]);
  }
  if (output[_TNON] != null) {
    contents[_TNON] = (0, import_smithy_client.strictParseInt32)(output[_TNON]);
  }
  if (output[_TCT] != null) {
    contents[_TCT] = (0, import_smithy_client.expectString)(output[_TCT]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output.ImportTablesCompleted === "") {
    contents[_ITC] = [];
  } else if (output[_ITC] != null && output[_ITC][_me] != null) {
    contents[_ITC] = de_ImportTablesCompleted((0, import_smithy_client.getArrayIfSingleItem)(output[_ITC][_me]), context);
  }
  if (output.ImportTablesInProgress === "") {
    contents[_ITIP] = [];
  } else if (output[_ITIP] != null && output[_ITIP][_me] != null) {
    contents[_ITIP] = de_ImportTablesInProgress((0, import_smithy_client.getArrayIfSingleItem)(output[_ITIP][_me]), context);
  }
  if (output.ImportTablesNotStarted === "") {
    contents[_ITNS] = [];
  } else if (output[_ITNS] != null && output[_ITNS][_me] != null) {
    contents[_ITNS] = de_ImportTablesNotStarted((0, import_smithy_client.getArrayIfSingleItem)(output[_ITNS][_me]), context);
  }
  if (output[_ARRIMBPS] != null) {
    contents[_ARRIMBPS] = (0, import_smithy_client.strictParseFloat)(output[_ARRIMBPS]);
  }
  if (output[_TRDIMB] != null) {
    contents[_TRDIMB] = (0, import_smithy_client.strictParseLong)(output[_TRDIMB]);
  }
  if (output[_PIMB] != null) {
    contents[_PIMB] = (0, import_smithy_client.strictParseLong)(output[_PIMB]);
  }
  if (output[_ETIS] != null) {
    contents[_ETIS] = (0, import_smithy_client.strictParseLong)(output[_ETIS]);
  }
  if (output[_ETTCIS] != null) {
    contents[_ETTCIS] = (0, import_smithy_client.strictParseLong)(output[_ETTCIS]);
  }
  if (output[_RTes] != null) {
    contents[_RTes] = (0, import_smithy_client.expectString)(output[_RTes]);
  }
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  if (output[_TET] != null) {
    contents[_TET] = (0, import_smithy_client.expectString)(output[_TET]);
  }
  if (output[_DTPP] != null) {
    contents[_DTPP] = (0, import_smithy_client.strictParseFloat)(output[_DTPP]);
  }
  return contents;
}, "de_ResizeProgressMessage");
var de_ResourceNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ResourceNotFoundFault");
var de_ResourcePolicy = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RA] != null) {
    contents[_RA] = (0, import_smithy_client.expectString)(output[_RA]);
  }
  if (output[_Po] != null) {
    contents[_Po] = (0, import_smithy_client.expectString)(output[_Po]);
  }
  return contents;
}, "de_ResourcePolicy");
var de_RestorableNodeTypeList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_RestorableNodeTypeList");
var de_RestoreFromClusterSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_RestoreFromClusterSnapshotResult");
var de_RestoreStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_CRRIMBPS] != null) {
    contents[_CRRIMBPS] = (0, import_smithy_client.strictParseFloat)(output[_CRRIMBPS]);
  }
  if (output[_SSIMB] != null) {
    contents[_SSIMB] = (0, import_smithy_client.strictParseLong)(output[_SSIMB]);
  }
  if (output[_PIMB] != null) {
    contents[_PIMB] = (0, import_smithy_client.strictParseLong)(output[_PIMB]);
  }
  if (output[_ETIS] != null) {
    contents[_ETIS] = (0, import_smithy_client.strictParseLong)(output[_ETIS]);
  }
  if (output[_ETTCIS] != null) {
    contents[_ETTCIS] = (0, import_smithy_client.strictParseLong)(output[_ETTCIS]);
  }
  return contents;
}, "de_RestoreStatus");
var de_RestoreTableFromClusterSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_TRS] != null) {
    contents[_TRS] = de_TableRestoreStatus(output[_TRS], context);
  }
  return contents;
}, "de_RestoreTableFromClusterSnapshotResult");
var de_ResumeClusterMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  return contents;
}, "de_ResumeClusterMessage");
var de_ResumeClusterResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_ResumeClusterResult");
var de_RevisionTarget = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DRa] != null) {
    contents[_DRa] = (0, import_smithy_client.expectString)(output[_DRa]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_DRRD] != null) {
    contents[_DRRD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_DRRD]));
  }
  return contents;
}, "de_RevisionTarget");
var de_RevisionTargetsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_RevisionTarget(entry, context);
  });
}, "de_RevisionTargetsList");
var de_RevokeClusterSecurityGroupIngressResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CSGl] != null) {
    contents[_CSGl] = de_ClusterSecurityGroup(output[_CSGl], context);
  }
  return contents;
}, "de_RevokeClusterSecurityGroupIngressResult");
var de_RevokeSnapshotAccessResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Sn] != null) {
    contents[_Sn] = de_Snapshot(output[_Sn], context);
  }
  return contents;
}, "de_RevokeSnapshotAccessResult");
var de_RotateEncryptionKeyResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Clu] != null) {
    contents[_Clu] = de_Cluster(output[_Clu], context);
  }
  return contents;
}, "de_RotateEncryptionKeyResult");
var de_ScheduledAction = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SAN] != null) {
    contents[_SAN] = (0, import_smithy_client.expectString)(output[_SAN]);
  }
  if (output[_TA] != null) {
    contents[_TA] = de_ScheduledActionType(output[_TA], context);
  }
  if (output[_Sc] != null) {
    contents[_Sc] = (0, import_smithy_client.expectString)(output[_Sc]);
  }
  if (output[_IRa] != null) {
    contents[_IRa] = (0, import_smithy_client.expectString)(output[_IRa]);
  }
  if (output[_SAD] != null) {
    contents[_SAD] = (0, import_smithy_client.expectString)(output[_SAD]);
  }
  if (output[_Sta] != null) {
    contents[_Sta] = (0, import_smithy_client.expectString)(output[_Sta]);
  }
  if (output.NextInvocations === "") {
    contents[_NI] = [];
  } else if (output[_NI] != null && output[_NI][_SAT] != null) {
    contents[_NI] = de_ScheduledActionTimeList((0, import_smithy_client.getArrayIfSingleItem)(output[_NI][_SAT]), context);
  }
  if (output[_STt] != null) {
    contents[_STt] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_STt]));
  }
  if (output[_ET] != null) {
    contents[_ET] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_ET]));
  }
  return contents;
}, "de_ScheduledAction");
var de_ScheduledActionAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ScheduledActionAlreadyExistsFault");
var de_ScheduledActionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ScheduledAction(entry, context);
  });
}, "de_ScheduledActionList");
var de_ScheduledActionNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ScheduledActionNotFoundFault");
var de_ScheduledActionQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ScheduledActionQuotaExceededFault");
var de_ScheduledActionsMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.ScheduledActions === "") {
    contents[_SAc] = [];
  } else if (output[_SAc] != null && output[_SAc][_SAch] != null) {
    contents[_SAc] = de_ScheduledActionList((0, import_smithy_client.getArrayIfSingleItem)(output[_SAc][_SAch]), context);
  }
  return contents;
}, "de_ScheduledActionsMessage");
var de_ScheduledActionTimeList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(entry));
  });
}, "de_ScheduledActionTimeList");
var de_ScheduledActionType = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RCe] != null) {
    contents[_RCe] = de_ResizeClusterMessage(output[_RCe], context);
  }
  if (output[_PC] != null) {
    contents[_PC] = de_PauseClusterMessage(output[_PC], context);
  }
  if (output[_RCes] != null) {
    contents[_RCes] = de_ResumeClusterMessage(output[_RCes], context);
  }
  return contents;
}, "de_ScheduledActionType");
var de_ScheduledActionTypeUnsupportedFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ScheduledActionTypeUnsupportedFault");
var de_ScheduleDefinitionList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_ScheduleDefinitionList");
var de_ScheduleDefinitionTypeUnsupportedFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ScheduleDefinitionTypeUnsupportedFault");
var de_ScheduledSnapshotTimeList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(entry));
  });
}, "de_ScheduledSnapshotTimeList");
var de_SecondaryClusterInfo = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AZ] != null) {
    contents[_AZ] = (0, import_smithy_client.expectString)(output[_AZ]);
  }
  if (output.ClusterNodes === "") {
    contents[_CN] = [];
  } else if (output[_CN] != null && output[_CN][_me] != null) {
    contents[_CN] = de_ClusterNodesList((0, import_smithy_client.getArrayIfSingleItem)(output[_CN][_me]), context);
  }
  return contents;
}, "de_SecondaryClusterInfo");
var de_ServiceIntegrationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ServiceIntegrationsUnion((0, import_smithy_client.expectUnion)(entry), context);
  });
}, "de_ServiceIntegrationList");
var de_ServiceIntegrationsUnion = /* @__PURE__ */ __name((output, context) => {
  if (output.LakeFormation === "") {
    return {
      [_LF]: []
    };
  } else if (output[_LF] != null && output[_LF][_me] != null) {
    return {
      LakeFormation: de_LakeFormationServiceIntegrations((0, import_smithy_client.getArrayIfSingleItem)(output[_LF][_me]), context)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_ServiceIntegrationsUnion");
var de_Snapshot = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SI] != null) {
    contents[_SI] = (0, import_smithy_client.expectString)(output[_SI]);
  }
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_SCTn] != null) {
    contents[_SCTn] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_SCTn]));
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.strictParseInt32)(output[_P]);
  }
  if (output[_AZ] != null) {
    contents[_AZ] = (0, import_smithy_client.expectString)(output[_AZ]);
  }
  if (output[_CCT] != null) {
    contents[_CCT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CCT]));
  }
  if (output[_MU] != null) {
    contents[_MU] = (0, import_smithy_client.expectString)(output[_MU]);
  }
  if (output[_CV] != null) {
    contents[_CV] = (0, import_smithy_client.expectString)(output[_CV]);
  }
  if (output[_EFV] != null) {
    contents[_EFV] = (0, import_smithy_client.expectString)(output[_EFV]);
  }
  if (output[_STn] != null) {
    contents[_STn] = (0, import_smithy_client.expectString)(output[_STn]);
  }
  if (output[_NT] != null) {
    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);
  }
  if (output[_NON] != null) {
    contents[_NON] = (0, import_smithy_client.strictParseInt32)(output[_NON]);
  }
  if (output[_DBN] != null) {
    contents[_DBN] = (0, import_smithy_client.expectString)(output[_DBN]);
  }
  if (output[_VIp] != null) {
    contents[_VIp] = (0, import_smithy_client.expectString)(output[_VIp]);
  }
  if (output[_E] != null) {
    contents[_E] = (0, import_smithy_client.parseBoolean)(output[_E]);
  }
  if (output[_KKI] != null) {
    contents[_KKI] = (0, import_smithy_client.expectString)(output[_KKI]);
  }
  if (output[_EWHSM] != null) {
    contents[_EWHSM] = (0, import_smithy_client.parseBoolean)(output[_EWHSM]);
  }
  if (output.AccountsWithRestoreAccess === "") {
    contents[_AWRAc] = [];
  } else if (output[_AWRAc] != null && output[_AWRAc][_AWRA] != null) {
    contents[_AWRAc] = de_AccountsWithRestoreAccessList((0, import_smithy_client.getArrayIfSingleItem)(output[_AWRAc][_AWRA]), context);
  }
  if (output[_OA] != null) {
    contents[_OA] = (0, import_smithy_client.expectString)(output[_OA]);
  }
  if (output[_TBSIMB] != null) {
    contents[_TBSIMB] = (0, import_smithy_client.strictParseFloat)(output[_TBSIMB]);
  }
  if (output[_AIBSIMB] != null) {
    contents[_AIBSIMB] = (0, import_smithy_client.strictParseFloat)(output[_AIBSIMB]);
  }
  if (output[_BPIMB] != null) {
    contents[_BPIMB] = (0, import_smithy_client.strictParseFloat)(output[_BPIMB]);
  }
  if (output[_CBRIMBPS] != null) {
    contents[_CBRIMBPS] = (0, import_smithy_client.strictParseFloat)(output[_CBRIMBPS]);
  }
  if (output[_ESTC] != null) {
    contents[_ESTC] = (0, import_smithy_client.strictParseLong)(output[_ESTC]);
  }
  if (output[_ETIS] != null) {
    contents[_ETIS] = (0, import_smithy_client.strictParseLong)(output[_ETIS]);
  }
  if (output[_SR] != null) {
    contents[_SR] = (0, import_smithy_client.expectString)(output[_SR]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  if (output.RestorableNodeTypes === "") {
    contents[_RNT] = [];
  } else if (output[_RNT] != null && output[_RNT][_NT] != null) {
    contents[_RNT] = de_RestorableNodeTypeList((0, import_smithy_client.getArrayIfSingleItem)(output[_RNT][_NT]), context);
  }
  if (output[_EVR] != null) {
    contents[_EVR] = (0, import_smithy_client.parseBoolean)(output[_EVR]);
  }
  if (output[_MTN] != null) {
    contents[_MTN] = (0, import_smithy_client.expectString)(output[_MTN]);
  }
  if (output[_MSRP] != null) {
    contents[_MSRP] = (0, import_smithy_client.strictParseInt32)(output[_MSRP]);
  }
  if (output[_MSRD] != null) {
    contents[_MSRD] = (0, import_smithy_client.strictParseInt32)(output[_MSRD]);
  }
  if (output[_SRST] != null) {
    contents[_SRST] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_SRST]));
  }
  if (output[_MPSA] != null) {
    contents[_MPSA] = (0, import_smithy_client.expectString)(output[_MPSA]);
  }
  if (output[_MPSKKI] != null) {
    contents[_MPSKKI] = (0, import_smithy_client.expectString)(output[_MPSKKI]);
  }
  if (output[_SA] != null) {
    contents[_SA] = (0, import_smithy_client.expectString)(output[_SA]);
  }
  return contents;
}, "de_Snapshot");
var de_SnapshotCopyAlreadyDisabledFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotCopyAlreadyDisabledFault");
var de_SnapshotCopyAlreadyEnabledFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotCopyAlreadyEnabledFault");
var de_SnapshotCopyDisabledFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotCopyDisabledFault");
var de_SnapshotCopyGrant = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SCGN] != null) {
    contents[_SCGN] = (0, import_smithy_client.expectString)(output[_SCGN]);
  }
  if (output[_KKI] != null) {
    contents[_KKI] = (0, import_smithy_client.expectString)(output[_KKI]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  return contents;
}, "de_SnapshotCopyGrant");
var de_SnapshotCopyGrantAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotCopyGrantAlreadyExistsFault");
var de_SnapshotCopyGrantList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SnapshotCopyGrant(entry, context);
  });
}, "de_SnapshotCopyGrantList");
var de_SnapshotCopyGrantMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.SnapshotCopyGrants === "") {
    contents[_SCGn] = [];
  } else if (output[_SCGn] != null && output[_SCGn][_SCG] != null) {
    contents[_SCGn] = de_SnapshotCopyGrantList((0, import_smithy_client.getArrayIfSingleItem)(output[_SCGn][_SCG]), context);
  }
  return contents;
}, "de_SnapshotCopyGrantMessage");
var de_SnapshotCopyGrantNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotCopyGrantNotFoundFault");
var de_SnapshotCopyGrantQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotCopyGrantQuotaExceededFault");
var de_SnapshotErrorMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SI] != null) {
    contents[_SI] = (0, import_smithy_client.expectString)(output[_SI]);
  }
  if (output[_SCI] != null) {
    contents[_SCI] = (0, import_smithy_client.expectString)(output[_SCI]);
  }
  if (output[_FC] != null) {
    contents[_FC] = (0, import_smithy_client.expectString)(output[_FC]);
  }
  if (output[_FR] != null) {
    contents[_FR] = (0, import_smithy_client.expectString)(output[_FR]);
  }
  return contents;
}, "de_SnapshotErrorMessage");
var de_SnapshotIdentifierList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_SnapshotIdentifierList");
var de_SnapshotList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Snapshot(entry, context);
  });
}, "de_SnapshotList");
var de_SnapshotMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output.Snapshots === "") {
    contents[_Sna] = [];
  } else if (output[_Sna] != null && output[_Sna][_Sn] != null) {
    contents[_Sna] = de_SnapshotList((0, import_smithy_client.getArrayIfSingleItem)(output[_Sna][_Sn]), context);
  }
  return contents;
}, "de_SnapshotMessage");
var de_SnapshotSchedule = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.ScheduleDefinitions === "") {
    contents[_SD] = [];
  } else if (output[_SD] != null && output[_SD][_SDch] != null) {
    contents[_SD] = de_ScheduleDefinitionList((0, import_smithy_client.getArrayIfSingleItem)(output[_SD][_SDch]), context);
  }
  if (output[_SIc] != null) {
    contents[_SIc] = (0, import_smithy_client.expectString)(output[_SIc]);
  }
  if (output[_SDc] != null) {
    contents[_SDc] = (0, import_smithy_client.expectString)(output[_SDc]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  if (output.NextInvocations === "") {
    contents[_NI] = [];
  } else if (output[_NI] != null && output[_NI][_STna] != null) {
    contents[_NI] = de_ScheduledSnapshotTimeList((0, import_smithy_client.getArrayIfSingleItem)(output[_NI][_STna]), context);
  }
  if (output[_ACC] != null) {
    contents[_ACC] = (0, import_smithy_client.strictParseInt32)(output[_ACC]);
  }
  if (output.AssociatedClusters === "") {
    contents[_ACs] = [];
  } else if (output[_ACs] != null && output[_ACs][_CATS] != null) {
    contents[_ACs] = de_AssociatedClusterList((0, import_smithy_client.getArrayIfSingleItem)(output[_ACs][_CATS]), context);
  }
  return contents;
}, "de_SnapshotSchedule");
var de_SnapshotScheduleAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotScheduleAlreadyExistsFault");
var de_SnapshotScheduleList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SnapshotSchedule(entry, context);
  });
}, "de_SnapshotScheduleList");
var de_SnapshotScheduleNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotScheduleNotFoundFault");
var de_SnapshotScheduleQuotaExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotScheduleQuotaExceededFault");
var de_SnapshotScheduleUpdateInProgressFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SnapshotScheduleUpdateInProgressFault");
var de_SNSInvalidTopicFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SNSInvalidTopicFault");
var de_SNSNoAuthorizationFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SNSNoAuthorizationFault");
var de_SNSTopicArnNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SNSTopicArnNotFoundFault");
var de_SourceIdsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_SourceIdsList");
var de_SourceNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SourceNotFoundFault");
var de_Subnet = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SIubn] != null) {
    contents[_SIubn] = (0, import_smithy_client.expectString)(output[_SIubn]);
  }
  if (output[_SAZ] != null) {
    contents[_SAZ] = de_AvailabilityZone(output[_SAZ], context);
  }
  if (output[_SSu] != null) {
    contents[_SSu] = (0, import_smithy_client.expectString)(output[_SSu]);
  }
  return contents;
}, "de_Subnet");
var de_SubnetAlreadyInUse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SubnetAlreadyInUse");
var de_SubnetList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Subnet(entry, context);
  });
}, "de_SubnetList");
var de_SubscriptionAlreadyExistFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SubscriptionAlreadyExistFault");
var de_SubscriptionCategoryNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SubscriptionCategoryNotFoundFault");
var de_SubscriptionEventIdNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SubscriptionEventIdNotFoundFault");
var de_SubscriptionNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SubscriptionNotFoundFault");
var de_SubscriptionSeverityNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_SubscriptionSeverityNotFoundFault");
var de_SupportedOperation = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ON] != null) {
    contents[_ON] = (0, import_smithy_client.expectString)(output[_ON]);
  }
  return contents;
}, "de_SupportedOperation");
var de_SupportedOperationList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SupportedOperation(entry, context);
  });
}, "de_SupportedOperationList");
var de_SupportedPlatform = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_N] != null) {
    contents[_N] = (0, import_smithy_client.expectString)(output[_N]);
  }
  return contents;
}, "de_SupportedPlatform");
var de_SupportedPlatformsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SupportedPlatform(entry, context);
  });
}, "de_SupportedPlatformsList");
var de_TableLimitExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_TableLimitExceededFault");
var de_TableRestoreNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_TableRestoreNotFoundFault");
var de_TableRestoreStatus = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_TRRI] != null) {
    contents[_TRRI] = (0, import_smithy_client.expectString)(output[_TRRI]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  if (output[_RTeq] != null) {
    contents[_RTeq] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_RTeq]));
  }
  if (output[_PIMB] != null) {
    contents[_PIMB] = (0, import_smithy_client.strictParseLong)(output[_PIMB]);
  }
  if (output[_TDIMB] != null) {
    contents[_TDIMB] = (0, import_smithy_client.strictParseLong)(output[_TDIMB]);
  }
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_SI] != null) {
    contents[_SI] = (0, import_smithy_client.expectString)(output[_SI]);
  }
  if (output[_SDN] != null) {
    contents[_SDN] = (0, import_smithy_client.expectString)(output[_SDN]);
  }
  if (output[_SSN] != null) {
    contents[_SSN] = (0, import_smithy_client.expectString)(output[_SSN]);
  }
  if (output[_STN] != null) {
    contents[_STN] = (0, import_smithy_client.expectString)(output[_STN]);
  }
  if (output[_TDN] != null) {
    contents[_TDN] = (0, import_smithy_client.expectString)(output[_TDN]);
  }
  if (output[_TSN] != null) {
    contents[_TSN] = (0, import_smithy_client.expectString)(output[_TSN]);
  }
  if (output[_NTN] != null) {
    contents[_NTN] = (0, import_smithy_client.expectString)(output[_NTN]);
  }
  return contents;
}, "de_TableRestoreStatus");
var de_TableRestoreStatusList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_TableRestoreStatus(entry, context);
  });
}, "de_TableRestoreStatusList");
var de_TableRestoreStatusMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.TableRestoreStatusDetails === "") {
    contents[_TRSD] = [];
  } else if (output[_TRSD] != null && output[_TRSD][_TRS] != null) {
    contents[_TRSD] = de_TableRestoreStatusList((0, import_smithy_client.getArrayIfSingleItem)(output[_TRSD][_TRS]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_TableRestoreStatusMessage");
var de_Tag = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_K] != null) {
    contents[_K] = (0, import_smithy_client.expectString)(output[_K]);
  }
  if (output[_Val] != null) {
    contents[_Val] = (0, import_smithy_client.expectString)(output[_Val]);
  }
  return contents;
}, "de_Tag");
var de_TaggedResource = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ta] != null) {
    contents[_Ta] = de_Tag(output[_Ta], context);
  }
  if (output[_RN] != null) {
    contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);
  }
  if (output[_RT] != null) {
    contents[_RT] = (0, import_smithy_client.expectString)(output[_RT]);
  }
  return contents;
}, "de_TaggedResource");
var de_TaggedResourceList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_TaggedResource(entry, context);
  });
}, "de_TaggedResourceList");
var de_TaggedResourceListMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.TaggedResources === "") {
    contents[_TR] = [];
  } else if (output[_TR] != null && output[_TR][_TRa] != null) {
    contents[_TR] = de_TaggedResourceList((0, import_smithy_client.getArrayIfSingleItem)(output[_TR][_TRa]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_TaggedResourceListMessage");
var de_TagLimitExceededFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_TagLimitExceededFault");
var de_TagList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Tag(entry, context);
  });
}, "de_TagList");
var de_TrackList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_MaintenanceTrack(entry, context);
  });
}, "de_TrackList");
var de_TrackListMessage = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.MaintenanceTracks === "") {
    contents[_MT] = [];
  } else if (output[_MT] != null && output[_MT][_MTa] != null) {
    contents[_MT] = de_TrackList((0, import_smithy_client.getArrayIfSingleItem)(output[_MT][_MTa]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_TrackListMessage");
var de_UnauthorizedOperation = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_UnauthorizedOperation");
var de_UnauthorizedPartnerIntegrationFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_UnauthorizedPartnerIntegrationFault");
var de_UnknownSnapshotCopyRegionFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_UnknownSnapshotCopyRegionFault");
var de_UnsupportedOperationFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_UnsupportedOperationFault");
var de_UnsupportedOptionFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_UnsupportedOptionFault");
var de_UpdateTarget = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_MTN] != null) {
    contents[_MTN] = (0, import_smithy_client.expectString)(output[_MTN]);
  }
  if (output[_DV] != null) {
    contents[_DV] = (0, import_smithy_client.expectString)(output[_DV]);
  }
  if (output.SupportedOperations === "") {
    contents[_SOu] = [];
  } else if (output[_SOu] != null && output[_SOu][_SOup] != null) {
    contents[_SOu] = de_SupportedOperationList((0, import_smithy_client.getArrayIfSingleItem)(output[_SOu][_SOup]), context);
  }
  return contents;
}, "de_UpdateTarget");
var de_UsageLimit = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ULI] != null) {
    contents[_ULI] = (0, import_smithy_client.expectString)(output[_ULI]);
  }
  if (output[_CIl] != null) {
    contents[_CIl] = (0, import_smithy_client.expectString)(output[_CIl]);
  }
  if (output[_FT] != null) {
    contents[_FT] = (0, import_smithy_client.expectString)(output[_FT]);
  }
  if (output[_LT] != null) {
    contents[_LT] = (0, import_smithy_client.expectString)(output[_LT]);
  }
  if (output[_Am] != null) {
    contents[_Am] = (0, import_smithy_client.strictParseLong)(output[_Am]);
  }
  if (output[_Pe] != null) {
    contents[_Pe] = (0, import_smithy_client.expectString)(output[_Pe]);
  }
  if (output[_BA] != null) {
    contents[_BA] = (0, import_smithy_client.expectString)(output[_BA]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_Ta] != null) {
    contents[_T] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_Ta]), context);
  }
  return contents;
}, "de_UsageLimit");
var de_UsageLimitAlreadyExistsFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_UsageLimitAlreadyExistsFault");
var de_UsageLimitList = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.UsageLimits === "") {
    contents[_UL] = [];
  } else if (output[_UL] != null && output[_UL][_me] != null) {
    contents[_UL] = de_UsageLimits((0, import_smithy_client.getArrayIfSingleItem)(output[_UL][_me]), context);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_UsageLimitList");
var de_UsageLimitNotFoundFault = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_UsageLimitNotFoundFault");
var de_UsageLimits = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_UsageLimit(entry, context);
  });
}, "de_UsageLimits");
var de_ValueStringList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_ValueStringList");
var de_VpcEndpoint = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_VEI] != null) {
    contents[_VEI] = (0, import_smithy_client.expectString)(output[_VEI]);
  }
  if (output[_VIp] != null) {
    contents[_VIp] = (0, import_smithy_client.expectString)(output[_VIp]);
  }
  if (output.NetworkInterfaces === "") {
    contents[_NIe] = [];
  } else if (output[_NIe] != null && output[_NIe][_NIet] != null) {
    contents[_NIe] = de_NetworkInterfaceList((0, import_smithy_client.getArrayIfSingleItem)(output[_NIe][_NIet]), context);
  }
  return contents;
}, "de_VpcEndpoint");
var de_VpcEndpointsList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_VpcEndpoint(entry, context);
  });
}, "de_VpcEndpointsList");
var de_VpcIdentifierList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_VpcIdentifierList");
var de_VpcSecurityGroupMembership = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_VSGIp] != null) {
    contents[_VSGIp] = (0, import_smithy_client.expectString)(output[_VSGIp]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  return contents;
}, "de_VpcSecurityGroupMembership");
var de_VpcSecurityGroupMembershipList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_VpcSecurityGroupMembership(entry, context);
  });
}, "de_VpcSecurityGroupMembershipList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(RedshiftServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
var SHARED_HEADERS = {
  "content-type": "application/x-www-form-urlencoded"
};
var _ = "2012-12-01";
var _A = "Action";
var _AA = "AccountAttributes";
var _AAL = "AuthorizedAudiencesList";
var _AAVPC = "AllowedAllVPCs";
var _AAc = "AccountAttribute";
var _AAcc = "AccountAlias";
var _AC = "AutoCreate";
var _ACC = "AssociatedClusterCount";
var _ACR = "AllowCancelResize";
var _ACS = "AquaConfigurationStatus";
var _ACSGI = "AuthorizeClusterSecurityGroupIngress";
var _ACq = "AquaConfiguration";
var _ACs = "AssociatedClusters";
var _ADS = "AuthorizeDataShare";
var _ADSC = "AssociateDataShareConsumer";
var _AEA = "AuthorizeEndpointAccess";
var _AEAs = "AssociateEntireAccount";
var _AI = "AdditionalInfo";
var _AIBSIMB = "ActualIncrementalBackupSizeInMegaBytes";
var _AIR = "AddIamRoles";
var _AIc = "AccountId";
var _AN = "AttributeNames";
var _ANt = "AttributeName";
var _AP = "AddPartner";
var _APAC = "AllowPubliclyAccessibleConsumers";
var _APC = "AuthenticationProfileContent";
var _APN = "AuthenticationProfileName";
var _APu = "AuthenticationProfiles";
var _ARNE = "AcceptReservedNodeExchange";
var _ARRIMBPS = "AvgResizeRateInMegaBytesPerSecond";
var _AS = "AquaStatus";
var _ASA = "AuthorizeSnapshotAccess";
var _ASRP = "AutomatedSnapshotRetentionPeriod";
var _ASp = "ApplyStatus";
var _AT = "ActionType";
var _ATIL = "AuthorizedTokenIssuerList";
var _ATp = "ApplyType";
var _ATu = "AuthorizeTime";
var _AV = "AllowedValues";
var _AVPC = "AllowedVPCs";
var _AVT = "AttributeValueTarget";
var _AVU = "AllowVersionUpgrade";
var _AVt = "AttributeValues";
var _AVtt = "AttributeValue";
var _AW = "AllowWrites";
var _AWRA = "AccountWithRestoreAccess";
var _AWRAc = "AccountsWithRestoreAccess";
var _AZ = "AvailabilityZone";
var _AZR = "AvailabilityZoneRelocation";
var _AZRS = "AvailabilityZoneRelocationStatus";
var _AZv = "AvailabilityZones";
var _Ac = "Account";
var _Act = "Active";
var _Ad = "Address";
var _Am = "Amount";
var _As = "Associations";
var _Ass = "Association";
var _At = "Attribute";
var _Au = "Authorization";
var _BA = "BreachAction";
var _BDCS = "BatchDeleteClusterSnapshots";
var _BMCS = "BatchModifyClusterSnapshots";
var _BN = "BucketName";
var _BPIMB = "BackupProgressInMegaBytes";
var _C = "Classic";
var _CA = "ConsumerArn";
var _CAI = "CustomerAwsId";
var _CAP = "CreateAuthenticationProfile";
var _CAS = "ClusterAvailabilityStatus";
var _CATS = "ClusterAssociatedToSchedule";
var _CAW = "ConsumerAcceptedWrites";
var _CAe = "CertificateAssociations";
var _CAer = "CertificateAssociation";
var _CAr = "CreatedAt";
var _CBRIMBPS = "CurrentBackupRateInMegaBytesPerSecond";
var _CC = "CreateCluster";
var _CCDA = "CreateCustomDomainAssociation";
var _CCPG = "CreateClusterParameterGroup";
var _CCS = "CopyClusterSnapshot";
var _CCSG = "CreateClusterSecurityGroup";
var _CCSGr = "CreateClusterSubnetGroup";
var _CCSr = "CreateClusterSnapshot";
var _CCT = "ClusterCreateTime";
var _CCu = "CurrencyCode";
var _CD = "CreatedDate";
var _CDCA = "CustomDomainCertificateArn";
var _CDCED = "CustomDomainCertificateExpiryDate";
var _CDCET = "CustomDomainCertExpiryTime";
var _CDN = "CustomDomainName";
var _CDR = "CurrentDatabaseRevision";
var _CDRl = "ClusterDbRevisions";
var _CDRlu = "ClusterDbRevision";
var _CE = "ClusterExists";
var _CEA = "CreateEndpointAccess";
var _CES = "CreateEventSubscription";
var _CHC = "CreateHsmConfiguration";
var _CHCC = "CreateHsmClientCertificate";
var _CI = "ConsumerIdentifier";
var _CIDRIP = "CIDRIP";
var _CIR = "ClusterIamRole";
var _CIl = "ClusterIdentifier";
var _CN = "ClusterNodes";
var _CNA = "ClusterNamespaceArn";
var _CPG = "ClusterParameterGroups";
var _CPGF = "ClusterParameterGroupFamily";
var _CPGN = "ClusterParameterGroupName";
var _CPGl = "ClusterParameterGroup";
var _CPK = "ClusterPublicKey";
var _CPSL = "ClusterParameterStatusList";
var _CR = "CancelResize";
var _CRIA = "CreateRedshiftIdcApplication";
var _CRIMBPS = "CurrentRateInMegaBytesPerSecond";
var _CRN = "ClusterRevisionNumber";
var _CRRIMBPS = "CurrentRestoreRateInMegaBytesPerSecond";
var _CRo = "ConsumerRegion";
var _CS = "ClusterStatus";
var _CSA = "CreateScheduledAction";
var _CSCG = "CreateSnapshotCopyGrant";
var _CSCS = "ClusterSnapshotCopyStatus";
var _CSG = "ClusterSecurityGroups";
var _CSGN = "ClusterSecurityGroupName";
var _CSGNl = "ClusterSubnetGroupName";
var _CSGl = "ClusterSecurityGroup";
var _CSGlu = "ClusterSubnetGroups";
var _CSGlus = "ClusterSubnetGroup";
var _CSI = "CustSubscriptionId";
var _CSS = "CreateSnapshotSchedule";
var _CT = "CreateTags";
var _CTl = "ClusterType";
var _CTr = "CreateTime";
var _CUL = "CreateUsageLimit";
var _CV = "ClusterVersion";
var _CVl = "ClusterVersions";
var _Cl = "Clusters";
var _Clu = "Cluster";
var _Co = "Command";
var _D = "Description";
var _DAA = "DescribeAccountAttributes";
var _DAP = "DeleteAuthenticationProfile";
var _DAPe = "DescribeAuthenticationProfiles";
var _DBN = "DBName";
var _DC = "DeleteCluster";
var _DCDA = "DeleteCustomDomainAssociation";
var _DCDAe = "DescribeCustomDomainAssociations";
var _DCDR = "DescribeClusterDbRevisions";
var _DCP = "DescribeClusterParameters";
var _DCPG = "DeleteClusterParameterGroup";
var _DCPGe = "DescribeClusterParameterGroups";
var _DCPe = "DefaultClusterParameters";
var _DCS = "DeleteClusterSnapshot";
var _DCSG = "DeleteClusterSecurityGroup";
var _DCSGe = "DeleteClusterSubnetGroup";
var _DCSGes = "DescribeClusterSecurityGroups";
var _DCSGesc = "DescribeClusterSubnetGroups";
var _DCSe = "DescribeClusterSnapshots";
var _DCT = "DescribeClusterTracks";
var _DCV = "DescribeClusterVersions";
var _DCe = "DescribeClusters";
var _DDCP = "DescribeDefaultClusterParameters";
var _DDS = "DeauthorizeDataShare";
var _DDSC = "DisassociateDataShareConsumer";
var _DDSFC = "DescribeDataSharesForConsumer";
var _DDSFP = "DescribeDataSharesForProducer";
var _DDSe = "DescribeDataShares";
var _DE = "DescribeEvents";
var _DEA = "DeleteEndpointAccess";
var _DEAe = "DescribeEndpointAccess";
var _DEAes = "DescribeEndpointAuthorization";
var _DEAi = "DisassociateEntireAccount";
var _DEC = "DescribeEventCategories";
var _DES = "DeleteEventSubscription";
var _DESe = "DescribeEventSubscriptions";
var _DG = "DbGroups";
var _DHC = "DeleteHsmConfiguration";
var _DHCC = "DeleteHsmClientCertificate";
var _DHCCe = "DescribeHsmClientCertificates";
var _DHCe = "DescribeHsmConfigurations";
var _DII = "DescribeInboundIntegrations";
var _DIRA = "DefaultIamRoleArn";
var _DL = "DisableLogging";
var _DLS = "DescribeLoggingStatus";
var _DM = "DeferMaintenance";
var _DMD = "DeferMaintenanceDuration";
var _DMET = "DeferMaintenanceEndTime";
var _DMI = "DeferMaintenanceIdentifier";
var _DMST = "DeferMaintenanceStartTime";
var _DMW = "DeferredMaintenanceWindows";
var _DMWe = "DeferredMaintenanceWindow";
var _DN = "DatabaseName";
var _DNCO = "DescribeNodeConfigurationOptions";
var _DNb = "DbName";
var _DOCO = "DescribeOrderableClusterOptions";
var _DP = "DeletePartner";
var _DPb = "DbPassword";
var _DPe = "DescribePartners";
var _DR = "DescribeResize";
var _DRIA = "DeleteRedshiftIdcApplication";
var _DRIAe = "DescribeRedshiftIdcApplications";
var _DRN = "DescribeReservedNodes";
var _DRNES = "DescribeReservedNodeExchangeStatus";
var _DRNO = "DescribeReservedNodeOfferings";
var _DRP = "DeleteResourcePolicy";
var _DRRD = "DatabaseRevisionReleaseDate";
var _DRa = "DatabaseRevision";
var _DRe = "DestinationRegion";
var _DRr = "DryRun";
var _DS = "DescribeStorage";
var _DSA = "DeleteScheduledAction";
var _DSAa = "DataShareArn";
var _DSAat = "DataShareAssociations";
var _DSAe = "DescribeScheduledActions";
var _DSC = "DisableSnapshotCopy";
var _DSCG = "DeleteSnapshotCopyGrant";
var _DSCGe = "DescribeSnapshotCopyGrants";
var _DSS = "DeleteSnapshotSchedule";
var _DSSe = "DescribeSnapshotSchedules";
var _DSa = "DataShares";
var _DSi = "DisassociateSchedule";
var _DSu = "DurationSeconds";
var _DT = "DeleteTags";
var _DTIMB = "DataTransferredInMegaBytes";
var _DTP = "DataTransferProgress";
var _DTPP = "DataTransferProgressPercent";
var _DTRS = "DescribeTableRestoreStatus";
var _DTa = "DataType";
var _DTe = "DescribeTags";
var _DU = "DbUser";
var _DUL = "DeleteUsageLimit";
var _DULe = "DescribeUsageLimits";
var _DV = "DatabaseVersion";
var _Da = "Date";
var _Dat = "Database";
var _Du = "Duration";
var _E = "Encrypted";
var _EAL = "EndpointAccessList";
var _EALn = "EndpointAuthorizationList";
var _EC = "EventCategories";
var _ECL = "EventCategoriesList";
var _ECM = "EventCategoriesMap";
var _ECML = "EventCategoriesMapList";
var _ECSG = "EC2SecurityGroups";
var _ECSGN = "EC2SecurityGroupName";
var _ECSGOI = "EC2SecurityGroupOwnerId";
var _ECSGe = "EC2SecurityGroup";
var _ECSI = "EnableCaseSensitiveIdentifier";
var _ECT = "EndpointCreateTime";
var _ECn = "EndpointCount";
var _ECr = "ErrorCode";
var _ECv = "EventCategory";
var _ED = "EventDescription";
var _EDUP = "EstimatedDiskUtilizationPercent";
var _EFV = "EngineFullVersion";
var _EI = "ElasticIp";
var _EIM = "EventInfoMap";
var _EIS = "ElasticIpStatus";
var _EIv = "EventId";
var _EL = "EnableLogging";
var _EM = "ErrorMessage";
var _EN = "EndpointName";
var _ENSST = "ExpectedNextSnapshotScheduleTime";
var _ENSSTS = "ExpectedNextSnapshotScheduleTimeStatus";
var _ERN = "ExchangedReservedNode";
var _ERNONO = "ElasticResizeNumberOfNodeOptions";
var _ES = "EventSubscription";
var _ESC = "EnableSnapshotCopy";
var _ESL = "EventSubscriptionsList";
var _ESTC = "EstimatedSecondsToCompletion";
var _ESn = "EndpointStatus";
var _ET = "EndTime";
var _ETIS = "ElapsedTimeInSeconds";
var _ETTCIS = "EstimatedTimeToCompletionInSeconds";
var _ETn = "EncryptionType";
var _EVR = "EnhancedVpcRouting";
var _EWHSM = "EncryptedWithHSM";
var _En = "Enabled";
var _Ena = "Enable";
var _End = "Endpoint";
var _Er = "Errors";
var _Ev = "Events";
var _Eve = "Event";
var _Ex = "Expiration";
var _F = "Force";
var _FC = "FailureCode";
var _FCSI = "FinalClusterSnapshotIdentifier";
var _FCSRP = "FinalClusterSnapshotRetentionPeriod";
var _FP = "FixedPrice";
var _FPC = "FailoverPrimaryCompute";
var _FR = "FailureReason";
var _FT = "FeatureType";
var _Fi = "Filters";
var _G = "Grantee";
var _GCC = "GetClusterCredentials";
var _GCCWIAM = "GetClusterCredentialsWithIAM";
var _GRNECO = "GetReservedNodeExchangeConfigurationOptions";
var _GRNEO = "GetReservedNodeExchangeOfferings";
var _GRP = "GetResourcePolicy";
var _Gr = "Grantor";
var _HC = "HsmConfiguration";
var _HCC = "HsmClientCertificate";
var _HCCI = "HsmClientCertificateIdentifier";
var _HCCPK = "HsmClientCertificatePublicKey";
var _HCCs = "HsmClientCertificates";
var _HCI = "HsmConfigurationIdentifier";
var _HCs = "HsmConfigurations";
var _HIA = "HsmIpAddress";
var _HPN = "HsmPartitionName";
var _HPP = "HsmPartitionPassword";
var _HS = "HsmStatus";
var _HSPC = "HsmServerPublicCertificate";
var _I = "Identifiers";
var _IA = "IntegrationArn";
var _IAT = "IpAddressType";
var _IAp = "Ipv6Address";
var _IDN = "IdcDisplayName";
var _IE = "IntegrationError";
var _II = "InboundIntegrations";
var _IIA = "IdcInstanceArn";
var _IIn = "InboundIntegration";
var _IM = "IsModifiable";
var _IMAA = "IdcManagedApplicationArn";
var _IN = "IdentityNamespace";
var _IOS = "IdcOnboardStatus";
var _IPR = "IPRanges";
var _IPRa = "IPRange";
var _IR = "IamRoles";
var _IRA = "IamRoleArn";
var _IRa = "IamRole";
var _IRm = "ImpactRanking";
var _ITC = "ImportTablesCompleted";
var _ITIP = "ImportTablesInProgress";
var _ITNS = "ImportTablesNotStarted";
var _Id = "Id";
var _K = "Key";
var _KKI = "KmsKeyId";
var _L = "Link";
var _LDT = "LogDestinationType";
var _LE = "LogExports";
var _LEo = "LoggingEnabled";
var _LF = "LakeFormation";
var _LFM = "LastFailureMessage";
var _LFQ = "LakeFormationQuery";
var _LFT = "LastFailureTime";
var _LR = "ListRecommendations";
var _LSD = "LoadSampleData";
var _LSDT = "LastSuccessfulDeliveryTime";
var _LT = "LimitType";
var _M = "Marker";
var _MAC = "ModifyAquaConfiguration";
var _MAP = "ModifyAuthenticationProfile";
var _MAZ = "MultiAZ";
var _MAZS = "MultiAZSecondary";
var _MB = "ManagedBy";
var _MC = "ModifyCluster";
var _MCDA = "ModifyCustomDomainAssociation";
var _MCDR = "ModifyClusterDbRevision";
var _MCIR = "ModifyClusterIamRoles";
var _MCM = "ModifyClusterMaintenance";
var _MCPG = "ModifyClusterParameterGroup";
var _MCS = "ModifyClusterSnapshot";
var _MCSG = "ModifyClusterSubnetGroup";
var _MCSS = "ModifyClusterSnapshotSchedule";
var _MEA = "ModifyEndpointAccess";
var _MES = "ModifyEventSubscription";
var _MEV = "MinimumEngineVersion";
var _MMP = "ManageMasterPassword";
var _MPSA = "MasterPasswordSecretArn";
var _MPSKKI = "MasterPasswordSecretKmsKeyId";
var _MR = "MaxRecords";
var _MRIA = "ModifyRedshiftIdcApplication";
var _MS = "ModifyStatus";
var _MSA = "ModifyScheduledAction";
var _MSCRP = "ModifySnapshotCopyRetentionPeriod";
var _MSRD = "ManualSnapshotRemainingDays";
var _MSRP = "ManualSnapshotRetentionPeriod";
var _MSS = "ModifySnapshotSchedule";
var _MT = "MaintenanceTracks";
var _MTN = "MaintenanceTrackName";
var _MTa = "MaintenanceTrack";
var _MU = "MasterUsername";
var _MUL = "ModifyUsageLimit";
var _MUP = "MasterUserPassword";
var _Ma = "Manual";
var _Me = "Message";
var _Mo = "Mode";
var _N = "Name";
var _NA = "NamespaceArn";
var _NC = "NodeCount";
var _NCI = "NewClusterIdentifier";
var _NCO = "NodeConfigurationOption";
var _NCOL = "NodeConfigurationOptionList";
var _NI = "NextInvocations";
var _NII = "NetworkInterfaceId";
var _NIe = "NetworkInterfaces";
var _NIet = "NetworkInterface";
var _NMWST = "NextMaintenanceWindowStartTime";
var _NON = "NumberOfNodes";
var _NR = "NodeRole";
var _NRT = "NextRefreshTime";
var _NT = "NodeType";
var _NTN = "NewTableName";
var _O = "Operator";
var _OA = "OwnerAccount";
var _OCO = "OrderableClusterOptions";
var _OCOr = "OrderableClusterOption";
var _ON = "OperationName";
var _OT = "OfferingType";
var _Ob = "Observation";
var _P = "Port";
var _PA = "PubliclyAccessible";
var _PAED = "ParameterApplyErrorDescription";
var _PAS = "ParameterApplyStatus";
var _PAW = "ProducerAllowedWrites";
var _PAe = "PendingActions";
var _PAr = "ProducerArn";
var _PC = "PauseCluster";
var _PG = "ParameterGroups";
var _PGF = "ParameterGroupFamily";
var _PGN = "ParameterGroupName";
var _PGS = "ParameterGroupStatus";
var _PIA = "PrivateIpAddress";
var _PII = "PartnerIntegrationInfo";
var _PIIL = "PartnerIntegrationInfoList";
var _PIMB = "ProgressInMegaBytes";
var _PIPA = "PrivateIPAddress";
var _PIPAu = "PublicIPAddress";
var _PMV = "PendingModifiedValues";
var _PMW = "PreferredMaintenanceWindow";
var _PN = "PartnerName";
var _PNa = "ParameterName";
var _PRNO = "PurchaseReservedNodeOffering";
var _PRP = "PutResourcePolicy";
var _PV = "ParameterValue";
var _Pa = "Parameters";
var _Par = "Parameter";
var _Pe = "Period";
var _Po = "Policy";
var _R = "Resources";
var _RA = "ResourceArn";
var _RAP = "ResetAllParameters";
var _RAe = "RecommendedActions";
var _RAec = "RecommendedAction";
var _RC = "RebootCluster";
var _RCA = "RecurringChargeAmount";
var _RCF = "RecurringChargeFrequency";
var _RCPG = "ResetClusterParameterGroup";
var _RCSGI = "RevokeClusterSecurityGroupIngress";
var _RCe = "ResizeCluster";
var _RCec = "RecurringCharges";
var _RCecu = "RecurringCharge";
var _RCes = "ResumeCluster";
var _RDS = "RejectDataShare";
var _REA = "RevokeEndpointAccess";
var _REK = "RotateEncryptionKey";
var _RFCS = "RestoreFromClusterSnapshot";
var _RI = "ResizeInfo";
var _RIA = "RedshiftIdcApplication";
var _RIAA = "RedshiftIdcApplicationArn";
var _RIAN = "RedshiftIdcApplicationName";
var _RIAe = "RedshiftIdcApplications";
var _RIR = "RemoveIamRoles";
var _RL = "ReferenceLinks";
var _RLe = "ReferenceLink";
var _RN = "ResourceName";
var _RNCO = "ReservedNodeConfigurationOption";
var _RNCOL = "ReservedNodeConfigurationOptionList";
var _RNERI = "ReservedNodeExchangeRequestId";
var _RNES = "ReservedNodeExchangeStatus";
var _RNESD = "ReservedNodeExchangeStatusDetails";
var _RNI = "ReservedNodeId";
var _RNO = "ReservedNodeOfferings";
var _RNOI = "ReservedNodeOfferingId";
var _RNOT = "ReservedNodeOfferingType";
var _RNOe = "ReservedNodeOffering";
var _RNT = "RestorableNodeTypes";
var _RNe = "ReservedNode";
var _RNes = "ReservedNodes";
var _RO = "ResourceOwner";
var _RP = "RetentionPeriod";
var _RPe = "ResourcePolicy";
var _RS = "RestoreStatus";
var _RSA = "RevokeSnapshotAccess";
var _RT = "ResourceType";
var _RTFCS = "RestoreTableFromClusterSnapshot";
var _RTe = "RevisionTarget";
var _RTec = "RecommendationType";
var _RTeco = "RecommendationText";
var _RTeq = "RequestTime";
var _RTes = "ResizeType";
var _RTev = "RevisionTargets";
var _Re = "Recommendations";
var _Rec = "Recommendation";
var _S = "Severity";
var _SA = "SnapshotArn";
var _SAD = "ScheduledActionDescription";
var _SAN = "ScheduledActionName";
var _SAS = "ScheduleAssociationState";
var _SAT = "ScheduledActionTime";
var _SAZ = "SubnetAvailabilityZone";
var _SAc = "ScheduledActions";
var _SAch = "ScheduledAction";
var _SAo = "SourceArn";
var _SCD = "StatusChangeDate";
var _SCG = "SnapshotCopyGrant";
var _SCGN = "SnapshotCopyGrantName";
var _SCGn = "SnapshotCopyGrants";
var _SCI = "SnapshotClusterIdentifier";
var _SCIAT = "SupportedClusterIpAddressTypes";
var _SCT = "SubscriptionCreationTime";
var _SCTn = "SnapshotCreateTime";
var _SD = "ScheduleDefinitions";
var _SDN = "SourceDatabaseName";
var _SDc = "ScheduleDescription";
var _SDch = "ScheduleDefinition";
var _SE = "SortingEntities";
var _SEM = "SnapshotErrorMessage";
var _SFCS = "SkipFinalClusterSnapshot";
var _SGN = "SubnetGroupName";
var _SGS = "SubnetGroupStatus";
var _SI = "SnapshotIdentifier";
var _SIL = "SnapshotIdentifierList";
var _SILo = "SourceIdsList";
var _SIc = "ScheduleIdentifier";
var _SIe = "ServiceIntegrations";
var _SIo = "SourceIds";
var _SIou = "SourceIdentifier";
var _SIour = "SourceId";
var _SIu = "SubnetIds";
var _SIub = "SubnetId";
var _SIubn = "SubnetIdentifier";
var _SKP = "S3KeyPrefix";
var _SM = "StatusMessage";
var _SN = "SubscriptionName";
var _SO = "SortOrder";
var _SOu = "SupportedOperations";
var _SOup = "SupportedOperation";
var _SP = "SupportedPlatforms";
var _SPu = "SupportedPlatform";
var _SR = "SourceRegion";
var _SRN = "SourceReservedNode";
var _SRNC = "SourceReservedNodeCount";
var _SRNI = "SourceReservedNodeId";
var _SRNT = "SourceReservedNodeType";
var _SRST = "SnapshotRetentionStartTime";
var _SS = "SnapshotSchedules";
var _SSCI = "SourceSnapshotClusterIdentifier";
var _SSI = "SourceSnapshotIdentifier";
var _SSIMB = "SnapshotSizeInMegaBytes";
var _SSIn = "SnapshotScheduleIdentifier";
var _SSN = "SourceSchemaName";
var _SSS = "SnapshotScheduleState";
var _SSn = "SnapshotSchedule";
var _SSu = "SubnetStatus";
var _ST = "SourceType";
var _STA = "SnsTopicArn";
var _STN = "SourceTableName";
var _STn = "SnapshotType";
var _STna = "SnapshotTime";
var _STt = "StartTime";
var _Sc = "Schedule";
var _Sn = "Snapshot";
var _Sna = "Snapshots";
var _So = "Source";
var _St = "Status";
var _Sta = "State";
var _Str = "String";
var _Su = "Subnets";
var _Sub = "Subnet";
var _T = "Tags";
var _TA = "TargetAction";
var _TAT = "TargetActionType";
var _TAa = "TargetArn";
var _TBSIMB = "TotalBackupSizeInMegaBytes";
var _TCT = "TargetClusterType";
var _TDIMB = "TotalDataInMegaBytes";
var _TDN = "TargetDatabaseName";
var _TET = "TargetEncryptionType";
var _TK = "TagKeys";
var _TNON = "TargetNumberOfNodes";
var _TNT = "TargetNodeType";
var _TPSIMB = "TotalProvisionedStorageInMegaBytes";
var _TR = "TaggedResources";
var _TRDIMB = "TotalResizeDataInMegaBytes";
var _TRNC = "TargetReservedNodeCount";
var _TRNO = "TargetReservedNodeOffering";
var _TRNOI = "TargetReservedNodeOfferingId";
var _TRNT = "TargetReservedNodeType";
var _TRRI = "TableRestoreRequestId";
var _TRS = "TableRestoreStatus";
var _TRSD = "TableRestoreStatusDetails";
var _TRa = "TaggedResource";
var _TSCIMB = "TotalStorageCapacityInMegaBytes";
var _TSI = "TargetSnapshotIdentifier";
var _TSN = "TargetSchemaName";
var _TTIA = "TrustedTokenIssuerArn";
var _TV = "TagValues";
var _Ta = "Tag";
var _Te = "Text";
var _Ti = "Title";
var _Ty = "Type";
var _UA = "UpdatedAt";
var _UL = "UsageLimits";
var _ULI = "UsageLimitId";
var _UP = "UsagePrice";
var _UPS = "UpdatePartnerStatus";
var _UT = "UpdateTargets";
var _UTp = "UpdateTarget";
var _V = "Version";
var _VE = "VpcEndpoints";
var _VEI = "VpcEndpointId";
var _VEp = "VpcEndpoint";
var _VI = "VpcIds";
var _VIp = "VpcId";
var _VIpc = "VpcIdentifier";
var _VSG = "VpcSecurityGroups";
var _VSGI = "VpcSecurityGroupIds";
var _VSGIp = "VpcSecurityGroupId";
var _VSGp = "VpcSecurityGroup";
var _Va = "Values";
var _Val = "Value";
var _i = "item";
var _m = "message";
var _me = "member";
var buildFormUrlencodedString = /* @__PURE__ */ __name((formEntries) => Object.entries(formEntries).map(([key, value]) => (0, import_smithy_client.extendedEncodeURIComponent)(key) + "=" + (0, import_smithy_client.extendedEncodeURIComponent)(value)).join("&"), "buildFormUrlencodedString");
var loadQueryErrorCode = /* @__PURE__ */ __name((output, data) => {
  var _a;
  if (((_a = data.Error) == null ? void 0 : _a.Code) !== void 0) {
    return data.Error.Code;
  }
  if (output.statusCode == 404) {
    return "NotFound";
  }
}, "loadQueryErrorCode");

// src/commands/AcceptReservedNodeExchangeCommand.ts
var _AcceptReservedNodeExchangeCommand = class _AcceptReservedNodeExchangeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "AcceptReservedNodeExchange", {}).n("RedshiftClient", "AcceptReservedNodeExchangeCommand").f(void 0, void 0).ser(se_AcceptReservedNodeExchangeCommand).de(de_AcceptReservedNodeExchangeCommand).build() {
};
__name(_AcceptReservedNodeExchangeCommand, "AcceptReservedNodeExchangeCommand");
var AcceptReservedNodeExchangeCommand = _AcceptReservedNodeExchangeCommand;

// src/commands/AddPartnerCommand.ts




var _AddPartnerCommand = class _AddPartnerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "AddPartner", {}).n("RedshiftClient", "AddPartnerCommand").f(void 0, void 0).ser(se_AddPartnerCommand).de(de_AddPartnerCommand).build() {
};
__name(_AddPartnerCommand, "AddPartnerCommand");
var AddPartnerCommand = _AddPartnerCommand;

// src/commands/AssociateDataShareConsumerCommand.ts




var _AssociateDataShareConsumerCommand = class _AssociateDataShareConsumerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "AssociateDataShareConsumer", {}).n("RedshiftClient", "AssociateDataShareConsumerCommand").f(void 0, void 0).ser(se_AssociateDataShareConsumerCommand).de(de_AssociateDataShareConsumerCommand).build() {
};
__name(_AssociateDataShareConsumerCommand, "AssociateDataShareConsumerCommand");
var AssociateDataShareConsumerCommand = _AssociateDataShareConsumerCommand;

// src/commands/AuthorizeClusterSecurityGroupIngressCommand.ts




var _AuthorizeClusterSecurityGroupIngressCommand = class _AuthorizeClusterSecurityGroupIngressCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "AuthorizeClusterSecurityGroupIngress", {}).n("RedshiftClient", "AuthorizeClusterSecurityGroupIngressCommand").f(void 0, void 0).ser(se_AuthorizeClusterSecurityGroupIngressCommand).de(de_AuthorizeClusterSecurityGroupIngressCommand).build() {
};
__name(_AuthorizeClusterSecurityGroupIngressCommand, "AuthorizeClusterSecurityGroupIngressCommand");
var AuthorizeClusterSecurityGroupIngressCommand = _AuthorizeClusterSecurityGroupIngressCommand;

// src/commands/AuthorizeDataShareCommand.ts




var _AuthorizeDataShareCommand = class _AuthorizeDataShareCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "AuthorizeDataShare", {}).n("RedshiftClient", "AuthorizeDataShareCommand").f(void 0, void 0).ser(se_AuthorizeDataShareCommand).de(de_AuthorizeDataShareCommand).build() {
};
__name(_AuthorizeDataShareCommand, "AuthorizeDataShareCommand");
var AuthorizeDataShareCommand = _AuthorizeDataShareCommand;

// src/commands/AuthorizeEndpointAccessCommand.ts




var _AuthorizeEndpointAccessCommand = class _AuthorizeEndpointAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "AuthorizeEndpointAccess", {}).n("RedshiftClient", "AuthorizeEndpointAccessCommand").f(void 0, void 0).ser(se_AuthorizeEndpointAccessCommand).de(de_AuthorizeEndpointAccessCommand).build() {
};
__name(_AuthorizeEndpointAccessCommand, "AuthorizeEndpointAccessCommand");
var AuthorizeEndpointAccessCommand = _AuthorizeEndpointAccessCommand;

// src/commands/AuthorizeSnapshotAccessCommand.ts




var _AuthorizeSnapshotAccessCommand = class _AuthorizeSnapshotAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "AuthorizeSnapshotAccess", {}).n("RedshiftClient", "AuthorizeSnapshotAccessCommand").f(void 0, void 0).ser(se_AuthorizeSnapshotAccessCommand).de(de_AuthorizeSnapshotAccessCommand).build() {
};
__name(_AuthorizeSnapshotAccessCommand, "AuthorizeSnapshotAccessCommand");
var AuthorizeSnapshotAccessCommand = _AuthorizeSnapshotAccessCommand;

// src/commands/BatchDeleteClusterSnapshotsCommand.ts




var _BatchDeleteClusterSnapshotsCommand = class _BatchDeleteClusterSnapshotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "BatchDeleteClusterSnapshots", {}).n("RedshiftClient", "BatchDeleteClusterSnapshotsCommand").f(void 0, void 0).ser(se_BatchDeleteClusterSnapshotsCommand).de(de_BatchDeleteClusterSnapshotsCommand).build() {
};
__name(_BatchDeleteClusterSnapshotsCommand, "BatchDeleteClusterSnapshotsCommand");
var BatchDeleteClusterSnapshotsCommand = _BatchDeleteClusterSnapshotsCommand;

// src/commands/BatchModifyClusterSnapshotsCommand.ts




var _BatchModifyClusterSnapshotsCommand = class _BatchModifyClusterSnapshotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "BatchModifyClusterSnapshots", {}).n("RedshiftClient", "BatchModifyClusterSnapshotsCommand").f(void 0, void 0).ser(se_BatchModifyClusterSnapshotsCommand).de(de_BatchModifyClusterSnapshotsCommand).build() {
};
__name(_BatchModifyClusterSnapshotsCommand, "BatchModifyClusterSnapshotsCommand");
var BatchModifyClusterSnapshotsCommand = _BatchModifyClusterSnapshotsCommand;

// src/commands/CancelResizeCommand.ts




var _CancelResizeCommand = class _CancelResizeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CancelResize", {}).n("RedshiftClient", "CancelResizeCommand").f(void 0, void 0).ser(se_CancelResizeCommand).de(de_CancelResizeCommand).build() {
};
__name(_CancelResizeCommand, "CancelResizeCommand");
var CancelResizeCommand = _CancelResizeCommand;

// src/commands/CopyClusterSnapshotCommand.ts




var _CopyClusterSnapshotCommand = class _CopyClusterSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CopyClusterSnapshot", {}).n("RedshiftClient", "CopyClusterSnapshotCommand").f(void 0, void 0).ser(se_CopyClusterSnapshotCommand).de(de_CopyClusterSnapshotCommand).build() {
};
__name(_CopyClusterSnapshotCommand, "CopyClusterSnapshotCommand");
var CopyClusterSnapshotCommand = _CopyClusterSnapshotCommand;

// src/commands/CreateAuthenticationProfileCommand.ts




var _CreateAuthenticationProfileCommand = class _CreateAuthenticationProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateAuthenticationProfile", {}).n("RedshiftClient", "CreateAuthenticationProfileCommand").f(void 0, void 0).ser(se_CreateAuthenticationProfileCommand).de(de_CreateAuthenticationProfileCommand).build() {
};
__name(_CreateAuthenticationProfileCommand, "CreateAuthenticationProfileCommand");
var CreateAuthenticationProfileCommand = _CreateAuthenticationProfileCommand;

// src/commands/CreateClusterCommand.ts




var _CreateClusterCommand = class _CreateClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateCluster", {}).n("RedshiftClient", "CreateClusterCommand").f(CreateClusterMessageFilterSensitiveLog, CreateClusterResultFilterSensitiveLog).ser(se_CreateClusterCommand).de(de_CreateClusterCommand).build() {
};
__name(_CreateClusterCommand, "CreateClusterCommand");
var CreateClusterCommand = _CreateClusterCommand;

// src/commands/CreateClusterParameterGroupCommand.ts




var _CreateClusterParameterGroupCommand = class _CreateClusterParameterGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateClusterParameterGroup", {}).n("RedshiftClient", "CreateClusterParameterGroupCommand").f(void 0, void 0).ser(se_CreateClusterParameterGroupCommand).de(de_CreateClusterParameterGroupCommand).build() {
};
__name(_CreateClusterParameterGroupCommand, "CreateClusterParameterGroupCommand");
var CreateClusterParameterGroupCommand = _CreateClusterParameterGroupCommand;

// src/commands/CreateClusterSecurityGroupCommand.ts




var _CreateClusterSecurityGroupCommand = class _CreateClusterSecurityGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateClusterSecurityGroup", {}).n("RedshiftClient", "CreateClusterSecurityGroupCommand").f(void 0, void 0).ser(se_CreateClusterSecurityGroupCommand).de(de_CreateClusterSecurityGroupCommand).build() {
};
__name(_CreateClusterSecurityGroupCommand, "CreateClusterSecurityGroupCommand");
var CreateClusterSecurityGroupCommand = _CreateClusterSecurityGroupCommand;

// src/commands/CreateClusterSnapshotCommand.ts




var _CreateClusterSnapshotCommand = class _CreateClusterSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateClusterSnapshot", {}).n("RedshiftClient", "CreateClusterSnapshotCommand").f(void 0, void 0).ser(se_CreateClusterSnapshotCommand).de(de_CreateClusterSnapshotCommand).build() {
};
__name(_CreateClusterSnapshotCommand, "CreateClusterSnapshotCommand");
var CreateClusterSnapshotCommand = _CreateClusterSnapshotCommand;

// src/commands/CreateClusterSubnetGroupCommand.ts




var _CreateClusterSubnetGroupCommand = class _CreateClusterSubnetGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateClusterSubnetGroup", {}).n("RedshiftClient", "CreateClusterSubnetGroupCommand").f(void 0, void 0).ser(se_CreateClusterSubnetGroupCommand).de(de_CreateClusterSubnetGroupCommand).build() {
};
__name(_CreateClusterSubnetGroupCommand, "CreateClusterSubnetGroupCommand");
var CreateClusterSubnetGroupCommand = _CreateClusterSubnetGroupCommand;

// src/commands/CreateCustomDomainAssociationCommand.ts




var _CreateCustomDomainAssociationCommand = class _CreateCustomDomainAssociationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateCustomDomainAssociation", {}).n("RedshiftClient", "CreateCustomDomainAssociationCommand").f(void 0, void 0).ser(se_CreateCustomDomainAssociationCommand).de(de_CreateCustomDomainAssociationCommand).build() {
};
__name(_CreateCustomDomainAssociationCommand, "CreateCustomDomainAssociationCommand");
var CreateCustomDomainAssociationCommand = _CreateCustomDomainAssociationCommand;

// src/commands/CreateEndpointAccessCommand.ts




var _CreateEndpointAccessCommand = class _CreateEndpointAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateEndpointAccess", {}).n("RedshiftClient", "CreateEndpointAccessCommand").f(void 0, void 0).ser(se_CreateEndpointAccessCommand).de(de_CreateEndpointAccessCommand).build() {
};
__name(_CreateEndpointAccessCommand, "CreateEndpointAccessCommand");
var CreateEndpointAccessCommand = _CreateEndpointAccessCommand;

// src/commands/CreateEventSubscriptionCommand.ts




var _CreateEventSubscriptionCommand = class _CreateEventSubscriptionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateEventSubscription", {}).n("RedshiftClient", "CreateEventSubscriptionCommand").f(void 0, void 0).ser(se_CreateEventSubscriptionCommand).de(de_CreateEventSubscriptionCommand).build() {
};
__name(_CreateEventSubscriptionCommand, "CreateEventSubscriptionCommand");
var CreateEventSubscriptionCommand = _CreateEventSubscriptionCommand;

// src/commands/CreateHsmClientCertificateCommand.ts




var _CreateHsmClientCertificateCommand = class _CreateHsmClientCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateHsmClientCertificate", {}).n("RedshiftClient", "CreateHsmClientCertificateCommand").f(void 0, void 0).ser(se_CreateHsmClientCertificateCommand).de(de_CreateHsmClientCertificateCommand).build() {
};
__name(_CreateHsmClientCertificateCommand, "CreateHsmClientCertificateCommand");
var CreateHsmClientCertificateCommand = _CreateHsmClientCertificateCommand;

// src/commands/CreateHsmConfigurationCommand.ts




var _CreateHsmConfigurationCommand = class _CreateHsmConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateHsmConfiguration", {}).n("RedshiftClient", "CreateHsmConfigurationCommand").f(void 0, void 0).ser(se_CreateHsmConfigurationCommand).de(de_CreateHsmConfigurationCommand).build() {
};
__name(_CreateHsmConfigurationCommand, "CreateHsmConfigurationCommand");
var CreateHsmConfigurationCommand = _CreateHsmConfigurationCommand;

// src/commands/CreateRedshiftIdcApplicationCommand.ts




var _CreateRedshiftIdcApplicationCommand = class _CreateRedshiftIdcApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateRedshiftIdcApplication", {}).n("RedshiftClient", "CreateRedshiftIdcApplicationCommand").f(void 0, void 0).ser(se_CreateRedshiftIdcApplicationCommand).de(de_CreateRedshiftIdcApplicationCommand).build() {
};
__name(_CreateRedshiftIdcApplicationCommand, "CreateRedshiftIdcApplicationCommand");
var CreateRedshiftIdcApplicationCommand = _CreateRedshiftIdcApplicationCommand;

// src/commands/CreateScheduledActionCommand.ts




var _CreateScheduledActionCommand = class _CreateScheduledActionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateScheduledAction", {}).n("RedshiftClient", "CreateScheduledActionCommand").f(void 0, void 0).ser(se_CreateScheduledActionCommand).de(de_CreateScheduledActionCommand).build() {
};
__name(_CreateScheduledActionCommand, "CreateScheduledActionCommand");
var CreateScheduledActionCommand = _CreateScheduledActionCommand;

// src/commands/CreateSnapshotCopyGrantCommand.ts




var _CreateSnapshotCopyGrantCommand = class _CreateSnapshotCopyGrantCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateSnapshotCopyGrant", {}).n("RedshiftClient", "CreateSnapshotCopyGrantCommand").f(void 0, void 0).ser(se_CreateSnapshotCopyGrantCommand).de(de_CreateSnapshotCopyGrantCommand).build() {
};
__name(_CreateSnapshotCopyGrantCommand, "CreateSnapshotCopyGrantCommand");
var CreateSnapshotCopyGrantCommand = _CreateSnapshotCopyGrantCommand;

// src/commands/CreateSnapshotScheduleCommand.ts




var _CreateSnapshotScheduleCommand = class _CreateSnapshotScheduleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateSnapshotSchedule", {}).n("RedshiftClient", "CreateSnapshotScheduleCommand").f(void 0, void 0).ser(se_CreateSnapshotScheduleCommand).de(de_CreateSnapshotScheduleCommand).build() {
};
__name(_CreateSnapshotScheduleCommand, "CreateSnapshotScheduleCommand");
var CreateSnapshotScheduleCommand = _CreateSnapshotScheduleCommand;

// src/commands/CreateTagsCommand.ts




var _CreateTagsCommand = class _CreateTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateTags", {}).n("RedshiftClient", "CreateTagsCommand").f(void 0, void 0).ser(se_CreateTagsCommand).de(de_CreateTagsCommand).build() {
};
__name(_CreateTagsCommand, "CreateTagsCommand");
var CreateTagsCommand = _CreateTagsCommand;

// src/commands/CreateUsageLimitCommand.ts




var _CreateUsageLimitCommand = class _CreateUsageLimitCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "CreateUsageLimit", {}).n("RedshiftClient", "CreateUsageLimitCommand").f(void 0, void 0).ser(se_CreateUsageLimitCommand).de(de_CreateUsageLimitCommand).build() {
};
__name(_CreateUsageLimitCommand, "CreateUsageLimitCommand");
var CreateUsageLimitCommand = _CreateUsageLimitCommand;

// src/commands/DeauthorizeDataShareCommand.ts




var _DeauthorizeDataShareCommand = class _DeauthorizeDataShareCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeauthorizeDataShare", {}).n("RedshiftClient", "DeauthorizeDataShareCommand").f(void 0, void 0).ser(se_DeauthorizeDataShareCommand).de(de_DeauthorizeDataShareCommand).build() {
};
__name(_DeauthorizeDataShareCommand, "DeauthorizeDataShareCommand");
var DeauthorizeDataShareCommand = _DeauthorizeDataShareCommand;

// src/commands/DeleteAuthenticationProfileCommand.ts




var _DeleteAuthenticationProfileCommand = class _DeleteAuthenticationProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteAuthenticationProfile", {}).n("RedshiftClient", "DeleteAuthenticationProfileCommand").f(void 0, void 0).ser(se_DeleteAuthenticationProfileCommand).de(de_DeleteAuthenticationProfileCommand).build() {
};
__name(_DeleteAuthenticationProfileCommand, "DeleteAuthenticationProfileCommand");
var DeleteAuthenticationProfileCommand = _DeleteAuthenticationProfileCommand;

// src/commands/DeleteClusterCommand.ts




var _DeleteClusterCommand = class _DeleteClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteCluster", {}).n("RedshiftClient", "DeleteClusterCommand").f(void 0, DeleteClusterResultFilterSensitiveLog).ser(se_DeleteClusterCommand).de(de_DeleteClusterCommand).build() {
};
__name(_DeleteClusterCommand, "DeleteClusterCommand");
var DeleteClusterCommand = _DeleteClusterCommand;

// src/commands/DeleteClusterParameterGroupCommand.ts




var _DeleteClusterParameterGroupCommand = class _DeleteClusterParameterGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteClusterParameterGroup", {}).n("RedshiftClient", "DeleteClusterParameterGroupCommand").f(void 0, void 0).ser(se_DeleteClusterParameterGroupCommand).de(de_DeleteClusterParameterGroupCommand).build() {
};
__name(_DeleteClusterParameterGroupCommand, "DeleteClusterParameterGroupCommand");
var DeleteClusterParameterGroupCommand = _DeleteClusterParameterGroupCommand;

// src/commands/DeleteClusterSecurityGroupCommand.ts




var _DeleteClusterSecurityGroupCommand = class _DeleteClusterSecurityGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteClusterSecurityGroup", {}).n("RedshiftClient", "DeleteClusterSecurityGroupCommand").f(void 0, void 0).ser(se_DeleteClusterSecurityGroupCommand).de(de_DeleteClusterSecurityGroupCommand).build() {
};
__name(_DeleteClusterSecurityGroupCommand, "DeleteClusterSecurityGroupCommand");
var DeleteClusterSecurityGroupCommand = _DeleteClusterSecurityGroupCommand;

// src/commands/DeleteClusterSnapshotCommand.ts




var _DeleteClusterSnapshotCommand = class _DeleteClusterSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteClusterSnapshot", {}).n("RedshiftClient", "DeleteClusterSnapshotCommand").f(void 0, void 0).ser(se_DeleteClusterSnapshotCommand).de(de_DeleteClusterSnapshotCommand).build() {
};
__name(_DeleteClusterSnapshotCommand, "DeleteClusterSnapshotCommand");
var DeleteClusterSnapshotCommand = _DeleteClusterSnapshotCommand;

// src/commands/DeleteClusterSubnetGroupCommand.ts




var _DeleteClusterSubnetGroupCommand = class _DeleteClusterSubnetGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteClusterSubnetGroup", {}).n("RedshiftClient", "DeleteClusterSubnetGroupCommand").f(void 0, void 0).ser(se_DeleteClusterSubnetGroupCommand).de(de_DeleteClusterSubnetGroupCommand).build() {
};
__name(_DeleteClusterSubnetGroupCommand, "DeleteClusterSubnetGroupCommand");
var DeleteClusterSubnetGroupCommand = _DeleteClusterSubnetGroupCommand;

// src/commands/DeleteCustomDomainAssociationCommand.ts




var _DeleteCustomDomainAssociationCommand = class _DeleteCustomDomainAssociationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteCustomDomainAssociation", {}).n("RedshiftClient", "DeleteCustomDomainAssociationCommand").f(void 0, void 0).ser(se_DeleteCustomDomainAssociationCommand).de(de_DeleteCustomDomainAssociationCommand).build() {
};
__name(_DeleteCustomDomainAssociationCommand, "DeleteCustomDomainAssociationCommand");
var DeleteCustomDomainAssociationCommand = _DeleteCustomDomainAssociationCommand;

// src/commands/DeleteEndpointAccessCommand.ts




var _DeleteEndpointAccessCommand = class _DeleteEndpointAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteEndpointAccess", {}).n("RedshiftClient", "DeleteEndpointAccessCommand").f(void 0, void 0).ser(se_DeleteEndpointAccessCommand).de(de_DeleteEndpointAccessCommand).build() {
};
__name(_DeleteEndpointAccessCommand, "DeleteEndpointAccessCommand");
var DeleteEndpointAccessCommand = _DeleteEndpointAccessCommand;

// src/commands/DeleteEventSubscriptionCommand.ts




var _DeleteEventSubscriptionCommand = class _DeleteEventSubscriptionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteEventSubscription", {}).n("RedshiftClient", "DeleteEventSubscriptionCommand").f(void 0, void 0).ser(se_DeleteEventSubscriptionCommand).de(de_DeleteEventSubscriptionCommand).build() {
};
__name(_DeleteEventSubscriptionCommand, "DeleteEventSubscriptionCommand");
var DeleteEventSubscriptionCommand = _DeleteEventSubscriptionCommand;

// src/commands/DeleteHsmClientCertificateCommand.ts




var _DeleteHsmClientCertificateCommand = class _DeleteHsmClientCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteHsmClientCertificate", {}).n("RedshiftClient", "DeleteHsmClientCertificateCommand").f(void 0, void 0).ser(se_DeleteHsmClientCertificateCommand).de(de_DeleteHsmClientCertificateCommand).build() {
};
__name(_DeleteHsmClientCertificateCommand, "DeleteHsmClientCertificateCommand");
var DeleteHsmClientCertificateCommand = _DeleteHsmClientCertificateCommand;

// src/commands/DeleteHsmConfigurationCommand.ts




var _DeleteHsmConfigurationCommand = class _DeleteHsmConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteHsmConfiguration", {}).n("RedshiftClient", "DeleteHsmConfigurationCommand").f(void 0, void 0).ser(se_DeleteHsmConfigurationCommand).de(de_DeleteHsmConfigurationCommand).build() {
};
__name(_DeleteHsmConfigurationCommand, "DeleteHsmConfigurationCommand");
var DeleteHsmConfigurationCommand = _DeleteHsmConfigurationCommand;

// src/commands/DeletePartnerCommand.ts




var _DeletePartnerCommand = class _DeletePartnerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeletePartner", {}).n("RedshiftClient", "DeletePartnerCommand").f(void 0, void 0).ser(se_DeletePartnerCommand).de(de_DeletePartnerCommand).build() {
};
__name(_DeletePartnerCommand, "DeletePartnerCommand");
var DeletePartnerCommand = _DeletePartnerCommand;

// src/commands/DeleteRedshiftIdcApplicationCommand.ts




var _DeleteRedshiftIdcApplicationCommand = class _DeleteRedshiftIdcApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteRedshiftIdcApplication", {}).n("RedshiftClient", "DeleteRedshiftIdcApplicationCommand").f(void 0, void 0).ser(se_DeleteRedshiftIdcApplicationCommand).de(de_DeleteRedshiftIdcApplicationCommand).build() {
};
__name(_DeleteRedshiftIdcApplicationCommand, "DeleteRedshiftIdcApplicationCommand");
var DeleteRedshiftIdcApplicationCommand = _DeleteRedshiftIdcApplicationCommand;

// src/commands/DeleteResourcePolicyCommand.ts




var _DeleteResourcePolicyCommand = class _DeleteResourcePolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteResourcePolicy", {}).n("RedshiftClient", "DeleteResourcePolicyCommand").f(void 0, void 0).ser(se_DeleteResourcePolicyCommand).de(de_DeleteResourcePolicyCommand).build() {
};
__name(_DeleteResourcePolicyCommand, "DeleteResourcePolicyCommand");
var DeleteResourcePolicyCommand = _DeleteResourcePolicyCommand;

// src/commands/DeleteScheduledActionCommand.ts




var _DeleteScheduledActionCommand = class _DeleteScheduledActionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteScheduledAction", {}).n("RedshiftClient", "DeleteScheduledActionCommand").f(void 0, void 0).ser(se_DeleteScheduledActionCommand).de(de_DeleteScheduledActionCommand).build() {
};
__name(_DeleteScheduledActionCommand, "DeleteScheduledActionCommand");
var DeleteScheduledActionCommand = _DeleteScheduledActionCommand;

// src/commands/DeleteSnapshotCopyGrantCommand.ts




var _DeleteSnapshotCopyGrantCommand = class _DeleteSnapshotCopyGrantCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteSnapshotCopyGrant", {}).n("RedshiftClient", "DeleteSnapshotCopyGrantCommand").f(void 0, void 0).ser(se_DeleteSnapshotCopyGrantCommand).de(de_DeleteSnapshotCopyGrantCommand).build() {
};
__name(_DeleteSnapshotCopyGrantCommand, "DeleteSnapshotCopyGrantCommand");
var DeleteSnapshotCopyGrantCommand = _DeleteSnapshotCopyGrantCommand;

// src/commands/DeleteSnapshotScheduleCommand.ts




var _DeleteSnapshotScheduleCommand = class _DeleteSnapshotScheduleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteSnapshotSchedule", {}).n("RedshiftClient", "DeleteSnapshotScheduleCommand").f(void 0, void 0).ser(se_DeleteSnapshotScheduleCommand).de(de_DeleteSnapshotScheduleCommand).build() {
};
__name(_DeleteSnapshotScheduleCommand, "DeleteSnapshotScheduleCommand");
var DeleteSnapshotScheduleCommand = _DeleteSnapshotScheduleCommand;

// src/commands/DeleteTagsCommand.ts




var _DeleteTagsCommand = class _DeleteTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteTags", {}).n("RedshiftClient", "DeleteTagsCommand").f(void 0, void 0).ser(se_DeleteTagsCommand).de(de_DeleteTagsCommand).build() {
};
__name(_DeleteTagsCommand, "DeleteTagsCommand");
var DeleteTagsCommand = _DeleteTagsCommand;

// src/commands/DeleteUsageLimitCommand.ts




var _DeleteUsageLimitCommand = class _DeleteUsageLimitCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DeleteUsageLimit", {}).n("RedshiftClient", "DeleteUsageLimitCommand").f(void 0, void 0).ser(se_DeleteUsageLimitCommand).de(de_DeleteUsageLimitCommand).build() {
};
__name(_DeleteUsageLimitCommand, "DeleteUsageLimitCommand");
var DeleteUsageLimitCommand = _DeleteUsageLimitCommand;

// src/commands/DescribeAccountAttributesCommand.ts




var _DescribeAccountAttributesCommand = class _DescribeAccountAttributesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeAccountAttributes", {}).n("RedshiftClient", "DescribeAccountAttributesCommand").f(void 0, void 0).ser(se_DescribeAccountAttributesCommand).de(de_DescribeAccountAttributesCommand).build() {
};
__name(_DescribeAccountAttributesCommand, "DescribeAccountAttributesCommand");
var DescribeAccountAttributesCommand = _DescribeAccountAttributesCommand;

// src/commands/DescribeAuthenticationProfilesCommand.ts




var _DescribeAuthenticationProfilesCommand = class _DescribeAuthenticationProfilesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeAuthenticationProfiles", {}).n("RedshiftClient", "DescribeAuthenticationProfilesCommand").f(void 0, void 0).ser(se_DescribeAuthenticationProfilesCommand).de(de_DescribeAuthenticationProfilesCommand).build() {
};
__name(_DescribeAuthenticationProfilesCommand, "DescribeAuthenticationProfilesCommand");
var DescribeAuthenticationProfilesCommand = _DescribeAuthenticationProfilesCommand;

// src/commands/DescribeClusterDbRevisionsCommand.ts




var _DescribeClusterDbRevisionsCommand = class _DescribeClusterDbRevisionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeClusterDbRevisions", {}).n("RedshiftClient", "DescribeClusterDbRevisionsCommand").f(void 0, void 0).ser(se_DescribeClusterDbRevisionsCommand).de(de_DescribeClusterDbRevisionsCommand).build() {
};
__name(_DescribeClusterDbRevisionsCommand, "DescribeClusterDbRevisionsCommand");
var DescribeClusterDbRevisionsCommand = _DescribeClusterDbRevisionsCommand;

// src/commands/DescribeClusterParameterGroupsCommand.ts




var _DescribeClusterParameterGroupsCommand = class _DescribeClusterParameterGroupsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeClusterParameterGroups", {}).n("RedshiftClient", "DescribeClusterParameterGroupsCommand").f(void 0, void 0).ser(se_DescribeClusterParameterGroupsCommand).de(de_DescribeClusterParameterGroupsCommand).build() {
};
__name(_DescribeClusterParameterGroupsCommand, "DescribeClusterParameterGroupsCommand");
var DescribeClusterParameterGroupsCommand = _DescribeClusterParameterGroupsCommand;

// src/commands/DescribeClusterParametersCommand.ts




var _DescribeClusterParametersCommand = class _DescribeClusterParametersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeClusterParameters", {}).n("RedshiftClient", "DescribeClusterParametersCommand").f(void 0, void 0).ser(se_DescribeClusterParametersCommand).de(de_DescribeClusterParametersCommand).build() {
};
__name(_DescribeClusterParametersCommand, "DescribeClusterParametersCommand");
var DescribeClusterParametersCommand = _DescribeClusterParametersCommand;

// src/commands/DescribeClustersCommand.ts




var _DescribeClustersCommand = class _DescribeClustersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeClusters", {}).n("RedshiftClient", "DescribeClustersCommand").f(void 0, ClustersMessageFilterSensitiveLog).ser(se_DescribeClustersCommand).de(de_DescribeClustersCommand).build() {
};
__name(_DescribeClustersCommand, "DescribeClustersCommand");
var DescribeClustersCommand = _DescribeClustersCommand;

// src/commands/DescribeClusterSecurityGroupsCommand.ts




var _DescribeClusterSecurityGroupsCommand = class _DescribeClusterSecurityGroupsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeClusterSecurityGroups", {}).n("RedshiftClient", "DescribeClusterSecurityGroupsCommand").f(void 0, void 0).ser(se_DescribeClusterSecurityGroupsCommand).de(de_DescribeClusterSecurityGroupsCommand).build() {
};
__name(_DescribeClusterSecurityGroupsCommand, "DescribeClusterSecurityGroupsCommand");
var DescribeClusterSecurityGroupsCommand = _DescribeClusterSecurityGroupsCommand;

// src/commands/DescribeClusterSnapshotsCommand.ts




var _DescribeClusterSnapshotsCommand = class _DescribeClusterSnapshotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeClusterSnapshots", {}).n("RedshiftClient", "DescribeClusterSnapshotsCommand").f(void 0, void 0).ser(se_DescribeClusterSnapshotsCommand).de(de_DescribeClusterSnapshotsCommand).build() {
};
__name(_DescribeClusterSnapshotsCommand, "DescribeClusterSnapshotsCommand");
var DescribeClusterSnapshotsCommand = _DescribeClusterSnapshotsCommand;

// src/commands/DescribeClusterSubnetGroupsCommand.ts




var _DescribeClusterSubnetGroupsCommand = class _DescribeClusterSubnetGroupsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeClusterSubnetGroups", {}).n("RedshiftClient", "DescribeClusterSubnetGroupsCommand").f(void 0, void 0).ser(se_DescribeClusterSubnetGroupsCommand).de(de_DescribeClusterSubnetGroupsCommand).build() {
};
__name(_DescribeClusterSubnetGroupsCommand, "DescribeClusterSubnetGroupsCommand");
var DescribeClusterSubnetGroupsCommand = _DescribeClusterSubnetGroupsCommand;

// src/commands/DescribeClusterTracksCommand.ts




var _DescribeClusterTracksCommand = class _DescribeClusterTracksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeClusterTracks", {}).n("RedshiftClient", "DescribeClusterTracksCommand").f(void 0, void 0).ser(se_DescribeClusterTracksCommand).de(de_DescribeClusterTracksCommand).build() {
};
__name(_DescribeClusterTracksCommand, "DescribeClusterTracksCommand");
var DescribeClusterTracksCommand = _DescribeClusterTracksCommand;

// src/commands/DescribeClusterVersionsCommand.ts




var _DescribeClusterVersionsCommand = class _DescribeClusterVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeClusterVersions", {}).n("RedshiftClient", "DescribeClusterVersionsCommand").f(void 0, void 0).ser(se_DescribeClusterVersionsCommand).de(de_DescribeClusterVersionsCommand).build() {
};
__name(_DescribeClusterVersionsCommand, "DescribeClusterVersionsCommand");
var DescribeClusterVersionsCommand = _DescribeClusterVersionsCommand;

// src/commands/DescribeCustomDomainAssociationsCommand.ts




var _DescribeCustomDomainAssociationsCommand = class _DescribeCustomDomainAssociationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeCustomDomainAssociations", {}).n("RedshiftClient", "DescribeCustomDomainAssociationsCommand").f(void 0, void 0).ser(se_DescribeCustomDomainAssociationsCommand).de(de_DescribeCustomDomainAssociationsCommand).build() {
};
__name(_DescribeCustomDomainAssociationsCommand, "DescribeCustomDomainAssociationsCommand");
var DescribeCustomDomainAssociationsCommand = _DescribeCustomDomainAssociationsCommand;

// src/commands/DescribeDataSharesCommand.ts




var _DescribeDataSharesCommand = class _DescribeDataSharesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeDataShares", {}).n("RedshiftClient", "DescribeDataSharesCommand").f(void 0, void 0).ser(se_DescribeDataSharesCommand).de(de_DescribeDataSharesCommand).build() {
};
__name(_DescribeDataSharesCommand, "DescribeDataSharesCommand");
var DescribeDataSharesCommand = _DescribeDataSharesCommand;

// src/commands/DescribeDataSharesForConsumerCommand.ts




var _DescribeDataSharesForConsumerCommand = class _DescribeDataSharesForConsumerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeDataSharesForConsumer", {}).n("RedshiftClient", "DescribeDataSharesForConsumerCommand").f(void 0, void 0).ser(se_DescribeDataSharesForConsumerCommand).de(de_DescribeDataSharesForConsumerCommand).build() {
};
__name(_DescribeDataSharesForConsumerCommand, "DescribeDataSharesForConsumerCommand");
var DescribeDataSharesForConsumerCommand = _DescribeDataSharesForConsumerCommand;

// src/commands/DescribeDataSharesForProducerCommand.ts




var _DescribeDataSharesForProducerCommand = class _DescribeDataSharesForProducerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeDataSharesForProducer", {}).n("RedshiftClient", "DescribeDataSharesForProducerCommand").f(void 0, void 0).ser(se_DescribeDataSharesForProducerCommand).de(de_DescribeDataSharesForProducerCommand).build() {
};
__name(_DescribeDataSharesForProducerCommand, "DescribeDataSharesForProducerCommand");
var DescribeDataSharesForProducerCommand = _DescribeDataSharesForProducerCommand;

// src/commands/DescribeDefaultClusterParametersCommand.ts




var _DescribeDefaultClusterParametersCommand = class _DescribeDefaultClusterParametersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeDefaultClusterParameters", {}).n("RedshiftClient", "DescribeDefaultClusterParametersCommand").f(void 0, void 0).ser(se_DescribeDefaultClusterParametersCommand).de(de_DescribeDefaultClusterParametersCommand).build() {
};
__name(_DescribeDefaultClusterParametersCommand, "DescribeDefaultClusterParametersCommand");
var DescribeDefaultClusterParametersCommand = _DescribeDefaultClusterParametersCommand;

// src/commands/DescribeEndpointAccessCommand.ts




var _DescribeEndpointAccessCommand = class _DescribeEndpointAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeEndpointAccess", {}).n("RedshiftClient", "DescribeEndpointAccessCommand").f(void 0, void 0).ser(se_DescribeEndpointAccessCommand).de(de_DescribeEndpointAccessCommand).build() {
};
__name(_DescribeEndpointAccessCommand, "DescribeEndpointAccessCommand");
var DescribeEndpointAccessCommand = _DescribeEndpointAccessCommand;

// src/commands/DescribeEndpointAuthorizationCommand.ts




var _DescribeEndpointAuthorizationCommand = class _DescribeEndpointAuthorizationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeEndpointAuthorization", {}).n("RedshiftClient", "DescribeEndpointAuthorizationCommand").f(void 0, void 0).ser(se_DescribeEndpointAuthorizationCommand).de(de_DescribeEndpointAuthorizationCommand).build() {
};
__name(_DescribeEndpointAuthorizationCommand, "DescribeEndpointAuthorizationCommand");
var DescribeEndpointAuthorizationCommand = _DescribeEndpointAuthorizationCommand;

// src/commands/DescribeEventCategoriesCommand.ts




var _DescribeEventCategoriesCommand = class _DescribeEventCategoriesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeEventCategories", {}).n("RedshiftClient", "DescribeEventCategoriesCommand").f(void 0, void 0).ser(se_DescribeEventCategoriesCommand).de(de_DescribeEventCategoriesCommand).build() {
};
__name(_DescribeEventCategoriesCommand, "DescribeEventCategoriesCommand");
var DescribeEventCategoriesCommand = _DescribeEventCategoriesCommand;

// src/commands/DescribeEventsCommand.ts




var _DescribeEventsCommand = class _DescribeEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeEvents", {}).n("RedshiftClient", "DescribeEventsCommand").f(void 0, void 0).ser(se_DescribeEventsCommand).de(de_DescribeEventsCommand).build() {
};
__name(_DescribeEventsCommand, "DescribeEventsCommand");
var DescribeEventsCommand = _DescribeEventsCommand;

// src/commands/DescribeEventSubscriptionsCommand.ts




var _DescribeEventSubscriptionsCommand = class _DescribeEventSubscriptionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeEventSubscriptions", {}).n("RedshiftClient", "DescribeEventSubscriptionsCommand").f(void 0, void 0).ser(se_DescribeEventSubscriptionsCommand).de(de_DescribeEventSubscriptionsCommand).build() {
};
__name(_DescribeEventSubscriptionsCommand, "DescribeEventSubscriptionsCommand");
var DescribeEventSubscriptionsCommand = _DescribeEventSubscriptionsCommand;

// src/commands/DescribeHsmClientCertificatesCommand.ts




var _DescribeHsmClientCertificatesCommand = class _DescribeHsmClientCertificatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeHsmClientCertificates", {}).n("RedshiftClient", "DescribeHsmClientCertificatesCommand").f(void 0, void 0).ser(se_DescribeHsmClientCertificatesCommand).de(de_DescribeHsmClientCertificatesCommand).build() {
};
__name(_DescribeHsmClientCertificatesCommand, "DescribeHsmClientCertificatesCommand");
var DescribeHsmClientCertificatesCommand = _DescribeHsmClientCertificatesCommand;

// src/commands/DescribeHsmConfigurationsCommand.ts




var _DescribeHsmConfigurationsCommand = class _DescribeHsmConfigurationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeHsmConfigurations", {}).n("RedshiftClient", "DescribeHsmConfigurationsCommand").f(void 0, void 0).ser(se_DescribeHsmConfigurationsCommand).de(de_DescribeHsmConfigurationsCommand).build() {
};
__name(_DescribeHsmConfigurationsCommand, "DescribeHsmConfigurationsCommand");
var DescribeHsmConfigurationsCommand = _DescribeHsmConfigurationsCommand;

// src/commands/DescribeInboundIntegrationsCommand.ts




var _DescribeInboundIntegrationsCommand = class _DescribeInboundIntegrationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeInboundIntegrations", {}).n("RedshiftClient", "DescribeInboundIntegrationsCommand").f(void 0, void 0).ser(se_DescribeInboundIntegrationsCommand).de(de_DescribeInboundIntegrationsCommand).build() {
};
__name(_DescribeInboundIntegrationsCommand, "DescribeInboundIntegrationsCommand");
var DescribeInboundIntegrationsCommand = _DescribeInboundIntegrationsCommand;

// src/commands/DescribeLoggingStatusCommand.ts




var _DescribeLoggingStatusCommand = class _DescribeLoggingStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeLoggingStatus", {}).n("RedshiftClient", "DescribeLoggingStatusCommand").f(void 0, void 0).ser(se_DescribeLoggingStatusCommand).de(de_DescribeLoggingStatusCommand).build() {
};
__name(_DescribeLoggingStatusCommand, "DescribeLoggingStatusCommand");
var DescribeLoggingStatusCommand = _DescribeLoggingStatusCommand;

// src/commands/DescribeNodeConfigurationOptionsCommand.ts




var _DescribeNodeConfigurationOptionsCommand = class _DescribeNodeConfigurationOptionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeNodeConfigurationOptions", {}).n("RedshiftClient", "DescribeNodeConfigurationOptionsCommand").f(void 0, void 0).ser(se_DescribeNodeConfigurationOptionsCommand).de(de_DescribeNodeConfigurationOptionsCommand).build() {
};
__name(_DescribeNodeConfigurationOptionsCommand, "DescribeNodeConfigurationOptionsCommand");
var DescribeNodeConfigurationOptionsCommand = _DescribeNodeConfigurationOptionsCommand;

// src/commands/DescribeOrderableClusterOptionsCommand.ts




var _DescribeOrderableClusterOptionsCommand = class _DescribeOrderableClusterOptionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeOrderableClusterOptions", {}).n("RedshiftClient", "DescribeOrderableClusterOptionsCommand").f(void 0, void 0).ser(se_DescribeOrderableClusterOptionsCommand).de(de_DescribeOrderableClusterOptionsCommand).build() {
};
__name(_DescribeOrderableClusterOptionsCommand, "DescribeOrderableClusterOptionsCommand");
var DescribeOrderableClusterOptionsCommand = _DescribeOrderableClusterOptionsCommand;

// src/commands/DescribePartnersCommand.ts




var _DescribePartnersCommand = class _DescribePartnersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribePartners", {}).n("RedshiftClient", "DescribePartnersCommand").f(void 0, void 0).ser(se_DescribePartnersCommand).de(de_DescribePartnersCommand).build() {
};
__name(_DescribePartnersCommand, "DescribePartnersCommand");
var DescribePartnersCommand = _DescribePartnersCommand;

// src/commands/DescribeRedshiftIdcApplicationsCommand.ts




var _DescribeRedshiftIdcApplicationsCommand = class _DescribeRedshiftIdcApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeRedshiftIdcApplications", {}).n("RedshiftClient", "DescribeRedshiftIdcApplicationsCommand").f(void 0, void 0).ser(se_DescribeRedshiftIdcApplicationsCommand).de(de_DescribeRedshiftIdcApplicationsCommand).build() {
};
__name(_DescribeRedshiftIdcApplicationsCommand, "DescribeRedshiftIdcApplicationsCommand");
var DescribeRedshiftIdcApplicationsCommand = _DescribeRedshiftIdcApplicationsCommand;

// src/commands/DescribeReservedNodeExchangeStatusCommand.ts




var _DescribeReservedNodeExchangeStatusCommand = class _DescribeReservedNodeExchangeStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeReservedNodeExchangeStatus", {}).n("RedshiftClient", "DescribeReservedNodeExchangeStatusCommand").f(void 0, void 0).ser(se_DescribeReservedNodeExchangeStatusCommand).de(de_DescribeReservedNodeExchangeStatusCommand).build() {
};
__name(_DescribeReservedNodeExchangeStatusCommand, "DescribeReservedNodeExchangeStatusCommand");
var DescribeReservedNodeExchangeStatusCommand = _DescribeReservedNodeExchangeStatusCommand;

// src/commands/DescribeReservedNodeOfferingsCommand.ts




var _DescribeReservedNodeOfferingsCommand = class _DescribeReservedNodeOfferingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeReservedNodeOfferings", {}).n("RedshiftClient", "DescribeReservedNodeOfferingsCommand").f(void 0, void 0).ser(se_DescribeReservedNodeOfferingsCommand).de(de_DescribeReservedNodeOfferingsCommand).build() {
};
__name(_DescribeReservedNodeOfferingsCommand, "DescribeReservedNodeOfferingsCommand");
var DescribeReservedNodeOfferingsCommand = _DescribeReservedNodeOfferingsCommand;

// src/commands/DescribeReservedNodesCommand.ts




var _DescribeReservedNodesCommand = class _DescribeReservedNodesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeReservedNodes", {}).n("RedshiftClient", "DescribeReservedNodesCommand").f(void 0, void 0).ser(se_DescribeReservedNodesCommand).de(de_DescribeReservedNodesCommand).build() {
};
__name(_DescribeReservedNodesCommand, "DescribeReservedNodesCommand");
var DescribeReservedNodesCommand = _DescribeReservedNodesCommand;

// src/commands/DescribeResizeCommand.ts




var _DescribeResizeCommand = class _DescribeResizeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeResize", {}).n("RedshiftClient", "DescribeResizeCommand").f(void 0, void 0).ser(se_DescribeResizeCommand).de(de_DescribeResizeCommand).build() {
};
__name(_DescribeResizeCommand, "DescribeResizeCommand");
var DescribeResizeCommand = _DescribeResizeCommand;

// src/commands/DescribeScheduledActionsCommand.ts




var _DescribeScheduledActionsCommand = class _DescribeScheduledActionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeScheduledActions", {}).n("RedshiftClient", "DescribeScheduledActionsCommand").f(void 0, void 0).ser(se_DescribeScheduledActionsCommand).de(de_DescribeScheduledActionsCommand).build() {
};
__name(_DescribeScheduledActionsCommand, "DescribeScheduledActionsCommand");
var DescribeScheduledActionsCommand = _DescribeScheduledActionsCommand;

// src/commands/DescribeSnapshotCopyGrantsCommand.ts




var _DescribeSnapshotCopyGrantsCommand = class _DescribeSnapshotCopyGrantsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeSnapshotCopyGrants", {}).n("RedshiftClient", "DescribeSnapshotCopyGrantsCommand").f(void 0, void 0).ser(se_DescribeSnapshotCopyGrantsCommand).de(de_DescribeSnapshotCopyGrantsCommand).build() {
};
__name(_DescribeSnapshotCopyGrantsCommand, "DescribeSnapshotCopyGrantsCommand");
var DescribeSnapshotCopyGrantsCommand = _DescribeSnapshotCopyGrantsCommand;

// src/commands/DescribeSnapshotSchedulesCommand.ts




var _DescribeSnapshotSchedulesCommand = class _DescribeSnapshotSchedulesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeSnapshotSchedules", {}).n("RedshiftClient", "DescribeSnapshotSchedulesCommand").f(void 0, void 0).ser(se_DescribeSnapshotSchedulesCommand).de(de_DescribeSnapshotSchedulesCommand).build() {
};
__name(_DescribeSnapshotSchedulesCommand, "DescribeSnapshotSchedulesCommand");
var DescribeSnapshotSchedulesCommand = _DescribeSnapshotSchedulesCommand;

// src/commands/DescribeStorageCommand.ts




var _DescribeStorageCommand = class _DescribeStorageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeStorage", {}).n("RedshiftClient", "DescribeStorageCommand").f(void 0, void 0).ser(se_DescribeStorageCommand).de(de_DescribeStorageCommand).build() {
};
__name(_DescribeStorageCommand, "DescribeStorageCommand");
var DescribeStorageCommand = _DescribeStorageCommand;

// src/commands/DescribeTableRestoreStatusCommand.ts




var _DescribeTableRestoreStatusCommand = class _DescribeTableRestoreStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeTableRestoreStatus", {}).n("RedshiftClient", "DescribeTableRestoreStatusCommand").f(void 0, void 0).ser(se_DescribeTableRestoreStatusCommand).de(de_DescribeTableRestoreStatusCommand).build() {
};
__name(_DescribeTableRestoreStatusCommand, "DescribeTableRestoreStatusCommand");
var DescribeTableRestoreStatusCommand = _DescribeTableRestoreStatusCommand;

// src/commands/DescribeTagsCommand.ts




var _DescribeTagsCommand = class _DescribeTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeTags", {}).n("RedshiftClient", "DescribeTagsCommand").f(void 0, void 0).ser(se_DescribeTagsCommand).de(de_DescribeTagsCommand).build() {
};
__name(_DescribeTagsCommand, "DescribeTagsCommand");
var DescribeTagsCommand = _DescribeTagsCommand;

// src/commands/DescribeUsageLimitsCommand.ts




var _DescribeUsageLimitsCommand = class _DescribeUsageLimitsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DescribeUsageLimits", {}).n("RedshiftClient", "DescribeUsageLimitsCommand").f(void 0, void 0).ser(se_DescribeUsageLimitsCommand).de(de_DescribeUsageLimitsCommand).build() {
};
__name(_DescribeUsageLimitsCommand, "DescribeUsageLimitsCommand");
var DescribeUsageLimitsCommand = _DescribeUsageLimitsCommand;

// src/commands/DisableLoggingCommand.ts




var _DisableLoggingCommand = class _DisableLoggingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DisableLogging", {}).n("RedshiftClient", "DisableLoggingCommand").f(void 0, void 0).ser(se_DisableLoggingCommand).de(de_DisableLoggingCommand).build() {
};
__name(_DisableLoggingCommand, "DisableLoggingCommand");
var DisableLoggingCommand = _DisableLoggingCommand;

// src/commands/DisableSnapshotCopyCommand.ts




var _DisableSnapshotCopyCommand = class _DisableSnapshotCopyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DisableSnapshotCopy", {}).n("RedshiftClient", "DisableSnapshotCopyCommand").f(void 0, DisableSnapshotCopyResultFilterSensitiveLog).ser(se_DisableSnapshotCopyCommand).de(de_DisableSnapshotCopyCommand).build() {
};
__name(_DisableSnapshotCopyCommand, "DisableSnapshotCopyCommand");
var DisableSnapshotCopyCommand = _DisableSnapshotCopyCommand;

// src/commands/DisassociateDataShareConsumerCommand.ts




var _DisassociateDataShareConsumerCommand = class _DisassociateDataShareConsumerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "DisassociateDataShareConsumer", {}).n("RedshiftClient", "DisassociateDataShareConsumerCommand").f(void 0, void 0).ser(se_DisassociateDataShareConsumerCommand).de(de_DisassociateDataShareConsumerCommand).build() {
};
__name(_DisassociateDataShareConsumerCommand, "DisassociateDataShareConsumerCommand");
var DisassociateDataShareConsumerCommand = _DisassociateDataShareConsumerCommand;

// src/commands/EnableLoggingCommand.ts




var _EnableLoggingCommand = class _EnableLoggingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "EnableLogging", {}).n("RedshiftClient", "EnableLoggingCommand").f(void 0, void 0).ser(se_EnableLoggingCommand).de(de_EnableLoggingCommand).build() {
};
__name(_EnableLoggingCommand, "EnableLoggingCommand");
var EnableLoggingCommand = _EnableLoggingCommand;

// src/commands/EnableSnapshotCopyCommand.ts




var _EnableSnapshotCopyCommand = class _EnableSnapshotCopyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "EnableSnapshotCopy", {}).n("RedshiftClient", "EnableSnapshotCopyCommand").f(void 0, EnableSnapshotCopyResultFilterSensitiveLog).ser(se_EnableSnapshotCopyCommand).de(de_EnableSnapshotCopyCommand).build() {
};
__name(_EnableSnapshotCopyCommand, "EnableSnapshotCopyCommand");
var EnableSnapshotCopyCommand = _EnableSnapshotCopyCommand;

// src/commands/FailoverPrimaryComputeCommand.ts




var _FailoverPrimaryComputeCommand = class _FailoverPrimaryComputeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "FailoverPrimaryCompute", {}).n("RedshiftClient", "FailoverPrimaryComputeCommand").f(void 0, FailoverPrimaryComputeResultFilterSensitiveLog).ser(se_FailoverPrimaryComputeCommand).de(de_FailoverPrimaryComputeCommand).build() {
};
__name(_FailoverPrimaryComputeCommand, "FailoverPrimaryComputeCommand");
var FailoverPrimaryComputeCommand = _FailoverPrimaryComputeCommand;

// src/commands/GetClusterCredentialsCommand.ts




var _GetClusterCredentialsCommand = class _GetClusterCredentialsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "GetClusterCredentials", {}).n("RedshiftClient", "GetClusterCredentialsCommand").f(void 0, ClusterCredentialsFilterSensitiveLog).ser(se_GetClusterCredentialsCommand).de(de_GetClusterCredentialsCommand).build() {
};
__name(_GetClusterCredentialsCommand, "GetClusterCredentialsCommand");
var GetClusterCredentialsCommand = _GetClusterCredentialsCommand;

// src/commands/GetClusterCredentialsWithIAMCommand.ts




var _GetClusterCredentialsWithIAMCommand = class _GetClusterCredentialsWithIAMCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "GetClusterCredentialsWithIAM", {}).n("RedshiftClient", "GetClusterCredentialsWithIAMCommand").f(void 0, ClusterExtendedCredentialsFilterSensitiveLog).ser(se_GetClusterCredentialsWithIAMCommand).de(de_GetClusterCredentialsWithIAMCommand).build() {
};
__name(_GetClusterCredentialsWithIAMCommand, "GetClusterCredentialsWithIAMCommand");
var GetClusterCredentialsWithIAMCommand = _GetClusterCredentialsWithIAMCommand;

// src/commands/GetReservedNodeExchangeConfigurationOptionsCommand.ts




var _GetReservedNodeExchangeConfigurationOptionsCommand = class _GetReservedNodeExchangeConfigurationOptionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "GetReservedNodeExchangeConfigurationOptions", {}).n("RedshiftClient", "GetReservedNodeExchangeConfigurationOptionsCommand").f(void 0, void 0).ser(se_GetReservedNodeExchangeConfigurationOptionsCommand).de(de_GetReservedNodeExchangeConfigurationOptionsCommand).build() {
};
__name(_GetReservedNodeExchangeConfigurationOptionsCommand, "GetReservedNodeExchangeConfigurationOptionsCommand");
var GetReservedNodeExchangeConfigurationOptionsCommand = _GetReservedNodeExchangeConfigurationOptionsCommand;

// src/commands/GetReservedNodeExchangeOfferingsCommand.ts




var _GetReservedNodeExchangeOfferingsCommand = class _GetReservedNodeExchangeOfferingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "GetReservedNodeExchangeOfferings", {}).n("RedshiftClient", "GetReservedNodeExchangeOfferingsCommand").f(void 0, void 0).ser(se_GetReservedNodeExchangeOfferingsCommand).de(de_GetReservedNodeExchangeOfferingsCommand).build() {
};
__name(_GetReservedNodeExchangeOfferingsCommand, "GetReservedNodeExchangeOfferingsCommand");
var GetReservedNodeExchangeOfferingsCommand = _GetReservedNodeExchangeOfferingsCommand;

// src/commands/GetResourcePolicyCommand.ts




var _GetResourcePolicyCommand = class _GetResourcePolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "GetResourcePolicy", {}).n("RedshiftClient", "GetResourcePolicyCommand").f(void 0, void 0).ser(se_GetResourcePolicyCommand).de(de_GetResourcePolicyCommand).build() {
};
__name(_GetResourcePolicyCommand, "GetResourcePolicyCommand");
var GetResourcePolicyCommand = _GetResourcePolicyCommand;

// src/commands/ListRecommendationsCommand.ts




var _ListRecommendationsCommand = class _ListRecommendationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ListRecommendations", {}).n("RedshiftClient", "ListRecommendationsCommand").f(void 0, void 0).ser(se_ListRecommendationsCommand).de(de_ListRecommendationsCommand).build() {
};
__name(_ListRecommendationsCommand, "ListRecommendationsCommand");
var ListRecommendationsCommand = _ListRecommendationsCommand;

// src/commands/ModifyAquaConfigurationCommand.ts




var _ModifyAquaConfigurationCommand = class _ModifyAquaConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyAquaConfiguration", {}).n("RedshiftClient", "ModifyAquaConfigurationCommand").f(void 0, void 0).ser(se_ModifyAquaConfigurationCommand).de(de_ModifyAquaConfigurationCommand).build() {
};
__name(_ModifyAquaConfigurationCommand, "ModifyAquaConfigurationCommand");
var ModifyAquaConfigurationCommand = _ModifyAquaConfigurationCommand;

// src/commands/ModifyAuthenticationProfileCommand.ts




var _ModifyAuthenticationProfileCommand = class _ModifyAuthenticationProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyAuthenticationProfile", {}).n("RedshiftClient", "ModifyAuthenticationProfileCommand").f(void 0, void 0).ser(se_ModifyAuthenticationProfileCommand).de(de_ModifyAuthenticationProfileCommand).build() {
};
__name(_ModifyAuthenticationProfileCommand, "ModifyAuthenticationProfileCommand");
var ModifyAuthenticationProfileCommand = _ModifyAuthenticationProfileCommand;

// src/commands/ModifyClusterCommand.ts




var _ModifyClusterCommand = class _ModifyClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyCluster", {}).n("RedshiftClient", "ModifyClusterCommand").f(ModifyClusterMessageFilterSensitiveLog, ModifyClusterResultFilterSensitiveLog).ser(se_ModifyClusterCommand).de(de_ModifyClusterCommand).build() {
};
__name(_ModifyClusterCommand, "ModifyClusterCommand");
var ModifyClusterCommand = _ModifyClusterCommand;

// src/commands/ModifyClusterDbRevisionCommand.ts




var _ModifyClusterDbRevisionCommand = class _ModifyClusterDbRevisionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyClusterDbRevision", {}).n("RedshiftClient", "ModifyClusterDbRevisionCommand").f(void 0, ModifyClusterDbRevisionResultFilterSensitiveLog).ser(se_ModifyClusterDbRevisionCommand).de(de_ModifyClusterDbRevisionCommand).build() {
};
__name(_ModifyClusterDbRevisionCommand, "ModifyClusterDbRevisionCommand");
var ModifyClusterDbRevisionCommand = _ModifyClusterDbRevisionCommand;

// src/commands/ModifyClusterIamRolesCommand.ts




var _ModifyClusterIamRolesCommand = class _ModifyClusterIamRolesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyClusterIamRoles", {}).n("RedshiftClient", "ModifyClusterIamRolesCommand").f(void 0, ModifyClusterIamRolesResultFilterSensitiveLog).ser(se_ModifyClusterIamRolesCommand).de(de_ModifyClusterIamRolesCommand).build() {
};
__name(_ModifyClusterIamRolesCommand, "ModifyClusterIamRolesCommand");
var ModifyClusterIamRolesCommand = _ModifyClusterIamRolesCommand;

// src/commands/ModifyClusterMaintenanceCommand.ts




var _ModifyClusterMaintenanceCommand = class _ModifyClusterMaintenanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyClusterMaintenance", {}).n("RedshiftClient", "ModifyClusterMaintenanceCommand").f(void 0, ModifyClusterMaintenanceResultFilterSensitiveLog).ser(se_ModifyClusterMaintenanceCommand).de(de_ModifyClusterMaintenanceCommand).build() {
};
__name(_ModifyClusterMaintenanceCommand, "ModifyClusterMaintenanceCommand");
var ModifyClusterMaintenanceCommand = _ModifyClusterMaintenanceCommand;

// src/commands/ModifyClusterParameterGroupCommand.ts




var _ModifyClusterParameterGroupCommand = class _ModifyClusterParameterGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyClusterParameterGroup", {}).n("RedshiftClient", "ModifyClusterParameterGroupCommand").f(void 0, void 0).ser(se_ModifyClusterParameterGroupCommand).de(de_ModifyClusterParameterGroupCommand).build() {
};
__name(_ModifyClusterParameterGroupCommand, "ModifyClusterParameterGroupCommand");
var ModifyClusterParameterGroupCommand = _ModifyClusterParameterGroupCommand;

// src/commands/ModifyClusterSnapshotCommand.ts




var _ModifyClusterSnapshotCommand = class _ModifyClusterSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyClusterSnapshot", {}).n("RedshiftClient", "ModifyClusterSnapshotCommand").f(void 0, void 0).ser(se_ModifyClusterSnapshotCommand).de(de_ModifyClusterSnapshotCommand).build() {
};
__name(_ModifyClusterSnapshotCommand, "ModifyClusterSnapshotCommand");
var ModifyClusterSnapshotCommand = _ModifyClusterSnapshotCommand;

// src/commands/ModifyClusterSnapshotScheduleCommand.ts




var _ModifyClusterSnapshotScheduleCommand = class _ModifyClusterSnapshotScheduleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyClusterSnapshotSchedule", {}).n("RedshiftClient", "ModifyClusterSnapshotScheduleCommand").f(void 0, void 0).ser(se_ModifyClusterSnapshotScheduleCommand).de(de_ModifyClusterSnapshotScheduleCommand).build() {
};
__name(_ModifyClusterSnapshotScheduleCommand, "ModifyClusterSnapshotScheduleCommand");
var ModifyClusterSnapshotScheduleCommand = _ModifyClusterSnapshotScheduleCommand;

// src/commands/ModifyClusterSubnetGroupCommand.ts




var _ModifyClusterSubnetGroupCommand = class _ModifyClusterSubnetGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyClusterSubnetGroup", {}).n("RedshiftClient", "ModifyClusterSubnetGroupCommand").f(void 0, void 0).ser(se_ModifyClusterSubnetGroupCommand).de(de_ModifyClusterSubnetGroupCommand).build() {
};
__name(_ModifyClusterSubnetGroupCommand, "ModifyClusterSubnetGroupCommand");
var ModifyClusterSubnetGroupCommand = _ModifyClusterSubnetGroupCommand;

// src/commands/ModifyCustomDomainAssociationCommand.ts




var _ModifyCustomDomainAssociationCommand = class _ModifyCustomDomainAssociationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyCustomDomainAssociation", {}).n("RedshiftClient", "ModifyCustomDomainAssociationCommand").f(void 0, void 0).ser(se_ModifyCustomDomainAssociationCommand).de(de_ModifyCustomDomainAssociationCommand).build() {
};
__name(_ModifyCustomDomainAssociationCommand, "ModifyCustomDomainAssociationCommand");
var ModifyCustomDomainAssociationCommand = _ModifyCustomDomainAssociationCommand;

// src/commands/ModifyEndpointAccessCommand.ts




var _ModifyEndpointAccessCommand = class _ModifyEndpointAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyEndpointAccess", {}).n("RedshiftClient", "ModifyEndpointAccessCommand").f(void 0, void 0).ser(se_ModifyEndpointAccessCommand).de(de_ModifyEndpointAccessCommand).build() {
};
__name(_ModifyEndpointAccessCommand, "ModifyEndpointAccessCommand");
var ModifyEndpointAccessCommand = _ModifyEndpointAccessCommand;

// src/commands/ModifyEventSubscriptionCommand.ts




var _ModifyEventSubscriptionCommand = class _ModifyEventSubscriptionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyEventSubscription", {}).n("RedshiftClient", "ModifyEventSubscriptionCommand").f(void 0, void 0).ser(se_ModifyEventSubscriptionCommand).de(de_ModifyEventSubscriptionCommand).build() {
};
__name(_ModifyEventSubscriptionCommand, "ModifyEventSubscriptionCommand");
var ModifyEventSubscriptionCommand = _ModifyEventSubscriptionCommand;

// src/commands/ModifyRedshiftIdcApplicationCommand.ts




var _ModifyRedshiftIdcApplicationCommand = class _ModifyRedshiftIdcApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyRedshiftIdcApplication", {}).n("RedshiftClient", "ModifyRedshiftIdcApplicationCommand").f(void 0, void 0).ser(se_ModifyRedshiftIdcApplicationCommand).de(de_ModifyRedshiftIdcApplicationCommand).build() {
};
__name(_ModifyRedshiftIdcApplicationCommand, "ModifyRedshiftIdcApplicationCommand");
var ModifyRedshiftIdcApplicationCommand = _ModifyRedshiftIdcApplicationCommand;

// src/commands/ModifyScheduledActionCommand.ts




var _ModifyScheduledActionCommand = class _ModifyScheduledActionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyScheduledAction", {}).n("RedshiftClient", "ModifyScheduledActionCommand").f(void 0, void 0).ser(se_ModifyScheduledActionCommand).de(de_ModifyScheduledActionCommand).build() {
};
__name(_ModifyScheduledActionCommand, "ModifyScheduledActionCommand");
var ModifyScheduledActionCommand = _ModifyScheduledActionCommand;

// src/commands/ModifySnapshotCopyRetentionPeriodCommand.ts




var _ModifySnapshotCopyRetentionPeriodCommand = class _ModifySnapshotCopyRetentionPeriodCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifySnapshotCopyRetentionPeriod", {}).n("RedshiftClient", "ModifySnapshotCopyRetentionPeriodCommand").f(void 0, ModifySnapshotCopyRetentionPeriodResultFilterSensitiveLog).ser(se_ModifySnapshotCopyRetentionPeriodCommand).de(de_ModifySnapshotCopyRetentionPeriodCommand).build() {
};
__name(_ModifySnapshotCopyRetentionPeriodCommand, "ModifySnapshotCopyRetentionPeriodCommand");
var ModifySnapshotCopyRetentionPeriodCommand = _ModifySnapshotCopyRetentionPeriodCommand;

// src/commands/ModifySnapshotScheduleCommand.ts




var _ModifySnapshotScheduleCommand = class _ModifySnapshotScheduleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifySnapshotSchedule", {}).n("RedshiftClient", "ModifySnapshotScheduleCommand").f(void 0, void 0).ser(se_ModifySnapshotScheduleCommand).de(de_ModifySnapshotScheduleCommand).build() {
};
__name(_ModifySnapshotScheduleCommand, "ModifySnapshotScheduleCommand");
var ModifySnapshotScheduleCommand = _ModifySnapshotScheduleCommand;

// src/commands/ModifyUsageLimitCommand.ts




var _ModifyUsageLimitCommand = class _ModifyUsageLimitCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ModifyUsageLimit", {}).n("RedshiftClient", "ModifyUsageLimitCommand").f(void 0, void 0).ser(se_ModifyUsageLimitCommand).de(de_ModifyUsageLimitCommand).build() {
};
__name(_ModifyUsageLimitCommand, "ModifyUsageLimitCommand");
var ModifyUsageLimitCommand = _ModifyUsageLimitCommand;

// src/commands/PauseClusterCommand.ts




var _PauseClusterCommand = class _PauseClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "PauseCluster", {}).n("RedshiftClient", "PauseClusterCommand").f(void 0, PauseClusterResultFilterSensitiveLog).ser(se_PauseClusterCommand).de(de_PauseClusterCommand).build() {
};
__name(_PauseClusterCommand, "PauseClusterCommand");
var PauseClusterCommand = _PauseClusterCommand;

// src/commands/PurchaseReservedNodeOfferingCommand.ts




var _PurchaseReservedNodeOfferingCommand = class _PurchaseReservedNodeOfferingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "PurchaseReservedNodeOffering", {}).n("RedshiftClient", "PurchaseReservedNodeOfferingCommand").f(void 0, void 0).ser(se_PurchaseReservedNodeOfferingCommand).de(de_PurchaseReservedNodeOfferingCommand).build() {
};
__name(_PurchaseReservedNodeOfferingCommand, "PurchaseReservedNodeOfferingCommand");
var PurchaseReservedNodeOfferingCommand = _PurchaseReservedNodeOfferingCommand;

// src/commands/PutResourcePolicyCommand.ts




var _PutResourcePolicyCommand = class _PutResourcePolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "PutResourcePolicy", {}).n("RedshiftClient", "PutResourcePolicyCommand").f(void 0, void 0).ser(se_PutResourcePolicyCommand).de(de_PutResourcePolicyCommand).build() {
};
__name(_PutResourcePolicyCommand, "PutResourcePolicyCommand");
var PutResourcePolicyCommand = _PutResourcePolicyCommand;

// src/commands/RebootClusterCommand.ts




var _RebootClusterCommand = class _RebootClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "RebootCluster", {}).n("RedshiftClient", "RebootClusterCommand").f(void 0, RebootClusterResultFilterSensitiveLog).ser(se_RebootClusterCommand).de(de_RebootClusterCommand).build() {
};
__name(_RebootClusterCommand, "RebootClusterCommand");
var RebootClusterCommand = _RebootClusterCommand;

// src/commands/RejectDataShareCommand.ts




var _RejectDataShareCommand = class _RejectDataShareCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "RejectDataShare", {}).n("RedshiftClient", "RejectDataShareCommand").f(void 0, void 0).ser(se_RejectDataShareCommand).de(de_RejectDataShareCommand).build() {
};
__name(_RejectDataShareCommand, "RejectDataShareCommand");
var RejectDataShareCommand = _RejectDataShareCommand;

// src/commands/ResetClusterParameterGroupCommand.ts




var _ResetClusterParameterGroupCommand = class _ResetClusterParameterGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ResetClusterParameterGroup", {}).n("RedshiftClient", "ResetClusterParameterGroupCommand").f(void 0, void 0).ser(se_ResetClusterParameterGroupCommand).de(de_ResetClusterParameterGroupCommand).build() {
};
__name(_ResetClusterParameterGroupCommand, "ResetClusterParameterGroupCommand");
var ResetClusterParameterGroupCommand = _ResetClusterParameterGroupCommand;

// src/commands/ResizeClusterCommand.ts




var _ResizeClusterCommand = class _ResizeClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ResizeCluster", {}).n("RedshiftClient", "ResizeClusterCommand").f(void 0, ResizeClusterResultFilterSensitiveLog).ser(se_ResizeClusterCommand).de(de_ResizeClusterCommand).build() {
};
__name(_ResizeClusterCommand, "ResizeClusterCommand");
var ResizeClusterCommand = _ResizeClusterCommand;

// src/commands/RestoreFromClusterSnapshotCommand.ts




var _RestoreFromClusterSnapshotCommand = class _RestoreFromClusterSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "RestoreFromClusterSnapshot", {}).n("RedshiftClient", "RestoreFromClusterSnapshotCommand").f(void 0, RestoreFromClusterSnapshotResultFilterSensitiveLog).ser(se_RestoreFromClusterSnapshotCommand).de(de_RestoreFromClusterSnapshotCommand).build() {
};
__name(_RestoreFromClusterSnapshotCommand, "RestoreFromClusterSnapshotCommand");
var RestoreFromClusterSnapshotCommand = _RestoreFromClusterSnapshotCommand;

// src/commands/RestoreTableFromClusterSnapshotCommand.ts




var _RestoreTableFromClusterSnapshotCommand = class _RestoreTableFromClusterSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "RestoreTableFromClusterSnapshot", {}).n("RedshiftClient", "RestoreTableFromClusterSnapshotCommand").f(void 0, void 0).ser(se_RestoreTableFromClusterSnapshotCommand).de(de_RestoreTableFromClusterSnapshotCommand).build() {
};
__name(_RestoreTableFromClusterSnapshotCommand, "RestoreTableFromClusterSnapshotCommand");
var RestoreTableFromClusterSnapshotCommand = _RestoreTableFromClusterSnapshotCommand;

// src/commands/ResumeClusterCommand.ts




var _ResumeClusterCommand = class _ResumeClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "ResumeCluster", {}).n("RedshiftClient", "ResumeClusterCommand").f(void 0, ResumeClusterResultFilterSensitiveLog).ser(se_ResumeClusterCommand).de(de_ResumeClusterCommand).build() {
};
__name(_ResumeClusterCommand, "ResumeClusterCommand");
var ResumeClusterCommand = _ResumeClusterCommand;

// src/commands/RevokeClusterSecurityGroupIngressCommand.ts




var _RevokeClusterSecurityGroupIngressCommand = class _RevokeClusterSecurityGroupIngressCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "RevokeClusterSecurityGroupIngress", {}).n("RedshiftClient", "RevokeClusterSecurityGroupIngressCommand").f(void 0, void 0).ser(se_RevokeClusterSecurityGroupIngressCommand).de(de_RevokeClusterSecurityGroupIngressCommand).build() {
};
__name(_RevokeClusterSecurityGroupIngressCommand, "RevokeClusterSecurityGroupIngressCommand");
var RevokeClusterSecurityGroupIngressCommand = _RevokeClusterSecurityGroupIngressCommand;

// src/commands/RevokeEndpointAccessCommand.ts




var _RevokeEndpointAccessCommand = class _RevokeEndpointAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "RevokeEndpointAccess", {}).n("RedshiftClient", "RevokeEndpointAccessCommand").f(void 0, void 0).ser(se_RevokeEndpointAccessCommand).de(de_RevokeEndpointAccessCommand).build() {
};
__name(_RevokeEndpointAccessCommand, "RevokeEndpointAccessCommand");
var RevokeEndpointAccessCommand = _RevokeEndpointAccessCommand;

// src/commands/RevokeSnapshotAccessCommand.ts




var _RevokeSnapshotAccessCommand = class _RevokeSnapshotAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "RevokeSnapshotAccess", {}).n("RedshiftClient", "RevokeSnapshotAccessCommand").f(void 0, void 0).ser(se_RevokeSnapshotAccessCommand).de(de_RevokeSnapshotAccessCommand).build() {
};
__name(_RevokeSnapshotAccessCommand, "RevokeSnapshotAccessCommand");
var RevokeSnapshotAccessCommand = _RevokeSnapshotAccessCommand;

// src/commands/RotateEncryptionKeyCommand.ts




var _RotateEncryptionKeyCommand = class _RotateEncryptionKeyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "RotateEncryptionKey", {}).n("RedshiftClient", "RotateEncryptionKeyCommand").f(void 0, RotateEncryptionKeyResultFilterSensitiveLog).ser(se_RotateEncryptionKeyCommand).de(de_RotateEncryptionKeyCommand).build() {
};
__name(_RotateEncryptionKeyCommand, "RotateEncryptionKeyCommand");
var RotateEncryptionKeyCommand = _RotateEncryptionKeyCommand;

// src/commands/UpdatePartnerStatusCommand.ts




var _UpdatePartnerStatusCommand = class _UpdatePartnerStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftServiceVersion20121201", "UpdatePartnerStatus", {}).n("RedshiftClient", "UpdatePartnerStatusCommand").f(void 0, void 0).ser(se_UpdatePartnerStatusCommand).de(de_UpdatePartnerStatusCommand).build() {
};
__name(_UpdatePartnerStatusCommand, "UpdatePartnerStatusCommand");
var UpdatePartnerStatusCommand = _UpdatePartnerStatusCommand;

// src/Redshift.ts
var commands = {
  AcceptReservedNodeExchangeCommand,
  AddPartnerCommand,
  AssociateDataShareConsumerCommand,
  AuthorizeClusterSecurityGroupIngressCommand,
  AuthorizeDataShareCommand,
  AuthorizeEndpointAccessCommand,
  AuthorizeSnapshotAccessCommand,
  BatchDeleteClusterSnapshotsCommand,
  BatchModifyClusterSnapshotsCommand,
  CancelResizeCommand,
  CopyClusterSnapshotCommand,
  CreateAuthenticationProfileCommand,
  CreateClusterCommand,
  CreateClusterParameterGroupCommand,
  CreateClusterSecurityGroupCommand,
  CreateClusterSnapshotCommand,
  CreateClusterSubnetGroupCommand,
  CreateCustomDomainAssociationCommand,
  CreateEndpointAccessCommand,
  CreateEventSubscriptionCommand,
  CreateHsmClientCertificateCommand,
  CreateHsmConfigurationCommand,
  CreateRedshiftIdcApplicationCommand,
  CreateScheduledActionCommand,
  CreateSnapshotCopyGrantCommand,
  CreateSnapshotScheduleCommand,
  CreateTagsCommand,
  CreateUsageLimitCommand,
  DeauthorizeDataShareCommand,
  DeleteAuthenticationProfileCommand,
  DeleteClusterCommand,
  DeleteClusterParameterGroupCommand,
  DeleteClusterSecurityGroupCommand,
  DeleteClusterSnapshotCommand,
  DeleteClusterSubnetGroupCommand,
  DeleteCustomDomainAssociationCommand,
  DeleteEndpointAccessCommand,
  DeleteEventSubscriptionCommand,
  DeleteHsmClientCertificateCommand,
  DeleteHsmConfigurationCommand,
  DeletePartnerCommand,
  DeleteRedshiftIdcApplicationCommand,
  DeleteResourcePolicyCommand,
  DeleteScheduledActionCommand,
  DeleteSnapshotCopyGrantCommand,
  DeleteSnapshotScheduleCommand,
  DeleteTagsCommand,
  DeleteUsageLimitCommand,
  DescribeAccountAttributesCommand,
  DescribeAuthenticationProfilesCommand,
  DescribeClusterDbRevisionsCommand,
  DescribeClusterParameterGroupsCommand,
  DescribeClusterParametersCommand,
  DescribeClustersCommand,
  DescribeClusterSecurityGroupsCommand,
  DescribeClusterSnapshotsCommand,
  DescribeClusterSubnetGroupsCommand,
  DescribeClusterTracksCommand,
  DescribeClusterVersionsCommand,
  DescribeCustomDomainAssociationsCommand,
  DescribeDataSharesCommand,
  DescribeDataSharesForConsumerCommand,
  DescribeDataSharesForProducerCommand,
  DescribeDefaultClusterParametersCommand,
  DescribeEndpointAccessCommand,
  DescribeEndpointAuthorizationCommand,
  DescribeEventCategoriesCommand,
  DescribeEventsCommand,
  DescribeEventSubscriptionsCommand,
  DescribeHsmClientCertificatesCommand,
  DescribeHsmConfigurationsCommand,
  DescribeInboundIntegrationsCommand,
  DescribeLoggingStatusCommand,
  DescribeNodeConfigurationOptionsCommand,
  DescribeOrderableClusterOptionsCommand,
  DescribePartnersCommand,
  DescribeRedshiftIdcApplicationsCommand,
  DescribeReservedNodeExchangeStatusCommand,
  DescribeReservedNodeOfferingsCommand,
  DescribeReservedNodesCommand,
  DescribeResizeCommand,
  DescribeScheduledActionsCommand,
  DescribeSnapshotCopyGrantsCommand,
  DescribeSnapshotSchedulesCommand,
  DescribeStorageCommand,
  DescribeTableRestoreStatusCommand,
  DescribeTagsCommand,
  DescribeUsageLimitsCommand,
  DisableLoggingCommand,
  DisableSnapshotCopyCommand,
  DisassociateDataShareConsumerCommand,
  EnableLoggingCommand,
  EnableSnapshotCopyCommand,
  FailoverPrimaryComputeCommand,
  GetClusterCredentialsCommand,
  GetClusterCredentialsWithIAMCommand,
  GetReservedNodeExchangeConfigurationOptionsCommand,
  GetReservedNodeExchangeOfferingsCommand,
  GetResourcePolicyCommand,
  ListRecommendationsCommand,
  ModifyAquaConfigurationCommand,
  ModifyAuthenticationProfileCommand,
  ModifyClusterCommand,
  ModifyClusterDbRevisionCommand,
  ModifyClusterIamRolesCommand,
  ModifyClusterMaintenanceCommand,
  ModifyClusterParameterGroupCommand,
  ModifyClusterSnapshotCommand,
  ModifyClusterSnapshotScheduleCommand,
  ModifyClusterSubnetGroupCommand,
  ModifyCustomDomainAssociationCommand,
  ModifyEndpointAccessCommand,
  ModifyEventSubscriptionCommand,
  ModifyRedshiftIdcApplicationCommand,
  ModifyScheduledActionCommand,
  ModifySnapshotCopyRetentionPeriodCommand,
  ModifySnapshotScheduleCommand,
  ModifyUsageLimitCommand,
  PauseClusterCommand,
  PurchaseReservedNodeOfferingCommand,
  PutResourcePolicyCommand,
  RebootClusterCommand,
  RejectDataShareCommand,
  ResetClusterParameterGroupCommand,
  ResizeClusterCommand,
  RestoreFromClusterSnapshotCommand,
  RestoreTableFromClusterSnapshotCommand,
  ResumeClusterCommand,
  RevokeClusterSecurityGroupIngressCommand,
  RevokeEndpointAccessCommand,
  RevokeSnapshotAccessCommand,
  RotateEncryptionKeyCommand,
  UpdatePartnerStatusCommand
};
var _Redshift = class _Redshift extends RedshiftClient {
};
__name(_Redshift, "Redshift");
var Redshift = _Redshift;
(0, import_smithy_client.createAggregatedClient)(commands, Redshift);

// src/pagination/DescribeClusterDbRevisionsPaginator.ts

var paginateDescribeClusterDbRevisions = (0, import_core.createPaginator)(RedshiftClient, DescribeClusterDbRevisionsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeClusterParameterGroupsPaginator.ts

var paginateDescribeClusterParameterGroups = (0, import_core.createPaginator)(RedshiftClient, DescribeClusterParameterGroupsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeClusterParametersPaginator.ts

var paginateDescribeClusterParameters = (0, import_core.createPaginator)(RedshiftClient, DescribeClusterParametersCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeClusterSecurityGroupsPaginator.ts

var paginateDescribeClusterSecurityGroups = (0, import_core.createPaginator)(RedshiftClient, DescribeClusterSecurityGroupsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeClusterSnapshotsPaginator.ts

var paginateDescribeClusterSnapshots = (0, import_core.createPaginator)(RedshiftClient, DescribeClusterSnapshotsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeClusterSubnetGroupsPaginator.ts

var paginateDescribeClusterSubnetGroups = (0, import_core.createPaginator)(RedshiftClient, DescribeClusterSubnetGroupsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeClusterTracksPaginator.ts

var paginateDescribeClusterTracks = (0, import_core.createPaginator)(RedshiftClient, DescribeClusterTracksCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeClusterVersionsPaginator.ts

var paginateDescribeClusterVersions = (0, import_core.createPaginator)(RedshiftClient, DescribeClusterVersionsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeClustersPaginator.ts

var paginateDescribeClusters = (0, import_core.createPaginator)(RedshiftClient, DescribeClustersCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeCustomDomainAssociationsPaginator.ts

var paginateDescribeCustomDomainAssociations = (0, import_core.createPaginator)(RedshiftClient, DescribeCustomDomainAssociationsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeDataSharesForConsumerPaginator.ts

var paginateDescribeDataSharesForConsumer = (0, import_core.createPaginator)(RedshiftClient, DescribeDataSharesForConsumerCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeDataSharesForProducerPaginator.ts

var paginateDescribeDataSharesForProducer = (0, import_core.createPaginator)(RedshiftClient, DescribeDataSharesForProducerCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeDataSharesPaginator.ts

var paginateDescribeDataShares = (0, import_core.createPaginator)(RedshiftClient, DescribeDataSharesCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeDefaultClusterParametersPaginator.ts

var paginateDescribeDefaultClusterParameters = (0, import_core.createPaginator)(RedshiftClient, DescribeDefaultClusterParametersCommand, "Marker", "DefaultClusterParameters.Marker", "MaxRecords");

// src/pagination/DescribeEndpointAccessPaginator.ts

var paginateDescribeEndpointAccess = (0, import_core.createPaginator)(RedshiftClient, DescribeEndpointAccessCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeEndpointAuthorizationPaginator.ts

var paginateDescribeEndpointAuthorization = (0, import_core.createPaginator)(RedshiftClient, DescribeEndpointAuthorizationCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeEventSubscriptionsPaginator.ts

var paginateDescribeEventSubscriptions = (0, import_core.createPaginator)(RedshiftClient, DescribeEventSubscriptionsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeEventsPaginator.ts

var paginateDescribeEvents = (0, import_core.createPaginator)(RedshiftClient, DescribeEventsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeHsmClientCertificatesPaginator.ts

var paginateDescribeHsmClientCertificates = (0, import_core.createPaginator)(RedshiftClient, DescribeHsmClientCertificatesCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeHsmConfigurationsPaginator.ts

var paginateDescribeHsmConfigurations = (0, import_core.createPaginator)(RedshiftClient, DescribeHsmConfigurationsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeInboundIntegrationsPaginator.ts

var paginateDescribeInboundIntegrations = (0, import_core.createPaginator)(RedshiftClient, DescribeInboundIntegrationsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeNodeConfigurationOptionsPaginator.ts

var paginateDescribeNodeConfigurationOptions = (0, import_core.createPaginator)(RedshiftClient, DescribeNodeConfigurationOptionsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeOrderableClusterOptionsPaginator.ts

var paginateDescribeOrderableClusterOptions = (0, import_core.createPaginator)(RedshiftClient, DescribeOrderableClusterOptionsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeRedshiftIdcApplicationsPaginator.ts

var paginateDescribeRedshiftIdcApplications = (0, import_core.createPaginator)(RedshiftClient, DescribeRedshiftIdcApplicationsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeReservedNodeExchangeStatusPaginator.ts

var paginateDescribeReservedNodeExchangeStatus = (0, import_core.createPaginator)(RedshiftClient, DescribeReservedNodeExchangeStatusCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeReservedNodeOfferingsPaginator.ts

var paginateDescribeReservedNodeOfferings = (0, import_core.createPaginator)(RedshiftClient, DescribeReservedNodeOfferingsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeReservedNodesPaginator.ts

var paginateDescribeReservedNodes = (0, import_core.createPaginator)(RedshiftClient, DescribeReservedNodesCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeScheduledActionsPaginator.ts

var paginateDescribeScheduledActions = (0, import_core.createPaginator)(RedshiftClient, DescribeScheduledActionsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeSnapshotCopyGrantsPaginator.ts

var paginateDescribeSnapshotCopyGrants = (0, import_core.createPaginator)(RedshiftClient, DescribeSnapshotCopyGrantsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeSnapshotSchedulesPaginator.ts

var paginateDescribeSnapshotSchedules = (0, import_core.createPaginator)(RedshiftClient, DescribeSnapshotSchedulesCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeTableRestoreStatusPaginator.ts

var paginateDescribeTableRestoreStatus = (0, import_core.createPaginator)(RedshiftClient, DescribeTableRestoreStatusCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeTagsPaginator.ts

var paginateDescribeTags = (0, import_core.createPaginator)(RedshiftClient, DescribeTagsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/DescribeUsageLimitsPaginator.ts

var paginateDescribeUsageLimits = (0, import_core.createPaginator)(RedshiftClient, DescribeUsageLimitsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/GetReservedNodeExchangeConfigurationOptionsPaginator.ts

var paginateGetReservedNodeExchangeConfigurationOptions = (0, import_core.createPaginator)(RedshiftClient, GetReservedNodeExchangeConfigurationOptionsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/GetReservedNodeExchangeOfferingsPaginator.ts

var paginateGetReservedNodeExchangeOfferings = (0, import_core.createPaginator)(RedshiftClient, GetReservedNodeExchangeOfferingsCommand, "Marker", "Marker", "MaxRecords");

// src/pagination/ListRecommendationsPaginator.ts

var paginateListRecommendations = (0, import_core.createPaginator)(RedshiftClient, ListRecommendationsCommand, "Marker", "Marker", "MaxRecords");

// src/waiters/waitForClusterAvailable.ts
var import_util_waiter = require("@smithy/util-waiter");
var checkState = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeClustersCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Clusters);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.ClusterStatus;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "available";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Clusters);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.ClusterStatus;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "deleting") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "ClusterNotFound") {
      return { state: import_util_waiter.WaiterState.RETRY, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForClusterAvailable = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 60, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
}, "waitForClusterAvailable");
var waitUntilClusterAvailable = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 60, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilClusterAvailable");

// src/waiters/waitForClusterDeleted.ts

var checkState2 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeClustersCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Clusters);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.ClusterStatus;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "creating") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Clusters);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.ClusterStatus;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "modifying") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "ClusterNotFound") {
      return { state: import_util_waiter.WaiterState.SUCCESS, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForClusterDeleted = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 60, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
}, "waitForClusterDeleted");
var waitUntilClusterDeleted = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 60, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilClusterDeleted");

// src/waiters/waitForClusterRestored.ts

var checkState3 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeClustersCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Clusters);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.RestoreStatus.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "completed";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Clusters);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.ClusterStatus;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "deleting") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForClusterRestored = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 60, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
}, "waitForClusterRestored");
var waitUntilClusterRestored = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 60, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilClusterRestored");

// src/waiters/waitForSnapshotAvailable.ts

var checkState4 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeClusterSnapshotsCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Snapshots);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "available";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Snapshots);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Snapshots);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "deleted") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForSnapshotAvailable = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState4);
}, "waitForSnapshotAvailable");
var waitUntilSnapshotAvailable = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState4);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilSnapshotAvailable");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  RedshiftServiceException,
  __Client,
  RedshiftClient,
  Redshift,
  $Command,
  AcceptReservedNodeExchangeCommand,
  AddPartnerCommand,
  AssociateDataShareConsumerCommand,
  AuthorizeClusterSecurityGroupIngressCommand,
  AuthorizeDataShareCommand,
  AuthorizeEndpointAccessCommand,
  AuthorizeSnapshotAccessCommand,
  BatchDeleteClusterSnapshotsCommand,
  BatchModifyClusterSnapshotsCommand,
  CancelResizeCommand,
  CopyClusterSnapshotCommand,
  CreateAuthenticationProfileCommand,
  CreateClusterCommand,
  CreateClusterParameterGroupCommand,
  CreateClusterSecurityGroupCommand,
  CreateClusterSnapshotCommand,
  CreateClusterSubnetGroupCommand,
  CreateCustomDomainAssociationCommand,
  CreateEndpointAccessCommand,
  CreateEventSubscriptionCommand,
  CreateHsmClientCertificateCommand,
  CreateHsmConfigurationCommand,
  CreateRedshiftIdcApplicationCommand,
  CreateScheduledActionCommand,
  CreateSnapshotCopyGrantCommand,
  CreateSnapshotScheduleCommand,
  CreateTagsCommand,
  CreateUsageLimitCommand,
  DeauthorizeDataShareCommand,
  DeleteAuthenticationProfileCommand,
  DeleteClusterCommand,
  DeleteClusterParameterGroupCommand,
  DeleteClusterSecurityGroupCommand,
  DeleteClusterSnapshotCommand,
  DeleteClusterSubnetGroupCommand,
  DeleteCustomDomainAssociationCommand,
  DeleteEndpointAccessCommand,
  DeleteEventSubscriptionCommand,
  DeleteHsmClientCertificateCommand,
  DeleteHsmConfigurationCommand,
  DeletePartnerCommand,
  DeleteRedshiftIdcApplicationCommand,
  DeleteResourcePolicyCommand,
  DeleteScheduledActionCommand,
  DeleteSnapshotCopyGrantCommand,
  DeleteSnapshotScheduleCommand,
  DeleteTagsCommand,
  DeleteUsageLimitCommand,
  DescribeAccountAttributesCommand,
  DescribeAuthenticationProfilesCommand,
  DescribeClusterDbRevisionsCommand,
  DescribeClusterParameterGroupsCommand,
  DescribeClusterParametersCommand,
  DescribeClusterSecurityGroupsCommand,
  DescribeClusterSnapshotsCommand,
  DescribeClusterSubnetGroupsCommand,
  DescribeClusterTracksCommand,
  DescribeClusterVersionsCommand,
  DescribeClustersCommand,
  DescribeCustomDomainAssociationsCommand,
  DescribeDataSharesCommand,
  DescribeDataSharesForConsumerCommand,
  DescribeDataSharesForProducerCommand,
  DescribeDefaultClusterParametersCommand,
  DescribeEndpointAccessCommand,
  DescribeEndpointAuthorizationCommand,
  DescribeEventCategoriesCommand,
  DescribeEventSubscriptionsCommand,
  DescribeEventsCommand,
  DescribeHsmClientCertificatesCommand,
  DescribeHsmConfigurationsCommand,
  DescribeInboundIntegrationsCommand,
  DescribeLoggingStatusCommand,
  DescribeNodeConfigurationOptionsCommand,
  DescribeOrderableClusterOptionsCommand,
  DescribePartnersCommand,
  DescribeRedshiftIdcApplicationsCommand,
  DescribeReservedNodeExchangeStatusCommand,
  DescribeReservedNodeOfferingsCommand,
  DescribeReservedNodesCommand,
  DescribeResizeCommand,
  DescribeScheduledActionsCommand,
  DescribeSnapshotCopyGrantsCommand,
  DescribeSnapshotSchedulesCommand,
  DescribeStorageCommand,
  DescribeTableRestoreStatusCommand,
  DescribeTagsCommand,
  DescribeUsageLimitsCommand,
  DisableLoggingCommand,
  DisableSnapshotCopyCommand,
  DisassociateDataShareConsumerCommand,
  EnableLoggingCommand,
  EnableSnapshotCopyCommand,
  FailoverPrimaryComputeCommand,
  GetClusterCredentialsCommand,
  GetClusterCredentialsWithIAMCommand,
  GetReservedNodeExchangeConfigurationOptionsCommand,
  GetReservedNodeExchangeOfferingsCommand,
  GetResourcePolicyCommand,
  ListRecommendationsCommand,
  ModifyAquaConfigurationCommand,
  ModifyAuthenticationProfileCommand,
  ModifyClusterCommand,
  ModifyClusterDbRevisionCommand,
  ModifyClusterIamRolesCommand,
  ModifyClusterMaintenanceCommand,
  ModifyClusterParameterGroupCommand,
  ModifyClusterSnapshotCommand,
  ModifyClusterSnapshotScheduleCommand,
  ModifyClusterSubnetGroupCommand,
  ModifyCustomDomainAssociationCommand,
  ModifyEndpointAccessCommand,
  ModifyEventSubscriptionCommand,
  ModifyRedshiftIdcApplicationCommand,
  ModifyScheduledActionCommand,
  ModifySnapshotCopyRetentionPeriodCommand,
  ModifySnapshotScheduleCommand,
  ModifyUsageLimitCommand,
  PauseClusterCommand,
  PurchaseReservedNodeOfferingCommand,
  PutResourcePolicyCommand,
  RebootClusterCommand,
  RejectDataShareCommand,
  ResetClusterParameterGroupCommand,
  ResizeClusterCommand,
  RestoreFromClusterSnapshotCommand,
  RestoreTableFromClusterSnapshotCommand,
  ResumeClusterCommand,
  RevokeClusterSecurityGroupIngressCommand,
  RevokeEndpointAccessCommand,
  RevokeSnapshotAccessCommand,
  RotateEncryptionKeyCommand,
  UpdatePartnerStatusCommand,
  paginateDescribeClusterDbRevisions,
  paginateDescribeClusterParameterGroups,
  paginateDescribeClusterParameters,
  paginateDescribeClusterSecurityGroups,
  paginateDescribeClusterSnapshots,
  paginateDescribeClusterSubnetGroups,
  paginateDescribeClusterTracks,
  paginateDescribeClusterVersions,
  paginateDescribeClusters,
  paginateDescribeCustomDomainAssociations,
  paginateDescribeDataSharesForConsumer,
  paginateDescribeDataSharesForProducer,
  paginateDescribeDataShares,
  paginateDescribeDefaultClusterParameters,
  paginateDescribeEndpointAccess,
  paginateDescribeEndpointAuthorization,
  paginateDescribeEventSubscriptions,
  paginateDescribeEvents,
  paginateDescribeHsmClientCertificates,
  paginateDescribeHsmConfigurations,
  paginateDescribeInboundIntegrations,
  paginateDescribeNodeConfigurationOptions,
  paginateDescribeOrderableClusterOptions,
  paginateDescribeRedshiftIdcApplications,
  paginateDescribeReservedNodeExchangeStatus,
  paginateDescribeReservedNodeOfferings,
  paginateDescribeReservedNodes,
  paginateDescribeScheduledActions,
  paginateDescribeSnapshotCopyGrants,
  paginateDescribeSnapshotSchedules,
  paginateDescribeTableRestoreStatus,
  paginateDescribeTags,
  paginateDescribeUsageLimits,
  paginateGetReservedNodeExchangeConfigurationOptions,
  paginateGetReservedNodeExchangeOfferings,
  paginateListRecommendations,
  waitForClusterAvailable,
  waitUntilClusterAvailable,
  waitForClusterDeleted,
  waitUntilClusterDeleted,
  waitForClusterRestored,
  waitUntilClusterRestored,
  waitForSnapshotAvailable,
  waitUntilSnapshotAvailable,
  ReservedNodeOfferingType,
  DependentServiceUnavailableFault,
  InvalidReservedNodeStateFault,
  ReservedNodeAlreadyExistsFault,
  ReservedNodeAlreadyMigratedFault,
  ReservedNodeNotFoundFault,
  ReservedNodeOfferingNotFoundFault,
  UnsupportedOperationFault,
  AccessToClusterDeniedFault,
  AccessToSnapshotDeniedFault,
  ActionType,
  ClusterNotFoundFault,
  PartnerNotFoundFault,
  UnauthorizedPartnerIntegrationFault,
  AquaConfigurationStatus,
  AquaStatus,
  DataShareStatus,
  InvalidDataShareFault,
  InvalidNamespaceFault,
  ScheduleState,
  AuthenticationProfileAlreadyExistsFault,
  AuthenticationProfileNotFoundFault,
  AuthenticationProfileQuotaExceededFault,
  AuthorizationAlreadyExistsFault,
  AuthorizationNotFoundFault,
  AuthorizationQuotaExceededFault,
  AuthorizationStatus,
  ClusterSecurityGroupNotFoundFault,
  InvalidClusterSecurityGroupStateFault,
  EndpointAuthorizationAlreadyExistsFault,
  EndpointAuthorizationsPerClusterLimitExceededFault,
  InvalidAuthorizationStateFault,
  InvalidClusterStateFault,
  ClusterSnapshotNotFoundFault,
  DependentServiceRequestThrottlingFault,
  InvalidClusterSnapshotStateFault,
  LimitExceededFault,
  BatchDeleteRequestSizeExceededFault,
  BatchModifyClusterSnapshotsLimitExceededFault,
  InvalidRetentionPeriodFault,
  BucketNotFoundFault,
  ResizeNotFoundFault,
  ReservedNodeExchangeStatusType,
  ClusterAlreadyExistsFault,
  ClusterOnLatestRevisionFault,
  ClusterParameterGroupAlreadyExistsFault,
  ParameterApplyType,
  ClusterParameterGroupNotFoundFault,
  ClusterParameterGroupQuotaExceededFault,
  ClusterQuotaExceededFault,
  ClusterSecurityGroupAlreadyExistsFault,
  ClusterSecurityGroupQuotaExceededFault,
  ClusterSnapshotAlreadyExistsFault,
  ClusterSnapshotQuotaExceededFault,
  ClusterSubnetGroupAlreadyExistsFault,
  ClusterSubnetGroupNotFoundFault,
  ClusterSubnetGroupQuotaExceededFault,
  ClusterSubnetQuotaExceededFault,
  ConflictPolicyUpdateFault,
  CopyToRegionDisabledFault,
  InvalidAuthenticationProfileRequestFault,
  HsmClientCertificateNotFoundFault,
  HsmConfigurationNotFoundFault,
  InsufficientClusterCapacityFault,
  InvalidClusterSubnetGroupStateFault,
  InvalidClusterTrackFault,
  InvalidElasticIpFault,
  InvalidSubnet,
  InvalidTagFault,
  InvalidVPCNetworkStateFault,
  Ipv6CidrBlockNotFoundFault,
  NumberOfNodesPerClusterLimitExceededFault,
  NumberOfNodesQuotaExceededFault,
  RedshiftIdcApplicationNotExistsFault,
  SnapshotScheduleNotFoundFault,
  TagLimitExceededFault,
  UnauthorizedOperation,
  CustomCnameAssociationFault,
  EndpointAlreadyExistsFault,
  EndpointsPerAuthorizationLimitExceededFault,
  EndpointsPerClusterLimitExceededFault,
  EventSubscriptionQuotaExceededFault,
  SNSInvalidTopicFault,
  SNSNoAuthorizationFault,
  SNSTopicArnNotFoundFault,
  SourceNotFoundFault,
  SubscriptionAlreadyExistFault,
  SubscriptionCategoryNotFoundFault,
  SubscriptionEventIdNotFoundFault,
  SubscriptionSeverityNotFoundFault,
  HsmClientCertificateAlreadyExistsFault,
  HsmClientCertificateQuotaExceededFault,
  HsmConfigurationAlreadyExistsFault,
  HsmConfigurationQuotaExceededFault,
  ServiceAuthorization,
  LakeFormationScopeUnion,
  ServiceIntegrationsUnion,
  DependentServiceAccessDeniedFault,
  RedshiftIdcApplicationAlreadyExistsFault,
  RedshiftIdcApplicationQuotaExceededFault,
  InvalidScheduledActionFault,
  InvalidScheduleFault,
  ScheduledActionState,
  ScheduledActionAlreadyExistsFault,
  ScheduledActionQuotaExceededFault,
  ScheduledActionTypeUnsupportedFault,
  SnapshotCopyGrantAlreadyExistsFault,
  SnapshotCopyGrantQuotaExceededFault,
  ScheduleDefinitionTypeUnsupportedFault,
  SnapshotScheduleAlreadyExistsFault,
  SnapshotScheduleQuotaExceededFault,
  ResourceNotFoundFault,
  UsageLimitBreachAction,
  UsageLimitFeatureType,
  UsageLimitLimitType,
  UsageLimitPeriod,
  InvalidUsageLimitFault,
  UsageLimitAlreadyExistsFault,
  CustomDomainAssociationNotFoundFault,
  DataShareStatusForConsumer,
  DataShareStatusForProducer,
  InvalidClusterParameterGroupStateFault,
  InvalidClusterSubnetStateFault,
  EndpointNotFoundFault,
  InvalidEndpointStateFault,
  InvalidSubscriptionStateFault,
  SubscriptionNotFoundFault,
  InvalidHsmClientCertificateStateFault,
  InvalidHsmConfigurationStateFault,
  ScheduledActionNotFoundFault,
  InvalidSnapshotCopyGrantStateFault,
  SnapshotCopyGrantNotFoundFault,
  InvalidClusterSnapshotScheduleStateFault,
  UsageLimitNotFoundFault,
  SnapshotAttributeToSortBy,
  SortByOrder,
  PendingModifiedValuesFilterSensitiveLog,
  ClusterFilterSensitiveLog,
  ClusterCredentialsFilterSensitiveLog,
  ClusterExtendedCredentialsFilterSensitiveLog,
  ClustersMessageFilterSensitiveLog,
  CreateClusterMessageFilterSensitiveLog,
  CreateClusterResultFilterSensitiveLog,
  DeleteClusterResultFilterSensitiveLog,
  SourceType,
  ZeroETLIntegrationStatus,
  IntegrationNotFoundFault,
  LogDestinationType,
  NodeConfigurationOptionsFilterName,
  OperatorType,
  Mode,
  PartnerIntegrationStatus,
  ReservedNodeExchangeNotFoundFault,
  ScheduledActionFilterName,
  ScheduledActionTypeValues,
  TableRestoreNotFoundFault,
  TableRestoreStatusType,
  SnapshotCopyAlreadyDisabledFault,
  InsufficientS3BucketPolicyFault,
  InvalidS3BucketNameFault,
  InvalidS3KeyPrefixFault,
  IncompatibleOrderableOptions,
  SnapshotCopyAlreadyEnabledFault,
  UnknownSnapshotCopyRegionFault,
  EndpointAuthorizationNotFoundFault,
  ReservedNodeExchangeActionType,
  InvalidPolicyFault,
  ImpactRankingType,
  InProgressTableRestoreQuotaExceededFault,
  InvalidRestoreFault,
  InvalidTableRestoreArgumentFault,
  RecommendedActionType,
  TableLimitExceededFault,
  UnsupportedOptionFault,
  SubnetAlreadyInUse,
  SnapshotCopyDisabledFault,
  SnapshotScheduleUpdateInProgressFault,
  ReservedNodeQuotaExceededFault,
  DisableSnapshotCopyResultFilterSensitiveLog,
  EnableSnapshotCopyResultFilterSensitiveLog,
  FailoverPrimaryComputeResultFilterSensitiveLog,
  ModifyClusterMessageFilterSensitiveLog,
  ModifyClusterResultFilterSensitiveLog,
  ModifyClusterDbRevisionResultFilterSensitiveLog,
  ModifyClusterIamRolesResultFilterSensitiveLog,
  ModifyClusterMaintenanceResultFilterSensitiveLog,
  ModifySnapshotCopyRetentionPeriodResultFilterSensitiveLog,
  PauseClusterResultFilterSensitiveLog,
  RebootClusterResultFilterSensitiveLog,
  ResizeClusterResultFilterSensitiveLog,
  RestoreFromClusterSnapshotResultFilterSensitiveLog,
  ResumeClusterResultFilterSensitiveLog,
  RotateEncryptionKeyResultFilterSensitiveLog
});

