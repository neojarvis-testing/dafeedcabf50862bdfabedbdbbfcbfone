import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import {
  ActionType,
  AquaConfiguration,
  AquaConfigurationStatus,
  AuthorizedTokenIssuer,
  AvailabilityZone,
  Cluster,
  ClusterSecurityGroup,
  ClusterSubnetGroup,
  DataShare,
  DataShareStatusForConsumer,
  DataShareStatusForProducer,
  DefaultClusterParameters,
  EndpointAccess,
  EndpointAuthorization,
  EventSubscription,
  HsmClientCertificate,
  HsmConfiguration,
  Parameter,
  RecurringCharge,
  RedshiftIdcApplication,
  ReservedNode,
  ReservedNodeExchangeStatus,
  ReservedNodeOfferingType,
  ScheduledAction,
  ScheduledActionType,
  ServiceIntegrationsUnion,
  Snapshot,
  SnapshotCopyGrant,
  SnapshotSchedule,
  Tag,
  UsageLimit,
  UsageLimitBreachAction,
  UsageLimitFeatureType,
} from "./models_0";
import { RedshiftServiceException as __BaseException } from "./RedshiftServiceException";
export interface DescribeClusterVersionsMessage {
  ClusterVersion?: string;
  ClusterParameterGroupFamily?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeCustomDomainAssociationsMessage {
  CustomDomainName?: string;
  CustomDomainCertificateArn?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeDataSharesMessage {
  DataShareArn?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeDataSharesResult {
  DataShares?: DataShare[];
  Marker?: string;
}
export interface DescribeDataSharesForConsumerMessage {
  ConsumerArn?: string;
  Status?: DataShareStatusForConsumer;
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeDataSharesForConsumerResult {
  DataShares?: DataShare[];
  Marker?: string;
}
export interface DescribeDataSharesForProducerMessage {
  ProducerArn?: string;
  Status?: DataShareStatusForProducer;
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeDataSharesForProducerResult {
  DataShares?: DataShare[];
  Marker?: string;
}
export interface DescribeDefaultClusterParametersMessage {
  ParameterGroupFamily: string | undefined;
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeDefaultClusterParametersResult {
  DefaultClusterParameters?: DefaultClusterParameters;
}
export interface DescribeEndpointAccessMessage {
  ClusterIdentifier?: string;
  ResourceOwner?: string;
  EndpointName?: string;
  VpcId?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface EndpointAccessList {
  EndpointAccessList?: EndpointAccess[];
  Marker?: string;
}
export interface DescribeEndpointAuthorizationMessage {
  ClusterIdentifier?: string;
  Account?: string;
  Grantee?: boolean;
  MaxRecords?: number;
  Marker?: string;
}
export interface EndpointAuthorizationList {
  EndpointAuthorizationList?: EndpointAuthorization[];
  Marker?: string;
}
export interface DescribeEventCategoriesMessage {
  SourceType?: string;
}
export interface EventInfoMap {
  EventId?: string;
  EventCategories?: string[];
  EventDescription?: string;
  Severity?: string;
}
export interface EventCategoriesMap {
  SourceType?: string;
  Events?: EventInfoMap[];
}
export interface EventCategoriesMessage {
  EventCategoriesMapList?: EventCategoriesMap[];
}
export declare const SourceType: {
  readonly cluster: "cluster";
  readonly cluster_parameter_group: "cluster-parameter-group";
  readonly cluster_security_group: "cluster-security-group";
  readonly cluster_snapshot: "cluster-snapshot";
  readonly scheduled_action: "scheduled-action";
};
export type SourceType = (typeof SourceType)[keyof typeof SourceType];
export interface DescribeEventsMessage {
  SourceIdentifier?: string;
  SourceType?: SourceType;
  StartTime?: Date;
  EndTime?: Date;
  Duration?: number;
  MaxRecords?: number;
  Marker?: string;
}
export interface Event {
  SourceIdentifier?: string;
  SourceType?: SourceType;
  Message?: string;
  EventCategories?: string[];
  Severity?: string;
  Date?: Date;
  EventId?: string;
}
export interface EventsMessage {
  Marker?: string;
  Events?: Event[];
}
export interface DescribeEventSubscriptionsMessage {
  SubscriptionName?: string;
  MaxRecords?: number;
  Marker?: string;
  TagKeys?: string[];
  TagValues?: string[];
}
export interface EventSubscriptionsMessage {
  Marker?: string;
  EventSubscriptionsList?: EventSubscription[];
}
export interface DescribeHsmClientCertificatesMessage {
  HsmClientCertificateIdentifier?: string;
  MaxRecords?: number;
  Marker?: string;
  TagKeys?: string[];
  TagValues?: string[];
}
export interface HsmClientCertificateMessage {
  Marker?: string;
  HsmClientCertificates?: HsmClientCertificate[];
}
export interface DescribeHsmConfigurationsMessage {
  HsmConfigurationIdentifier?: string;
  MaxRecords?: number;
  Marker?: string;
  TagKeys?: string[];
  TagValues?: string[];
}
export interface HsmConfigurationMessage {
  Marker?: string;
  HsmConfigurations?: HsmConfiguration[];
}
export interface DescribeInboundIntegrationsMessage {
  IntegrationArn?: string;
  TargetArn?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface IntegrationError {
  ErrorCode: string | undefined;
  ErrorMessage?: string;
}
export declare const ZeroETLIntegrationStatus: {
  readonly ACTIVE: "active";
  readonly CREATING: "creating";
  readonly DELETING: "deleting";
  readonly FAILED: "failed";
  readonly MODIFYING: "modifying";
  readonly NEEDS_ATTENTION: "needs_attention";
  readonly SYNCING: "syncing";
};
export type ZeroETLIntegrationStatus =
  (typeof ZeroETLIntegrationStatus)[keyof typeof ZeroETLIntegrationStatus];
export interface InboundIntegration {
  IntegrationArn?: string;
  SourceArn?: string;
  TargetArn?: string;
  Status?: ZeroETLIntegrationStatus;
  Errors?: IntegrationError[];
  CreateTime?: Date;
}
export interface InboundIntegrationsMessage {
  Marker?: string;
  InboundIntegrations?: InboundIntegration[];
}
export declare class IntegrationNotFoundFault extends __BaseException {
  readonly name: "IntegrationNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<IntegrationNotFoundFault, __BaseException>
  );
}
export interface DescribeLoggingStatusMessage {
  ClusterIdentifier: string | undefined;
}
export declare const LogDestinationType: {
  readonly CLOUDWATCH: "cloudwatch";
  readonly S3: "s3";
};
export type LogDestinationType =
  (typeof LogDestinationType)[keyof typeof LogDestinationType];
export interface LoggingStatus {
  LoggingEnabled?: boolean;
  BucketName?: string;
  S3KeyPrefix?: string;
  LastSuccessfulDeliveryTime?: Date;
  LastFailureTime?: Date;
  LastFailureMessage?: string;
  LogDestinationType?: LogDestinationType;
  LogExports?: string[];
}
export declare const NodeConfigurationOptionsFilterName: {
  readonly ESTIMATED_DISK_UTILIZATION_PERCENT: "EstimatedDiskUtilizationPercent";
  readonly MODE: "Mode";
  readonly NODE_TYPE: "NodeType";
  readonly NUM_NODES: "NumberOfNodes";
};
export type NodeConfigurationOptionsFilterName =
  (typeof NodeConfigurationOptionsFilterName)[keyof typeof NodeConfigurationOptionsFilterName];
export declare const OperatorType: {
  readonly BETWEEN: "between";
  readonly EQ: "eq";
  readonly GE: "ge";
  readonly GT: "gt";
  readonly IN: "in";
  readonly LE: "le";
  readonly LT: "lt";
};
export type OperatorType = (typeof OperatorType)[keyof typeof OperatorType];
export interface NodeConfigurationOptionsFilter {
  Name?: NodeConfigurationOptionsFilterName;
  Operator?: OperatorType;
  Values?: string[];
}
export interface DescribeNodeConfigurationOptionsMessage {
  ActionType: ActionType | undefined;
  ClusterIdentifier?: string;
  SnapshotIdentifier?: string;
  SnapshotArn?: string;
  OwnerAccount?: string;
  Filters?: NodeConfigurationOptionsFilter[];
  Marker?: string;
  MaxRecords?: number;
}
export declare const Mode: {
  readonly HIGH_PERFORMANCE: "high-performance";
  readonly STANDARD: "standard";
};
export type Mode = (typeof Mode)[keyof typeof Mode];
export interface NodeConfigurationOption {
  NodeType?: string;
  NumberOfNodes?: number;
  EstimatedDiskUtilizationPercent?: number;
  Mode?: Mode;
}
export interface NodeConfigurationOptionsMessage {
  NodeConfigurationOptionList?: NodeConfigurationOption[];
  Marker?: string;
}
export interface DescribeOrderableClusterOptionsMessage {
  ClusterVersion?: string;
  NodeType?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface OrderableClusterOption {
  ClusterVersion?: string;
  ClusterType?: string;
  NodeType?: string;
  AvailabilityZones?: AvailabilityZone[];
}
export interface OrderableClusterOptionsMessage {
  OrderableClusterOptions?: OrderableClusterOption[];
  Marker?: string;
}
export interface DescribePartnersInputMessage {
  AccountId: string | undefined;
  ClusterIdentifier: string | undefined;
  DatabaseName?: string;
  PartnerName?: string;
}
export declare const PartnerIntegrationStatus: {
  readonly Active: "Active";
  readonly ConnectionFailure: "ConnectionFailure";
  readonly Inactive: "Inactive";
  readonly RuntimeFailure: "RuntimeFailure";
};
export type PartnerIntegrationStatus =
  (typeof PartnerIntegrationStatus)[keyof typeof PartnerIntegrationStatus];
export interface PartnerIntegrationInfo {
  DatabaseName?: string;
  PartnerName?: string;
  Status?: PartnerIntegrationStatus;
  StatusMessage?: string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
}
export interface DescribePartnersOutputMessage {
  PartnerIntegrationInfoList?: PartnerIntegrationInfo[];
}
export interface DescribeRedshiftIdcApplicationsMessage {
  RedshiftIdcApplicationArn?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeRedshiftIdcApplicationsResult {
  RedshiftIdcApplications?: RedshiftIdcApplication[];
  Marker?: string;
}
export interface DescribeReservedNodeExchangeStatusInputMessage {
  ReservedNodeId?: string;
  ReservedNodeExchangeRequestId?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface DescribeReservedNodeExchangeStatusOutputMessage {
  ReservedNodeExchangeStatusDetails?: ReservedNodeExchangeStatus[];
  Marker?: string;
}
export declare class ReservedNodeExchangeNotFoundFault extends __BaseException {
  readonly name: "ReservedNodeExchangeNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ReservedNodeExchangeNotFoundFault,
      __BaseException
    >
  );
}
export interface DescribeReservedNodeOfferingsMessage {
  ReservedNodeOfferingId?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface ReservedNodeOffering {
  ReservedNodeOfferingId?: string;
  NodeType?: string;
  Duration?: number;
  FixedPrice?: number;
  UsagePrice?: number;
  CurrencyCode?: string;
  OfferingType?: string;
  RecurringCharges?: RecurringCharge[];
  ReservedNodeOfferingType?: ReservedNodeOfferingType;
}
export interface ReservedNodeOfferingsMessage {
  Marker?: string;
  ReservedNodeOfferings?: ReservedNodeOffering[];
}
export interface DescribeReservedNodesMessage {
  ReservedNodeId?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface ReservedNodesMessage {
  Marker?: string;
  ReservedNodes?: ReservedNode[];
}
export interface DescribeResizeMessage {
  ClusterIdentifier: string | undefined;
}
export declare const ScheduledActionFilterName: {
  readonly CLUSTER_IDENTIFIER: "cluster-identifier";
  readonly IAM_ROLE: "iam-role";
};
export type ScheduledActionFilterName =
  (typeof ScheduledActionFilterName)[keyof typeof ScheduledActionFilterName];
export interface ScheduledActionFilter {
  Name: ScheduledActionFilterName | undefined;
  Values: string[] | undefined;
}
export declare const ScheduledActionTypeValues: {
  readonly PAUSE_CLUSTER: "PauseCluster";
  readonly RESIZE_CLUSTER: "ResizeCluster";
  readonly RESUME_CLUSTER: "ResumeCluster";
};
export type ScheduledActionTypeValues =
  (typeof ScheduledActionTypeValues)[keyof typeof ScheduledActionTypeValues];
export interface DescribeScheduledActionsMessage {
  ScheduledActionName?: string;
  TargetActionType?: ScheduledActionTypeValues;
  StartTime?: Date;
  EndTime?: Date;
  Active?: boolean;
  Filters?: ScheduledActionFilter[];
  Marker?: string;
  MaxRecords?: number;
}
export interface ScheduledActionsMessage {
  Marker?: string;
  ScheduledActions?: ScheduledAction[];
}
export interface DescribeSnapshotCopyGrantsMessage {
  SnapshotCopyGrantName?: string;
  MaxRecords?: number;
  Marker?: string;
  TagKeys?: string[];
  TagValues?: string[];
}
export interface SnapshotCopyGrantMessage {
  Marker?: string;
  SnapshotCopyGrants?: SnapshotCopyGrant[];
}
export interface DescribeSnapshotSchedulesMessage {
  ClusterIdentifier?: string;
  ScheduleIdentifier?: string;
  TagKeys?: string[];
  TagValues?: string[];
  Marker?: string;
  MaxRecords?: number;
}
export interface DescribeSnapshotSchedulesOutputMessage {
  SnapshotSchedules?: SnapshotSchedule[];
  Marker?: string;
}
export interface DescribeTableRestoreStatusMessage {
  ClusterIdentifier?: string;
  TableRestoreRequestId?: string;
  MaxRecords?: number;
  Marker?: string;
}
export declare class TableRestoreNotFoundFault extends __BaseException {
  readonly name: "TableRestoreNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TableRestoreNotFoundFault, __BaseException>
  );
}
export declare const TableRestoreStatusType: {
  readonly CANCELED: "CANCELED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING: "PENDING";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type TableRestoreStatusType =
  (typeof TableRestoreStatusType)[keyof typeof TableRestoreStatusType];
export interface TableRestoreStatus {
  TableRestoreRequestId?: string;
  Status?: TableRestoreStatusType;
  Message?: string;
  RequestTime?: Date;
  ProgressInMegaBytes?: number;
  TotalDataInMegaBytes?: number;
  ClusterIdentifier?: string;
  SnapshotIdentifier?: string;
  SourceDatabaseName?: string;
  SourceSchemaName?: string;
  SourceTableName?: string;
  TargetDatabaseName?: string;
  TargetSchemaName?: string;
  NewTableName?: string;
}
export interface TableRestoreStatusMessage {
  TableRestoreStatusDetails?: TableRestoreStatus[];
  Marker?: string;
}
export interface DescribeTagsMessage {
  ResourceName?: string;
  ResourceType?: string;
  MaxRecords?: number;
  Marker?: string;
  TagKeys?: string[];
  TagValues?: string[];
}
export interface TaggedResource {
  Tag?: Tag;
  ResourceName?: string;
  ResourceType?: string;
}
export interface TaggedResourceListMessage {
  TaggedResources?: TaggedResource[];
  Marker?: string;
}
export interface DescribeUsageLimitsMessage {
  UsageLimitId?: string;
  ClusterIdentifier?: string;
  FeatureType?: UsageLimitFeatureType;
  MaxRecords?: number;
  Marker?: string;
  TagKeys?: string[];
  TagValues?: string[];
}
export interface UsageLimitList {
  UsageLimits?: UsageLimit[];
  Marker?: string;
}
export interface DisableLoggingMessage {
  ClusterIdentifier: string | undefined;
}
export interface DisableSnapshotCopyMessage {
  ClusterIdentifier: string | undefined;
}
export interface DisableSnapshotCopyResult {
  Cluster?: Cluster;
}
export declare class SnapshotCopyAlreadyDisabledFault extends __BaseException {
  readonly name: "SnapshotCopyAlreadyDisabledFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      SnapshotCopyAlreadyDisabledFault,
      __BaseException
    >
  );
}
export interface DisassociateDataShareConsumerMessage {
  DataShareArn: string | undefined;
  DisassociateEntireAccount?: boolean;
  ConsumerArn?: string;
  ConsumerRegion?: string;
}
export interface EnableLoggingMessage {
  ClusterIdentifier: string | undefined;
  BucketName?: string;
  S3KeyPrefix?: string;
  LogDestinationType?: LogDestinationType;
  LogExports?: string[];
}
export declare class InsufficientS3BucketPolicyFault extends __BaseException {
  readonly name: "InsufficientS3BucketPolicyFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientS3BucketPolicyFault,
      __BaseException
    >
  );
}
export declare class InvalidS3BucketNameFault extends __BaseException {
  readonly name: "InvalidS3BucketNameFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidS3BucketNameFault, __BaseException>
  );
}
export declare class InvalidS3KeyPrefixFault extends __BaseException {
  readonly name: "InvalidS3KeyPrefixFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidS3KeyPrefixFault, __BaseException>
  );
}
export interface EnableSnapshotCopyMessage {
  ClusterIdentifier: string | undefined;
  DestinationRegion: string | undefined;
  RetentionPeriod?: number;
  SnapshotCopyGrantName?: string;
  ManualSnapshotRetentionPeriod?: number;
}
export interface EnableSnapshotCopyResult {
  Cluster?: Cluster;
}
export declare class IncompatibleOrderableOptions extends __BaseException {
  readonly name: "IncompatibleOrderableOptions";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<IncompatibleOrderableOptions, __BaseException>
  );
}
export declare class SnapshotCopyAlreadyEnabledFault extends __BaseException {
  readonly name: "SnapshotCopyAlreadyEnabledFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      SnapshotCopyAlreadyEnabledFault,
      __BaseException
    >
  );
}
export declare class UnknownSnapshotCopyRegionFault extends __BaseException {
  readonly name: "UnknownSnapshotCopyRegionFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnknownSnapshotCopyRegionFault, __BaseException>
  );
}
export declare class EndpointAuthorizationNotFoundFault extends __BaseException {
  readonly name: "EndpointAuthorizationNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      EndpointAuthorizationNotFoundFault,
      __BaseException
    >
  );
}
export interface FailoverPrimaryComputeInputMessage {
  ClusterIdentifier: string | undefined;
}
export interface FailoverPrimaryComputeResult {
  Cluster?: Cluster;
}
export interface GetClusterCredentialsMessage {
  DbUser: string | undefined;
  DbName?: string;
  ClusterIdentifier?: string;
  DurationSeconds?: number;
  AutoCreate?: boolean;
  DbGroups?: string[];
  CustomDomainName?: string;
}
export interface GetClusterCredentialsWithIAMMessage {
  DbName?: string;
  ClusterIdentifier?: string;
  DurationSeconds?: number;
  CustomDomainName?: string;
}
export declare const ReservedNodeExchangeActionType: {
  readonly RESIZE_CLUSTER: "resize-cluster";
  readonly RESTORE_CLUSTER: "restore-cluster";
};
export type ReservedNodeExchangeActionType =
  (typeof ReservedNodeExchangeActionType)[keyof typeof ReservedNodeExchangeActionType];
export interface GetReservedNodeExchangeConfigurationOptionsInputMessage {
  ActionType: ReservedNodeExchangeActionType | undefined;
  ClusterIdentifier?: string;
  SnapshotIdentifier?: string;
  MaxRecords?: number;
  Marker?: string;
}
export interface ReservedNodeConfigurationOption {
  SourceReservedNode?: ReservedNode;
  TargetReservedNodeCount?: number;
  TargetReservedNodeOffering?: ReservedNodeOffering;
}
export interface GetReservedNodeExchangeConfigurationOptionsOutputMessage {
  Marker?: string;
  ReservedNodeConfigurationOptionList?: ReservedNodeConfigurationOption[];
}
export interface GetReservedNodeExchangeOfferingsInputMessage {
  ReservedNodeId: string | undefined;
  MaxRecords?: number;
  Marker?: string;
}
export interface GetReservedNodeExchangeOfferingsOutputMessage {
  Marker?: string;
  ReservedNodeOfferings?: ReservedNodeOffering[];
}
export interface GetResourcePolicyMessage {
  ResourceArn: string | undefined;
}
export interface ResourcePolicy {
  ResourceArn?: string;
  Policy?: string;
}
export interface GetResourcePolicyResult {
  ResourcePolicy?: ResourcePolicy;
}
export declare class InvalidPolicyFault extends __BaseException {
  readonly name: "InvalidPolicyFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidPolicyFault, __BaseException>);
}
export declare const ImpactRankingType: {
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
  readonly MEDIUM: "MEDIUM";
};
export type ImpactRankingType =
  (typeof ImpactRankingType)[keyof typeof ImpactRankingType];
export declare class InProgressTableRestoreQuotaExceededFault extends __BaseException {
  readonly name: "InProgressTableRestoreQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InProgressTableRestoreQuotaExceededFault,
      __BaseException
    >
  );
}
export declare class InvalidRestoreFault extends __BaseException {
  readonly name: "InvalidRestoreFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRestoreFault, __BaseException>
  );
}
export declare class InvalidTableRestoreArgumentFault extends __BaseException {
  readonly name: "InvalidTableRestoreArgumentFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidTableRestoreArgumentFault,
      __BaseException
    >
  );
}
export interface ListRecommendationsMessage {
  ClusterIdentifier?: string;
  NamespaceArn?: string;
  MaxRecords?: number;
  Marker?: string;
}
export declare const RecommendedActionType: {
  readonly CLI: "CLI";
  readonly SQL: "SQL";
};
export type RecommendedActionType =
  (typeof RecommendedActionType)[keyof typeof RecommendedActionType];
export interface RecommendedAction {
  Text?: string;
  Database?: string;
  Command?: string;
  Type?: RecommendedActionType;
}
export interface ReferenceLink {
  Text?: string;
  Link?: string;
}
export interface Recommendation {
  Id?: string;
  ClusterIdentifier?: string;
  NamespaceArn?: string;
  CreatedAt?: Date;
  RecommendationType?: string;
  Title?: string;
  Description?: string;
  Observation?: string;
  ImpactRanking?: ImpactRankingType;
  RecommendationText?: string;
  RecommendedActions?: RecommendedAction[];
  ReferenceLinks?: ReferenceLink[];
}
export interface ListRecommendationsResult {
  Recommendations?: Recommendation[];
  Marker?: string;
}
export interface ModifyAquaInputMessage {
  ClusterIdentifier: string | undefined;
  AquaConfigurationStatus?: AquaConfigurationStatus;
}
export interface ModifyAquaOutputMessage {
  AquaConfiguration?: AquaConfiguration;
}
export interface ModifyAuthenticationProfileMessage {
  AuthenticationProfileName: string | undefined;
  AuthenticationProfileContent: string | undefined;
}
export interface ModifyAuthenticationProfileResult {
  AuthenticationProfileName?: string;
  AuthenticationProfileContent?: string;
}
export interface ModifyClusterMessage {
  ClusterIdentifier: string | undefined;
  ClusterType?: string;
  NodeType?: string;
  NumberOfNodes?: number;
  ClusterSecurityGroups?: string[];
  VpcSecurityGroupIds?: string[];
  MasterUserPassword?: string;
  ClusterParameterGroupName?: string;
  AutomatedSnapshotRetentionPeriod?: number;
  ManualSnapshotRetentionPeriod?: number;
  PreferredMaintenanceWindow?: string;
  ClusterVersion?: string;
  AllowVersionUpgrade?: boolean;
  HsmClientCertificateIdentifier?: string;
  HsmConfigurationIdentifier?: string;
  NewClusterIdentifier?: string;
  PubliclyAccessible?: boolean;
  ElasticIp?: string;
  EnhancedVpcRouting?: boolean;
  MaintenanceTrackName?: string;
  Encrypted?: boolean;
  KmsKeyId?: string;
  AvailabilityZoneRelocation?: boolean;
  AvailabilityZone?: string;
  Port?: number;
  ManageMasterPassword?: boolean;
  MasterPasswordSecretKmsKeyId?: string;
  IpAddressType?: string;
  MultiAZ?: boolean;
}
export interface ModifyClusterResult {
  Cluster?: Cluster;
}
export declare class TableLimitExceededFault extends __BaseException {
  readonly name: "TableLimitExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TableLimitExceededFault, __BaseException>
  );
}
export declare class UnsupportedOptionFault extends __BaseException {
  readonly name: "UnsupportedOptionFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnsupportedOptionFault, __BaseException>
  );
}
export interface ModifyClusterDbRevisionMessage {
  ClusterIdentifier: string | undefined;
  RevisionTarget: string | undefined;
}
export interface ModifyClusterDbRevisionResult {
  Cluster?: Cluster;
}
export interface ModifyClusterIamRolesMessage {
  ClusterIdentifier: string | undefined;
  AddIamRoles?: string[];
  RemoveIamRoles?: string[];
  DefaultIamRoleArn?: string;
}
export interface ModifyClusterIamRolesResult {
  Cluster?: Cluster;
}
export interface ModifyClusterMaintenanceMessage {
  ClusterIdentifier: string | undefined;
  DeferMaintenance?: boolean;
  DeferMaintenanceIdentifier?: string;
  DeferMaintenanceStartTime?: Date;
  DeferMaintenanceEndTime?: Date;
  DeferMaintenanceDuration?: number;
}
export interface ModifyClusterMaintenanceResult {
  Cluster?: Cluster;
}
export interface ModifyClusterParameterGroupMessage {
  ParameterGroupName: string | undefined;
  Parameters: Parameter[] | undefined;
}
export interface ModifyClusterSnapshotMessage {
  SnapshotIdentifier: string | undefined;
  ManualSnapshotRetentionPeriod?: number;
  Force?: boolean;
}
export interface ModifyClusterSnapshotResult {
  Snapshot?: Snapshot;
}
export interface ModifyClusterSnapshotScheduleMessage {
  ClusterIdentifier: string | undefined;
  ScheduleIdentifier?: string;
  DisassociateSchedule?: boolean;
}
export interface ModifyClusterSubnetGroupMessage {
  ClusterSubnetGroupName: string | undefined;
  Description?: string;
  SubnetIds: string[] | undefined;
}
export interface ModifyClusterSubnetGroupResult {
  ClusterSubnetGroup?: ClusterSubnetGroup;
}
export declare class SubnetAlreadyInUse extends __BaseException {
  readonly name: "SubnetAlreadyInUse";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<SubnetAlreadyInUse, __BaseException>);
}
export interface ModifyCustomDomainAssociationMessage {
  CustomDomainName: string | undefined;
  CustomDomainCertificateArn: string | undefined;
  ClusterIdentifier: string | undefined;
}
export interface ModifyCustomDomainAssociationResult {
  CustomDomainName?: string;
  CustomDomainCertificateArn?: string;
  ClusterIdentifier?: string;
  CustomDomainCertExpiryTime?: string;
}
export interface ModifyEndpointAccessMessage {
  EndpointName: string | undefined;
  VpcSecurityGroupIds?: string[];
}
export interface ModifyEventSubscriptionMessage {
  SubscriptionName: string | undefined;
  SnsTopicArn?: string;
  SourceType?: string;
  SourceIds?: string[];
  EventCategories?: string[];
  Severity?: string;
  Enabled?: boolean;
}
export interface ModifyEventSubscriptionResult {
  EventSubscription?: EventSubscription;
}
export interface ModifyRedshiftIdcApplicationMessage {
  RedshiftIdcApplicationArn: string | undefined;
  IdentityNamespace?: string;
  IamRoleArn?: string;
  IdcDisplayName?: string;
  AuthorizedTokenIssuerList?: AuthorizedTokenIssuer[];
  ServiceIntegrations?: ServiceIntegrationsUnion[];
}
export interface ModifyRedshiftIdcApplicationResult {
  RedshiftIdcApplication?: RedshiftIdcApplication;
}
export interface ModifyScheduledActionMessage {
  ScheduledActionName: string | undefined;
  TargetAction?: ScheduledActionType;
  Schedule?: string;
  IamRole?: string;
  ScheduledActionDescription?: string;
  StartTime?: Date;
  EndTime?: Date;
  Enable?: boolean;
}
export interface ModifySnapshotCopyRetentionPeriodMessage {
  ClusterIdentifier: string | undefined;
  RetentionPeriod: number | undefined;
  Manual?: boolean;
}
export interface ModifySnapshotCopyRetentionPeriodResult {
  Cluster?: Cluster;
}
export declare class SnapshotCopyDisabledFault extends __BaseException {
  readonly name: "SnapshotCopyDisabledFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SnapshotCopyDisabledFault, __BaseException>
  );
}
export interface ModifySnapshotScheduleMessage {
  ScheduleIdentifier: string | undefined;
  ScheduleDefinitions: string[] | undefined;
}
export declare class SnapshotScheduleUpdateInProgressFault extends __BaseException {
  readonly name: "SnapshotScheduleUpdateInProgressFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      SnapshotScheduleUpdateInProgressFault,
      __BaseException
    >
  );
}
export interface ModifyUsageLimitMessage {
  UsageLimitId: string | undefined;
  Amount?: number;
  BreachAction?: UsageLimitBreachAction;
}
export interface PauseClusterResult {
  Cluster?: Cluster;
}
export interface PurchaseReservedNodeOfferingMessage {
  ReservedNodeOfferingId: string | undefined;
  NodeCount?: number;
}
export interface PurchaseReservedNodeOfferingResult {
  ReservedNode?: ReservedNode;
}
export declare class ReservedNodeQuotaExceededFault extends __BaseException {
  readonly name: "ReservedNodeQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ReservedNodeQuotaExceededFault, __BaseException>
  );
}
export interface PutResourcePolicyMessage {
  ResourceArn: string | undefined;
  Policy: string | undefined;
}
export interface PutResourcePolicyResult {
  ResourcePolicy?: ResourcePolicy;
}
export interface RebootClusterMessage {
  ClusterIdentifier: string | undefined;
}
export interface RebootClusterResult {
  Cluster?: Cluster;
}
export interface RejectDataShareMessage {
  DataShareArn: string | undefined;
}
export interface ResetClusterParameterGroupMessage {
  ParameterGroupName: string | undefined;
  ResetAllParameters?: boolean;
  Parameters?: Parameter[];
}
export interface ResizeClusterResult {
  Cluster?: Cluster;
}
export interface RestoreFromClusterSnapshotMessage {
  ClusterIdentifier: string | undefined;
  SnapshotIdentifier?: string;
  SnapshotArn?: string;
  SnapshotClusterIdentifier?: string;
  Port?: number;
  AvailabilityZone?: string;
  AllowVersionUpgrade?: boolean;
  ClusterSubnetGroupName?: string;
  PubliclyAccessible?: boolean;
  OwnerAccount?: string;
  HsmClientCertificateIdentifier?: string;
  HsmConfigurationIdentifier?: string;
  ElasticIp?: string;
  ClusterParameterGroupName?: string;
  ClusterSecurityGroups?: string[];
  VpcSecurityGroupIds?: string[];
  PreferredMaintenanceWindow?: string;
  AutomatedSnapshotRetentionPeriod?: number;
  ManualSnapshotRetentionPeriod?: number;
  KmsKeyId?: string;
  NodeType?: string;
  EnhancedVpcRouting?: boolean;
  AdditionalInfo?: string;
  IamRoles?: string[];
  MaintenanceTrackName?: string;
  SnapshotScheduleIdentifier?: string;
  NumberOfNodes?: number;
  AvailabilityZoneRelocation?: boolean;
  AquaConfigurationStatus?: AquaConfigurationStatus;
  DefaultIamRoleArn?: string;
  ReservedNodeId?: string;
  TargetReservedNodeOfferingId?: string;
  Encrypted?: boolean;
  ManageMasterPassword?: boolean;
  MasterPasswordSecretKmsKeyId?: string;
  IpAddressType?: string;
  MultiAZ?: boolean;
}
export interface RestoreFromClusterSnapshotResult {
  Cluster?: Cluster;
}
export interface RestoreTableFromClusterSnapshotMessage {
  ClusterIdentifier: string | undefined;
  SnapshotIdentifier: string | undefined;
  SourceDatabaseName: string | undefined;
  SourceSchemaName?: string;
  SourceTableName: string | undefined;
  TargetDatabaseName?: string;
  TargetSchemaName?: string;
  NewTableName: string | undefined;
  EnableCaseSensitiveIdentifier?: boolean;
}
export interface RestoreTableFromClusterSnapshotResult {
  TableRestoreStatus?: TableRestoreStatus;
}
export interface ResumeClusterResult {
  Cluster?: Cluster;
}
export interface RevokeClusterSecurityGroupIngressMessage {
  ClusterSecurityGroupName: string | undefined;
  CIDRIP?: string;
  EC2SecurityGroupName?: string;
  EC2SecurityGroupOwnerId?: string;
}
export interface RevokeClusterSecurityGroupIngressResult {
  ClusterSecurityGroup?: ClusterSecurityGroup;
}
export interface RevokeEndpointAccessMessage {
  ClusterIdentifier?: string;
  Account?: string;
  VpcIds?: string[];
  Force?: boolean;
}
export interface RevokeSnapshotAccessMessage {
  SnapshotIdentifier?: string;
  SnapshotArn?: string;
  SnapshotClusterIdentifier?: string;
  AccountWithRestoreAccess: string | undefined;
}
export interface RevokeSnapshotAccessResult {
  Snapshot?: Snapshot;
}
export interface RotateEncryptionKeyMessage {
  ClusterIdentifier: string | undefined;
}
export interface RotateEncryptionKeyResult {
  Cluster?: Cluster;
}
export interface UpdatePartnerStatusInputMessage {
  AccountId: string | undefined;
  ClusterIdentifier: string | undefined;
  DatabaseName: string | undefined;
  PartnerName: string | undefined;
  Status: PartnerIntegrationStatus | undefined;
  StatusMessage?: string;
}
export declare const DisableSnapshotCopyResultFilterSensitiveLog: (
  obj: DisableSnapshotCopyResult
) => any;
export declare const EnableSnapshotCopyResultFilterSensitiveLog: (
  obj: EnableSnapshotCopyResult
) => any;
export declare const FailoverPrimaryComputeResultFilterSensitiveLog: (
  obj: FailoverPrimaryComputeResult
) => any;
export declare const ModifyClusterMessageFilterSensitiveLog: (
  obj: ModifyClusterMessage
) => any;
export declare const ModifyClusterResultFilterSensitiveLog: (
  obj: ModifyClusterResult
) => any;
export declare const ModifyClusterDbRevisionResultFilterSensitiveLog: (
  obj: ModifyClusterDbRevisionResult
) => any;
export declare const ModifyClusterIamRolesResultFilterSensitiveLog: (
  obj: ModifyClusterIamRolesResult
) => any;
export declare const ModifyClusterMaintenanceResultFilterSensitiveLog: (
  obj: ModifyClusterMaintenanceResult
) => any;
export declare const ModifySnapshotCopyRetentionPeriodResultFilterSensitiveLog: (
  obj: ModifySnapshotCopyRetentionPeriodResult
) => any;
export declare const PauseClusterResultFilterSensitiveLog: (
  obj: PauseClusterResult
) => any;
export declare const RebootClusterResultFilterSensitiveLog: (
  obj: RebootClusterResult
) => any;
export declare const ResizeClusterResultFilterSensitiveLog: (
  obj: ResizeClusterResult
) => any;
export declare const RestoreFromClusterSnapshotResultFilterSensitiveLog: (
  obj: RestoreFromClusterSnapshotResult
) => any;
export declare const ResumeClusterResultFilterSensitiveLog: (
  obj: ResumeClusterResult
) => any;
export declare const RotateEncryptionKeyResultFilterSensitiveLog: (
  obj: RotateEncryptionKeyResult
) => any;
