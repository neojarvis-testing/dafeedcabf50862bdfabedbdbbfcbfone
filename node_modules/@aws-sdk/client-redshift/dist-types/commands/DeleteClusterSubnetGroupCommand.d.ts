import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { DeleteClusterSubnetGroupMessage } from "../models/models_0";
import { RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DeleteClusterSubnetGroupCommand}.
 */
export interface DeleteClusterSubnetGroupCommandInput extends DeleteClusterSubnetGroupMessage {
}
/**
 * @public
 *
 * The output of {@link DeleteClusterSubnetGroupCommand}.
 */
export interface DeleteClusterSubnetGroupCommandOutput extends __MetadataBearer {
}
declare const DeleteClusterSubnetGroupCommand_base: {
    new (input: DeleteClusterSubnetGroupCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteClusterSubnetGroupCommandInput, DeleteClusterSubnetGroupCommandOutput, RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: DeleteClusterSubnetGroupCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteClusterSubnetGroupCommandInput, DeleteClusterSubnetGroupCommandOutput, RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Deletes the specified cluster subnet group.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { RedshiftClient, DeleteClusterSubnetGroupCommand } from "@aws-sdk/client-redshift"; // ES Modules import
 * // const { RedshiftClient, DeleteClusterSubnetGroupCommand } = require("@aws-sdk/client-redshift"); // CommonJS import
 * const client = new RedshiftClient(config);
 * const input = { // DeleteClusterSubnetGroupMessage
 *   ClusterSubnetGroupName: "STRING_VALUE", // required
 * };
 * const command = new DeleteClusterSubnetGroupCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param DeleteClusterSubnetGroupCommandInput - {@link DeleteClusterSubnetGroupCommandInput}
 * @returns {@link DeleteClusterSubnetGroupCommandOutput}
 * @see {@link DeleteClusterSubnetGroupCommandInput} for command's `input` shape.
 * @see {@link DeleteClusterSubnetGroupCommandOutput} for command's `response` shape.
 * @see {@link RedshiftClientResolvedConfig | config} for RedshiftClient's `config` shape.
 *
 * @throws {@link ClusterSubnetGroupNotFoundFault} (client fault)
 *  <p>The cluster subnet group name does not refer to an existing cluster subnet
 *             group.</p>
 *
 * @throws {@link InvalidClusterSubnetGroupStateFault} (client fault)
 *  <p>The cluster subnet group cannot be deleted because it is in use.</p>
 *
 * @throws {@link InvalidClusterSubnetStateFault} (client fault)
 *  <p>The state of the subnet is invalid.</p>
 *
 * @throws {@link RedshiftServiceException}
 * <p>Base exception class for all service exceptions from Redshift service.</p>
 *
 * @public
 */
export declare class DeleteClusterSubnetGroupCommand extends DeleteClusterSubnetGroupCommand_base {
}
