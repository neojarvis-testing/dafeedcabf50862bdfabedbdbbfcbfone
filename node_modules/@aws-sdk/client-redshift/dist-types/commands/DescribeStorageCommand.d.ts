import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { CustomerStorageMessage } from "../models/models_0";
import { RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RedshiftClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribeStorageCommand}.
 */
export interface DescribeStorageCommandInput {
}
/**
 * @public
 *
 * The output of {@link DescribeStorageCommand}.
 */
export interface DescribeStorageCommandOutput extends CustomerStorageMessage, __MetadataBearer {
}
declare const DescribeStorageCommand_base: {
    new (input: DescribeStorageCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeStorageCommandInput, DescribeStorageCommandOutput, RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (...[input]: [] | [DescribeStorageCommandInput]): import("@smithy/smithy-client").CommandImpl<DescribeStorageCommandInput, DescribeStorageCommandOutput, RedshiftClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Returns account level backups storage size and provisional storage.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { RedshiftClient, DescribeStorageCommand } from "@aws-sdk/client-redshift"; // ES Modules import
 * // const { RedshiftClient, DescribeStorageCommand } = require("@aws-sdk/client-redshift"); // CommonJS import
 * const client = new RedshiftClient(config);
 * const input = {};
 * const command = new DescribeStorageCommand(input);
 * const response = await client.send(command);
 * // { // CustomerStorageMessage
 * //   TotalBackupSizeInMegaBytes: Number("double"),
 * //   TotalProvisionedStorageInMegaBytes: Number("double"),
 * // };
 *
 * ```
 *
 * @param DescribeStorageCommandInput - {@link DescribeStorageCommandInput}
 * @returns {@link DescribeStorageCommandOutput}
 * @see {@link DescribeStorageCommandInput} for command's `input` shape.
 * @see {@link DescribeStorageCommandOutput} for command's `response` shape.
 * @see {@link RedshiftClientResolvedConfig | config} for RedshiftClient's `config` shape.
 *
 * @throws {@link RedshiftServiceException}
 * <p>Base exception class for all service exceptions from Redshift service.</p>
 *
 * @public
 */
export declare class DescribeStorageCommand extends DescribeStorageCommand_base {
}
