import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { ClusterFilterSensitiveLog, } from "./models_0";
import { RedshiftServiceException as __BaseException } from "./RedshiftServiceException";
export const SourceType = {
    cluster: "cluster",
    cluster_parameter_group: "cluster-parameter-group",
    cluster_security_group: "cluster-security-group",
    cluster_snapshot: "cluster-snapshot",
    scheduled_action: "scheduled-action",
};
export const ZeroETLIntegrationStatus = {
    ACTIVE: "active",
    CREATING: "creating",
    DELETING: "deleting",
    FAILED: "failed",
    MODIFYING: "modifying",
    NEEDS_ATTENTION: "needs_attention",
    SYNCING: "syncing",
};
export class IntegrationNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "IntegrationNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "IntegrationNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, IntegrationNotFoundFault.prototype);
    }
}
export const LogDestinationType = {
    CLOUDWATCH: "cloudwatch",
    S3: "s3",
};
export const NodeConfigurationOptionsFilterName = {
    ESTIMATED_DISK_UTILIZATION_PERCENT: "EstimatedDiskUtilizationPercent",
    MODE: "Mode",
    NODE_TYPE: "NodeType",
    NUM_NODES: "NumberOfNodes",
};
export const OperatorType = {
    BETWEEN: "between",
    EQ: "eq",
    GE: "ge",
    GT: "gt",
    IN: "in",
    LE: "le",
    LT: "lt",
};
export const Mode = {
    HIGH_PERFORMANCE: "high-performance",
    STANDARD: "standard",
};
export const PartnerIntegrationStatus = {
    Active: "Active",
    ConnectionFailure: "ConnectionFailure",
    Inactive: "Inactive",
    RuntimeFailure: "RuntimeFailure",
};
export class ReservedNodeExchangeNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedNodeExchangeNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodeExchangeNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodeExchangeNotFoundFault.prototype);
    }
}
export const ScheduledActionFilterName = {
    CLUSTER_IDENTIFIER: "cluster-identifier",
    IAM_ROLE: "iam-role",
};
export const ScheduledActionTypeValues = {
    PAUSE_CLUSTER: "PauseCluster",
    RESIZE_CLUSTER: "ResizeCluster",
    RESUME_CLUSTER: "ResumeCluster",
};
export class TableRestoreNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "TableRestoreNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "TableRestoreNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, TableRestoreNotFoundFault.prototype);
    }
}
export const TableRestoreStatusType = {
    CANCELED: "CANCELED",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    PENDING: "PENDING",
    SUCCEEDED: "SUCCEEDED",
};
export class SnapshotCopyAlreadyDisabledFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotCopyAlreadyDisabledFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotCopyAlreadyDisabledFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotCopyAlreadyDisabledFault.prototype);
    }
}
export class InsufficientS3BucketPolicyFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InsufficientS3BucketPolicyFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientS3BucketPolicyFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientS3BucketPolicyFault.prototype);
    }
}
export class InvalidS3BucketNameFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidS3BucketNameFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidS3BucketNameFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidS3BucketNameFault.prototype);
    }
}
export class InvalidS3KeyPrefixFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidS3KeyPrefixFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidS3KeyPrefixFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidS3KeyPrefixFault.prototype);
    }
}
export class IncompatibleOrderableOptions extends __BaseException {
    constructor(opts) {
        super({
            name: "IncompatibleOrderableOptions",
            $fault: "client",
            ...opts,
        });
        this.name = "IncompatibleOrderableOptions";
        this.$fault = "client";
        Object.setPrototypeOf(this, IncompatibleOrderableOptions.prototype);
    }
}
export class SnapshotCopyAlreadyEnabledFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotCopyAlreadyEnabledFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotCopyAlreadyEnabledFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotCopyAlreadyEnabledFault.prototype);
    }
}
export class UnknownSnapshotCopyRegionFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UnknownSnapshotCopyRegionFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UnknownSnapshotCopyRegionFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnknownSnapshotCopyRegionFault.prototype);
    }
}
export class EndpointAuthorizationNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "EndpointAuthorizationNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EndpointAuthorizationNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EndpointAuthorizationNotFoundFault.prototype);
    }
}
export const ReservedNodeExchangeActionType = {
    RESIZE_CLUSTER: "resize-cluster",
    RESTORE_CLUSTER: "restore-cluster",
};
export class InvalidPolicyFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidPolicyFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPolicyFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPolicyFault.prototype);
    }
}
export const ImpactRankingType = {
    HIGH: "HIGH",
    LOW: "LOW",
    MEDIUM: "MEDIUM",
};
export class InProgressTableRestoreQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InProgressTableRestoreQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InProgressTableRestoreQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InProgressTableRestoreQuotaExceededFault.prototype);
    }
}
export class InvalidRestoreFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRestoreFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRestoreFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRestoreFault.prototype);
    }
}
export class InvalidTableRestoreArgumentFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidTableRestoreArgumentFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTableRestoreArgumentFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTableRestoreArgumentFault.prototype);
    }
}
export const RecommendedActionType = {
    CLI: "CLI",
    SQL: "SQL",
};
export class TableLimitExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "TableLimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "TableLimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, TableLimitExceededFault.prototype);
    }
}
export class UnsupportedOptionFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedOptionFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedOptionFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedOptionFault.prototype);
    }
}
export class SubnetAlreadyInUse extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetAlreadyInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetAlreadyInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetAlreadyInUse.prototype);
    }
}
export class SnapshotCopyDisabledFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotCopyDisabledFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotCopyDisabledFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotCopyDisabledFault.prototype);
    }
}
export class SnapshotScheduleUpdateInProgressFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotScheduleUpdateInProgressFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotScheduleUpdateInProgressFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotScheduleUpdateInProgressFault.prototype);
    }
}
export class ReservedNodeQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedNodeQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodeQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodeQuotaExceededFault.prototype);
    }
}
export const DisableSnapshotCopyResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const EnableSnapshotCopyResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const FailoverPrimaryComputeResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const ModifyClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MasterUserPassword && { MasterUserPassword: SENSITIVE_STRING }),
});
export const ModifyClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const ModifyClusterDbRevisionResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const ModifyClusterIamRolesResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const ModifyClusterMaintenanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const ModifySnapshotCopyRetentionPeriodResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const PauseClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const RebootClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const ResizeClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const RestoreFromClusterSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const ResumeClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
export const RotateEncryptionKeyResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Cluster && { Cluster: ClusterFilterSensitiveLog(obj.Cluster) }),
});
