"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  ApiGatewayV2: () => ApiGatewayV2,
  ApiGatewayV2Client: () => ApiGatewayV2Client,
  ApiGatewayV2ServiceException: () => ApiGatewayV2ServiceException,
  AuthorizationType: () => AuthorizationType,
  AuthorizerType: () => AuthorizerType,
  BadRequestException: () => BadRequestException,
  ConflictException: () => ConflictException,
  ConnectionType: () => ConnectionType,
  ContentHandlingStrategy: () => ContentHandlingStrategy,
  CreateApiCommand: () => CreateApiCommand,
  CreateApiMappingCommand: () => CreateApiMappingCommand,
  CreateAuthorizerCommand: () => CreateAuthorizerCommand,
  CreateDeploymentCommand: () => CreateDeploymentCommand,
  CreateDomainNameCommand: () => CreateDomainNameCommand,
  CreateIntegrationCommand: () => CreateIntegrationCommand,
  CreateIntegrationResponseCommand: () => CreateIntegrationResponseCommand,
  CreateModelCommand: () => CreateModelCommand,
  CreateRouteCommand: () => CreateRouteCommand,
  CreateRouteResponseCommand: () => CreateRouteResponseCommand,
  CreateStageCommand: () => CreateStageCommand,
  CreateVpcLinkCommand: () => CreateVpcLinkCommand,
  DeleteAccessLogSettingsCommand: () => DeleteAccessLogSettingsCommand,
  DeleteApiCommand: () => DeleteApiCommand,
  DeleteApiMappingCommand: () => DeleteApiMappingCommand,
  DeleteAuthorizerCommand: () => DeleteAuthorizerCommand,
  DeleteCorsConfigurationCommand: () => DeleteCorsConfigurationCommand,
  DeleteDeploymentCommand: () => DeleteDeploymentCommand,
  DeleteDomainNameCommand: () => DeleteDomainNameCommand,
  DeleteIntegrationCommand: () => DeleteIntegrationCommand,
  DeleteIntegrationResponseCommand: () => DeleteIntegrationResponseCommand,
  DeleteModelCommand: () => DeleteModelCommand,
  DeleteRouteCommand: () => DeleteRouteCommand,
  DeleteRouteRequestParameterCommand: () => DeleteRouteRequestParameterCommand,
  DeleteRouteResponseCommand: () => DeleteRouteResponseCommand,
  DeleteRouteSettingsCommand: () => DeleteRouteSettingsCommand,
  DeleteStageCommand: () => DeleteStageCommand,
  DeleteVpcLinkCommand: () => DeleteVpcLinkCommand,
  DeploymentStatus: () => DeploymentStatus,
  DomainNameStatus: () => DomainNameStatus,
  EndpointType: () => EndpointType,
  ExportApiCommand: () => ExportApiCommand,
  GetApiCommand: () => GetApiCommand,
  GetApiMappingCommand: () => GetApiMappingCommand,
  GetApiMappingsCommand: () => GetApiMappingsCommand,
  GetApisCommand: () => GetApisCommand,
  GetAuthorizerCommand: () => GetAuthorizerCommand,
  GetAuthorizersCommand: () => GetAuthorizersCommand,
  GetDeploymentCommand: () => GetDeploymentCommand,
  GetDeploymentsCommand: () => GetDeploymentsCommand,
  GetDomainNameCommand: () => GetDomainNameCommand,
  GetDomainNamesCommand: () => GetDomainNamesCommand,
  GetIntegrationCommand: () => GetIntegrationCommand,
  GetIntegrationResponseCommand: () => GetIntegrationResponseCommand,
  GetIntegrationResponsesCommand: () => GetIntegrationResponsesCommand,
  GetIntegrationsCommand: () => GetIntegrationsCommand,
  GetModelCommand: () => GetModelCommand,
  GetModelTemplateCommand: () => GetModelTemplateCommand,
  GetModelsCommand: () => GetModelsCommand,
  GetRouteCommand: () => GetRouteCommand,
  GetRouteResponseCommand: () => GetRouteResponseCommand,
  GetRouteResponsesCommand: () => GetRouteResponsesCommand,
  GetRoutesCommand: () => GetRoutesCommand,
  GetStageCommand: () => GetStageCommand,
  GetStagesCommand: () => GetStagesCommand,
  GetTagsCommand: () => GetTagsCommand,
  GetVpcLinkCommand: () => GetVpcLinkCommand,
  GetVpcLinksCommand: () => GetVpcLinksCommand,
  ImportApiCommand: () => ImportApiCommand,
  IntegrationType: () => IntegrationType,
  LoggingLevel: () => LoggingLevel,
  NotFoundException: () => NotFoundException,
  PassthroughBehavior: () => PassthroughBehavior,
  ProtocolType: () => ProtocolType,
  ReimportApiCommand: () => ReimportApiCommand,
  ResetAuthorizersCacheCommand: () => ResetAuthorizersCacheCommand,
  SecurityPolicy: () => SecurityPolicy,
  TagResourceCommand: () => TagResourceCommand,
  TooManyRequestsException: () => TooManyRequestsException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateApiCommand: () => UpdateApiCommand,
  UpdateApiMappingCommand: () => UpdateApiMappingCommand,
  UpdateAuthorizerCommand: () => UpdateAuthorizerCommand,
  UpdateDeploymentCommand: () => UpdateDeploymentCommand,
  UpdateDomainNameCommand: () => UpdateDomainNameCommand,
  UpdateIntegrationCommand: () => UpdateIntegrationCommand,
  UpdateIntegrationResponseCommand: () => UpdateIntegrationResponseCommand,
  UpdateModelCommand: () => UpdateModelCommand,
  UpdateRouteCommand: () => UpdateRouteCommand,
  UpdateRouteResponseCommand: () => UpdateRouteResponseCommand,
  UpdateStageCommand: () => UpdateStageCommand,
  UpdateVpcLinkCommand: () => UpdateVpcLinkCommand,
  VpcLinkStatus: () => VpcLinkStatus,
  VpcLinkVersion: () => VpcLinkVersion,
  __Client: () => import_smithy_client.Client
});
module.exports = __toCommonJS(src_exports);

// src/ApiGatewayV2Client.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "apigateway"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ApiGatewayV2Client.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/ApiGatewayV2Client.ts
var _ApiGatewayV2Client = class _ApiGatewayV2Client extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultApiGatewayV2HttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_ApiGatewayV2Client, "ApiGatewayV2Client");
var ApiGatewayV2Client = _ApiGatewayV2Client;

// src/ApiGatewayV2.ts


// src/commands/CreateApiCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/ApiGatewayV2ServiceException.ts

var _ApiGatewayV2ServiceException = class _ApiGatewayV2ServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ApiGatewayV2ServiceException.prototype);
  }
};
__name(_ApiGatewayV2ServiceException, "ApiGatewayV2ServiceException");
var ApiGatewayV2ServiceException = _ApiGatewayV2ServiceException;

// src/models/models_0.ts
var ProtocolType = {
  HTTP: "HTTP",
  WEBSOCKET: "WEBSOCKET"
};
var AuthorizerType = {
  JWT: "JWT",
  REQUEST: "REQUEST"
};
var DeploymentStatus = {
  DEPLOYED: "DEPLOYED",
  FAILED: "FAILED",
  PENDING: "PENDING"
};
var DomainNameStatus = {
  AVAILABLE: "AVAILABLE",
  PENDING_CERTIFICATE_REIMPORT: "PENDING_CERTIFICATE_REIMPORT",
  PENDING_OWNERSHIP_VERIFICATION: "PENDING_OWNERSHIP_VERIFICATION",
  UPDATING: "UPDATING"
};
var EndpointType = {
  EDGE: "EDGE",
  REGIONAL: "REGIONAL"
};
var SecurityPolicy = {
  TLS_1_0: "TLS_1_0",
  TLS_1_2: "TLS_1_2"
};
var ConnectionType = {
  INTERNET: "INTERNET",
  VPC_LINK: "VPC_LINK"
};
var ContentHandlingStrategy = {
  CONVERT_TO_BINARY: "CONVERT_TO_BINARY",
  CONVERT_TO_TEXT: "CONVERT_TO_TEXT"
};
var IntegrationType = {
  AWS: "AWS",
  AWS_PROXY: "AWS_PROXY",
  HTTP: "HTTP",
  HTTP_PROXY: "HTTP_PROXY",
  MOCK: "MOCK"
};
var PassthroughBehavior = {
  NEVER: "NEVER",
  WHEN_NO_MATCH: "WHEN_NO_MATCH",
  WHEN_NO_TEMPLATES: "WHEN_NO_TEMPLATES"
};
var AuthorizationType = {
  AWS_IAM: "AWS_IAM",
  CUSTOM: "CUSTOM",
  JWT: "JWT",
  NONE: "NONE"
};
var LoggingLevel = {
  ERROR: "ERROR",
  INFO: "INFO",
  OFF: "OFF"
};
var VpcLinkStatus = {
  AVAILABLE: "AVAILABLE",
  DELETING: "DELETING",
  FAILED: "FAILED",
  INACTIVE: "INACTIVE",
  PENDING: "PENDING"
};
var VpcLinkVersion = {
  V2: "V2"
};
var _AccessDeniedException = class _AccessDeniedException extends ApiGatewayV2ServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var _BadRequestException = class _BadRequestException extends ApiGatewayV2ServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "BadRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BadRequestException.prototype);
    this.Message = opts.Message;
  }
};
__name(_BadRequestException, "BadRequestException");
var BadRequestException = _BadRequestException;
var _ConflictException = class _ConflictException extends ApiGatewayV2ServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _NotFoundException = class _NotFoundException extends ApiGatewayV2ServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "NotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.Message = opts.Message;
    this.ResourceType = opts.ResourceType;
  }
};
__name(_NotFoundException, "NotFoundException");
var NotFoundException = _NotFoundException;
var _TooManyRequestsException = class _TooManyRequestsException extends ApiGatewayV2ServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyRequestsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyRequestsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyRequestsException.prototype);
    this.LimitType = opts.LimitType;
    this.Message = opts.Message;
  }
};
__name(_TooManyRequestsException, "TooManyRequestsException");
var TooManyRequestsException = _TooManyRequestsException;

// src/protocols/Aws_restJson1.ts
var se_CreateApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiKeySelectionExpression: [, , `ApiKeySelectionExpression`],
      corsConfiguration: [, (_) => se_Cors(_, context), `CorsConfiguration`],
      credentialsArn: [, , `CredentialsArn`],
      description: [, , `Description`],
      disableExecuteApiEndpoint: [, , `DisableExecuteApiEndpoint`],
      disableSchemaValidation: [, , `DisableSchemaValidation`],
      name: [, , `Name`],
      protocolType: [, , `ProtocolType`],
      routeKey: [, , `RouteKey`],
      routeSelectionExpression: [, , `RouteSelectionExpression`],
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`],
      target: [, , `Target`],
      version: [, , `Version`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApiCommand");
var se_CreateApiMappingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/domainnames/{DomainName}/apimappings");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiId: [, , `ApiId`],
      apiMappingKey: [, , `ApiMappingKey`],
      stage: [, , `Stage`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApiMappingCommand");
var se_CreateAuthorizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/authorizers");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authorizerCredentialsArn: [, , `AuthorizerCredentialsArn`],
      authorizerPayloadFormatVersion: [, , `AuthorizerPayloadFormatVersion`],
      authorizerResultTtlInSeconds: [, , `AuthorizerResultTtlInSeconds`],
      authorizerType: [, , `AuthorizerType`],
      authorizerUri: [, , `AuthorizerUri`],
      enableSimpleResponses: [, , `EnableSimpleResponses`],
      identitySource: [, (_) => (0, import_smithy_client._json)(_), `IdentitySource`],
      identityValidationExpression: [, , `IdentityValidationExpression`],
      jwtConfiguration: [, (_) => se_JWTConfiguration(_, context), `JwtConfiguration`],
      name: [, , `Name`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateAuthorizerCommand");
var se_CreateDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/deployments");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [, , `Description`],
      stageName: [, , `StageName`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDeploymentCommand");
var se_CreateDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/domainnames");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      domainName: [, , `DomainName`],
      domainNameConfigurations: [, (_) => se_DomainNameConfigurations(_, context), `DomainNameConfigurations`],
      mutualTlsAuthentication: [, (_) => se_MutualTlsAuthenticationInput(_, context), `MutualTlsAuthentication`],
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDomainNameCommand");
var se_CreateIntegrationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/integrations");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectionId: [, , `ConnectionId`],
      connectionType: [, , `ConnectionType`],
      contentHandlingStrategy: [, , `ContentHandlingStrategy`],
      credentialsArn: [, , `CredentialsArn`],
      description: [, , `Description`],
      integrationMethod: [, , `IntegrationMethod`],
      integrationSubtype: [, , `IntegrationSubtype`],
      integrationType: [, , `IntegrationType`],
      integrationUri: [, , `IntegrationUri`],
      passthroughBehavior: [, , `PassthroughBehavior`],
      payloadFormatVersion: [, , `PayloadFormatVersion`],
      requestParameters: [, (_) => (0, import_smithy_client._json)(_), `RequestParameters`],
      requestTemplates: [, (_) => (0, import_smithy_client._json)(_), `RequestTemplates`],
      responseParameters: [, (_) => (0, import_smithy_client._json)(_), `ResponseParameters`],
      templateSelectionExpression: [, , `TemplateSelectionExpression`],
      timeoutInMillis: [, , `TimeoutInMillis`],
      tlsConfig: [, (_) => se_TlsConfigInput(_, context), `TlsConfig`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateIntegrationCommand");
var se_CreateIntegrationResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("IntegrationId", () => input.IntegrationId, "{IntegrationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      contentHandlingStrategy: [, , `ContentHandlingStrategy`],
      integrationResponseKey: [, , `IntegrationResponseKey`],
      responseParameters: [, (_) => (0, import_smithy_client._json)(_), `ResponseParameters`],
      responseTemplates: [, (_) => (0, import_smithy_client._json)(_), `ResponseTemplates`],
      templateSelectionExpression: [, , `TemplateSelectionExpression`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateIntegrationResponseCommand");
var se_CreateModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/models");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      contentType: [, , `ContentType`],
      description: [, , `Description`],
      name: [, , `Name`],
      schema: [, , `Schema`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateModelCommand");
var se_CreateRouteCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/routes");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiKeyRequired: [, , `ApiKeyRequired`],
      authorizationScopes: [, (_) => (0, import_smithy_client._json)(_), `AuthorizationScopes`],
      authorizationType: [, , `AuthorizationType`],
      authorizerId: [, , `AuthorizerId`],
      modelSelectionExpression: [, , `ModelSelectionExpression`],
      operationName: [, , `OperationName`],
      requestModels: [, (_) => (0, import_smithy_client._json)(_), `RequestModels`],
      requestParameters: [, (_) => se_RouteParameters(_, context), `RequestParameters`],
      routeKey: [, , `RouteKey`],
      routeResponseSelectionExpression: [, , `RouteResponseSelectionExpression`],
      target: [, , `Target`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRouteCommand");
var se_CreateRouteResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/routes/{RouteId}/routeresponses");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RouteId", () => input.RouteId, "{RouteId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      modelSelectionExpression: [, , `ModelSelectionExpression`],
      responseModels: [, (_) => (0, import_smithy_client._json)(_), `ResponseModels`],
      responseParameters: [, (_) => se_RouteParameters(_, context), `ResponseParameters`],
      routeResponseKey: [, , `RouteResponseKey`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRouteResponseCommand");
var se_CreateStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/stages");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accessLogSettings: [, (_) => se_AccessLogSettings(_, context), `AccessLogSettings`],
      autoDeploy: [, , `AutoDeploy`],
      clientCertificateId: [, , `ClientCertificateId`],
      defaultRouteSettings: [, (_) => se_RouteSettings(_, context), `DefaultRouteSettings`],
      deploymentId: [, , `DeploymentId`],
      description: [, , `Description`],
      routeSettings: [, (_) => se_RouteSettingsMap(_, context), `RouteSettings`],
      stageName: [, , `StageName`],
      stageVariables: [, (_) => (0, import_smithy_client._json)(_), `StageVariables`],
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateStageCommand");
var se_CreateVpcLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/vpclinks");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: [, , `Name`],
      securityGroupIds: [, (_) => (0, import_smithy_client._json)(_), `SecurityGroupIds`],
      subnetIds: [, (_) => (0, import_smithy_client._json)(_), `SubnetIds`],
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateVpcLinkCommand");
var se_DeleteAccessLogSettingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/stages/{StageName}/accesslogsettings");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("StageName", () => input.StageName, "{StageName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteAccessLogSettingsCommand");
var se_DeleteApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteApiCommand");
var se_DeleteApiMappingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/domainnames/{DomainName}/apimappings/{ApiMappingId}");
  b.p("ApiMappingId", () => input.ApiMappingId, "{ApiMappingId}", false);
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteApiMappingCommand");
var se_DeleteAuthorizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/authorizers/{AuthorizerId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("AuthorizerId", () => input.AuthorizerId, "{AuthorizerId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteAuthorizerCommand");
var se_DeleteCorsConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/cors");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteCorsConfigurationCommand");
var se_DeleteDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/deployments/{DeploymentId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("DeploymentId", () => input.DeploymentId, "{DeploymentId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDeploymentCommand");
var se_DeleteDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/domainnames/{DomainName}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDomainNameCommand");
var se_DeleteIntegrationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/integrations/{IntegrationId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("IntegrationId", () => input.IntegrationId, "{IntegrationId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteIntegrationCommand");
var se_DeleteIntegrationResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses/{IntegrationResponseId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("IntegrationId", () => input.IntegrationId, "{IntegrationId}", false);
  b.p("IntegrationResponseId", () => input.IntegrationResponseId, "{IntegrationResponseId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteIntegrationResponseCommand");
var se_DeleteModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/models/{ModelId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("ModelId", () => input.ModelId, "{ModelId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteModelCommand");
var se_DeleteRouteCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/routes/{RouteId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RouteId", () => input.RouteId, "{RouteId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteRouteCommand");
var se_DeleteRouteRequestParameterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/routes/{RouteId}/requestparameters/{RequestParameterKey}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RequestParameterKey", () => input.RequestParameterKey, "{RequestParameterKey}", false);
  b.p("RouteId", () => input.RouteId, "{RouteId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteRouteRequestParameterCommand");
var se_DeleteRouteResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/routes/{RouteId}/routeresponses/{RouteResponseId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RouteId", () => input.RouteId, "{RouteId}", false);
  b.p("RouteResponseId", () => input.RouteResponseId, "{RouteResponseId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteRouteResponseCommand");
var se_DeleteRouteSettingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/stages/{StageName}/routesettings/{RouteKey}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RouteKey", () => input.RouteKey, "{RouteKey}", false);
  b.p("StageName", () => input.StageName, "{StageName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteRouteSettingsCommand");
var se_DeleteStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/stages/{StageName}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("StageName", () => input.StageName, "{StageName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteStageCommand");
var se_DeleteVpcLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/vpclinks/{VpcLinkId}");
  b.p("VpcLinkId", () => input.VpcLinkId, "{VpcLinkId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteVpcLinkCommand");
var se_ExportApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/exports/{Specification}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("Specification", () => input.Specification, "{Specification}", false);
  const query = (0, import_smithy_client.map)({
    [_eV]: [, input[_EV]],
    [_iE]: [() => input.IncludeExtensions !== void 0, () => input[_IE].toString()],
    [_oT]: [, (0, import_smithy_client.expectNonNull)(input[_OT], `OutputType`)],
    [_sN]: [, input[_SN]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ExportApiCommand");
var se_GetApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetApiCommand");
var se_GetApiMappingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/domainnames/{DomainName}/apimappings/{ApiMappingId}");
  b.p("ApiMappingId", () => input.ApiMappingId, "{ApiMappingId}", false);
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetApiMappingCommand");
var se_GetApiMappingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/domainnames/{DomainName}/apimappings");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetApiMappingsCommand");
var se_GetApisCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis");
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetApisCommand");
var se_GetAuthorizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/authorizers/{AuthorizerId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("AuthorizerId", () => input.AuthorizerId, "{AuthorizerId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAuthorizerCommand");
var se_GetAuthorizersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/authorizers");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetAuthorizersCommand");
var se_GetDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/deployments/{DeploymentId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("DeploymentId", () => input.DeploymentId, "{DeploymentId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDeploymentCommand");
var se_GetDeploymentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/deployments");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDeploymentsCommand");
var se_GetDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/domainnames/{DomainName}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDomainNameCommand");
var se_GetDomainNamesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/domainnames");
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDomainNamesCommand");
var se_GetIntegrationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/integrations/{IntegrationId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("IntegrationId", () => input.IntegrationId, "{IntegrationId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetIntegrationCommand");
var se_GetIntegrationResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses/{IntegrationResponseId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("IntegrationId", () => input.IntegrationId, "{IntegrationId}", false);
  b.p("IntegrationResponseId", () => input.IntegrationResponseId, "{IntegrationResponseId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetIntegrationResponseCommand");
var se_GetIntegrationResponsesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("IntegrationId", () => input.IntegrationId, "{IntegrationId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetIntegrationResponsesCommand");
var se_GetIntegrationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/integrations");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetIntegrationsCommand");
var se_GetModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/models/{ModelId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("ModelId", () => input.ModelId, "{ModelId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetModelCommand");
var se_GetModelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/models");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetModelsCommand");
var se_GetModelTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/models/{ModelId}/template");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("ModelId", () => input.ModelId, "{ModelId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetModelTemplateCommand");
var se_GetRouteCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/routes/{RouteId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RouteId", () => input.RouteId, "{RouteId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetRouteCommand");
var se_GetRouteResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/routes/{RouteId}/routeresponses/{RouteResponseId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RouteId", () => input.RouteId, "{RouteId}", false);
  b.p("RouteResponseId", () => input.RouteResponseId, "{RouteResponseId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetRouteResponseCommand");
var se_GetRouteResponsesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/routes/{RouteId}/routeresponses");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RouteId", () => input.RouteId, "{RouteId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetRouteResponsesCommand");
var se_GetRoutesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/routes");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetRoutesCommand");
var se_GetStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/stages/{StageName}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("StageName", () => input.StageName, "{StageName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetStageCommand");
var se_GetStagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/stages");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetStagesCommand");
var se_GetTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetTagsCommand");
var se_GetVpcLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/vpclinks/{VpcLinkId}");
  b.p("VpcLinkId", () => input.VpcLinkId, "{VpcLinkId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetVpcLinkCommand");
var se_GetVpcLinksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/vpclinks");
  const query = (0, import_smithy_client.map)({
    [_mR]: [, input[_MR]],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetVpcLinksCommand");
var se_ImportApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis");
  const query = (0, import_smithy_client.map)({
    [_b]: [, input[_B]],
    [_fOW]: [() => input.FailOnWarnings !== void 0, () => input[_FOW].toString()]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      body: [, , `Body`]
    })
  );
  b.m("PUT").h(headers).q(query).b(body);
  return b.build();
}, "se_ImportApiCommand");
var se_ReimportApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_b]: [, input[_B]],
    [_fOW]: [() => input.FailOnWarnings !== void 0, () => input[_FOW].toString()]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      body: [, , `Body`]
    })
  );
  b.m("PUT").h(headers).q(query).b(body);
  return b.build();
}, "se_ReimportApiCommand");
var se_ResetAuthorizersCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/apis/{ApiId}/stages/{StageName}/cache/authorizers");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("StageName", () => input.StageName, "{StageName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_ResetAuthorizersCacheCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v2/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.TagKeys, `TagKeys`) != null,
      () => (input[_TK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiKeySelectionExpression: [, , `ApiKeySelectionExpression`],
      corsConfiguration: [, (_) => se_Cors(_, context), `CorsConfiguration`],
      credentialsArn: [, , `CredentialsArn`],
      description: [, , `Description`],
      disableExecuteApiEndpoint: [, , `DisableExecuteApiEndpoint`],
      disableSchemaValidation: [, , `DisableSchemaValidation`],
      name: [, , `Name`],
      routeKey: [, , `RouteKey`],
      routeSelectionExpression: [, , `RouteSelectionExpression`],
      target: [, , `Target`],
      version: [, , `Version`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateApiCommand");
var se_UpdateApiMappingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/domainnames/{DomainName}/apimappings/{ApiMappingId}");
  b.p("ApiMappingId", () => input.ApiMappingId, "{ApiMappingId}", false);
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiId: [, , `ApiId`],
      apiMappingKey: [, , `ApiMappingKey`],
      stage: [, , `Stage`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateApiMappingCommand");
var se_UpdateAuthorizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/authorizers/{AuthorizerId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("AuthorizerId", () => input.AuthorizerId, "{AuthorizerId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authorizerCredentialsArn: [, , `AuthorizerCredentialsArn`],
      authorizerPayloadFormatVersion: [, , `AuthorizerPayloadFormatVersion`],
      authorizerResultTtlInSeconds: [, , `AuthorizerResultTtlInSeconds`],
      authorizerType: [, , `AuthorizerType`],
      authorizerUri: [, , `AuthorizerUri`],
      enableSimpleResponses: [, , `EnableSimpleResponses`],
      identitySource: [, (_) => (0, import_smithy_client._json)(_), `IdentitySource`],
      identityValidationExpression: [, , `IdentityValidationExpression`],
      jwtConfiguration: [, (_) => se_JWTConfiguration(_, context), `JwtConfiguration`],
      name: [, , `Name`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateAuthorizerCommand");
var se_UpdateDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/deployments/{DeploymentId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("DeploymentId", () => input.DeploymentId, "{DeploymentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [, , `Description`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateDeploymentCommand");
var se_UpdateDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/domainnames/{DomainName}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      domainNameConfigurations: [, (_) => se_DomainNameConfigurations(_, context), `DomainNameConfigurations`],
      mutualTlsAuthentication: [, (_) => se_MutualTlsAuthenticationInput(_, context), `MutualTlsAuthentication`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateDomainNameCommand");
var se_UpdateIntegrationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/integrations/{IntegrationId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("IntegrationId", () => input.IntegrationId, "{IntegrationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectionId: [, , `ConnectionId`],
      connectionType: [, , `ConnectionType`],
      contentHandlingStrategy: [, , `ContentHandlingStrategy`],
      credentialsArn: [, , `CredentialsArn`],
      description: [, , `Description`],
      integrationMethod: [, , `IntegrationMethod`],
      integrationSubtype: [, , `IntegrationSubtype`],
      integrationType: [, , `IntegrationType`],
      integrationUri: [, , `IntegrationUri`],
      passthroughBehavior: [, , `PassthroughBehavior`],
      payloadFormatVersion: [, , `PayloadFormatVersion`],
      requestParameters: [, (_) => (0, import_smithy_client._json)(_), `RequestParameters`],
      requestTemplates: [, (_) => (0, import_smithy_client._json)(_), `RequestTemplates`],
      responseParameters: [, (_) => (0, import_smithy_client._json)(_), `ResponseParameters`],
      templateSelectionExpression: [, , `TemplateSelectionExpression`],
      timeoutInMillis: [, , `TimeoutInMillis`],
      tlsConfig: [, (_) => se_TlsConfigInput(_, context), `TlsConfig`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateIntegrationCommand");
var se_UpdateIntegrationResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses/{IntegrationResponseId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("IntegrationId", () => input.IntegrationId, "{IntegrationId}", false);
  b.p("IntegrationResponseId", () => input.IntegrationResponseId, "{IntegrationResponseId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      contentHandlingStrategy: [, , `ContentHandlingStrategy`],
      integrationResponseKey: [, , `IntegrationResponseKey`],
      responseParameters: [, (_) => (0, import_smithy_client._json)(_), `ResponseParameters`],
      responseTemplates: [, (_) => (0, import_smithy_client._json)(_), `ResponseTemplates`],
      templateSelectionExpression: [, , `TemplateSelectionExpression`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateIntegrationResponseCommand");
var se_UpdateModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/models/{ModelId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("ModelId", () => input.ModelId, "{ModelId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      contentType: [, , `ContentType`],
      description: [, , `Description`],
      name: [, , `Name`],
      schema: [, , `Schema`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateModelCommand");
var se_UpdateRouteCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/routes/{RouteId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RouteId", () => input.RouteId, "{RouteId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiKeyRequired: [, , `ApiKeyRequired`],
      authorizationScopes: [, (_) => (0, import_smithy_client._json)(_), `AuthorizationScopes`],
      authorizationType: [, , `AuthorizationType`],
      authorizerId: [, , `AuthorizerId`],
      modelSelectionExpression: [, , `ModelSelectionExpression`],
      operationName: [, , `OperationName`],
      requestModels: [, (_) => (0, import_smithy_client._json)(_), `RequestModels`],
      requestParameters: [, (_) => se_RouteParameters(_, context), `RequestParameters`],
      routeKey: [, , `RouteKey`],
      routeResponseSelectionExpression: [, , `RouteResponseSelectionExpression`],
      target: [, , `Target`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateRouteCommand");
var se_UpdateRouteResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/routes/{RouteId}/routeresponses/{RouteResponseId}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("RouteId", () => input.RouteId, "{RouteId}", false);
  b.p("RouteResponseId", () => input.RouteResponseId, "{RouteResponseId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      modelSelectionExpression: [, , `ModelSelectionExpression`],
      responseModels: [, (_) => (0, import_smithy_client._json)(_), `ResponseModels`],
      responseParameters: [, (_) => se_RouteParameters(_, context), `ResponseParameters`],
      routeResponseKey: [, , `RouteResponseKey`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateRouteResponseCommand");
var se_UpdateStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/apis/{ApiId}/stages/{StageName}");
  b.p("ApiId", () => input.ApiId, "{ApiId}", false);
  b.p("StageName", () => input.StageName, "{StageName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accessLogSettings: [, (_) => se_AccessLogSettings(_, context), `AccessLogSettings`],
      autoDeploy: [, , `AutoDeploy`],
      clientCertificateId: [, , `ClientCertificateId`],
      defaultRouteSettings: [, (_) => se_RouteSettings(_, context), `DefaultRouteSettings`],
      deploymentId: [, , `DeploymentId`],
      description: [, , `Description`],
      routeSettings: [, (_) => se_RouteSettingsMap(_, context), `RouteSettings`],
      stageVariables: [, (_) => (0, import_smithy_client._json)(_), `StageVariables`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateStageCommand");
var se_UpdateVpcLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v2/vpclinks/{VpcLinkId}");
  b.p("VpcLinkId", () => input.VpcLinkId, "{VpcLinkId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: [, , `Name`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateVpcLinkCommand");
var de_CreateApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiEndpoint: [, import_smithy_client.expectString, `apiEndpoint`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiKeySelectionExpression: [, import_smithy_client.expectString, `apiKeySelectionExpression`],
    CorsConfiguration: [, (_) => de_Cors(_, context), `corsConfiguration`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Description: [, import_smithy_client.expectString, `description`],
    DisableExecuteApiEndpoint: [, import_smithy_client.expectBoolean, `disableExecuteApiEndpoint`],
    DisableSchemaValidation: [, import_smithy_client.expectBoolean, `disableSchemaValidation`],
    ImportInfo: [, import_smithy_client._json, `importInfo`],
    Name: [, import_smithy_client.expectString, `name`],
    ProtocolType: [, import_smithy_client.expectString, `protocolType`],
    RouteSelectionExpression: [, import_smithy_client.expectString, `routeSelectionExpression`],
    Tags: [, import_smithy_client._json, `tags`],
    Version: [, import_smithy_client.expectString, `version`],
    Warnings: [, import_smithy_client._json, `warnings`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApiCommand");
var de_CreateApiMappingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiMappingId: [, import_smithy_client.expectString, `apiMappingId`],
    ApiMappingKey: [, import_smithy_client.expectString, `apiMappingKey`],
    Stage: [, import_smithy_client.expectString, `stage`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApiMappingCommand");
var de_CreateAuthorizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AuthorizerCredentialsArn: [, import_smithy_client.expectString, `authorizerCredentialsArn`],
    AuthorizerId: [, import_smithy_client.expectString, `authorizerId`],
    AuthorizerPayloadFormatVersion: [, import_smithy_client.expectString, `authorizerPayloadFormatVersion`],
    AuthorizerResultTtlInSeconds: [, import_smithy_client.expectInt32, `authorizerResultTtlInSeconds`],
    AuthorizerType: [, import_smithy_client.expectString, `authorizerType`],
    AuthorizerUri: [, import_smithy_client.expectString, `authorizerUri`],
    EnableSimpleResponses: [, import_smithy_client.expectBoolean, `enableSimpleResponses`],
    IdentitySource: [, import_smithy_client._json, `identitySource`],
    IdentityValidationExpression: [, import_smithy_client.expectString, `identityValidationExpression`],
    JwtConfiguration: [, (_) => de_JWTConfiguration(_, context), `jwtConfiguration`],
    Name: [, import_smithy_client.expectString, `name`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAuthorizerCommand");
var de_CreateDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AutoDeployed: [, import_smithy_client.expectBoolean, `autoDeployed`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    DeploymentId: [, import_smithy_client.expectString, `deploymentId`],
    DeploymentStatus: [, import_smithy_client.expectString, `deploymentStatus`],
    DeploymentStatusMessage: [, import_smithy_client.expectString, `deploymentStatusMessage`],
    Description: [, import_smithy_client.expectString, `description`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDeploymentCommand");
var de_CreateDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiMappingSelectionExpression: [, import_smithy_client.expectString, `apiMappingSelectionExpression`],
    DomainName: [, import_smithy_client.expectString, `domainName`],
    DomainNameConfigurations: [, (_) => de_DomainNameConfigurations(_, context), `domainNameConfigurations`],
    MutualTlsAuthentication: [, (_) => de_MutualTlsAuthentication(_, context), `mutualTlsAuthentication`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDomainNameCommand");
var de_CreateIntegrationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ConnectionId: [, import_smithy_client.expectString, `connectionId`],
    ConnectionType: [, import_smithy_client.expectString, `connectionType`],
    ContentHandlingStrategy: [, import_smithy_client.expectString, `contentHandlingStrategy`],
    CredentialsArn: [, import_smithy_client.expectString, `credentialsArn`],
    Description: [, import_smithy_client.expectString, `description`],
    IntegrationId: [, import_smithy_client.expectString, `integrationId`],
    IntegrationMethod: [, import_smithy_client.expectString, `integrationMethod`],
    IntegrationResponseSelectionExpression: [, import_smithy_client.expectString, `integrationResponseSelectionExpression`],
    IntegrationSubtype: [, import_smithy_client.expectString, `integrationSubtype`],
    IntegrationType: [, import_smithy_client.expectString, `integrationType`],
    IntegrationUri: [, import_smithy_client.expectString, `integrationUri`],
    PassthroughBehavior: [, import_smithy_client.expectString, `passthroughBehavior`],
    PayloadFormatVersion: [, import_smithy_client.expectString, `payloadFormatVersion`],
    RequestParameters: [, import_smithy_client._json, `requestParameters`],
    RequestTemplates: [, import_smithy_client._json, `requestTemplates`],
    ResponseParameters: [, import_smithy_client._json, `responseParameters`],
    TemplateSelectionExpression: [, import_smithy_client.expectString, `templateSelectionExpression`],
    TimeoutInMillis: [, import_smithy_client.expectInt32, `timeoutInMillis`],
    TlsConfig: [, (_) => de_TlsConfig(_, context), `tlsConfig`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateIntegrationCommand");
var de_CreateIntegrationResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ContentHandlingStrategy: [, import_smithy_client.expectString, `contentHandlingStrategy`],
    IntegrationResponseId: [, import_smithy_client.expectString, `integrationResponseId`],
    IntegrationResponseKey: [, import_smithy_client.expectString, `integrationResponseKey`],
    ResponseParameters: [, import_smithy_client._json, `responseParameters`],
    ResponseTemplates: [, import_smithy_client._json, `responseTemplates`],
    TemplateSelectionExpression: [, import_smithy_client.expectString, `templateSelectionExpression`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateIntegrationResponseCommand");
var de_CreateModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ContentType: [, import_smithy_client.expectString, `contentType`],
    Description: [, import_smithy_client.expectString, `description`],
    ModelId: [, import_smithy_client.expectString, `modelId`],
    Name: [, import_smithy_client.expectString, `name`],
    Schema: [, import_smithy_client.expectString, `schema`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateModelCommand");
var de_CreateRouteCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiKeyRequired: [, import_smithy_client.expectBoolean, `apiKeyRequired`],
    AuthorizationScopes: [, import_smithy_client._json, `authorizationScopes`],
    AuthorizationType: [, import_smithy_client.expectString, `authorizationType`],
    AuthorizerId: [, import_smithy_client.expectString, `authorizerId`],
    ModelSelectionExpression: [, import_smithy_client.expectString, `modelSelectionExpression`],
    OperationName: [, import_smithy_client.expectString, `operationName`],
    RequestModels: [, import_smithy_client._json, `requestModels`],
    RequestParameters: [, (_) => de_RouteParameters(_, context), `requestParameters`],
    RouteId: [, import_smithy_client.expectString, `routeId`],
    RouteKey: [, import_smithy_client.expectString, `routeKey`],
    RouteResponseSelectionExpression: [, import_smithy_client.expectString, `routeResponseSelectionExpression`],
    Target: [, import_smithy_client.expectString, `target`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRouteCommand");
var de_CreateRouteResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ModelSelectionExpression: [, import_smithy_client.expectString, `modelSelectionExpression`],
    ResponseModels: [, import_smithy_client._json, `responseModels`],
    ResponseParameters: [, (_) => de_RouteParameters(_, context), `responseParameters`],
    RouteResponseId: [, import_smithy_client.expectString, `routeResponseId`],
    RouteResponseKey: [, import_smithy_client.expectString, `routeResponseKey`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRouteResponseCommand");
var de_CreateStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AccessLogSettings: [, (_) => de_AccessLogSettings(_, context), `accessLogSettings`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    AutoDeploy: [, import_smithy_client.expectBoolean, `autoDeploy`],
    ClientCertificateId: [, import_smithy_client.expectString, `clientCertificateId`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    DefaultRouteSettings: [, (_) => de_RouteSettings(_, context), `defaultRouteSettings`],
    DeploymentId: [, import_smithy_client.expectString, `deploymentId`],
    Description: [, import_smithy_client.expectString, `description`],
    LastDeploymentStatusMessage: [, import_smithy_client.expectString, `lastDeploymentStatusMessage`],
    LastUpdatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `lastUpdatedDate`],
    RouteSettings: [, (_) => de_RouteSettingsMap(_, context), `routeSettings`],
    StageName: [, import_smithy_client.expectString, `stageName`],
    StageVariables: [, import_smithy_client._json, `stageVariables`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateStageCommand");
var de_CreateVpcLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Name: [, import_smithy_client.expectString, `name`],
    SecurityGroupIds: [, import_smithy_client._json, `securityGroupIds`],
    SubnetIds: [, import_smithy_client._json, `subnetIds`],
    Tags: [, import_smithy_client._json, `tags`],
    VpcLinkId: [, import_smithy_client.expectString, `vpcLinkId`],
    VpcLinkStatus: [, import_smithy_client.expectString, `vpcLinkStatus`],
    VpcLinkStatusMessage: [, import_smithy_client.expectString, `vpcLinkStatusMessage`],
    VpcLinkVersion: [, import_smithy_client.expectString, `vpcLinkVersion`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateVpcLinkCommand");
var de_DeleteAccessLogSettingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteAccessLogSettingsCommand");
var de_DeleteApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApiCommand");
var de_DeleteApiMappingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApiMappingCommand");
var de_DeleteAuthorizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteAuthorizerCommand");
var de_DeleteCorsConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteCorsConfigurationCommand");
var de_DeleteDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDeploymentCommand");
var de_DeleteDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDomainNameCommand");
var de_DeleteIntegrationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteIntegrationCommand");
var de_DeleteIntegrationResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteIntegrationResponseCommand");
var de_DeleteModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteModelCommand");
var de_DeleteRouteCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRouteCommand");
var de_DeleteRouteRequestParameterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRouteRequestParameterCommand");
var de_DeleteRouteResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRouteResponseCommand");
var de_DeleteRouteSettingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRouteSettingsCommand");
var de_DeleteStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteStageCommand");
var de_DeleteVpcLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteVpcLinkCommand");
var de_ExportApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = await (0, import_smithy_client.collectBody)(output.body, context);
  contents.body = data;
  return contents;
}, "de_ExportApiCommand");
var de_GetApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiEndpoint: [, import_smithy_client.expectString, `apiEndpoint`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiKeySelectionExpression: [, import_smithy_client.expectString, `apiKeySelectionExpression`],
    CorsConfiguration: [, (_) => de_Cors(_, context), `corsConfiguration`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Description: [, import_smithy_client.expectString, `description`],
    DisableExecuteApiEndpoint: [, import_smithy_client.expectBoolean, `disableExecuteApiEndpoint`],
    DisableSchemaValidation: [, import_smithy_client.expectBoolean, `disableSchemaValidation`],
    ImportInfo: [, import_smithy_client._json, `importInfo`],
    Name: [, import_smithy_client.expectString, `name`],
    ProtocolType: [, import_smithy_client.expectString, `protocolType`],
    RouteSelectionExpression: [, import_smithy_client.expectString, `routeSelectionExpression`],
    Tags: [, import_smithy_client._json, `tags`],
    Version: [, import_smithy_client.expectString, `version`],
    Warnings: [, import_smithy_client._json, `warnings`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApiCommand");
var de_GetApiMappingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiMappingId: [, import_smithy_client.expectString, `apiMappingId`],
    ApiMappingKey: [, import_smithy_client.expectString, `apiMappingKey`],
    Stage: [, import_smithy_client.expectString, `stage`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApiMappingCommand");
var de_GetApiMappingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfApiMapping(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApiMappingsCommand");
var de_GetApisCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfApi(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApisCommand");
var de_GetAuthorizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AuthorizerCredentialsArn: [, import_smithy_client.expectString, `authorizerCredentialsArn`],
    AuthorizerId: [, import_smithy_client.expectString, `authorizerId`],
    AuthorizerPayloadFormatVersion: [, import_smithy_client.expectString, `authorizerPayloadFormatVersion`],
    AuthorizerResultTtlInSeconds: [, import_smithy_client.expectInt32, `authorizerResultTtlInSeconds`],
    AuthorizerType: [, import_smithy_client.expectString, `authorizerType`],
    AuthorizerUri: [, import_smithy_client.expectString, `authorizerUri`],
    EnableSimpleResponses: [, import_smithy_client.expectBoolean, `enableSimpleResponses`],
    IdentitySource: [, import_smithy_client._json, `identitySource`],
    IdentityValidationExpression: [, import_smithy_client.expectString, `identityValidationExpression`],
    JwtConfiguration: [, (_) => de_JWTConfiguration(_, context), `jwtConfiguration`],
    Name: [, import_smithy_client.expectString, `name`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAuthorizerCommand");
var de_GetAuthorizersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfAuthorizer(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAuthorizersCommand");
var de_GetDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AutoDeployed: [, import_smithy_client.expectBoolean, `autoDeployed`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    DeploymentId: [, import_smithy_client.expectString, `deploymentId`],
    DeploymentStatus: [, import_smithy_client.expectString, `deploymentStatus`],
    DeploymentStatusMessage: [, import_smithy_client.expectString, `deploymentStatusMessage`],
    Description: [, import_smithy_client.expectString, `description`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDeploymentCommand");
var de_GetDeploymentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfDeployment(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDeploymentsCommand");
var de_GetDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiMappingSelectionExpression: [, import_smithy_client.expectString, `apiMappingSelectionExpression`],
    DomainName: [, import_smithy_client.expectString, `domainName`],
    DomainNameConfigurations: [, (_) => de_DomainNameConfigurations(_, context), `domainNameConfigurations`],
    MutualTlsAuthentication: [, (_) => de_MutualTlsAuthentication(_, context), `mutualTlsAuthentication`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDomainNameCommand");
var de_GetDomainNamesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfDomainName(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDomainNamesCommand");
var de_GetIntegrationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ConnectionId: [, import_smithy_client.expectString, `connectionId`],
    ConnectionType: [, import_smithy_client.expectString, `connectionType`],
    ContentHandlingStrategy: [, import_smithy_client.expectString, `contentHandlingStrategy`],
    CredentialsArn: [, import_smithy_client.expectString, `credentialsArn`],
    Description: [, import_smithy_client.expectString, `description`],
    IntegrationId: [, import_smithy_client.expectString, `integrationId`],
    IntegrationMethod: [, import_smithy_client.expectString, `integrationMethod`],
    IntegrationResponseSelectionExpression: [, import_smithy_client.expectString, `integrationResponseSelectionExpression`],
    IntegrationSubtype: [, import_smithy_client.expectString, `integrationSubtype`],
    IntegrationType: [, import_smithy_client.expectString, `integrationType`],
    IntegrationUri: [, import_smithy_client.expectString, `integrationUri`],
    PassthroughBehavior: [, import_smithy_client.expectString, `passthroughBehavior`],
    PayloadFormatVersion: [, import_smithy_client.expectString, `payloadFormatVersion`],
    RequestParameters: [, import_smithy_client._json, `requestParameters`],
    RequestTemplates: [, import_smithy_client._json, `requestTemplates`],
    ResponseParameters: [, import_smithy_client._json, `responseParameters`],
    TemplateSelectionExpression: [, import_smithy_client.expectString, `templateSelectionExpression`],
    TimeoutInMillis: [, import_smithy_client.expectInt32, `timeoutInMillis`],
    TlsConfig: [, (_) => de_TlsConfig(_, context), `tlsConfig`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIntegrationCommand");
var de_GetIntegrationResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ContentHandlingStrategy: [, import_smithy_client.expectString, `contentHandlingStrategy`],
    IntegrationResponseId: [, import_smithy_client.expectString, `integrationResponseId`],
    IntegrationResponseKey: [, import_smithy_client.expectString, `integrationResponseKey`],
    ResponseParameters: [, import_smithy_client._json, `responseParameters`],
    ResponseTemplates: [, import_smithy_client._json, `responseTemplates`],
    TemplateSelectionExpression: [, import_smithy_client.expectString, `templateSelectionExpression`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIntegrationResponseCommand");
var de_GetIntegrationResponsesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfIntegrationResponse(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIntegrationResponsesCommand");
var de_GetIntegrationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfIntegration(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIntegrationsCommand");
var de_GetModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ContentType: [, import_smithy_client.expectString, `contentType`],
    Description: [, import_smithy_client.expectString, `description`],
    ModelId: [, import_smithy_client.expectString, `modelId`],
    Name: [, import_smithy_client.expectString, `name`],
    Schema: [, import_smithy_client.expectString, `schema`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetModelCommand");
var de_GetModelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfModel(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetModelsCommand");
var de_GetModelTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Value: [, import_smithy_client.expectString, `value`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetModelTemplateCommand");
var de_GetRouteCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiKeyRequired: [, import_smithy_client.expectBoolean, `apiKeyRequired`],
    AuthorizationScopes: [, import_smithy_client._json, `authorizationScopes`],
    AuthorizationType: [, import_smithy_client.expectString, `authorizationType`],
    AuthorizerId: [, import_smithy_client.expectString, `authorizerId`],
    ModelSelectionExpression: [, import_smithy_client.expectString, `modelSelectionExpression`],
    OperationName: [, import_smithy_client.expectString, `operationName`],
    RequestModels: [, import_smithy_client._json, `requestModels`],
    RequestParameters: [, (_) => de_RouteParameters(_, context), `requestParameters`],
    RouteId: [, import_smithy_client.expectString, `routeId`],
    RouteKey: [, import_smithy_client.expectString, `routeKey`],
    RouteResponseSelectionExpression: [, import_smithy_client.expectString, `routeResponseSelectionExpression`],
    Target: [, import_smithy_client.expectString, `target`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRouteCommand");
var de_GetRouteResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ModelSelectionExpression: [, import_smithy_client.expectString, `modelSelectionExpression`],
    ResponseModels: [, import_smithy_client._json, `responseModels`],
    ResponseParameters: [, (_) => de_RouteParameters(_, context), `responseParameters`],
    RouteResponseId: [, import_smithy_client.expectString, `routeResponseId`],
    RouteResponseKey: [, import_smithy_client.expectString, `routeResponseKey`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRouteResponseCommand");
var de_GetRouteResponsesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfRouteResponse(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRouteResponsesCommand");
var de_GetRoutesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfRoute(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRoutesCommand");
var de_GetStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AccessLogSettings: [, (_) => de_AccessLogSettings(_, context), `accessLogSettings`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    AutoDeploy: [, import_smithy_client.expectBoolean, `autoDeploy`],
    ClientCertificateId: [, import_smithy_client.expectString, `clientCertificateId`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    DefaultRouteSettings: [, (_) => de_RouteSettings(_, context), `defaultRouteSettings`],
    DeploymentId: [, import_smithy_client.expectString, `deploymentId`],
    Description: [, import_smithy_client.expectString, `description`],
    LastDeploymentStatusMessage: [, import_smithy_client.expectString, `lastDeploymentStatusMessage`],
    LastUpdatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `lastUpdatedDate`],
    RouteSettings: [, (_) => de_RouteSettingsMap(_, context), `routeSettings`],
    StageName: [, import_smithy_client.expectString, `stageName`],
    StageVariables: [, import_smithy_client._json, `stageVariables`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetStageCommand");
var de_GetStagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfStage(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetStagesCommand");
var de_GetTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetTagsCommand");
var de_GetVpcLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Name: [, import_smithy_client.expectString, `name`],
    SecurityGroupIds: [, import_smithy_client._json, `securityGroupIds`],
    SubnetIds: [, import_smithy_client._json, `subnetIds`],
    Tags: [, import_smithy_client._json, `tags`],
    VpcLinkId: [, import_smithy_client.expectString, `vpcLinkId`],
    VpcLinkStatus: [, import_smithy_client.expectString, `vpcLinkStatus`],
    VpcLinkStatusMessage: [, import_smithy_client.expectString, `vpcLinkStatusMessage`],
    VpcLinkVersion: [, import_smithy_client.expectString, `vpcLinkVersion`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetVpcLinkCommand");
var de_GetVpcLinksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Items: [, (_) => de___listOfVpcLink(_, context), `items`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetVpcLinksCommand");
var de_ImportApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiEndpoint: [, import_smithy_client.expectString, `apiEndpoint`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiKeySelectionExpression: [, import_smithy_client.expectString, `apiKeySelectionExpression`],
    CorsConfiguration: [, (_) => de_Cors(_, context), `corsConfiguration`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Description: [, import_smithy_client.expectString, `description`],
    DisableExecuteApiEndpoint: [, import_smithy_client.expectBoolean, `disableExecuteApiEndpoint`],
    DisableSchemaValidation: [, import_smithy_client.expectBoolean, `disableSchemaValidation`],
    ImportInfo: [, import_smithy_client._json, `importInfo`],
    Name: [, import_smithy_client.expectString, `name`],
    ProtocolType: [, import_smithy_client.expectString, `protocolType`],
    RouteSelectionExpression: [, import_smithy_client.expectString, `routeSelectionExpression`],
    Tags: [, import_smithy_client._json, `tags`],
    Version: [, import_smithy_client.expectString, `version`],
    Warnings: [, import_smithy_client._json, `warnings`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ImportApiCommand");
var de_ReimportApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiEndpoint: [, import_smithy_client.expectString, `apiEndpoint`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiKeySelectionExpression: [, import_smithy_client.expectString, `apiKeySelectionExpression`],
    CorsConfiguration: [, (_) => de_Cors(_, context), `corsConfiguration`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Description: [, import_smithy_client.expectString, `description`],
    DisableExecuteApiEndpoint: [, import_smithy_client.expectBoolean, `disableExecuteApiEndpoint`],
    DisableSchemaValidation: [, import_smithy_client.expectBoolean, `disableSchemaValidation`],
    ImportInfo: [, import_smithy_client._json, `importInfo`],
    Name: [, import_smithy_client.expectString, `name`],
    ProtocolType: [, import_smithy_client.expectString, `protocolType`],
    RouteSelectionExpression: [, import_smithy_client.expectString, `routeSelectionExpression`],
    Tags: [, import_smithy_client._json, `tags`],
    Version: [, import_smithy_client.expectString, `version`],
    Warnings: [, import_smithy_client._json, `warnings`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ReimportApiCommand");
var de_ResetAuthorizersCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_ResetAuthorizersCacheCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiEndpoint: [, import_smithy_client.expectString, `apiEndpoint`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiKeySelectionExpression: [, import_smithy_client.expectString, `apiKeySelectionExpression`],
    CorsConfiguration: [, (_) => de_Cors(_, context), `corsConfiguration`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Description: [, import_smithy_client.expectString, `description`],
    DisableExecuteApiEndpoint: [, import_smithy_client.expectBoolean, `disableExecuteApiEndpoint`],
    DisableSchemaValidation: [, import_smithy_client.expectBoolean, `disableSchemaValidation`],
    ImportInfo: [, import_smithy_client._json, `importInfo`],
    Name: [, import_smithy_client.expectString, `name`],
    ProtocolType: [, import_smithy_client.expectString, `protocolType`],
    RouteSelectionExpression: [, import_smithy_client.expectString, `routeSelectionExpression`],
    Tags: [, import_smithy_client._json, `tags`],
    Version: [, import_smithy_client.expectString, `version`],
    Warnings: [, import_smithy_client._json, `warnings`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateApiCommand");
var de_UpdateApiMappingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiMappingId: [, import_smithy_client.expectString, `apiMappingId`],
    ApiMappingKey: [, import_smithy_client.expectString, `apiMappingKey`],
    Stage: [, import_smithy_client.expectString, `stage`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateApiMappingCommand");
var de_UpdateAuthorizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AuthorizerCredentialsArn: [, import_smithy_client.expectString, `authorizerCredentialsArn`],
    AuthorizerId: [, import_smithy_client.expectString, `authorizerId`],
    AuthorizerPayloadFormatVersion: [, import_smithy_client.expectString, `authorizerPayloadFormatVersion`],
    AuthorizerResultTtlInSeconds: [, import_smithy_client.expectInt32, `authorizerResultTtlInSeconds`],
    AuthorizerType: [, import_smithy_client.expectString, `authorizerType`],
    AuthorizerUri: [, import_smithy_client.expectString, `authorizerUri`],
    EnableSimpleResponses: [, import_smithy_client.expectBoolean, `enableSimpleResponses`],
    IdentitySource: [, import_smithy_client._json, `identitySource`],
    IdentityValidationExpression: [, import_smithy_client.expectString, `identityValidationExpression`],
    JwtConfiguration: [, (_) => de_JWTConfiguration(_, context), `jwtConfiguration`],
    Name: [, import_smithy_client.expectString, `name`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAuthorizerCommand");
var de_UpdateDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AutoDeployed: [, import_smithy_client.expectBoolean, `autoDeployed`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    DeploymentId: [, import_smithy_client.expectString, `deploymentId`],
    DeploymentStatus: [, import_smithy_client.expectString, `deploymentStatus`],
    DeploymentStatusMessage: [, import_smithy_client.expectString, `deploymentStatusMessage`],
    Description: [, import_smithy_client.expectString, `description`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDeploymentCommand");
var de_UpdateDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiMappingSelectionExpression: [, import_smithy_client.expectString, `apiMappingSelectionExpression`],
    DomainName: [, import_smithy_client.expectString, `domainName`],
    DomainNameConfigurations: [, (_) => de_DomainNameConfigurations(_, context), `domainNameConfigurations`],
    MutualTlsAuthentication: [, (_) => de_MutualTlsAuthentication(_, context), `mutualTlsAuthentication`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDomainNameCommand");
var de_UpdateIntegrationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ConnectionId: [, import_smithy_client.expectString, `connectionId`],
    ConnectionType: [, import_smithy_client.expectString, `connectionType`],
    ContentHandlingStrategy: [, import_smithy_client.expectString, `contentHandlingStrategy`],
    CredentialsArn: [, import_smithy_client.expectString, `credentialsArn`],
    Description: [, import_smithy_client.expectString, `description`],
    IntegrationId: [, import_smithy_client.expectString, `integrationId`],
    IntegrationMethod: [, import_smithy_client.expectString, `integrationMethod`],
    IntegrationResponseSelectionExpression: [, import_smithy_client.expectString, `integrationResponseSelectionExpression`],
    IntegrationSubtype: [, import_smithy_client.expectString, `integrationSubtype`],
    IntegrationType: [, import_smithy_client.expectString, `integrationType`],
    IntegrationUri: [, import_smithy_client.expectString, `integrationUri`],
    PassthroughBehavior: [, import_smithy_client.expectString, `passthroughBehavior`],
    PayloadFormatVersion: [, import_smithy_client.expectString, `payloadFormatVersion`],
    RequestParameters: [, import_smithy_client._json, `requestParameters`],
    RequestTemplates: [, import_smithy_client._json, `requestTemplates`],
    ResponseParameters: [, import_smithy_client._json, `responseParameters`],
    TemplateSelectionExpression: [, import_smithy_client.expectString, `templateSelectionExpression`],
    TimeoutInMillis: [, import_smithy_client.expectInt32, `timeoutInMillis`],
    TlsConfig: [, (_) => de_TlsConfig(_, context), `tlsConfig`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateIntegrationCommand");
var de_UpdateIntegrationResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ContentHandlingStrategy: [, import_smithy_client.expectString, `contentHandlingStrategy`],
    IntegrationResponseId: [, import_smithy_client.expectString, `integrationResponseId`],
    IntegrationResponseKey: [, import_smithy_client.expectString, `integrationResponseKey`],
    ResponseParameters: [, import_smithy_client._json, `responseParameters`],
    ResponseTemplates: [, import_smithy_client._json, `responseTemplates`],
    TemplateSelectionExpression: [, import_smithy_client.expectString, `templateSelectionExpression`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateIntegrationResponseCommand");
var de_UpdateModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ContentType: [, import_smithy_client.expectString, `contentType`],
    Description: [, import_smithy_client.expectString, `description`],
    ModelId: [, import_smithy_client.expectString, `modelId`],
    Name: [, import_smithy_client.expectString, `name`],
    Schema: [, import_smithy_client.expectString, `schema`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateModelCommand");
var de_UpdateRouteCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiKeyRequired: [, import_smithy_client.expectBoolean, `apiKeyRequired`],
    AuthorizationScopes: [, import_smithy_client._json, `authorizationScopes`],
    AuthorizationType: [, import_smithy_client.expectString, `authorizationType`],
    AuthorizerId: [, import_smithy_client.expectString, `authorizerId`],
    ModelSelectionExpression: [, import_smithy_client.expectString, `modelSelectionExpression`],
    OperationName: [, import_smithy_client.expectString, `operationName`],
    RequestModels: [, import_smithy_client._json, `requestModels`],
    RequestParameters: [, (_) => de_RouteParameters(_, context), `requestParameters`],
    RouteId: [, import_smithy_client.expectString, `routeId`],
    RouteKey: [, import_smithy_client.expectString, `routeKey`],
    RouteResponseSelectionExpression: [, import_smithy_client.expectString, `routeResponseSelectionExpression`],
    Target: [, import_smithy_client.expectString, `target`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateRouteCommand");
var de_UpdateRouteResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ModelSelectionExpression: [, import_smithy_client.expectString, `modelSelectionExpression`],
    ResponseModels: [, import_smithy_client._json, `responseModels`],
    ResponseParameters: [, (_) => de_RouteParameters(_, context), `responseParameters`],
    RouteResponseId: [, import_smithy_client.expectString, `routeResponseId`],
    RouteResponseKey: [, import_smithy_client.expectString, `routeResponseKey`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateRouteResponseCommand");
var de_UpdateStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AccessLogSettings: [, (_) => de_AccessLogSettings(_, context), `accessLogSettings`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    AutoDeploy: [, import_smithy_client.expectBoolean, `autoDeploy`],
    ClientCertificateId: [, import_smithy_client.expectString, `clientCertificateId`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    DefaultRouteSettings: [, (_) => de_RouteSettings(_, context), `defaultRouteSettings`],
    DeploymentId: [, import_smithy_client.expectString, `deploymentId`],
    Description: [, import_smithy_client.expectString, `description`],
    LastDeploymentStatusMessage: [, import_smithy_client.expectString, `lastDeploymentStatusMessage`],
    LastUpdatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `lastUpdatedDate`],
    RouteSettings: [, (_) => de_RouteSettingsMap(_, context), `routeSettings`],
    StageName: [, import_smithy_client.expectString, `stageName`],
    StageVariables: [, import_smithy_client._json, `stageVariables`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateStageCommand");
var de_UpdateVpcLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Name: [, import_smithy_client.expectString, `name`],
    SecurityGroupIds: [, import_smithy_client._json, `securityGroupIds`],
    SubnetIds: [, import_smithy_client._json, `subnetIds`],
    Tags: [, import_smithy_client._json, `tags`],
    VpcLinkId: [, import_smithy_client.expectString, `vpcLinkId`],
    VpcLinkStatus: [, import_smithy_client.expectString, `vpcLinkStatus`],
    VpcLinkStatusMessage: [, import_smithy_client.expectString, `vpcLinkStatusMessage`],
    VpcLinkVersion: [, import_smithy_client.expectString, `vpcLinkVersion`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateVpcLinkCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "BadRequestException":
    case "com.amazonaws.apigatewayv2#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.apigatewayv2#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.apigatewayv2#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    case "TooManyRequestsException":
    case "com.amazonaws.apigatewayv2#TooManyRequestsException":
      throw await de_TooManyRequestsExceptionRes(parsedOutput, context);
    case "AccessDeniedException":
    case "com.amazonaws.apigatewayv2#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ApiGatewayV2ServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BadRequestExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`],
    ResourceType: [, import_smithy_client.expectString, `resourceType`]
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_TooManyRequestsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    LimitType: [, import_smithy_client.expectString, `limitType`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new TooManyRequestsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TooManyRequestsExceptionRes");
var se_AccessLogSettings = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    destinationArn: [, , `DestinationArn`],
    format: [, , `Format`]
  });
}, "se_AccessLogSettings");
var se_Cors = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    allowCredentials: [, , `AllowCredentials`],
    allowHeaders: [, import_smithy_client._json, `AllowHeaders`],
    allowMethods: [, import_smithy_client._json, `AllowMethods`],
    allowOrigins: [, import_smithy_client._json, `AllowOrigins`],
    exposeHeaders: [, import_smithy_client._json, `ExposeHeaders`],
    maxAge: [, , `MaxAge`]
  });
}, "se_Cors");
var se_DomainNameConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    apiGatewayDomainName: [, , `ApiGatewayDomainName`],
    certificateArn: [, , `CertificateArn`],
    certificateName: [, , `CertificateName`],
    certificateUploadDate: [, import_smithy_client.serializeDateTime, `CertificateUploadDate`],
    domainNameStatus: [, , `DomainNameStatus`],
    domainNameStatusMessage: [, , `DomainNameStatusMessage`],
    endpointType: [, , `EndpointType`],
    hostedZoneId: [, , `HostedZoneId`],
    ownershipVerificationCertificateArn: [, , `OwnershipVerificationCertificateArn`],
    securityPolicy: [, , `SecurityPolicy`]
  });
}, "se_DomainNameConfiguration");
var se_DomainNameConfigurations = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_DomainNameConfiguration(entry, context);
  });
}, "se_DomainNameConfigurations");
var se_JWTConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    audience: [, import_smithy_client._json, `Audience`],
    issuer: [, , `Issuer`]
  });
}, "se_JWTConfiguration");
var se_MutualTlsAuthenticationInput = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    truststoreUri: [, , `TruststoreUri`],
    truststoreVersion: [, , `TruststoreVersion`]
  });
}, "se_MutualTlsAuthenticationInput");
var se_ParameterConstraints = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    required: [, , `Required`]
  });
}, "se_ParameterConstraints");
var se_RouteParameters = /* @__PURE__ */ __name((input, context) => {
  return Object.entries(input).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = se_ParameterConstraints(value, context);
    return acc;
  }, {});
}, "se_RouteParameters");
var se_RouteSettings = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    dataTraceEnabled: [, , `DataTraceEnabled`],
    detailedMetricsEnabled: [, , `DetailedMetricsEnabled`],
    loggingLevel: [, , `LoggingLevel`],
    throttlingBurstLimit: [, , `ThrottlingBurstLimit`],
    throttlingRateLimit: [, import_smithy_client.serializeFloat, `ThrottlingRateLimit`]
  });
}, "se_RouteSettings");
var se_RouteSettingsMap = /* @__PURE__ */ __name((input, context) => {
  return Object.entries(input).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = se_RouteSettings(value, context);
    return acc;
  }, {});
}, "se_RouteSettingsMap");
var se_TlsConfigInput = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    serverNameToVerify: [, , `ServerNameToVerify`]
  });
}, "se_TlsConfigInput");
var de___listOfApi = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Api(entry, context);
  });
  return retVal;
}, "de___listOfApi");
var de___listOfApiMapping = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ApiMapping(entry, context);
  });
  return retVal;
}, "de___listOfApiMapping");
var de___listOfAuthorizer = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Authorizer(entry, context);
  });
  return retVal;
}, "de___listOfAuthorizer");
var de___listOfDeployment = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Deployment(entry, context);
  });
  return retVal;
}, "de___listOfDeployment");
var de___listOfDomainName = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DomainName(entry, context);
  });
  return retVal;
}, "de___listOfDomainName");
var de___listOfIntegration = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Integration(entry, context);
  });
  return retVal;
}, "de___listOfIntegration");
var de___listOfIntegrationResponse = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_IntegrationResponse(entry, context);
  });
  return retVal;
}, "de___listOfIntegrationResponse");
var de___listOfModel = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Model(entry, context);
  });
  return retVal;
}, "de___listOfModel");
var de___listOfRoute = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Route(entry, context);
  });
  return retVal;
}, "de___listOfRoute");
var de___listOfRouteResponse = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RouteResponse(entry, context);
  });
  return retVal;
}, "de___listOfRouteResponse");
var de___listOfStage = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Stage(entry, context);
  });
  return retVal;
}, "de___listOfStage");
var de___listOfVpcLink = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_VpcLink(entry, context);
  });
  return retVal;
}, "de___listOfVpcLink");
var de_AccessLogSettings = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DestinationArn: [, import_smithy_client.expectString, `destinationArn`],
    Format: [, import_smithy_client.expectString, `format`]
  });
}, "de_AccessLogSettings");
var de_Api = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApiEndpoint: [, import_smithy_client.expectString, `apiEndpoint`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiKeySelectionExpression: [, import_smithy_client.expectString, `apiKeySelectionExpression`],
    CorsConfiguration: [, (_) => de_Cors(_, context), `corsConfiguration`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Description: [, import_smithy_client.expectString, `description`],
    DisableExecuteApiEndpoint: [, import_smithy_client.expectBoolean, `disableExecuteApiEndpoint`],
    DisableSchemaValidation: [, import_smithy_client.expectBoolean, `disableSchemaValidation`],
    ImportInfo: [, import_smithy_client._json, `importInfo`],
    Name: [, import_smithy_client.expectString, `name`],
    ProtocolType: [, import_smithy_client.expectString, `protocolType`],
    RouteSelectionExpression: [, import_smithy_client.expectString, `routeSelectionExpression`],
    Tags: [, import_smithy_client._json, `tags`],
    Version: [, import_smithy_client.expectString, `version`],
    Warnings: [, import_smithy_client._json, `warnings`]
  });
}, "de_Api");
var de_ApiMapping = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApiId: [, import_smithy_client.expectString, `apiId`],
    ApiMappingId: [, import_smithy_client.expectString, `apiMappingId`],
    ApiMappingKey: [, import_smithy_client.expectString, `apiMappingKey`],
    Stage: [, import_smithy_client.expectString, `stage`]
  });
}, "de_ApiMapping");
var de_Authorizer = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AuthorizerCredentialsArn: [, import_smithy_client.expectString, `authorizerCredentialsArn`],
    AuthorizerId: [, import_smithy_client.expectString, `authorizerId`],
    AuthorizerPayloadFormatVersion: [, import_smithy_client.expectString, `authorizerPayloadFormatVersion`],
    AuthorizerResultTtlInSeconds: [, import_smithy_client.expectInt32, `authorizerResultTtlInSeconds`],
    AuthorizerType: [, import_smithy_client.expectString, `authorizerType`],
    AuthorizerUri: [, import_smithy_client.expectString, `authorizerUri`],
    EnableSimpleResponses: [, import_smithy_client.expectBoolean, `enableSimpleResponses`],
    IdentitySource: [, import_smithy_client._json, `identitySource`],
    IdentityValidationExpression: [, import_smithy_client.expectString, `identityValidationExpression`],
    JwtConfiguration: [, (_) => de_JWTConfiguration(_, context), `jwtConfiguration`],
    Name: [, import_smithy_client.expectString, `name`]
  });
}, "de_Authorizer");
var de_Cors = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AllowCredentials: [, import_smithy_client.expectBoolean, `allowCredentials`],
    AllowHeaders: [, import_smithy_client._json, `allowHeaders`],
    AllowMethods: [, import_smithy_client._json, `allowMethods`],
    AllowOrigins: [, import_smithy_client._json, `allowOrigins`],
    ExposeHeaders: [, import_smithy_client._json, `exposeHeaders`],
    MaxAge: [, import_smithy_client.expectInt32, `maxAge`]
  });
}, "de_Cors");
var de_Deployment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AutoDeployed: [, import_smithy_client.expectBoolean, `autoDeployed`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    DeploymentId: [, import_smithy_client.expectString, `deploymentId`],
    DeploymentStatus: [, import_smithy_client.expectString, `deploymentStatus`],
    DeploymentStatusMessage: [, import_smithy_client.expectString, `deploymentStatusMessage`],
    Description: [, import_smithy_client.expectString, `description`]
  });
}, "de_Deployment");
var de_DomainName = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApiMappingSelectionExpression: [, import_smithy_client.expectString, `apiMappingSelectionExpression`],
    DomainName: [, import_smithy_client.expectString, `domainName`],
    DomainNameConfigurations: [, (_) => de_DomainNameConfigurations(_, context), `domainNameConfigurations`],
    MutualTlsAuthentication: [, (_) => de_MutualTlsAuthentication(_, context), `mutualTlsAuthentication`],
    Tags: [, import_smithy_client._json, `tags`]
  });
}, "de_DomainName");
var de_DomainNameConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApiGatewayDomainName: [, import_smithy_client.expectString, `apiGatewayDomainName`],
    CertificateArn: [, import_smithy_client.expectString, `certificateArn`],
    CertificateName: [, import_smithy_client.expectString, `certificateName`],
    CertificateUploadDate: [
      ,
      (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
      `certificateUploadDate`
    ],
    DomainNameStatus: [, import_smithy_client.expectString, `domainNameStatus`],
    DomainNameStatusMessage: [, import_smithy_client.expectString, `domainNameStatusMessage`],
    EndpointType: [, import_smithy_client.expectString, `endpointType`],
    HostedZoneId: [, import_smithy_client.expectString, `hostedZoneId`],
    OwnershipVerificationCertificateArn: [, import_smithy_client.expectString, `ownershipVerificationCertificateArn`],
    SecurityPolicy: [, import_smithy_client.expectString, `securityPolicy`]
  });
}, "de_DomainNameConfiguration");
var de_DomainNameConfigurations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DomainNameConfiguration(entry, context);
  });
  return retVal;
}, "de_DomainNameConfigurations");
var de_Integration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ConnectionId: [, import_smithy_client.expectString, `connectionId`],
    ConnectionType: [, import_smithy_client.expectString, `connectionType`],
    ContentHandlingStrategy: [, import_smithy_client.expectString, `contentHandlingStrategy`],
    CredentialsArn: [, import_smithy_client.expectString, `credentialsArn`],
    Description: [, import_smithy_client.expectString, `description`],
    IntegrationId: [, import_smithy_client.expectString, `integrationId`],
    IntegrationMethod: [, import_smithy_client.expectString, `integrationMethod`],
    IntegrationResponseSelectionExpression: [, import_smithy_client.expectString, `integrationResponseSelectionExpression`],
    IntegrationSubtype: [, import_smithy_client.expectString, `integrationSubtype`],
    IntegrationType: [, import_smithy_client.expectString, `integrationType`],
    IntegrationUri: [, import_smithy_client.expectString, `integrationUri`],
    PassthroughBehavior: [, import_smithy_client.expectString, `passthroughBehavior`],
    PayloadFormatVersion: [, import_smithy_client.expectString, `payloadFormatVersion`],
    RequestParameters: [, import_smithy_client._json, `requestParameters`],
    RequestTemplates: [, import_smithy_client._json, `requestTemplates`],
    ResponseParameters: [, import_smithy_client._json, `responseParameters`],
    TemplateSelectionExpression: [, import_smithy_client.expectString, `templateSelectionExpression`],
    TimeoutInMillis: [, import_smithy_client.expectInt32, `timeoutInMillis`],
    TlsConfig: [, (_) => de_TlsConfig(_, context), `tlsConfig`]
  });
}, "de_Integration");
var de_IntegrationResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ContentHandlingStrategy: [, import_smithy_client.expectString, `contentHandlingStrategy`],
    IntegrationResponseId: [, import_smithy_client.expectString, `integrationResponseId`],
    IntegrationResponseKey: [, import_smithy_client.expectString, `integrationResponseKey`],
    ResponseParameters: [, import_smithy_client._json, `responseParameters`],
    ResponseTemplates: [, import_smithy_client._json, `responseTemplates`],
    TemplateSelectionExpression: [, import_smithy_client.expectString, `templateSelectionExpression`]
  });
}, "de_IntegrationResponse");
var de_JWTConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Audience: [, import_smithy_client._json, `audience`],
    Issuer: [, import_smithy_client.expectString, `issuer`]
  });
}, "de_JWTConfiguration");
var de_Model = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ContentType: [, import_smithy_client.expectString, `contentType`],
    Description: [, import_smithy_client.expectString, `description`],
    ModelId: [, import_smithy_client.expectString, `modelId`],
    Name: [, import_smithy_client.expectString, `name`],
    Schema: [, import_smithy_client.expectString, `schema`]
  });
}, "de_Model");
var de_MutualTlsAuthentication = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    TruststoreUri: [, import_smithy_client.expectString, `truststoreUri`],
    TruststoreVersion: [, import_smithy_client.expectString, `truststoreVersion`],
    TruststoreWarnings: [, import_smithy_client._json, `truststoreWarnings`]
  });
}, "de_MutualTlsAuthentication");
var de_ParameterConstraints = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Required: [, import_smithy_client.expectBoolean, `required`]
  });
}, "de_ParameterConstraints");
var de_Route = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    ApiKeyRequired: [, import_smithy_client.expectBoolean, `apiKeyRequired`],
    AuthorizationScopes: [, import_smithy_client._json, `authorizationScopes`],
    AuthorizationType: [, import_smithy_client.expectString, `authorizationType`],
    AuthorizerId: [, import_smithy_client.expectString, `authorizerId`],
    ModelSelectionExpression: [, import_smithy_client.expectString, `modelSelectionExpression`],
    OperationName: [, import_smithy_client.expectString, `operationName`],
    RequestModels: [, import_smithy_client._json, `requestModels`],
    RequestParameters: [, (_) => de_RouteParameters(_, context), `requestParameters`],
    RouteId: [, import_smithy_client.expectString, `routeId`],
    RouteKey: [, import_smithy_client.expectString, `routeKey`],
    RouteResponseSelectionExpression: [, import_smithy_client.expectString, `routeResponseSelectionExpression`],
    Target: [, import_smithy_client.expectString, `target`]
  });
}, "de_Route");
var de_RouteParameters = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = de_ParameterConstraints(value, context);
    return acc;
  }, {});
}, "de_RouteParameters");
var de_RouteResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ModelSelectionExpression: [, import_smithy_client.expectString, `modelSelectionExpression`],
    ResponseModels: [, import_smithy_client._json, `responseModels`],
    ResponseParameters: [, (_) => de_RouteParameters(_, context), `responseParameters`],
    RouteResponseId: [, import_smithy_client.expectString, `routeResponseId`],
    RouteResponseKey: [, import_smithy_client.expectString, `routeResponseKey`]
  });
}, "de_RouteResponse");
var de_RouteSettings = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DataTraceEnabled: [, import_smithy_client.expectBoolean, `dataTraceEnabled`],
    DetailedMetricsEnabled: [, import_smithy_client.expectBoolean, `detailedMetricsEnabled`],
    LoggingLevel: [, import_smithy_client.expectString, `loggingLevel`],
    ThrottlingBurstLimit: [, import_smithy_client.expectInt32, `throttlingBurstLimit`],
    ThrottlingRateLimit: [, import_smithy_client.limitedParseDouble, `throttlingRateLimit`]
  });
}, "de_RouteSettings");
var de_RouteSettingsMap = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = de_RouteSettings(value, context);
    return acc;
  }, {});
}, "de_RouteSettingsMap");
var de_Stage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AccessLogSettings: [, (_) => de_AccessLogSettings(_, context), `accessLogSettings`],
    ApiGatewayManaged: [, import_smithy_client.expectBoolean, `apiGatewayManaged`],
    AutoDeploy: [, import_smithy_client.expectBoolean, `autoDeploy`],
    ClientCertificateId: [, import_smithy_client.expectString, `clientCertificateId`],
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    DefaultRouteSettings: [, (_) => de_RouteSettings(_, context), `defaultRouteSettings`],
    DeploymentId: [, import_smithy_client.expectString, `deploymentId`],
    Description: [, import_smithy_client.expectString, `description`],
    LastDeploymentStatusMessage: [, import_smithy_client.expectString, `lastDeploymentStatusMessage`],
    LastUpdatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `lastUpdatedDate`],
    RouteSettings: [, (_) => de_RouteSettingsMap(_, context), `routeSettings`],
    StageName: [, import_smithy_client.expectString, `stageName`],
    StageVariables: [, import_smithy_client._json, `stageVariables`],
    Tags: [, import_smithy_client._json, `tags`]
  });
}, "de_Stage");
var de_TlsConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ServerNameToVerify: [, import_smithy_client.expectString, `serverNameToVerify`]
  });
}, "de_TlsConfig");
var de_VpcLink = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedDate: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `createdDate`],
    Name: [, import_smithy_client.expectString, `name`],
    SecurityGroupIds: [, import_smithy_client._json, `securityGroupIds`],
    SubnetIds: [, import_smithy_client._json, `subnetIds`],
    Tags: [, import_smithy_client._json, `tags`],
    VpcLinkId: [, import_smithy_client.expectString, `vpcLinkId`],
    VpcLinkStatus: [, import_smithy_client.expectString, `vpcLinkStatus`],
    VpcLinkStatusMessage: [, import_smithy_client.expectString, `vpcLinkStatusMessage`],
    VpcLinkVersion: [, import_smithy_client.expectString, `vpcLinkVersion`]
  });
}, "de_VpcLink");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _B = "Basepath";
var _EV = "ExportVersion";
var _FOW = "FailOnWarnings";
var _IE = "IncludeExtensions";
var _MR = "MaxResults";
var _NT = "NextToken";
var _OT = "OutputType";
var _SN = "StageName";
var _TK = "TagKeys";
var _b = "basepath";
var _eV = "exportVersion";
var _fOW = "failOnWarnings";
var _iE = "includeExtensions";
var _mR = "maxResults";
var _nT = "nextToken";
var _oT = "outputType";
var _sN = "stageName";
var _tK = "tagKeys";

// src/commands/CreateApiCommand.ts
var _CreateApiCommand = class _CreateApiCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateApi", {}).n("ApiGatewayV2Client", "CreateApiCommand").f(void 0, void 0).ser(se_CreateApiCommand).de(de_CreateApiCommand).build() {
};
__name(_CreateApiCommand, "CreateApiCommand");
var CreateApiCommand = _CreateApiCommand;

// src/commands/CreateApiMappingCommand.ts




var _CreateApiMappingCommand = class _CreateApiMappingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateApiMapping", {}).n("ApiGatewayV2Client", "CreateApiMappingCommand").f(void 0, void 0).ser(se_CreateApiMappingCommand).de(de_CreateApiMappingCommand).build() {
};
__name(_CreateApiMappingCommand, "CreateApiMappingCommand");
var CreateApiMappingCommand = _CreateApiMappingCommand;

// src/commands/CreateAuthorizerCommand.ts




var _CreateAuthorizerCommand = class _CreateAuthorizerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateAuthorizer", {}).n("ApiGatewayV2Client", "CreateAuthorizerCommand").f(void 0, void 0).ser(se_CreateAuthorizerCommand).de(de_CreateAuthorizerCommand).build() {
};
__name(_CreateAuthorizerCommand, "CreateAuthorizerCommand");
var CreateAuthorizerCommand = _CreateAuthorizerCommand;

// src/commands/CreateDeploymentCommand.ts




var _CreateDeploymentCommand = class _CreateDeploymentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateDeployment", {}).n("ApiGatewayV2Client", "CreateDeploymentCommand").f(void 0, void 0).ser(se_CreateDeploymentCommand).de(de_CreateDeploymentCommand).build() {
};
__name(_CreateDeploymentCommand, "CreateDeploymentCommand");
var CreateDeploymentCommand = _CreateDeploymentCommand;

// src/commands/CreateDomainNameCommand.ts




var _CreateDomainNameCommand = class _CreateDomainNameCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateDomainName", {}).n("ApiGatewayV2Client", "CreateDomainNameCommand").f(void 0, void 0).ser(se_CreateDomainNameCommand).de(de_CreateDomainNameCommand).build() {
};
__name(_CreateDomainNameCommand, "CreateDomainNameCommand");
var CreateDomainNameCommand = _CreateDomainNameCommand;

// src/commands/CreateIntegrationCommand.ts




var _CreateIntegrationCommand = class _CreateIntegrationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateIntegration", {}).n("ApiGatewayV2Client", "CreateIntegrationCommand").f(void 0, void 0).ser(se_CreateIntegrationCommand).de(de_CreateIntegrationCommand).build() {
};
__name(_CreateIntegrationCommand, "CreateIntegrationCommand");
var CreateIntegrationCommand = _CreateIntegrationCommand;

// src/commands/CreateIntegrationResponseCommand.ts




var _CreateIntegrationResponseCommand = class _CreateIntegrationResponseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateIntegrationResponse", {}).n("ApiGatewayV2Client", "CreateIntegrationResponseCommand").f(void 0, void 0).ser(se_CreateIntegrationResponseCommand).de(de_CreateIntegrationResponseCommand).build() {
};
__name(_CreateIntegrationResponseCommand, "CreateIntegrationResponseCommand");
var CreateIntegrationResponseCommand = _CreateIntegrationResponseCommand;

// src/commands/CreateModelCommand.ts




var _CreateModelCommand = class _CreateModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateModel", {}).n("ApiGatewayV2Client", "CreateModelCommand").f(void 0, void 0).ser(se_CreateModelCommand).de(de_CreateModelCommand).build() {
};
__name(_CreateModelCommand, "CreateModelCommand");
var CreateModelCommand = _CreateModelCommand;

// src/commands/CreateRouteCommand.ts




var _CreateRouteCommand = class _CreateRouteCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateRoute", {}).n("ApiGatewayV2Client", "CreateRouteCommand").f(void 0, void 0).ser(se_CreateRouteCommand).de(de_CreateRouteCommand).build() {
};
__name(_CreateRouteCommand, "CreateRouteCommand");
var CreateRouteCommand = _CreateRouteCommand;

// src/commands/CreateRouteResponseCommand.ts




var _CreateRouteResponseCommand = class _CreateRouteResponseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateRouteResponse", {}).n("ApiGatewayV2Client", "CreateRouteResponseCommand").f(void 0, void 0).ser(se_CreateRouteResponseCommand).de(de_CreateRouteResponseCommand).build() {
};
__name(_CreateRouteResponseCommand, "CreateRouteResponseCommand");
var CreateRouteResponseCommand = _CreateRouteResponseCommand;

// src/commands/CreateStageCommand.ts




var _CreateStageCommand = class _CreateStageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateStage", {}).n("ApiGatewayV2Client", "CreateStageCommand").f(void 0, void 0).ser(se_CreateStageCommand).de(de_CreateStageCommand).build() {
};
__name(_CreateStageCommand, "CreateStageCommand");
var CreateStageCommand = _CreateStageCommand;

// src/commands/CreateVpcLinkCommand.ts




var _CreateVpcLinkCommand = class _CreateVpcLinkCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "CreateVpcLink", {}).n("ApiGatewayV2Client", "CreateVpcLinkCommand").f(void 0, void 0).ser(se_CreateVpcLinkCommand).de(de_CreateVpcLinkCommand).build() {
};
__name(_CreateVpcLinkCommand, "CreateVpcLinkCommand");
var CreateVpcLinkCommand = _CreateVpcLinkCommand;

// src/commands/DeleteAccessLogSettingsCommand.ts




var _DeleteAccessLogSettingsCommand = class _DeleteAccessLogSettingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteAccessLogSettings", {}).n("ApiGatewayV2Client", "DeleteAccessLogSettingsCommand").f(void 0, void 0).ser(se_DeleteAccessLogSettingsCommand).de(de_DeleteAccessLogSettingsCommand).build() {
};
__name(_DeleteAccessLogSettingsCommand, "DeleteAccessLogSettingsCommand");
var DeleteAccessLogSettingsCommand = _DeleteAccessLogSettingsCommand;

// src/commands/DeleteApiCommand.ts




var _DeleteApiCommand = class _DeleteApiCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteApi", {}).n("ApiGatewayV2Client", "DeleteApiCommand").f(void 0, void 0).ser(se_DeleteApiCommand).de(de_DeleteApiCommand).build() {
};
__name(_DeleteApiCommand, "DeleteApiCommand");
var DeleteApiCommand = _DeleteApiCommand;

// src/commands/DeleteApiMappingCommand.ts




var _DeleteApiMappingCommand = class _DeleteApiMappingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteApiMapping", {}).n("ApiGatewayV2Client", "DeleteApiMappingCommand").f(void 0, void 0).ser(se_DeleteApiMappingCommand).de(de_DeleteApiMappingCommand).build() {
};
__name(_DeleteApiMappingCommand, "DeleteApiMappingCommand");
var DeleteApiMappingCommand = _DeleteApiMappingCommand;

// src/commands/DeleteAuthorizerCommand.ts




var _DeleteAuthorizerCommand = class _DeleteAuthorizerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteAuthorizer", {}).n("ApiGatewayV2Client", "DeleteAuthorizerCommand").f(void 0, void 0).ser(se_DeleteAuthorizerCommand).de(de_DeleteAuthorizerCommand).build() {
};
__name(_DeleteAuthorizerCommand, "DeleteAuthorizerCommand");
var DeleteAuthorizerCommand = _DeleteAuthorizerCommand;

// src/commands/DeleteCorsConfigurationCommand.ts




var _DeleteCorsConfigurationCommand = class _DeleteCorsConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteCorsConfiguration", {}).n("ApiGatewayV2Client", "DeleteCorsConfigurationCommand").f(void 0, void 0).ser(se_DeleteCorsConfigurationCommand).de(de_DeleteCorsConfigurationCommand).build() {
};
__name(_DeleteCorsConfigurationCommand, "DeleteCorsConfigurationCommand");
var DeleteCorsConfigurationCommand = _DeleteCorsConfigurationCommand;

// src/commands/DeleteDeploymentCommand.ts




var _DeleteDeploymentCommand = class _DeleteDeploymentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteDeployment", {}).n("ApiGatewayV2Client", "DeleteDeploymentCommand").f(void 0, void 0).ser(se_DeleteDeploymentCommand).de(de_DeleteDeploymentCommand).build() {
};
__name(_DeleteDeploymentCommand, "DeleteDeploymentCommand");
var DeleteDeploymentCommand = _DeleteDeploymentCommand;

// src/commands/DeleteDomainNameCommand.ts




var _DeleteDomainNameCommand = class _DeleteDomainNameCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteDomainName", {}).n("ApiGatewayV2Client", "DeleteDomainNameCommand").f(void 0, void 0).ser(se_DeleteDomainNameCommand).de(de_DeleteDomainNameCommand).build() {
};
__name(_DeleteDomainNameCommand, "DeleteDomainNameCommand");
var DeleteDomainNameCommand = _DeleteDomainNameCommand;

// src/commands/DeleteIntegrationCommand.ts




var _DeleteIntegrationCommand = class _DeleteIntegrationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteIntegration", {}).n("ApiGatewayV2Client", "DeleteIntegrationCommand").f(void 0, void 0).ser(se_DeleteIntegrationCommand).de(de_DeleteIntegrationCommand).build() {
};
__name(_DeleteIntegrationCommand, "DeleteIntegrationCommand");
var DeleteIntegrationCommand = _DeleteIntegrationCommand;

// src/commands/DeleteIntegrationResponseCommand.ts




var _DeleteIntegrationResponseCommand = class _DeleteIntegrationResponseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteIntegrationResponse", {}).n("ApiGatewayV2Client", "DeleteIntegrationResponseCommand").f(void 0, void 0).ser(se_DeleteIntegrationResponseCommand).de(de_DeleteIntegrationResponseCommand).build() {
};
__name(_DeleteIntegrationResponseCommand, "DeleteIntegrationResponseCommand");
var DeleteIntegrationResponseCommand = _DeleteIntegrationResponseCommand;

// src/commands/DeleteModelCommand.ts




var _DeleteModelCommand = class _DeleteModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteModel", {}).n("ApiGatewayV2Client", "DeleteModelCommand").f(void 0, void 0).ser(se_DeleteModelCommand).de(de_DeleteModelCommand).build() {
};
__name(_DeleteModelCommand, "DeleteModelCommand");
var DeleteModelCommand = _DeleteModelCommand;

// src/commands/DeleteRouteCommand.ts




var _DeleteRouteCommand = class _DeleteRouteCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteRoute", {}).n("ApiGatewayV2Client", "DeleteRouteCommand").f(void 0, void 0).ser(se_DeleteRouteCommand).de(de_DeleteRouteCommand).build() {
};
__name(_DeleteRouteCommand, "DeleteRouteCommand");
var DeleteRouteCommand = _DeleteRouteCommand;

// src/commands/DeleteRouteRequestParameterCommand.ts




var _DeleteRouteRequestParameterCommand = class _DeleteRouteRequestParameterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteRouteRequestParameter", {}).n("ApiGatewayV2Client", "DeleteRouteRequestParameterCommand").f(void 0, void 0).ser(se_DeleteRouteRequestParameterCommand).de(de_DeleteRouteRequestParameterCommand).build() {
};
__name(_DeleteRouteRequestParameterCommand, "DeleteRouteRequestParameterCommand");
var DeleteRouteRequestParameterCommand = _DeleteRouteRequestParameterCommand;

// src/commands/DeleteRouteResponseCommand.ts




var _DeleteRouteResponseCommand = class _DeleteRouteResponseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteRouteResponse", {}).n("ApiGatewayV2Client", "DeleteRouteResponseCommand").f(void 0, void 0).ser(se_DeleteRouteResponseCommand).de(de_DeleteRouteResponseCommand).build() {
};
__name(_DeleteRouteResponseCommand, "DeleteRouteResponseCommand");
var DeleteRouteResponseCommand = _DeleteRouteResponseCommand;

// src/commands/DeleteRouteSettingsCommand.ts




var _DeleteRouteSettingsCommand = class _DeleteRouteSettingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteRouteSettings", {}).n("ApiGatewayV2Client", "DeleteRouteSettingsCommand").f(void 0, void 0).ser(se_DeleteRouteSettingsCommand).de(de_DeleteRouteSettingsCommand).build() {
};
__name(_DeleteRouteSettingsCommand, "DeleteRouteSettingsCommand");
var DeleteRouteSettingsCommand = _DeleteRouteSettingsCommand;

// src/commands/DeleteStageCommand.ts




var _DeleteStageCommand = class _DeleteStageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteStage", {}).n("ApiGatewayV2Client", "DeleteStageCommand").f(void 0, void 0).ser(se_DeleteStageCommand).de(de_DeleteStageCommand).build() {
};
__name(_DeleteStageCommand, "DeleteStageCommand");
var DeleteStageCommand = _DeleteStageCommand;

// src/commands/DeleteVpcLinkCommand.ts




var _DeleteVpcLinkCommand = class _DeleteVpcLinkCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "DeleteVpcLink", {}).n("ApiGatewayV2Client", "DeleteVpcLinkCommand").f(void 0, void 0).ser(se_DeleteVpcLinkCommand).de(de_DeleteVpcLinkCommand).build() {
};
__name(_DeleteVpcLinkCommand, "DeleteVpcLinkCommand");
var DeleteVpcLinkCommand = _DeleteVpcLinkCommand;

// src/commands/ExportApiCommand.ts




var _ExportApiCommand = class _ExportApiCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "ExportApi", {}).n("ApiGatewayV2Client", "ExportApiCommand").f(void 0, void 0).ser(se_ExportApiCommand).de(de_ExportApiCommand).build() {
};
__name(_ExportApiCommand, "ExportApiCommand");
var ExportApiCommand = _ExportApiCommand;

// src/commands/GetApiCommand.ts




var _GetApiCommand = class _GetApiCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetApi", {}).n("ApiGatewayV2Client", "GetApiCommand").f(void 0, void 0).ser(se_GetApiCommand).de(de_GetApiCommand).build() {
};
__name(_GetApiCommand, "GetApiCommand");
var GetApiCommand = _GetApiCommand;

// src/commands/GetApiMappingCommand.ts




var _GetApiMappingCommand = class _GetApiMappingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetApiMapping", {}).n("ApiGatewayV2Client", "GetApiMappingCommand").f(void 0, void 0).ser(se_GetApiMappingCommand).de(de_GetApiMappingCommand).build() {
};
__name(_GetApiMappingCommand, "GetApiMappingCommand");
var GetApiMappingCommand = _GetApiMappingCommand;

// src/commands/GetApiMappingsCommand.ts




var _GetApiMappingsCommand = class _GetApiMappingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetApiMappings", {}).n("ApiGatewayV2Client", "GetApiMappingsCommand").f(void 0, void 0).ser(se_GetApiMappingsCommand).de(de_GetApiMappingsCommand).build() {
};
__name(_GetApiMappingsCommand, "GetApiMappingsCommand");
var GetApiMappingsCommand = _GetApiMappingsCommand;

// src/commands/GetApisCommand.ts




var _GetApisCommand = class _GetApisCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetApis", {}).n("ApiGatewayV2Client", "GetApisCommand").f(void 0, void 0).ser(se_GetApisCommand).de(de_GetApisCommand).build() {
};
__name(_GetApisCommand, "GetApisCommand");
var GetApisCommand = _GetApisCommand;

// src/commands/GetAuthorizerCommand.ts




var _GetAuthorizerCommand = class _GetAuthorizerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetAuthorizer", {}).n("ApiGatewayV2Client", "GetAuthorizerCommand").f(void 0, void 0).ser(se_GetAuthorizerCommand).de(de_GetAuthorizerCommand).build() {
};
__name(_GetAuthorizerCommand, "GetAuthorizerCommand");
var GetAuthorizerCommand = _GetAuthorizerCommand;

// src/commands/GetAuthorizersCommand.ts




var _GetAuthorizersCommand = class _GetAuthorizersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetAuthorizers", {}).n("ApiGatewayV2Client", "GetAuthorizersCommand").f(void 0, void 0).ser(se_GetAuthorizersCommand).de(de_GetAuthorizersCommand).build() {
};
__name(_GetAuthorizersCommand, "GetAuthorizersCommand");
var GetAuthorizersCommand = _GetAuthorizersCommand;

// src/commands/GetDeploymentCommand.ts




var _GetDeploymentCommand = class _GetDeploymentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetDeployment", {}).n("ApiGatewayV2Client", "GetDeploymentCommand").f(void 0, void 0).ser(se_GetDeploymentCommand).de(de_GetDeploymentCommand).build() {
};
__name(_GetDeploymentCommand, "GetDeploymentCommand");
var GetDeploymentCommand = _GetDeploymentCommand;

// src/commands/GetDeploymentsCommand.ts




var _GetDeploymentsCommand = class _GetDeploymentsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetDeployments", {}).n("ApiGatewayV2Client", "GetDeploymentsCommand").f(void 0, void 0).ser(se_GetDeploymentsCommand).de(de_GetDeploymentsCommand).build() {
};
__name(_GetDeploymentsCommand, "GetDeploymentsCommand");
var GetDeploymentsCommand = _GetDeploymentsCommand;

// src/commands/GetDomainNameCommand.ts




var _GetDomainNameCommand = class _GetDomainNameCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetDomainName", {}).n("ApiGatewayV2Client", "GetDomainNameCommand").f(void 0, void 0).ser(se_GetDomainNameCommand).de(de_GetDomainNameCommand).build() {
};
__name(_GetDomainNameCommand, "GetDomainNameCommand");
var GetDomainNameCommand = _GetDomainNameCommand;

// src/commands/GetDomainNamesCommand.ts




var _GetDomainNamesCommand = class _GetDomainNamesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetDomainNames", {}).n("ApiGatewayV2Client", "GetDomainNamesCommand").f(void 0, void 0).ser(se_GetDomainNamesCommand).de(de_GetDomainNamesCommand).build() {
};
__name(_GetDomainNamesCommand, "GetDomainNamesCommand");
var GetDomainNamesCommand = _GetDomainNamesCommand;

// src/commands/GetIntegrationCommand.ts




var _GetIntegrationCommand = class _GetIntegrationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetIntegration", {}).n("ApiGatewayV2Client", "GetIntegrationCommand").f(void 0, void 0).ser(se_GetIntegrationCommand).de(de_GetIntegrationCommand).build() {
};
__name(_GetIntegrationCommand, "GetIntegrationCommand");
var GetIntegrationCommand = _GetIntegrationCommand;

// src/commands/GetIntegrationResponseCommand.ts




var _GetIntegrationResponseCommand = class _GetIntegrationResponseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetIntegrationResponse", {}).n("ApiGatewayV2Client", "GetIntegrationResponseCommand").f(void 0, void 0).ser(se_GetIntegrationResponseCommand).de(de_GetIntegrationResponseCommand).build() {
};
__name(_GetIntegrationResponseCommand, "GetIntegrationResponseCommand");
var GetIntegrationResponseCommand = _GetIntegrationResponseCommand;

// src/commands/GetIntegrationResponsesCommand.ts




var _GetIntegrationResponsesCommand = class _GetIntegrationResponsesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetIntegrationResponses", {}).n("ApiGatewayV2Client", "GetIntegrationResponsesCommand").f(void 0, void 0).ser(se_GetIntegrationResponsesCommand).de(de_GetIntegrationResponsesCommand).build() {
};
__name(_GetIntegrationResponsesCommand, "GetIntegrationResponsesCommand");
var GetIntegrationResponsesCommand = _GetIntegrationResponsesCommand;

// src/commands/GetIntegrationsCommand.ts




var _GetIntegrationsCommand = class _GetIntegrationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetIntegrations", {}).n("ApiGatewayV2Client", "GetIntegrationsCommand").f(void 0, void 0).ser(se_GetIntegrationsCommand).de(de_GetIntegrationsCommand).build() {
};
__name(_GetIntegrationsCommand, "GetIntegrationsCommand");
var GetIntegrationsCommand = _GetIntegrationsCommand;

// src/commands/GetModelCommand.ts




var _GetModelCommand = class _GetModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetModel", {}).n("ApiGatewayV2Client", "GetModelCommand").f(void 0, void 0).ser(se_GetModelCommand).de(de_GetModelCommand).build() {
};
__name(_GetModelCommand, "GetModelCommand");
var GetModelCommand = _GetModelCommand;

// src/commands/GetModelsCommand.ts




var _GetModelsCommand = class _GetModelsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetModels", {}).n("ApiGatewayV2Client", "GetModelsCommand").f(void 0, void 0).ser(se_GetModelsCommand).de(de_GetModelsCommand).build() {
};
__name(_GetModelsCommand, "GetModelsCommand");
var GetModelsCommand = _GetModelsCommand;

// src/commands/GetModelTemplateCommand.ts




var _GetModelTemplateCommand = class _GetModelTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetModelTemplate", {}).n("ApiGatewayV2Client", "GetModelTemplateCommand").f(void 0, void 0).ser(se_GetModelTemplateCommand).de(de_GetModelTemplateCommand).build() {
};
__name(_GetModelTemplateCommand, "GetModelTemplateCommand");
var GetModelTemplateCommand = _GetModelTemplateCommand;

// src/commands/GetRouteCommand.ts




var _GetRouteCommand = class _GetRouteCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetRoute", {}).n("ApiGatewayV2Client", "GetRouteCommand").f(void 0, void 0).ser(se_GetRouteCommand).de(de_GetRouteCommand).build() {
};
__name(_GetRouteCommand, "GetRouteCommand");
var GetRouteCommand = _GetRouteCommand;

// src/commands/GetRouteResponseCommand.ts




var _GetRouteResponseCommand = class _GetRouteResponseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetRouteResponse", {}).n("ApiGatewayV2Client", "GetRouteResponseCommand").f(void 0, void 0).ser(se_GetRouteResponseCommand).de(de_GetRouteResponseCommand).build() {
};
__name(_GetRouteResponseCommand, "GetRouteResponseCommand");
var GetRouteResponseCommand = _GetRouteResponseCommand;

// src/commands/GetRouteResponsesCommand.ts




var _GetRouteResponsesCommand = class _GetRouteResponsesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetRouteResponses", {}).n("ApiGatewayV2Client", "GetRouteResponsesCommand").f(void 0, void 0).ser(se_GetRouteResponsesCommand).de(de_GetRouteResponsesCommand).build() {
};
__name(_GetRouteResponsesCommand, "GetRouteResponsesCommand");
var GetRouteResponsesCommand = _GetRouteResponsesCommand;

// src/commands/GetRoutesCommand.ts




var _GetRoutesCommand = class _GetRoutesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetRoutes", {}).n("ApiGatewayV2Client", "GetRoutesCommand").f(void 0, void 0).ser(se_GetRoutesCommand).de(de_GetRoutesCommand).build() {
};
__name(_GetRoutesCommand, "GetRoutesCommand");
var GetRoutesCommand = _GetRoutesCommand;

// src/commands/GetStageCommand.ts




var _GetStageCommand = class _GetStageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetStage", {}).n("ApiGatewayV2Client", "GetStageCommand").f(void 0, void 0).ser(se_GetStageCommand).de(de_GetStageCommand).build() {
};
__name(_GetStageCommand, "GetStageCommand");
var GetStageCommand = _GetStageCommand;

// src/commands/GetStagesCommand.ts




var _GetStagesCommand = class _GetStagesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetStages", {}).n("ApiGatewayV2Client", "GetStagesCommand").f(void 0, void 0).ser(se_GetStagesCommand).de(de_GetStagesCommand).build() {
};
__name(_GetStagesCommand, "GetStagesCommand");
var GetStagesCommand = _GetStagesCommand;

// src/commands/GetTagsCommand.ts




var _GetTagsCommand = class _GetTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetTags", {}).n("ApiGatewayV2Client", "GetTagsCommand").f(void 0, void 0).ser(se_GetTagsCommand).de(de_GetTagsCommand).build() {
};
__name(_GetTagsCommand, "GetTagsCommand");
var GetTagsCommand = _GetTagsCommand;

// src/commands/GetVpcLinkCommand.ts




var _GetVpcLinkCommand = class _GetVpcLinkCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetVpcLink", {}).n("ApiGatewayV2Client", "GetVpcLinkCommand").f(void 0, void 0).ser(se_GetVpcLinkCommand).de(de_GetVpcLinkCommand).build() {
};
__name(_GetVpcLinkCommand, "GetVpcLinkCommand");
var GetVpcLinkCommand = _GetVpcLinkCommand;

// src/commands/GetVpcLinksCommand.ts




var _GetVpcLinksCommand = class _GetVpcLinksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "GetVpcLinks", {}).n("ApiGatewayV2Client", "GetVpcLinksCommand").f(void 0, void 0).ser(se_GetVpcLinksCommand).de(de_GetVpcLinksCommand).build() {
};
__name(_GetVpcLinksCommand, "GetVpcLinksCommand");
var GetVpcLinksCommand = _GetVpcLinksCommand;

// src/commands/ImportApiCommand.ts




var _ImportApiCommand = class _ImportApiCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "ImportApi", {}).n("ApiGatewayV2Client", "ImportApiCommand").f(void 0, void 0).ser(se_ImportApiCommand).de(de_ImportApiCommand).build() {
};
__name(_ImportApiCommand, "ImportApiCommand");
var ImportApiCommand = _ImportApiCommand;

// src/commands/ReimportApiCommand.ts




var _ReimportApiCommand = class _ReimportApiCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "ReimportApi", {}).n("ApiGatewayV2Client", "ReimportApiCommand").f(void 0, void 0).ser(se_ReimportApiCommand).de(de_ReimportApiCommand).build() {
};
__name(_ReimportApiCommand, "ReimportApiCommand");
var ReimportApiCommand = _ReimportApiCommand;

// src/commands/ResetAuthorizersCacheCommand.ts




var _ResetAuthorizersCacheCommand = class _ResetAuthorizersCacheCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "ResetAuthorizersCache", {}).n("ApiGatewayV2Client", "ResetAuthorizersCacheCommand").f(void 0, void 0).ser(se_ResetAuthorizersCacheCommand).de(de_ResetAuthorizersCacheCommand).build() {
};
__name(_ResetAuthorizersCacheCommand, "ResetAuthorizersCacheCommand");
var ResetAuthorizersCacheCommand = _ResetAuthorizersCacheCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "TagResource", {}).n("ApiGatewayV2Client", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UntagResource", {}).n("ApiGatewayV2Client", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateApiCommand.ts




var _UpdateApiCommand = class _UpdateApiCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateApi", {}).n("ApiGatewayV2Client", "UpdateApiCommand").f(void 0, void 0).ser(se_UpdateApiCommand).de(de_UpdateApiCommand).build() {
};
__name(_UpdateApiCommand, "UpdateApiCommand");
var UpdateApiCommand = _UpdateApiCommand;

// src/commands/UpdateApiMappingCommand.ts




var _UpdateApiMappingCommand = class _UpdateApiMappingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateApiMapping", {}).n("ApiGatewayV2Client", "UpdateApiMappingCommand").f(void 0, void 0).ser(se_UpdateApiMappingCommand).de(de_UpdateApiMappingCommand).build() {
};
__name(_UpdateApiMappingCommand, "UpdateApiMappingCommand");
var UpdateApiMappingCommand = _UpdateApiMappingCommand;

// src/commands/UpdateAuthorizerCommand.ts




var _UpdateAuthorizerCommand = class _UpdateAuthorizerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateAuthorizer", {}).n("ApiGatewayV2Client", "UpdateAuthorizerCommand").f(void 0, void 0).ser(se_UpdateAuthorizerCommand).de(de_UpdateAuthorizerCommand).build() {
};
__name(_UpdateAuthorizerCommand, "UpdateAuthorizerCommand");
var UpdateAuthorizerCommand = _UpdateAuthorizerCommand;

// src/commands/UpdateDeploymentCommand.ts




var _UpdateDeploymentCommand = class _UpdateDeploymentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateDeployment", {}).n("ApiGatewayV2Client", "UpdateDeploymentCommand").f(void 0, void 0).ser(se_UpdateDeploymentCommand).de(de_UpdateDeploymentCommand).build() {
};
__name(_UpdateDeploymentCommand, "UpdateDeploymentCommand");
var UpdateDeploymentCommand = _UpdateDeploymentCommand;

// src/commands/UpdateDomainNameCommand.ts




var _UpdateDomainNameCommand = class _UpdateDomainNameCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateDomainName", {}).n("ApiGatewayV2Client", "UpdateDomainNameCommand").f(void 0, void 0).ser(se_UpdateDomainNameCommand).de(de_UpdateDomainNameCommand).build() {
};
__name(_UpdateDomainNameCommand, "UpdateDomainNameCommand");
var UpdateDomainNameCommand = _UpdateDomainNameCommand;

// src/commands/UpdateIntegrationCommand.ts




var _UpdateIntegrationCommand = class _UpdateIntegrationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateIntegration", {}).n("ApiGatewayV2Client", "UpdateIntegrationCommand").f(void 0, void 0).ser(se_UpdateIntegrationCommand).de(de_UpdateIntegrationCommand).build() {
};
__name(_UpdateIntegrationCommand, "UpdateIntegrationCommand");
var UpdateIntegrationCommand = _UpdateIntegrationCommand;

// src/commands/UpdateIntegrationResponseCommand.ts




var _UpdateIntegrationResponseCommand = class _UpdateIntegrationResponseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateIntegrationResponse", {}).n("ApiGatewayV2Client", "UpdateIntegrationResponseCommand").f(void 0, void 0).ser(se_UpdateIntegrationResponseCommand).de(de_UpdateIntegrationResponseCommand).build() {
};
__name(_UpdateIntegrationResponseCommand, "UpdateIntegrationResponseCommand");
var UpdateIntegrationResponseCommand = _UpdateIntegrationResponseCommand;

// src/commands/UpdateModelCommand.ts




var _UpdateModelCommand = class _UpdateModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateModel", {}).n("ApiGatewayV2Client", "UpdateModelCommand").f(void 0, void 0).ser(se_UpdateModelCommand).de(de_UpdateModelCommand).build() {
};
__name(_UpdateModelCommand, "UpdateModelCommand");
var UpdateModelCommand = _UpdateModelCommand;

// src/commands/UpdateRouteCommand.ts




var _UpdateRouteCommand = class _UpdateRouteCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateRoute", {}).n("ApiGatewayV2Client", "UpdateRouteCommand").f(void 0, void 0).ser(se_UpdateRouteCommand).de(de_UpdateRouteCommand).build() {
};
__name(_UpdateRouteCommand, "UpdateRouteCommand");
var UpdateRouteCommand = _UpdateRouteCommand;

// src/commands/UpdateRouteResponseCommand.ts




var _UpdateRouteResponseCommand = class _UpdateRouteResponseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateRouteResponse", {}).n("ApiGatewayV2Client", "UpdateRouteResponseCommand").f(void 0, void 0).ser(se_UpdateRouteResponseCommand).de(de_UpdateRouteResponseCommand).build() {
};
__name(_UpdateRouteResponseCommand, "UpdateRouteResponseCommand");
var UpdateRouteResponseCommand = _UpdateRouteResponseCommand;

// src/commands/UpdateStageCommand.ts




var _UpdateStageCommand = class _UpdateStageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateStage", {}).n("ApiGatewayV2Client", "UpdateStageCommand").f(void 0, void 0).ser(se_UpdateStageCommand).de(de_UpdateStageCommand).build() {
};
__name(_UpdateStageCommand, "UpdateStageCommand");
var UpdateStageCommand = _UpdateStageCommand;

// src/commands/UpdateVpcLinkCommand.ts




var _UpdateVpcLinkCommand = class _UpdateVpcLinkCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApiGatewayV2", "UpdateVpcLink", {}).n("ApiGatewayV2Client", "UpdateVpcLinkCommand").f(void 0, void 0).ser(se_UpdateVpcLinkCommand).de(de_UpdateVpcLinkCommand).build() {
};
__name(_UpdateVpcLinkCommand, "UpdateVpcLinkCommand");
var UpdateVpcLinkCommand = _UpdateVpcLinkCommand;

// src/ApiGatewayV2.ts
var commands = {
  CreateApiCommand,
  CreateApiMappingCommand,
  CreateAuthorizerCommand,
  CreateDeploymentCommand,
  CreateDomainNameCommand,
  CreateIntegrationCommand,
  CreateIntegrationResponseCommand,
  CreateModelCommand,
  CreateRouteCommand,
  CreateRouteResponseCommand,
  CreateStageCommand,
  CreateVpcLinkCommand,
  DeleteAccessLogSettingsCommand,
  DeleteApiCommand,
  DeleteApiMappingCommand,
  DeleteAuthorizerCommand,
  DeleteCorsConfigurationCommand,
  DeleteDeploymentCommand,
  DeleteDomainNameCommand,
  DeleteIntegrationCommand,
  DeleteIntegrationResponseCommand,
  DeleteModelCommand,
  DeleteRouteCommand,
  DeleteRouteRequestParameterCommand,
  DeleteRouteResponseCommand,
  DeleteRouteSettingsCommand,
  DeleteStageCommand,
  DeleteVpcLinkCommand,
  ExportApiCommand,
  GetApiCommand,
  GetApiMappingCommand,
  GetApiMappingsCommand,
  GetApisCommand,
  GetAuthorizerCommand,
  GetAuthorizersCommand,
  GetDeploymentCommand,
  GetDeploymentsCommand,
  GetDomainNameCommand,
  GetDomainNamesCommand,
  GetIntegrationCommand,
  GetIntegrationResponseCommand,
  GetIntegrationResponsesCommand,
  GetIntegrationsCommand,
  GetModelCommand,
  GetModelsCommand,
  GetModelTemplateCommand,
  GetRouteCommand,
  GetRouteResponseCommand,
  GetRouteResponsesCommand,
  GetRoutesCommand,
  GetStageCommand,
  GetStagesCommand,
  GetTagsCommand,
  GetVpcLinkCommand,
  GetVpcLinksCommand,
  ImportApiCommand,
  ReimportApiCommand,
  ResetAuthorizersCacheCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateApiCommand,
  UpdateApiMappingCommand,
  UpdateAuthorizerCommand,
  UpdateDeploymentCommand,
  UpdateDomainNameCommand,
  UpdateIntegrationCommand,
  UpdateIntegrationResponseCommand,
  UpdateModelCommand,
  UpdateRouteCommand,
  UpdateRouteResponseCommand,
  UpdateStageCommand,
  UpdateVpcLinkCommand
};
var _ApiGatewayV2 = class _ApiGatewayV2 extends ApiGatewayV2Client {
};
__name(_ApiGatewayV2, "ApiGatewayV2");
var ApiGatewayV2 = _ApiGatewayV2;
(0, import_smithy_client.createAggregatedClient)(commands, ApiGatewayV2);
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ApiGatewayV2ServiceException,
  __Client,
  ApiGatewayV2Client,
  ApiGatewayV2,
  $Command,
  CreateApiCommand,
  CreateApiMappingCommand,
  CreateAuthorizerCommand,
  CreateDeploymentCommand,
  CreateDomainNameCommand,
  CreateIntegrationCommand,
  CreateIntegrationResponseCommand,
  CreateModelCommand,
  CreateRouteCommand,
  CreateRouteResponseCommand,
  CreateStageCommand,
  CreateVpcLinkCommand,
  DeleteAccessLogSettingsCommand,
  DeleteApiCommand,
  DeleteApiMappingCommand,
  DeleteAuthorizerCommand,
  DeleteCorsConfigurationCommand,
  DeleteDeploymentCommand,
  DeleteDomainNameCommand,
  DeleteIntegrationCommand,
  DeleteIntegrationResponseCommand,
  DeleteModelCommand,
  DeleteRouteCommand,
  DeleteRouteRequestParameterCommand,
  DeleteRouteResponseCommand,
  DeleteRouteSettingsCommand,
  DeleteStageCommand,
  DeleteVpcLinkCommand,
  ExportApiCommand,
  GetApiCommand,
  GetApiMappingCommand,
  GetApiMappingsCommand,
  GetApisCommand,
  GetAuthorizerCommand,
  GetAuthorizersCommand,
  GetDeploymentCommand,
  GetDeploymentsCommand,
  GetDomainNameCommand,
  GetDomainNamesCommand,
  GetIntegrationCommand,
  GetIntegrationResponseCommand,
  GetIntegrationResponsesCommand,
  GetIntegrationsCommand,
  GetModelCommand,
  GetModelTemplateCommand,
  GetModelsCommand,
  GetRouteCommand,
  GetRouteResponseCommand,
  GetRouteResponsesCommand,
  GetRoutesCommand,
  GetStageCommand,
  GetStagesCommand,
  GetTagsCommand,
  GetVpcLinkCommand,
  GetVpcLinksCommand,
  ImportApiCommand,
  ReimportApiCommand,
  ResetAuthorizersCacheCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateApiCommand,
  UpdateApiMappingCommand,
  UpdateAuthorizerCommand,
  UpdateDeploymentCommand,
  UpdateDomainNameCommand,
  UpdateIntegrationCommand,
  UpdateIntegrationResponseCommand,
  UpdateModelCommand,
  UpdateRouteCommand,
  UpdateRouteResponseCommand,
  UpdateStageCommand,
  UpdateVpcLinkCommand,
  ProtocolType,
  AuthorizerType,
  DeploymentStatus,
  DomainNameStatus,
  EndpointType,
  SecurityPolicy,
  ConnectionType,
  ContentHandlingStrategy,
  IntegrationType,
  PassthroughBehavior,
  AuthorizationType,
  LoggingLevel,
  VpcLinkStatus,
  VpcLinkVersion,
  AccessDeniedException,
  BadRequestException,
  ConflictException,
  NotFoundException,
  TooManyRequestsException
});

