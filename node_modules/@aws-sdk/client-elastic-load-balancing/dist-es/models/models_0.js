import { ElasticLoadBalancingServiceException as __BaseException } from "./ElasticLoadBalancingServiceException";
export class AccessPointNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessPointNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessPointNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessPointNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class DuplicateTagKeysException extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicateTagKeysException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateTagKeysException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateTagKeysException.prototype);
        this.Message = opts.Message;
    }
}
export class TooManyTagsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidConfigurationRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidConfigurationRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidConfigurationRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidConfigurationRequestException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidSecurityGroupException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSecurityGroupException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSecurityGroupException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSecurityGroupException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidSubnetException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSubnetException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSubnetException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSubnetException.prototype);
        this.Message = opts.Message;
    }
}
export class SubnetNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class CertificateNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "CertificateNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "CertificateNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CertificateNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class DuplicatePolicyNameException extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicatePolicyNameException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicatePolicyNameException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicatePolicyNameException.prototype);
        this.Message = opts.Message;
    }
}
export class TooManyPoliciesException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyPoliciesException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyPoliciesException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyPoliciesException.prototype);
        this.Message = opts.Message;
    }
}
export class DuplicateAccessPointNameException extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicateAccessPointNameException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateAccessPointNameException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateAccessPointNameException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidSchemeException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSchemeException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSchemeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSchemeException.prototype);
        this.Message = opts.Message;
    }
}
export class OperationNotPermittedException extends __BaseException {
    constructor(opts) {
        super({
            name: "OperationNotPermittedException",
            $fault: "client",
            ...opts,
        });
        this.name = "OperationNotPermittedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OperationNotPermittedException.prototype);
        this.Message = opts.Message;
    }
}
export class TooManyAccessPointsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyAccessPointsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyAccessPointsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyAccessPointsException.prototype);
        this.Message = opts.Message;
    }
}
export class UnsupportedProtocolException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedProtocolException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedProtocolException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedProtocolException.prototype);
        this.Message = opts.Message;
    }
}
export class DuplicateListenerException extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicateListenerException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateListenerException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateListenerException.prototype);
        this.Message = opts.Message;
    }
}
export class PolicyTypeNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "PolicyTypeNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PolicyTypeNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PolicyTypeNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class DependencyThrottleException extends __BaseException {
    constructor(opts) {
        super({
            name: "DependencyThrottleException",
            $fault: "client",
            ...opts,
        });
        this.name = "DependencyThrottleException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DependencyThrottleException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidEndPointException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidEndPointException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidEndPointException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidEndPointException.prototype);
        this.Message = opts.Message;
    }
}
export class LoadBalancerAttributeNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "LoadBalancerAttributeNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "LoadBalancerAttributeNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LoadBalancerAttributeNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class PolicyNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "PolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PolicyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PolicyNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ListenerNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ListenerNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ListenerNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ListenerNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
