import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { CostExplorerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../CostExplorerClient";
import { DeleteAnomalySubscriptionRequest, DeleteAnomalySubscriptionResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DeleteAnomalySubscriptionCommand}.
 */
export interface DeleteAnomalySubscriptionCommandInput extends DeleteAnomalySubscriptionRequest {
}
/**
 * @public
 *
 * The output of {@link DeleteAnomalySubscriptionCommand}.
 */
export interface DeleteAnomalySubscriptionCommandOutput extends DeleteAnomalySubscriptionResponse, __MetadataBearer {
}
declare const DeleteAnomalySubscriptionCommand_base: {
    new (input: DeleteAnomalySubscriptionCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteAnomalySubscriptionCommandInput, DeleteAnomalySubscriptionCommandOutput, CostExplorerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: DeleteAnomalySubscriptionCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteAnomalySubscriptionCommandInput, DeleteAnomalySubscriptionCommandOutput, CostExplorerClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Deletes a cost anomaly subscription. </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { CostExplorerClient, DeleteAnomalySubscriptionCommand } from "@aws-sdk/client-cost-explorer"; // ES Modules import
 * // const { CostExplorerClient, DeleteAnomalySubscriptionCommand } = require("@aws-sdk/client-cost-explorer"); // CommonJS import
 * const client = new CostExplorerClient(config);
 * const input = { // DeleteAnomalySubscriptionRequest
 *   SubscriptionArn: "STRING_VALUE", // required
 * };
 * const command = new DeleteAnomalySubscriptionCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param DeleteAnomalySubscriptionCommandInput - {@link DeleteAnomalySubscriptionCommandInput}
 * @returns {@link DeleteAnomalySubscriptionCommandOutput}
 * @see {@link DeleteAnomalySubscriptionCommandInput} for command's `input` shape.
 * @see {@link DeleteAnomalySubscriptionCommandOutput} for command's `response` shape.
 * @see {@link CostExplorerClientResolvedConfig | config} for CostExplorerClient's `config` shape.
 *
 * @throws {@link LimitExceededException} (client fault)
 *  <p>You made too many calls in a short period of time. Try again later.</p>
 *
 * @throws {@link UnknownSubscriptionException} (client fault)
 *  <p>The cost anomaly subscription does not exist for the account. </p>
 *
 * @throws {@link CostExplorerServiceException}
 * <p>Base exception class for all service exceptions from CostExplorer service.</p>
 *
 * @public
 */
export declare class DeleteAnomalySubscriptionCommand extends DeleteAnomalySubscriptionCommand_base {
}
