import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AssumeRoleForPodIdentityCommandInput,
  AssumeRoleForPodIdentityCommandOutput,
} from "./commands/AssumeRoleForPodIdentityCommand";
import { EKSAuthClient } from "./EKSAuthClient";
export interface EKSAuth {
  assumeRoleForPodIdentity(
    args: AssumeRoleForPodIdentityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssumeRoleForPodIdentityCommandOutput>;
  assumeRoleForPodIdentity(
    args: AssumeRoleForPodIdentityCommandInput,
    cb: (err: any, data?: AssumeRoleForPodIdentityCommandOutput) => void
  ): void;
  assumeRoleForPodIdentity(
    args: AssumeRoleForPodIdentityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssumeRoleForPodIdentityCommandOutput) => void
  ): void;
}
export declare class EKSAuth extends EKSAuthClient implements EKSAuth {}
