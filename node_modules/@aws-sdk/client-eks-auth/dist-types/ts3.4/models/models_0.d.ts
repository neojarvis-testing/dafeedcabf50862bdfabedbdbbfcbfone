import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { EKSAuthServiceException as __BaseException } from "./EKSAuthServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AssumedRoleUser {
  arn: string | undefined;
  assumeRoleId: string | undefined;
}
export interface AssumeRoleForPodIdentityRequest {
  clusterName: string | undefined;
  token: string | undefined;
}
export interface Credentials {
  sessionToken: string | undefined;
  secretAccessKey: string | undefined;
  accessKeyId: string | undefined;
  expiration: Date | undefined;
}
export interface PodIdentityAssociation {
  associationArn: string | undefined;
  associationId: string | undefined;
}
export interface Subject {
  namespace: string | undefined;
  serviceAccount: string | undefined;
}
export interface AssumeRoleForPodIdentityResponse {
  subject: Subject | undefined;
  audience: string | undefined;
  podIdentityAssociation: PodIdentityAssociation | undefined;
  assumedRoleUser: AssumedRoleUser | undefined;
  credentials: Credentials | undefined;
}
export declare class ExpiredTokenException extends __BaseException {
  readonly name: "ExpiredTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ExpiredTokenException, __BaseException>
  );
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class InvalidParameterException extends __BaseException {
  readonly name: "InvalidParameterException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidParameterException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class InvalidTokenException extends __BaseException {
  readonly name: "InvalidTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidTokenException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare const AssumeRoleForPodIdentityRequestFilterSensitiveLog: (
  obj: AssumeRoleForPodIdentityRequest
) => any;
export declare const CredentialsFilterSensitiveLog: (obj: Credentials) => any;
export declare const AssumeRoleForPodIdentityResponseFilterSensitiveLog: (
  obj: AssumeRoleForPodIdentityResponse
) => any;
