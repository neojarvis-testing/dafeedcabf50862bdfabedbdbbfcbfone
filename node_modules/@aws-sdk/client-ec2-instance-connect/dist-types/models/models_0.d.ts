import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { EC2InstanceConnectServiceException as __BaseException } from "./EC2InstanceConnectServiceException";
/**
 * <p>Either your AWS credentials are not valid or you do not have access to the EC2 instance.</p>
 * @public
 */
export declare class AuthException extends __BaseException {
    readonly name: "AuthException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<AuthException, __BaseException>);
}
/**
 * <p>The specified instance was not found.</p>
 * @public
 */
export declare class EC2InstanceNotFoundException extends __BaseException {
    readonly name: "EC2InstanceNotFoundException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<EC2InstanceNotFoundException, __BaseException>);
}
/**
 * <p>Unable to connect because the instance is not in a valid state.
 *             Connecting to a stopped or terminated instance is not supported. If the instance is stopped,
 *             start your instance, and try to connect again.</p>
 * @public
 */
export declare class EC2InstanceStateInvalidException extends __BaseException {
    readonly name: "EC2InstanceStateInvalidException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<EC2InstanceStateInvalidException, __BaseException>);
}
/**
 * <p>The instance type is not supported for connecting via the serial console. Only Nitro
 *             instance types are currently supported.</p>
 * @public
 */
export declare class EC2InstanceTypeInvalidException extends __BaseException {
    readonly name: "EC2InstanceTypeInvalidException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<EC2InstanceTypeInvalidException, __BaseException>);
}
/**
 * <p>The instance is currently unavailable. Wait a few minutes and try again.</p>
 * @public
 */
export declare class EC2InstanceUnavailableException extends __BaseException {
    readonly name: "EC2InstanceUnavailableException";
    readonly $fault: "server";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<EC2InstanceUnavailableException, __BaseException>);
}
/**
 * <p>One of the parameters is not valid.</p>
 * @public
 */
export declare class InvalidArgsException extends __BaseException {
    readonly name: "InvalidArgsException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<InvalidArgsException, __BaseException>);
}
/**
 * @public
 */
export interface SendSerialConsoleSSHPublicKeyRequest {
    /**
     * <p>The ID of the EC2 instance.</p>
     * @public
     */
    InstanceId: string | undefined;
    /**
     * <p>The serial port of the EC2 instance. Currently only port 0 is supported.</p>
     *         <p>Default: 0</p>
     * @public
     */
    SerialPort?: number;
    /**
     * <p>The public key material. To use the public key, you must have the matching private
     *             key. For information about the supported key formats and lengths, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#how-to-generate-your-own-key-and-import-it-to-aws">Requirements for key pairs</a> in the <i>Amazon EC2 User
     *             Guide</i>.</p>
     * @public
     */
    SSHPublicKey: string | undefined;
}
/**
 * @public
 */
export interface SendSerialConsoleSSHPublicKeyResponse {
    /**
     * <p>The ID of the request. Please provide this ID when contacting AWS Support for assistance.</p>
     * @public
     */
    RequestId?: string;
    /**
     * <p>Is true if the request succeeds and an error otherwise.</p>
     * @public
     */
    Success?: boolean;
}
/**
 * <p>Your account is not authorized to use the EC2 Serial Console. To authorize your
 *             account, run the EnableSerialConsoleAccess API. For more information, see
 *             <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableSerialConsoleAccess.html">EnableSerialConsoleAccess</a> in the <i>Amazon EC2 API Reference</i>.</p>
 * @public
 */
export declare class SerialConsoleAccessDisabledException extends __BaseException {
    readonly name: "SerialConsoleAccessDisabledException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<SerialConsoleAccessDisabledException, __BaseException>);
}
/**
 * <p>The instance currently has 1 active serial console session. Only 1 session is supported at a time.</p>
 * @public
 */
export declare class SerialConsoleSessionLimitExceededException extends __BaseException {
    readonly name: "SerialConsoleSessionLimitExceededException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<SerialConsoleSessionLimitExceededException, __BaseException>);
}
/**
 * <p>Unable to start a serial console session. Please try again.</p>
 * @public
 */
export declare class SerialConsoleSessionUnavailableException extends __BaseException {
    readonly name: "SerialConsoleSessionUnavailableException";
    readonly $fault: "server";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<SerialConsoleSessionUnavailableException, __BaseException>);
}
/**
 * <p>Your instance's BIOS version is unsupported for serial console connection. Reboot your instance to update its BIOS, and then try again to connect.</p>
 * @public
 */
export declare class SerialConsoleSessionUnsupportedException extends __BaseException {
    readonly name: "SerialConsoleSessionUnsupportedException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<SerialConsoleSessionUnsupportedException, __BaseException>);
}
/**
 * <p>The service encountered an error. Follow the instructions in the error message and try again.</p>
 * @public
 */
export declare class ServiceException extends __BaseException {
    readonly name: "ServiceException";
    readonly $fault: "server";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ServiceException, __BaseException>);
}
/**
 * <p>The requests were made too frequently and have been throttled. Wait a while and try again.
 *             To increase the limit on your request frequency, contact AWS Support.</p>
 * @public
 */
export declare class ThrottlingException extends __BaseException {
    readonly name: "ThrottlingException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
}
/**
 * @public
 */
export interface SendSSHPublicKeyRequest {
    /**
     * <p>The ID of the EC2 instance.</p>
     * @public
     */
    InstanceId: string | undefined;
    /**
     * <p>The OS user on the EC2 instance for whom the key can be used to authenticate.</p>
     * @public
     */
    InstanceOSUser: string | undefined;
    /**
     * <p>The public key material. To use the public key, you must have the matching private key.</p>
     * @public
     */
    SSHPublicKey: string | undefined;
    /**
     * <p>The Availability Zone in which the EC2 instance was launched.</p>
     * @public
     */
    AvailabilityZone?: string;
}
/**
 * @public
 */
export interface SendSSHPublicKeyResponse {
    /**
     * <p>The ID of the request. Please provide this ID when contacting AWS Support for assistance.</p>
     * @public
     */
    RequestId?: string;
    /**
     * <p>Is true if the request succeeds and an error otherwise.</p>
     * @public
     */
    Success?: boolean;
}
