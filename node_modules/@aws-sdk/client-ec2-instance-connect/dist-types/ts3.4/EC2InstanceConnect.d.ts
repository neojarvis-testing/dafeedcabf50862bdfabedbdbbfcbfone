import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  SendSerialConsoleSSHPublicKeyCommandInput,
  SendSerialConsoleSSHPublicKeyCommandOutput,
} from "./commands/SendSerialConsoleSSHPublicKeyCommand";
import {
  SendSSHPublicKeyCommandInput,
  SendSSHPublicKeyCommandOutput,
} from "./commands/SendSSHPublicKeyCommand";
import { EC2InstanceConnectClient } from "./EC2InstanceConnectClient";
export interface EC2InstanceConnect {
  sendSerialConsoleSSHPublicKey(
    args: SendSerialConsoleSSHPublicKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SendSerialConsoleSSHPublicKeyCommandOutput>;
  sendSerialConsoleSSHPublicKey(
    args: SendSerialConsoleSSHPublicKeyCommandInput,
    cb: (err: any, data?: SendSerialConsoleSSHPublicKeyCommandOutput) => void
  ): void;
  sendSerialConsoleSSHPublicKey(
    args: SendSerialConsoleSSHPublicKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SendSerialConsoleSSHPublicKeyCommandOutput) => void
  ): void;
  sendSSHPublicKey(
    args: SendSSHPublicKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SendSSHPublicKeyCommandOutput>;
  sendSSHPublicKey(
    args: SendSSHPublicKeyCommandInput,
    cb: (err: any, data?: SendSSHPublicKeyCommandOutput) => void
  ): void;
  sendSSHPublicKey(
    args: SendSSHPublicKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SendSSHPublicKeyCommandOutput) => void
  ): void;
}
export declare class EC2InstanceConnect
  extends EC2InstanceConnectClient
  implements EC2InstanceConnect {}
