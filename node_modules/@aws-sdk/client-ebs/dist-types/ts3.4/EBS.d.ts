import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CompleteSnapshotCommandInput,
  CompleteSnapshotCommandOutput,
} from "./commands/CompleteSnapshotCommand";
import {
  GetSnapshotBlockCommandInput,
  GetSnapshotBlockCommandOutput,
} from "./commands/GetSnapshotBlockCommand";
import {
  ListChangedBlocksCommandInput,
  ListChangedBlocksCommandOutput,
} from "./commands/ListChangedBlocksCommand";
import {
  ListSnapshotBlocksCommandInput,
  ListSnapshotBlocksCommandOutput,
} from "./commands/ListSnapshotBlocksCommand";
import {
  PutSnapshotBlockCommandInput,
  PutSnapshotBlockCommandOutput,
} from "./commands/PutSnapshotBlockCommand";
import {
  StartSnapshotCommandInput,
  StartSnapshotCommandOutput,
} from "./commands/StartSnapshotCommand";
import { EBSClient } from "./EBSClient";
export interface EBS {
  completeSnapshot(
    args: CompleteSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CompleteSnapshotCommandOutput>;
  completeSnapshot(
    args: CompleteSnapshotCommandInput,
    cb: (err: any, data?: CompleteSnapshotCommandOutput) => void
  ): void;
  completeSnapshot(
    args: CompleteSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CompleteSnapshotCommandOutput) => void
  ): void;
  getSnapshotBlock(
    args: GetSnapshotBlockCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSnapshotBlockCommandOutput>;
  getSnapshotBlock(
    args: GetSnapshotBlockCommandInput,
    cb: (err: any, data?: GetSnapshotBlockCommandOutput) => void
  ): void;
  getSnapshotBlock(
    args: GetSnapshotBlockCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSnapshotBlockCommandOutput) => void
  ): void;
  listChangedBlocks(
    args: ListChangedBlocksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListChangedBlocksCommandOutput>;
  listChangedBlocks(
    args: ListChangedBlocksCommandInput,
    cb: (err: any, data?: ListChangedBlocksCommandOutput) => void
  ): void;
  listChangedBlocks(
    args: ListChangedBlocksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListChangedBlocksCommandOutput) => void
  ): void;
  listSnapshotBlocks(
    args: ListSnapshotBlocksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSnapshotBlocksCommandOutput>;
  listSnapshotBlocks(
    args: ListSnapshotBlocksCommandInput,
    cb: (err: any, data?: ListSnapshotBlocksCommandOutput) => void
  ): void;
  listSnapshotBlocks(
    args: ListSnapshotBlocksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSnapshotBlocksCommandOutput) => void
  ): void;
  putSnapshotBlock(
    args: PutSnapshotBlockCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutSnapshotBlockCommandOutput>;
  putSnapshotBlock(
    args: PutSnapshotBlockCommandInput,
    cb: (err: any, data?: PutSnapshotBlockCommandOutput) => void
  ): void;
  putSnapshotBlock(
    args: PutSnapshotBlockCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutSnapshotBlockCommandOutput) => void
  ): void;
  startSnapshot(
    args: StartSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartSnapshotCommandOutput>;
  startSnapshot(
    args: StartSnapshotCommandInput,
    cb: (err: any, data?: StartSnapshotCommandOutput) => void
  ): void;
  startSnapshot(
    args: StartSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartSnapshotCommandOutput) => void
  ): void;
}
export declare class EBS extends EBSClient implements EBS {}
