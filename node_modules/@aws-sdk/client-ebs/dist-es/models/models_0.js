import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { EBSServiceException as __BaseException } from "./EBSServiceException";
export const AccessDeniedExceptionReason = {
    DEPENDENCY_ACCESS_DENIED: "DEPENDENCY_ACCESS_DENIED",
    UNAUTHORIZED_ACCOUNT: "UNAUTHORIZED_ACCOUNT",
};
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
    }
}
export const ChecksumAggregationMethod = {
    CHECKSUM_AGGREGATION_LINEAR: "LINEAR",
};
export const ChecksumAlgorithm = {
    CHECKSUM_ALGORITHM_SHA256: "SHA256",
};
export const Status = {
    COMPLETED: "completed",
    ERROR: "error",
    PENDING: "pending",
};
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
    }
}
export const RequestThrottledExceptionReason = {
    ACCOUNT_THROTTLED: "ACCOUNT_THROTTLED",
    DEPENDENCY_REQUEST_THROTTLED: "DEPENDENCY_REQUEST_THROTTLED",
    RESOURCE_LEVEL_THROTTLE: "RESOURCE_LEVEL_THROTTLE",
};
export class RequestThrottledException extends __BaseException {
    constructor(opts) {
        super({
            name: "RequestThrottledException",
            $fault: "client",
            ...opts,
        });
        this.name = "RequestThrottledException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RequestThrottledException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
    }
}
export const ResourceNotFoundExceptionReason = {
    DEPENDENCY_RESOURCE_NOT_FOUND: "DEPENDENCY_RESOURCE_NOT_FOUND",
    GRANT_NOT_FOUND: "GRANT_NOT_FOUND",
    IMAGE_NOT_FOUND: "IMAGE_NOT_FOUND",
    SNAPSHOT_NOT_FOUND: "SNAPSHOT_NOT_FOUND",
};
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
    }
}
export const ServiceQuotaExceededExceptionReason = {
    DEPENDENCY_SERVICE_QUOTA_EXCEEDED: "DEPENDENCY_SERVICE_QUOTA_EXCEEDED",
};
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
    }
}
export const ValidationExceptionReason = {
    CONFLICTING_BLOCK_UPDATE: "CONFLICTING_BLOCK_UPDATE",
    INVALID_BLOCK: "INVALID_BLOCK",
    INVALID_BLOCK_TOKEN: "INVALID_BLOCK_TOKEN",
    INVALID_CONTENT_ENCODING: "INVALID_CONTENT_ENCODING",
    INVALID_CUSTOMER_KEY: "INVALID_CUSTOMER_KEY",
    INVALID_DEPENDENCY_REQUEST: "INVALID_DEPENDENCY_REQUEST",
    INVALID_GRANT_TOKEN: "INVALID_GRANT_TOKEN",
    INVALID_IMAGE_ID: "INVALID_IMAGE_ID",
    INVALID_PAGE_TOKEN: "INVALID_PAGE_TOKEN",
    INVALID_PARAMETER_VALUE: "INVALID_PARAMETER_VALUE",
    INVALID_SNAPSHOT_ID: "INVALID_SNAPSHOT_ID",
    INVALID_TAG: "INVALID_TAG",
    INVALID_VOLUME_SIZE: "INVALID_VOLUME_SIZE",
    UNRELATED_SNAPSHOTS: "UNRELATED_SNAPSHOTS",
    WRITE_REQUEST_TIMEOUT: "WRITE_REQUEST_TIMEOUT",
};
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
    }
}
export class ConcurrentLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConcurrentLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Message = opts.Message;
    }
}
export const SSEType = {
    NONE: "none",
    SSE_EBS: "sse-ebs",
    SSE_KMS: "sse-kms",
};
export const ChangedBlockFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetSnapshotBlockResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BlockData && { BlockData: SENSITIVE_STRING }),
});
export const ListChangedBlocksResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ChangedBlocks && { ChangedBlocks: SENSITIVE_STRING }),
});
export const ListSnapshotBlocksResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Blocks && { Blocks: SENSITIVE_STRING }),
});
export const PutSnapshotBlockRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BlockData && { BlockData: SENSITIVE_STRING }),
});
export const StartSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.KmsKeyArn && { KmsKeyArn: SENSITIVE_STRING }),
});
export const StartSnapshotResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.KmsKeyArn && { KmsKeyArn: SENSITIVE_STRING }),
});
