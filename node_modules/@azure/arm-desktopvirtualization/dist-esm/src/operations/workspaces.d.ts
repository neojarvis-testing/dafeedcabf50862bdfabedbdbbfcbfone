import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Workspaces } from "../operationsInterfaces";
import { DesktopVirtualizationAPIClient } from "../desktopVirtualizationAPIClient";
import { Workspace, WorkspacesListByResourceGroupOptionalParams, WorkspacesListBySubscriptionOptionalParams, WorkspacesGetOptionalParams, WorkspacesGetResponse, WorkspacesCreateOrUpdateOptionalParams, WorkspacesCreateOrUpdateResponse, WorkspacesDeleteOptionalParams, WorkspacesUpdateOptionalParams, WorkspacesUpdateResponse } from "../models";
/** Class containing Workspaces operations. */
export declare class WorkspacesImpl implements Workspaces {
    private readonly client;
    /**
     * Initialize a new instance of the class Workspaces class.
     * @param client Reference to the service client
     */
    constructor(client: DesktopVirtualizationAPIClient);
    /**
     * List workspaces.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: WorkspacesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Workspace>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List workspaces in subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: WorkspacesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Workspace>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Get a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, options?: WorkspacesGetOptionalParams): Promise<WorkspacesGetResponse>;
    /**
     * Create or update a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param workspace Object containing Workspace definitions.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, workspace: Workspace, options?: WorkspacesCreateOrUpdateOptionalParams): Promise<WorkspacesCreateOrUpdateResponse>;
    /**
     * Remove a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, options?: WorkspacesDeleteOptionalParams): Promise<void>;
    /**
     * Update a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace
     * @param options The options parameters.
     */
    update(resourceGroupName: string, workspaceName: string, options?: WorkspacesUpdateOptionalParams): Promise<WorkspacesUpdateResponse>;
    /**
     * List workspaces.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * List workspaces in subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=workspaces.d.ts.map