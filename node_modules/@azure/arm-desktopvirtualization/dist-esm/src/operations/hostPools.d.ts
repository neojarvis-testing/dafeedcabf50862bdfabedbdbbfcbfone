import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { HostPools } from "../operationsInterfaces";
import { DesktopVirtualizationAPIClient } from "../desktopVirtualizationAPIClient";
import { HostPool, HostPoolsListByResourceGroupOptionalParams, HostPoolsListOptionalParams, HostPoolsGetOptionalParams, HostPoolsGetResponse, HostPoolsCreateOrUpdateOptionalParams, HostPoolsCreateOrUpdateResponse, HostPoolsDeleteOptionalParams, HostPoolsUpdateOptionalParams, HostPoolsUpdateResponse, HostPoolsRetrieveRegistrationTokenOptionalParams, HostPoolsRetrieveRegistrationTokenResponse } from "../models";
/** Class containing HostPools operations. */
export declare class HostPoolsImpl implements HostPools {
    private readonly client;
    /**
     * Initialize a new instance of the class HostPools class.
     * @param client Reference to the service client
     */
    constructor(client: DesktopVirtualizationAPIClient);
    /**
     * List hostPools.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: HostPoolsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<HostPool>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List hostPools in subscription.
     * @param options The options parameters.
     */
    list(options?: HostPoolsListOptionalParams): PagedAsyncIterableIterator<HostPool>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get a host pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group
     * @param options The options parameters.
     */
    get(resourceGroupName: string, hostPoolName: string, options?: HostPoolsGetOptionalParams): Promise<HostPoolsGetResponse>;
    /**
     * Create or update a host pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group
     * @param hostPool Object containing HostPool definitions.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, hostPoolName: string, hostPool: HostPool, options?: HostPoolsCreateOrUpdateOptionalParams): Promise<HostPoolsCreateOrUpdateResponse>;
    /**
     * Remove a host pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, hostPoolName: string, options?: HostPoolsDeleteOptionalParams): Promise<void>;
    /**
     * Update a host pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group
     * @param options The options parameters.
     */
    update(resourceGroupName: string, hostPoolName: string, options?: HostPoolsUpdateOptionalParams): Promise<HostPoolsUpdateResponse>;
    /**
     * List hostPools.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * List hostPools in subscription.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Registration token of the host pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param hostPoolName The name of the host pool within the specified resource group
     * @param options The options parameters.
     */
    retrieveRegistrationToken(resourceGroupName: string, hostPoolName: string, options?: HostPoolsRetrieveRegistrationTokenOptionalParams): Promise<HostPoolsRetrieveRegistrationTokenResponse>;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=hostPools.d.ts.map