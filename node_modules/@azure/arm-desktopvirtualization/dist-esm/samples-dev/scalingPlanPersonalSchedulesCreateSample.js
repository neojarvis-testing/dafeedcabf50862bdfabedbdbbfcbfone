/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { DesktopVirtualizationAPIClient } from "@azure/arm-desktopvirtualization";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Create or update a ScalingPlanPersonalSchedule.
 *
 * @summary Create or update a ScalingPlanPersonalSchedule.
 * x-ms-original-file: specification/desktopvirtualization/resource-manager/Microsoft.DesktopVirtualization/stable/2023-09-05/examples/ScalingPlanPersonalSchedule_Create.json
 */
function scalingPlanPersonalSchedulesCreate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["DESKTOPVIRTUALIZATION_SUBSCRIPTION_ID"] ||
            "daefabc0-95b4-48b3-b645-8a753a63c4fa";
        const resourceGroupName = process.env["DESKTOPVIRTUALIZATION_RESOURCE_GROUP"] || "resourceGroup1";
        const scalingPlanName = "scalingPlan1";
        const scalingPlanScheduleName = "scalingPlanScheduleWeekdays1";
        const scalingPlanSchedule = {
            daysOfWeek: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
            offPeakActionOnDisconnect: "None",
            offPeakActionOnLogoff: "Deallocate",
            offPeakMinutesToWaitOnDisconnect: 10,
            offPeakMinutesToWaitOnLogoff: 10,
            offPeakStartTime: { hour: 20, minute: 0 },
            offPeakStartVMOnConnect: "Enable",
            peakActionOnDisconnect: "None",
            peakActionOnLogoff: "Deallocate",
            peakMinutesToWaitOnDisconnect: 10,
            peakMinutesToWaitOnLogoff: 10,
            peakStartTime: { hour: 8, minute: 0 },
            peakStartVMOnConnect: "Enable",
            rampDownActionOnDisconnect: "None",
            rampDownActionOnLogoff: "Deallocate",
            rampDownMinutesToWaitOnDisconnect: 10,
            rampDownMinutesToWaitOnLogoff: 10,
            rampDownStartTime: { hour: 18, minute: 0 },
            rampDownStartVMOnConnect: "Enable",
            rampUpActionOnDisconnect: "None",
            rampUpActionOnLogoff: "None",
            rampUpAutoStartHosts: "All",
            rampUpMinutesToWaitOnDisconnect: 10,
            rampUpMinutesToWaitOnLogoff: 10,
            rampUpStartTime: { hour: 6, minute: 0 },
            rampUpStartVMOnConnect: "Enable"
        };
        const credential = new DefaultAzureCredential();
        const client = new DesktopVirtualizationAPIClient(credential, subscriptionId);
        const result = yield client.scalingPlanPersonalSchedules.create(resourceGroupName, scalingPlanName, scalingPlanScheduleName, scalingPlanSchedule);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        scalingPlanPersonalSchedulesCreate();
    });
}
main().catch(console.error);
//# sourceMappingURL=scalingPlanPersonalSchedulesCreateSample.js.map