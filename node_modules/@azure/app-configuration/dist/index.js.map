{"version":3,"file":"index.js","sources":["../src/logger.ts","../src/internal/synctokenpolicy.ts","../src/featureFlag.ts","../src/secretReference.ts","../src/internal/helpers.ts","../src/generated/src/lroImpl.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/appConfiguration.ts","../src/appConfigCredential.ts","../src/internal/constants.ts","../src/internal/tracing.ts","../src/appConfigurationClient.ts","../src/generated/src/models/index.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n * @internal\n */\nexport const logger = createClientLogger(\"app-config\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { logger } from \"../logger\";\n\n/**\n * The sync token header, as described here:\n * https://docs.microsoft.com/azure/azure-app-configuration/rest-api-consistency\n * @internal\n */\nexport const SyncTokenHeaderName = \"sync-token\";\n\n/**\n * A policy factory for injecting sync tokens properly into outgoing requests.\n * @param syncTokens - the sync tokens store to be used across requests.\n * @internal\n */\nexport function syncTokenPolicy(syncTokens: SyncTokens): PipelinePolicy {\n  return {\n    name: \"Sync Token Policy\",\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const syncTokenHeaderValue = syncTokens.getSyncTokenHeaderValue();\n\n      if (syncTokenHeaderValue) {\n        logger.info(\n          \"[syncTokenPolicy] Setting headers with ${SyncTokenHeaderName} and ${syncTokenHeaderValue}\",\n        );\n        request.headers.set(SyncTokenHeaderName, syncTokenHeaderValue);\n      }\n      const response = await next(request);\n      syncTokens.addSyncTokenFromHeaderValue(response.headers.get(SyncTokenHeaderName));\n      return response;\n    },\n  };\n}\n\n/**\n * Sync token tracker (allows for real-time consistency, even in the face of\n * caching and load balancing within App Configuration).\n *\n * (protocol and format described here)\n * https://docs.microsoft.com/azure/azure-app-configuration/rest-api-consistency\n *\n * @internal\n */\nexport class SyncTokens {\n  private _currentSyncTokens = new Map<string, SyncToken>();\n\n  /**\n   * Takes the value from the header named after the constant `SyncTokenHeaderName`\n   * and adds it to our list of accumulated sync tokens.\n   *\n   * If given an empty value (or undefined) it clears the current list of sync tokens.\n   * (indicates the service has properly absorbed values into the cluster).\n   *\n   * @param syncTokenHeaderValue - The full value of the sync token header.\n   */\n  addSyncTokenFromHeaderValue(syncTokenHeaderValue: string | undefined): void {\n    if (syncTokenHeaderValue == null || syncTokenHeaderValue === \"\") {\n      // eventually everything gets synced up and we don't have to track\n      // these headers anymore\n      this._currentSyncTokens.clear();\n      return;\n    }\n\n    const newTokens = syncTokenHeaderValue.split(\",\").map(parseSyncToken);\n\n    for (const newToken of newTokens) {\n      const existingToken = this._currentSyncTokens.get(newToken.id);\n\n      if (!existingToken || existingToken.sequenceNumber < newToken.sequenceNumber) {\n        this._currentSyncTokens.set(newToken.id, newToken);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Gets a properly formatted SyncToken header value.\n   */\n  getSyncTokenHeaderValue(): string | undefined {\n    if (this._currentSyncTokens.size === 0) {\n      return undefined;\n    }\n\n    const syncTokenStrings = [];\n\n    for (const syncToken of this._currentSyncTokens.values()) {\n      // note that you don't include the 'sn' field here - that's only\n      // used for internal tracking of the 'version' for the token itself\n      syncTokenStrings.push(`${syncToken.id}=${syncToken.value}`);\n    }\n\n    return syncTokenStrings.join(\",\");\n  }\n}\n\n// An example sync token (from their documentation):\n//\n// jtqGc1I4=MDoyOA==;sn=28\n//\n// Which breaks down to:\n// id: jtqGc1I4\n// value: MDoyOA==\n// sequence number: 28\nconst syncTokenRegex = /^([^=]+)=([^;]+);sn=(\\d+)$/;\n\ninterface SyncToken {\n  id: string;\n  value: string;\n  sequenceNumber: number;\n}\n\n/**\n * Parses a single sync token into it's constituent parts.\n *\n * @param syncToken - A single sync token.\n *\n * @internal\n */\nexport function parseSyncToken(syncToken: string): SyncToken {\n  const matches = syncToken.match(syncTokenRegex);\n\n  if (matches == null) {\n    throw new Error(\n      `Failed to parse sync token '${syncToken}' with regex ${syncTokenRegex.source}`,\n    );\n  }\n\n  const sequenceNumber = parseInt(matches[3], 10);\n\n  if (isNaN(sequenceNumber)) {\n    // this should be impossible since our regex restricts to just digits\n    // but there's nothing wrong with being thorough.\n    throw new Error(`${syncToken}: The sequence number value '${matches[3]}' wasn't a number`);\n  }\n\n  return {\n    id: matches[1],\n    value: matches[2],\n    sequenceNumber,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ConfigurationSetting, ConfigurationSettingParam } from \"./models\";\nimport { JsonFeatureFlagValue } from \"./internal/jsonModels\";\nimport { logger } from \"./logger\";\n\n/**\n * The prefix for feature flags.\n */\nexport const featureFlagPrefix = \".appconfig.featureflag/\";\n\n/**\n * The content type for a FeatureFlag\n */\nexport const featureFlagContentType = \"application/vnd.microsoft.appconfig.ff+json;charset=utf-8\";\n\n/**\n * Value of a feature flag\n */\nexport interface FeatureFlagValue {\n  /**\n   * Id for the feature flag.\n   */\n  id?: string;\n  /**\n   * A Feature filter consistently evaluates the state of a feature flag.\n   * Our feature management library supports three types of built-in filters: Targeting, TimeWindow, and Percentage.\n   * Custom filters can also be created based on different factors, such as device used, browser types, geographic location, etc.\n   *\n   * [More Info](https://docs.microsoft.com/en-us/azure/azure-app-configuration/howto-feature-filters-aspnet-core)\n   */\n  conditions: {\n    clientFilters: { name: string; parameters?: Record<string, unknown> }[];\n  };\n  /**\n   * Description of the feature.\n   */\n  description?: string;\n  /**\n   * Boolean flag to say if the feature flag is enabled.\n   */\n  enabled: boolean;\n  /**\n   * Display name for the feature to use for display rather than the ID.\n   */\n  displayName?: string;\n}\n\n/**\n * @internal\n */\nexport const FeatureFlagHelper = {\n  /**\n   * Takes the FeatureFlag (JSON) and returns a ConfigurationSetting (with the props encodeed in the value).\n   */\n  toConfigurationSettingParam: (\n    featureFlag: ConfigurationSettingParam<FeatureFlagValue>,\n  ): ConfigurationSettingParam => {\n    logger.info(\"Encoding FeatureFlag value in a ConfigurationSetting:\", featureFlag);\n    if (!featureFlag.value) {\n      logger.error(\"FeatureFlag has an unexpected value\", featureFlag);\n      throw new TypeError(`FeatureFlag has an unexpected value - ${featureFlag.value}`);\n    }\n    let key = featureFlag.key;\n    if (typeof featureFlag.key === \"string\" && !featureFlag.key.startsWith(featureFlagPrefix)) {\n      key = featureFlagPrefix + featureFlag.key;\n    }\n    const jsonFeatureFlagValue: JsonFeatureFlagValue = {\n      id: featureFlag.value.id ?? key.replace(featureFlagPrefix, \"\"),\n      enabled: featureFlag.value.enabled,\n      description: featureFlag.value.description,\n      conditions: {\n        client_filters: featureFlag.value.conditions.clientFilters,\n      },\n      display_name: featureFlag.value.displayName,\n    };\n\n    const configSetting = {\n      ...featureFlag,\n      key,\n      value: JSON.stringify(jsonFeatureFlagValue),\n    };\n    return configSetting;\n  },\n};\n\n/**\n * Takes the ConfigurationSetting as input and returns the ConfigurationSetting<FeatureFlagValue> by parsing the value string.\n */\nexport function parseFeatureFlag(\n  setting: ConfigurationSetting,\n): ConfigurationSetting<FeatureFlagValue> {\n  logger.info(\"Parsing the value to return the FeatureFlagValue\", setting);\n  if (!isFeatureFlag(setting)) {\n    logger.error(\"Invalid FeatureFlag input\", setting);\n    throw TypeError(\n      `Setting with key ${setting.key} is not a valid FeatureFlag, make sure to have the correct content-type and a valid non-null value.`,\n    );\n  }\n\n  const jsonFeatureFlagValue = JSON.parse(setting.value) as JsonFeatureFlagValue;\n\n  let key = setting.key;\n  if (typeof setting.key === \"string\" && !setting.key.startsWith(featureFlagPrefix)) {\n    key = featureFlagPrefix + setting.key;\n  }\n  const featureflag: ConfigurationSetting<FeatureFlagValue> = {\n    ...setting,\n    value: {\n      id: jsonFeatureFlagValue.id,\n      enabled: jsonFeatureFlagValue.enabled,\n      description: jsonFeatureFlagValue.description,\n      displayName: jsonFeatureFlagValue.display_name,\n      conditions: { clientFilters: jsonFeatureFlagValue.conditions.client_filters },\n    },\n    key,\n    contentType: featureFlagContentType,\n  };\n  return featureflag;\n}\n\n/**\n * Lets you know if the ConfigurationSetting is a feature flag.\n *\n * [Checks if the content type is featureFlagContentType `\"application/vnd.microsoft.appconfig.ff+json;charset=utf-8\"`]\n */\nexport function isFeatureFlag(\n  setting: ConfigurationSetting,\n): setting is ConfigurationSetting & Required<Pick<ConfigurationSetting, \"value\">> {\n  return (\n    setting && setting.contentType === featureFlagContentType && typeof setting.value === \"string\"\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ConfigurationSetting, ConfigurationSettingParam } from \"./models\";\nimport { JsonSecretReferenceValue } from \"./internal/jsonModels\";\nimport { logger } from \"./logger\";\n\n/**\n * content-type for the secret reference.\n */\nexport const secretReferenceContentType =\n  \"application/vnd.microsoft.appconfig.keyvaultref+json;charset=utf-8\";\n\n/**\n * Necessary fields for updating or creating a new secret reference.\n */\nexport interface SecretReferenceValue {\n  /**\n   * Id for the secret reference.\n   */\n  secretId: string;\n}\n\n/**\n * @internal\n */\nexport const SecretReferenceHelper = {\n  /**\n   * Takes the SecretReference (JSON) and returns a ConfigurationSetting (with the props encodeed in the value).\n   */\n  toConfigurationSettingParam: (\n    secretReference: ConfigurationSettingParam<SecretReferenceValue>,\n  ): ConfigurationSettingParam => {\n    logger.info(\"Encoding SecretReference value in a ConfigurationSetting:\", secretReference);\n    if (!secretReference.value) {\n      logger.error(`SecretReference has an unexpected value`, secretReference);\n      throw new TypeError(`SecretReference has an unexpected value - ${secretReference.value}`);\n    }\n\n    const jsonSecretReferenceValue: JsonSecretReferenceValue = {\n      uri: secretReference.value.secretId,\n    };\n\n    const configSetting = {\n      ...secretReference,\n      value: JSON.stringify(jsonSecretReferenceValue),\n    };\n    return configSetting;\n  },\n};\n\n/**\n * Takes the ConfigurationSetting as input and returns the ConfigurationSetting<SecretReferenceValue> by parsing the value string.\n */\nexport function parseSecretReference(\n  setting: ConfigurationSetting,\n): ConfigurationSetting<SecretReferenceValue> {\n  logger.info(\n    \"[parseSecretReference] Parsing the value to return the SecretReferenceValue\",\n    setting,\n  );\n  if (!isSecretReference(setting)) {\n    logger.error(\"Invalid SecretReference input\", setting);\n    throw TypeError(\n      `Setting with key ${setting.key} is not a valid SecretReference, make sure to have the correct content-type and a valid non-null value.`,\n    );\n  }\n\n  const jsonSecretReferenceValue = JSON.parse(setting.value) as JsonSecretReferenceValue;\n\n  const secretReference: ConfigurationSetting<SecretReferenceValue> = {\n    ...setting,\n    value: { secretId: jsonSecretReferenceValue.uri },\n  };\n  return secretReference;\n}\n\n/**\n * Lets you know if the ConfigurationSetting is a secret reference.\n *\n * [Checks if the content type is secretReferenceContentType `\"application/vnd.microsoft.appconfig.keyvaultref+json;charset=utf-8\"`]\n */\nexport function isSecretReference(\n  setting: ConfigurationSetting,\n): setting is ConfigurationSetting & Required<Pick<ConfigurationSetting, \"value\">> {\n  return (\n    setting &&\n    setting.contentType === secretReferenceContentType &&\n    typeof setting.value === \"string\"\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  ConfigurationSetting,\n  ConfigurationSettingParam,\n  HttpOnlyIfChangedField,\n  HttpOnlyIfUnchangedField,\n  HttpResponseField,\n  HttpResponseFields,\n  ListRevisionsOptions,\n  ListSettingsOptions,\n  ListSnapshotsOptions,\n  ConfigurationSnapshot,\n  SnapshotResponse,\n  EtagEntity,\n} from \"../models\";\nimport { FeatureFlagHelper, FeatureFlagValue, featureFlagContentType } from \"../featureFlag\";\nimport {\n  GetKeyValuesOptionalParams,\n  GetSnapshotsOptionalParams,\n  KeyValue,\n} from \"../generated/src/models\";\nimport {\n  SecretReferenceHelper,\n  SecretReferenceValue,\n  secretReferenceContentType,\n} from \"../secretReference\";\nimport { isDefined } from \"@azure/core-util\";\nimport { logger } from \"../logger\";\nimport { OperationOptions } from \"@azure/core-client\";\n\n/**\n * Options for listConfigurationSettings that allow for filtering based on keys, labels and other fields.\n * Also provides `fields` which allows you to selectively choose which fields are populated in the\n * result.\n */\nexport interface SendConfigurationSettingsOptions\n  extends OperationOptions,\n    ListSettingsOptions,\n    EtagEntity {\n  /**\n   * A filter used get configuration setting for a snapshot. Not valid when used with 'key' and 'label' filters\n   */\n  snapshotName?: string;\n}\n\n/**\n * Formats the etag so it can be used with a If-Match/If-None-Match header\n * @internal\n */\nexport function quoteETag(etag: string | undefined): string | undefined {\n  // https://tools.ietf.org/html/rfc7232#section-3.1\n  if (etag === undefined || etag === \"*\") {\n    return etag;\n  }\n\n  if (etag.startsWith('\"') && etag.endsWith('\"')) {\n    return etag;\n  }\n\n  if (etag.startsWith(\"'\") && etag.endsWith(\"'\")) {\n    return etag;\n  }\n\n  return `\"${etag}\"`;\n}\n\n/**\n * Checks the onlyIfChanged/onlyIfUnchanged properties to make sure we haven't specified both\n * and throws an Error. Otherwise, returns the properties properly quoted.\n * @param options - An options object with onlyIfChanged/onlyIfUnchanged fields\n * @internal\n */\nexport function checkAndFormatIfAndIfNoneMatch(\n  objectWithEtag: EtagEntity,\n  options: HttpOnlyIfChangedField & HttpOnlyIfUnchangedField,\n): { ifMatch: string | undefined; ifNoneMatch: string | undefined } {\n  if (options.onlyIfChanged && options.onlyIfUnchanged) {\n    logger.error(\n      \"onlyIfChanged and onlyIfUnchanged are both specified\",\n      options.onlyIfChanged,\n      options.onlyIfUnchanged,\n    );\n    throw new Error(\"onlyIfChanged and onlyIfUnchanged are mutually-exclusive\");\n  }\n\n  let ifMatch;\n  let ifNoneMatch;\n\n  if (options.onlyIfUnchanged) {\n    ifMatch = quoteETag(objectWithEtag.etag);\n  }\n\n  if (options.onlyIfChanged) {\n    ifNoneMatch = quoteETag(objectWithEtag.etag);\n  }\n\n  return {\n    ifMatch: ifMatch,\n    ifNoneMatch: ifNoneMatch,\n  };\n}\n\n/**\n * Transforms some of the key fields in SendConfigurationSettingsOptions and ListRevisionsOptions\n * so they can be added to a request using AppConfigurationGetKeyValuesOptionalParams.\n * - `options.acceptDateTime` is converted into an ISO string\n * - `select` is populated with the proper field names from `options.fields`\n * - keyFilter and labelFilter are moved to key and label, respectively.\n *\n * @internal\n */\nexport function formatFiltersAndSelect(\n  listConfigOptions: ListRevisionsOptions,\n): Pick<GetKeyValuesOptionalParams, \"key\" | \"label\" | \"select\" | \"acceptDatetime\"> {\n  let acceptDatetime: string | undefined = undefined;\n\n  if (listConfigOptions.acceptDateTime) {\n    acceptDatetime = listConfigOptions.acceptDateTime.toISOString();\n  }\n  return {\n    key: listConfigOptions.keyFilter,\n    label: listConfigOptions.labelFilter,\n    acceptDatetime,\n    select: formatFieldsForSelect(listConfigOptions.fields),\n  };\n}\n\n/**\n * Transforms some of the key fields in SendConfigurationSettingsOptions\n * so they can be added to a request using AppConfigurationGetKeyValuesOptionalParams.\n * - `options.acceptDateTime` is converted into an ISO string\n * - `select` is populated with the proper field names from `options.fields`\n * - keyFilter, labelFilter, snapshotName are moved to key, label, and snapshot respectively.\n *\n * @internal\n */\nexport function formatConfigurationSettingsFiltersAndSelect(\n  listConfigOptions: SendConfigurationSettingsOptions,\n): Pick<GetKeyValuesOptionalParams, \"key\" | \"label\" | \"select\" | \"acceptDatetime\" | \"snapshot\"> {\n  const { snapshotName: snapshot, ...options } = listConfigOptions;\n  return {\n    ...formatFiltersAndSelect(options),\n    snapshot,\n  };\n}\n/**\n * Transforms some of the key fields in ListSnapshotsOptions\n * so they can be added to a request using AppConfigurationGetSnapshotsOptionalParams.\n * - `select` is populated with the proper field names from `options.fields`\n * - keyFilter and labelFilter are moved to key and label, respectively.\n *\n * @internal\n */\nexport function formatSnapshotFiltersAndSelect(\n  listSnapshotOptions: ListSnapshotsOptions,\n): Pick<GetSnapshotsOptionalParams, \"name\" | \"select\" | \"status\"> {\n  return {\n    name: listSnapshotOptions.nameFilter,\n    status: listSnapshotOptions.statusFilter,\n    select: listSnapshotOptions.fields,\n  };\n}\n/**\n * Handles translating a Date acceptDateTime into a string as needed by the API\n * @param newOptions - A newer style options with acceptDateTime as a date (and with proper casing!)\n * @internal\n */\nexport function formatAcceptDateTime(newOptions: { acceptDateTime?: Date }): {\n  acceptDatetime?: string;\n} {\n  return {\n    acceptDatetime: newOptions.acceptDateTime && newOptions.acceptDateTime.toISOString(),\n  };\n}\n\n/**\n * Take the URL that gets returned from next link and extract the 'after' token needed\n * to get the next page of results.\n * @internal\n */\nexport function extractAfterTokenFromNextLink(nextLink: string): string {\n  const searchParams = new URLSearchParams(nextLink);\n  const afterToken = searchParams.get(\"after\");\n\n  if (afterToken == null || Array.isArray(afterToken)) {\n    logger.error(\"Invalid nextLink - invalid after token\", afterToken, Array.isArray(afterToken));\n    throw new Error(\"Invalid nextLink - invalid after token\");\n  }\n\n  return decodeURIComponent(afterToken);\n}\n\n/**\n * Take the header link that gets returned from 304 response and extract the 'after' token needed\n * to get the next page of results.\n *\n * @internal\n */\nexport function extractAfterTokenFromLinkHeader(link: string): string {\n  // Example transformation of the link header\n  // link:\n  // '</kv?api-version=2023-10-01&key=listResults714&after=bGlzdE4>; rel=\"next\"'\n  //\n  // linkValue:\n  // </kv?api-version=2023-10-01&key=listResults714&after=bGlzdE4>\n  //\n  // nextLink:\n  // /kv?api-version=2023-10-01&key=listResults714&after=bGlzdE4\n  const linkValue = link.split(\";\")[0];\n  const nextLink = linkValue.substring(1, linkValue.length - 1);\n  return extractAfterTokenFromNextLink(nextLink);\n}\n\n/**\n * Makes a ConfigurationSetting-based response throw for all of the data members. Used primarily\n * to prevent possible errors by the user in accessing a model that is uninitialized. This can happen\n * in cases like HTTP status code 204 or 304, which return an empty response body.\n *\n * @param configurationSetting - The configuration setting to alter\n */\nexport function makeConfigurationSettingEmpty(\n  configurationSetting: Partial<Record<Exclude<keyof ConfigurationSetting, \"key\">, any>>,\n): void {\n  const names: Exclude<keyof ConfigurationSetting, \"key\">[] = [\n    \"contentType\",\n    \"etag\",\n    \"label\",\n    \"lastModified\",\n    \"isReadOnly\",\n    \"tags\",\n    \"value\",\n  ];\n\n  for (const name of names) {\n    configurationSetting[name] = undefined;\n  }\n}\n\n/**\n * @internal\n */\nexport function transformKeyValue<T>(kvp: T & KeyValue): T & ConfigurationSetting {\n  const setting: T & ConfigurationSetting & KeyValue = {\n    value: undefined,\n    ...kvp,\n    isReadOnly: !!kvp.locked,\n  };\n  delete setting.locked;\n  if (!setting.label) {\n    delete setting.label;\n  }\n  if (!setting.contentType) {\n    delete setting.contentType;\n  }\n  return setting;\n}\n\n/**\n * @internal\n */\nfunction isConfigSettingWithSecretReferenceValue(\n  setting: any,\n): setting is ConfigurationSetting<SecretReferenceValue> {\n  return (\n    setting.contentType === secretReferenceContentType &&\n    isDefined(setting.value) &&\n    typeof setting.value !== \"string\"\n  );\n}\n\n/**\n * @internal\n */\nfunction isConfigSettingWithFeatureFlagValue(\n  setting: any,\n): setting is ConfigurationSetting<FeatureFlagValue> {\n  return (\n    setting.contentType === featureFlagContentType &&\n    isDefined(setting.value) &&\n    typeof setting.value !== \"string\"\n  );\n}\n\n/**\n * @internal\n */\nfunction isSimpleConfigSetting(setting: any): setting is ConfigurationSetting {\n  return typeof setting.value === \"string\" || !isDefined(setting.value);\n}\n\n/**\n * @internal\n */\nexport function serializeAsConfigurationSettingParam(\n  setting:\n    | ConfigurationSettingParam\n    | ConfigurationSettingParam<FeatureFlagValue>\n    | ConfigurationSettingParam<SecretReferenceValue>,\n): ConfigurationSettingParam {\n  if (isSimpleConfigSetting(setting)) {\n    return setting as ConfigurationSettingParam;\n  }\n  try {\n    if (isConfigSettingWithFeatureFlagValue(setting)) {\n      return FeatureFlagHelper.toConfigurationSettingParam(setting);\n    }\n    if (isConfigSettingWithSecretReferenceValue(setting)) {\n      return SecretReferenceHelper.toConfigurationSettingParam(setting);\n    }\n  } catch (error: any) {\n    return setting as ConfigurationSettingParam;\n  }\n  logger.error(\"Unable to serialize to a configuration setting\", setting);\n  throw new TypeError(\n    `Unable to serialize the setting with key \"${setting.key}\" as a configuration setting`,\n  );\n}\n\n/**\n * @internal\n */\nexport function transformKeyValueResponseWithStatusCode<T extends KeyValue>(\n  kvp: T,\n  status: number | undefined,\n): ConfigurationSetting & { eTag?: string } & HttpResponseFields {\n  const response = {\n    ...transformKeyValue(kvp),\n    statusCode: status ?? -1,\n  };\n\n  if (hasUnderscoreResponse(kvp)) {\n    Object.defineProperty(response, \"_response\", {\n      enumerable: false,\n      value: kvp._response,\n    });\n  }\n  return response;\n}\n\n/**\n * @internal\n */\nexport function transformKeyValueResponse<T extends KeyValue & { eTag?: string }>(\n  kvp: T,\n): ConfigurationSetting {\n  const setting = transformKeyValue(kvp);\n  if (hasUnderscoreResponse(kvp)) {\n    Object.defineProperty(setting, \"_response\", {\n      enumerable: false,\n      value: kvp._response,\n    });\n  }\n\n  delete setting.eTag;\n  return setting;\n}\n\n/**\n * @internal\n */\nexport function transformSnapshotResponse<T extends ConfigurationSnapshot>(\n  snapshot: T,\n): SnapshotResponse {\n  if (hasUnderscoreResponse(snapshot)) {\n    Object.defineProperty(snapshot, \"_response\", {\n      enumerable: false,\n      value: snapshot._response,\n    });\n  }\n  return snapshot as any;\n}\n\n/**\n * Translates user-facing field names into their `select` equivalents (these can be\n * seen in the `KnownEnum5`)\n *\n * @param fieldNames - fieldNames from users.\n * @returns The field names translated into the `select` field equivalents.\n *\n * @internal\n */\nexport function formatFieldsForSelect(\n  fieldNames: (keyof ConfigurationSetting)[] | undefined,\n): string[] | undefined {\n  if (fieldNames == null) {\n    return undefined;\n  }\n\n  const mappedFieldNames = fieldNames.map((fn) => {\n    switch (fn) {\n      case \"lastModified\":\n        return \"last_modified\";\n      case \"contentType\":\n        return \"content_type\";\n      case \"isReadOnly\":\n        return \"locked\";\n      default:\n        return fn;\n    }\n  });\n\n  return mappedFieldNames;\n}\n\n/**\n * @internal\n */\nexport function errorMessageForUnexpectedSetting(\n  key: string,\n  expectedType: \"FeatureFlag\" | \"SecretReference\",\n): string {\n  return `Setting with key ${key} is not a valid ${expectedType}, make sure to have the correct content-type and a valid non-null value.`;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function assertResponse<T extends object>(\n  result: T,\n): asserts result is T & HttpResponseField<any> {\n  if (!hasUnderscoreResponse(result)) {\n    Object.defineProperty(result, \"_response\", {\n      enumerable: false,\n      value:\n        \"Something went wrong, _response(raw response) is supposed to be part of the response. Please file a bug at https://github.com/Azure/azure-sdk-for-js\",\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasUnderscoreResponse<T extends object>(\n  result: T,\n): result is T & HttpResponseField<any> {\n  return Object.prototype.hasOwnProperty.call(result, \"_response\");\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport function createLroSpec<T>(inputs: {\n  sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>;\n  args: Record<string, unknown>;\n  spec: {\n    readonly requestBody?: unknown;\n    readonly path?: string;\n    readonly httpMethod: string;\n  } & Record<string, any>;\n}): LongRunningOperation<T> {\n  const { args, spec, sendOperationFn } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path!,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (\n      path: string,\n      options?: { abortSignal?: AbortSignalLike },\n    ) => {\n      const { requestBody, ...restSpec } = spec;\n      return sendOperationFn(args, {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options?.abortSignal,\n      });\n    },\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const KeyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyListResult\",\n    modelProperties: {\n      items: {\n        serializedName: \"items\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Key\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"@nextLink\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Key: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Key\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      detail: {\n        serializedName: \"detail\",\n        type: {\n          name: \"String\",\n        },\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const KeyValueListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyValueListResult\",\n    modelProperties: {\n      items: {\n        serializedName: \"items\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValue\",\n            },\n          },\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nextLink: {\n        serializedName: \"@nextLink\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const KeyValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyValue\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      label: {\n        serializedName: \"label\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentType: {\n        serializedName: \"content_type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last_modified\",\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      locked: {\n        serializedName: \"locked\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SnapshotListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SnapshotListResult\",\n    modelProperties: {\n      items: {\n        serializedName: \"items\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConfigurationSnapshot\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"@nextLink\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ConfigurationSnapshot: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationSnapshot\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      filters: {\n        constraints: {\n          MinItems: 1,\n          MaxItems: 3,\n        },\n        serializedName: \"filters\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConfigurationSettingsFilter\",\n            },\n          },\n        },\n      },\n      compositionType: {\n        serializedName: \"composition_type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      createdOn: {\n        serializedName: \"created\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"expires\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      retentionPeriodInSeconds: {\n        constraints: {\n          InclusiveMaximum: 7776000,\n          InclusiveMinimum: 3600,\n        },\n        serializedName: \"retention_period\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      sizeInBytes: {\n        serializedName: \"size\",\n        readOnly: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      itemCount: {\n        serializedName: \"items_count\",\n        readOnly: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ConfigurationSettingsFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationSettingsFilter\",\n    modelProperties: {\n      keyFilter: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      labelFilter: {\n        serializedName: \"label\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SnapshotUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SnapshotUpdateParameters\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const LabelListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LabelListResult\",\n    modelProperties: {\n      items: {\n        serializedName: \"items\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Label\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"@nextLink\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Label: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Label\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OperationDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDetails\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"NotStarted\",\n            \"Running\",\n            \"Succeeded\",\n            \"Failed\",\n            \"Canceled\",\n          ],\n        },\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\",\n            },\n          },\n        },\n      },\n      innererror: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerError\",\n        },\n      },\n    },\n  },\n};\n\nexport const InnerError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InnerError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      innererror: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerError\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationGetKeysHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationGetKeysHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationCheckKeysHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationCheckKeysHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationGetKeyValuesHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationGetKeyValuesHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationCheckKeyValuesHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationCheckKeyValuesHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n        eTag: {\n          serializedName: \"etag\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationGetKeyValueHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationGetKeyValueHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationPutKeyValueHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationPutKeyValueHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationDeleteKeyValueHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationDeleteKeyValueHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n        eTag: {\n          serializedName: \"etag\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationCheckKeyValueHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationCheckKeyValueHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n        eTag: {\n          serializedName: \"etag\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationGetSnapshotsHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationGetSnapshotsHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationCheckSnapshotsHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationCheckSnapshotsHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationGetSnapshotHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationGetSnapshotHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      link: {\n        serializedName: \"link\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationCreateSnapshotHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationCreateSnapshotHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n        eTag: {\n          serializedName: \"etag\",\n          type: {\n            name: \"String\",\n          },\n        },\n        link: {\n          serializedName: \"link\",\n          type: {\n            name: \"String\",\n          },\n        },\n        operationLocation: {\n          serializedName: \"operation-location\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationUpdateSnapshotHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationUpdateSnapshotHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n        eTag: {\n          serializedName: \"etag\",\n          type: {\n            name: \"String\",\n          },\n        },\n        link: {\n          serializedName: \"link\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationCheckSnapshotHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationCheckSnapshotHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n        eTag: {\n          serializedName: \"etag\",\n          type: {\n            name: \"String\",\n          },\n        },\n        link: {\n          serializedName: \"link\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationGetLabelsHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationGetLabelsHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationCheckLabelsHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationCheckLabelsHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationPutLockHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationPutLockHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationDeleteLockHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationDeleteLockHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationGetRevisionsHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationGetRevisionsHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationCheckRevisionsHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationCheckRevisionsHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n        eTag: {\n          serializedName: \"etag\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationGetKeysNextHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppConfigurationGetKeysNextHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppConfigurationGetKeyValuesNextHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationGetKeyValuesNextHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n        eTag: {\n          serializedName: \"etag\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationGetSnapshotsNextHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationGetSnapshotsNextHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationGetLabelsNextHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationGetLabelsNextHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppConfigurationGetRevisionsNextHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"AppConfigurationGetRevisionsNextHeaders\",\n      modelProperties: {\n        syncToken: {\n          serializedName: \"sync-token\",\n          type: {\n            name: \"String\",\n          },\n        },\n        eTag: {\n          serializedName: \"etag\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  KeyValue as KeyValueMapper,\n  ConfigurationSnapshot as ConfigurationSnapshotMapper,\n  SnapshotUpdateParameters as SnapshotUpdateParametersMapper,\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue:\n      \"application/vnd.microsoft.appconfig.keyset+json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const name: OperationQueryParameter = {\n  parameterPath: [\"options\", \"name\"],\n  mapper: {\n    serializedName: \"name\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const syncToken: OperationParameter = {\n  parameterPath: \"syncToken\",\n  mapper: {\n    serializedName: \"Sync-Token\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const after: OperationQueryParameter = {\n  parameterPath: [\"options\", \"after\"],\n  mapper: {\n    serializedName: \"After\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const acceptDatetime: OperationParameter = {\n  parameterPath: [\"options\", \"acceptDatetime\"],\n  mapper: {\n    serializedName: \"Accept-Datetime\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue:\n      \"application/vnd.microsoft.appconfig.kvset+json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const key: OperationQueryParameter = {\n  parameterPath: [\"options\", \"key\"],\n  mapper: {\n    serializedName: \"key\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const label: OperationQueryParameter = {\n  parameterPath: [\"options\", \"label\"],\n  mapper: {\n    serializedName: \"label\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const select: OperationQueryParameter = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$Select\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const snapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"snapshot\"],\n  mapper: {\n    serializedName: \"snapshot\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifNoneMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accept2: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue:\n      \"application/vnd.microsoft.appconfig.kv+json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const key1: OperationURLParameter = {\n  parameterPath: \"key\",\n  mapper: {\n    serializedName: \"key\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/vnd.microsoft.appconfig.kv+json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const entity: OperationParameter = {\n  parameterPath: [\"options\", \"entity\"],\n  mapper: KeyValueMapper,\n};\n\nexport const accept3: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue:\n      \"application/vnd.microsoft.appconfig.snapshotset+json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const select1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$Select\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const status: OperationQueryParameter = {\n  parameterPath: [\"options\", \"status\"],\n  mapper: {\n    serializedName: \"status\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const accept4: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue:\n      \"application/vnd.microsoft.appconfig.snapshot+json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const name1: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/vnd.microsoft.appconfig.snapshot+json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const entity1: OperationParameter = {\n  parameterPath: \"entity\",\n  mapper: ConfigurationSnapshotMapper,\n};\n\nexport const name2: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    constraints: {\n      MaxLength: 256,\n    },\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentType2: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const entity2: OperationParameter = {\n  parameterPath: \"entity\",\n  mapper: SnapshotUpdateParametersMapper,\n};\n\nexport const accept5: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue:\n      \"application/vnd.microsoft.appconfig.labelset+json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const select2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$Select\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const accept6: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const snapshot1: OperationQueryParameter = {\n  parameterPath: \"snapshot\",\n  mapper: {\n    serializedName: \"snapshot\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"./lroImpl\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  ApiVersion20231001,\n  AppConfigurationOptionalParams,\n  GetKeysOptionalParams,\n  GetKeysResponse,\n  CheckKeysOptionalParams,\n  CheckKeysResponse,\n  GetKeyValuesOptionalParams,\n  GetKeyValuesResponse,\n  CheckKeyValuesOptionalParams,\n  CheckKeyValuesResponse,\n  GetKeyValueOptionalParams,\n  GetKeyValueResponse,\n  PutKeyValueOptionalParams,\n  PutKeyValueResponse,\n  DeleteKeyValueOptionalParams,\n  DeleteKeyValueResponse,\n  CheckKeyValueOptionalParams,\n  CheckKeyValueResponse,\n  GetSnapshotsOptionalParams,\n  GetSnapshotsResponse,\n  CheckSnapshotsOptionalParams,\n  CheckSnapshotsResponse,\n  GetSnapshotOptionalParams,\n  GetSnapshotResponse,\n  ConfigurationSnapshot,\n  CreateSnapshotOptionalParams,\n  CreateSnapshotResponse,\n  SnapshotUpdateParameters,\n  UpdateSnapshotOptionalParams,\n  UpdateSnapshotResponse,\n  CheckSnapshotOptionalParams,\n  CheckSnapshotResponse,\n  GetLabelsOptionalParams,\n  GetLabelsResponse,\n  CheckLabelsOptionalParams,\n  CheckLabelsResponse,\n  PutLockOptionalParams,\n  PutLockResponse,\n  DeleteLockOptionalParams,\n  DeleteLockResponse,\n  GetRevisionsOptionalParams,\n  GetRevisionsResponse,\n  CheckRevisionsOptionalParams,\n  CheckRevisionsResponse,\n  GetOperationDetailsOptionalParams,\n  GetOperationDetailsResponse,\n  GetKeysNextOptionalParams,\n  GetKeysNextResponse,\n  GetKeyValuesNextOptionalParams,\n  GetKeyValuesNextResponse,\n  GetSnapshotsNextOptionalParams,\n  GetSnapshotsNextResponse,\n  GetLabelsNextOptionalParams,\n  GetLabelsNextResponse,\n  GetRevisionsNextOptionalParams,\n  GetRevisionsNextResponse,\n} from \"./models\";\n\n/** @internal */\nexport class AppConfiguration extends coreHttpCompat.ExtendedServiceClient {\n  endpoint: string;\n  syncToken?: string;\n  apiVersion: ApiVersion20231001;\n\n  /**\n   * Initializes a new instance of the AppConfiguration class.\n   * @param endpoint The endpoint of the App Configuration instance to send requests to.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    endpoint: string,\n    apiVersion: ApiVersion20231001,\n    options?: AppConfigurationOptionalParams,\n  ) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AppConfigurationOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-app-configuration/1.6.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{endpoint}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.endpoint = endpoint;\n    this.apiVersion = apiVersion;\n    this.addCustomApiVersionPolicy(apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest,\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      },\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  /**\n   * Gets a list of keys.\n   * @param options The options parameters.\n   */\n  getKeys(options?: GetKeysOptionalParams): Promise<GetKeysResponse> {\n    return this.sendOperationRequest({ options }, getKeysOperationSpec);\n  }\n\n  /**\n   * Requests the headers and status of the given resource.\n   * @param options The options parameters.\n   */\n  checkKeys(options?: CheckKeysOptionalParams): Promise<CheckKeysResponse> {\n    return this.sendOperationRequest({ options }, checkKeysOperationSpec);\n  }\n\n  /**\n   * Gets a list of key-values.\n   * @param options The options parameters.\n   */\n  getKeyValues(\n    options?: GetKeyValuesOptionalParams,\n  ): Promise<GetKeyValuesResponse> {\n    return this.sendOperationRequest({ options }, getKeyValuesOperationSpec);\n  }\n\n  /**\n   * Requests the headers and status of the given resource.\n   * @param options The options parameters.\n   */\n  checkKeyValues(\n    options?: CheckKeyValuesOptionalParams,\n  ): Promise<CheckKeyValuesResponse> {\n    return this.sendOperationRequest({ options }, checkKeyValuesOperationSpec);\n  }\n\n  /**\n   * Gets a single key-value.\n   * @param key The key of the key-value to retrieve.\n   * @param options The options parameters.\n   */\n  getKeyValue(\n    key: string,\n    options?: GetKeyValueOptionalParams,\n  ): Promise<GetKeyValueResponse> {\n    return this.sendOperationRequest(\n      { key, options },\n      getKeyValueOperationSpec,\n    );\n  }\n\n  /**\n   * Creates a key-value.\n   * @param key The key of the key-value to create.\n   * @param options The options parameters.\n   */\n  putKeyValue(\n    key: string,\n    options?: PutKeyValueOptionalParams,\n  ): Promise<PutKeyValueResponse> {\n    return this.sendOperationRequest(\n      { key, options },\n      putKeyValueOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes a key-value.\n   * @param key The key of the key-value to delete.\n   * @param options The options parameters.\n   */\n  deleteKeyValue(\n    key: string,\n    options?: DeleteKeyValueOptionalParams,\n  ): Promise<DeleteKeyValueResponse> {\n    return this.sendOperationRequest(\n      { key, options },\n      deleteKeyValueOperationSpec,\n    );\n  }\n\n  /**\n   * Requests the headers and status of the given resource.\n   * @param key The key of the key-value to retrieve.\n   * @param options The options parameters.\n   */\n  checkKeyValue(\n    key: string,\n    options?: CheckKeyValueOptionalParams,\n  ): Promise<CheckKeyValueResponse> {\n    return this.sendOperationRequest(\n      { key, options },\n      checkKeyValueOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a list of key-value snapshots.\n   * @param options The options parameters.\n   */\n  getSnapshots(\n    options?: GetSnapshotsOptionalParams,\n  ): Promise<GetSnapshotsResponse> {\n    return this.sendOperationRequest({ options }, getSnapshotsOperationSpec);\n  }\n\n  /**\n   * Requests the headers and status of the given resource.\n   * @param options The options parameters.\n   */\n  checkSnapshots(\n    options?: CheckSnapshotsOptionalParams,\n  ): Promise<CheckSnapshotsResponse> {\n    return this.sendOperationRequest({ options }, checkSnapshotsOperationSpec);\n  }\n\n  /**\n   * Gets a single key-value snapshot.\n   * @param name The name of the key-value snapshot to retrieve.\n   * @param options The options parameters.\n   */\n  getSnapshot(\n    name: string,\n    options?: GetSnapshotOptionalParams,\n  ): Promise<GetSnapshotResponse> {\n    return this.sendOperationRequest(\n      { name, options },\n      getSnapshotOperationSpec,\n    );\n  }\n\n  /**\n   * Creates a key-value snapshot.\n   * @param name The name of the key-value snapshot to create.\n   * @param entity The key-value snapshot to create.\n   * @param options The options parameters.\n   */\n  async beginCreateSnapshot(\n    name: string,\n    entity: ConfigurationSnapshot,\n    options?: CreateSnapshotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<CreateSnapshotResponse>,\n      CreateSnapshotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<CreateSnapshotResponse> => {\n      return this.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { name, entity, options },\n      spec: createSnapshotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      CreateSnapshotResponse,\n      OperationState<CreateSnapshotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a key-value snapshot.\n   * @param name The name of the key-value snapshot to create.\n   * @param entity The key-value snapshot to create.\n   * @param options The options parameters.\n   */\n  async beginCreateSnapshotAndWait(\n    name: string,\n    entity: ConfigurationSnapshot,\n    options?: CreateSnapshotOptionalParams,\n  ): Promise<CreateSnapshotResponse> {\n    const poller = await this.beginCreateSnapshot(name, entity, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates the state of a key-value snapshot.\n   * @param name The name of the key-value snapshot to update.\n   * @param entity The parameters used to update the snapshot.\n   * @param options The options parameters.\n   */\n  updateSnapshot(\n    name: string,\n    entity: SnapshotUpdateParameters,\n    options?: UpdateSnapshotOptionalParams,\n  ): Promise<UpdateSnapshotResponse> {\n    return this.sendOperationRequest(\n      { name, entity, options },\n      updateSnapshotOperationSpec,\n    );\n  }\n\n  /**\n   * Requests the headers and status of the given resource.\n   * @param name The name of the key-value snapshot to check.\n   * @param options The options parameters.\n   */\n  checkSnapshot(\n    name: string,\n    options?: CheckSnapshotOptionalParams,\n  ): Promise<CheckSnapshotResponse> {\n    return this.sendOperationRequest(\n      { name, options },\n      checkSnapshotOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a list of labels.\n   * @param options The options parameters.\n   */\n  getLabels(options?: GetLabelsOptionalParams): Promise<GetLabelsResponse> {\n    return this.sendOperationRequest({ options }, getLabelsOperationSpec);\n  }\n\n  /**\n   * Requests the headers and status of the given resource.\n   * @param options The options parameters.\n   */\n  checkLabels(\n    options?: CheckLabelsOptionalParams,\n  ): Promise<CheckLabelsResponse> {\n    return this.sendOperationRequest({ options }, checkLabelsOperationSpec);\n  }\n\n  /**\n   * Locks a key-value.\n   * @param key The key of the key-value to lock.\n   * @param options The options parameters.\n   */\n  putLock(\n    key: string,\n    options?: PutLockOptionalParams,\n  ): Promise<PutLockResponse> {\n    return this.sendOperationRequest({ key, options }, putLockOperationSpec);\n  }\n\n  /**\n   * Unlocks a key-value.\n   * @param key The key of the key-value to unlock.\n   * @param options The options parameters.\n   */\n  deleteLock(\n    key: string,\n    options?: DeleteLockOptionalParams,\n  ): Promise<DeleteLockResponse> {\n    return this.sendOperationRequest({ key, options }, deleteLockOperationSpec);\n  }\n\n  /**\n   * Gets a list of key-value revisions.\n   * @param options The options parameters.\n   */\n  getRevisions(\n    options?: GetRevisionsOptionalParams,\n  ): Promise<GetRevisionsResponse> {\n    return this.sendOperationRequest({ options }, getRevisionsOperationSpec);\n  }\n\n  /**\n   * Requests the headers and status of the given resource.\n   * @param options The options parameters.\n   */\n  checkRevisions(\n    options?: CheckRevisionsOptionalParams,\n  ): Promise<CheckRevisionsResponse> {\n    return this.sendOperationRequest({ options }, checkRevisionsOperationSpec);\n  }\n\n  /**\n   * Gets the state of a long running operation.\n   * @param snapshot Snapshot identifier for the long running operation.\n   * @param options The options parameters.\n   */\n  getOperationDetails(\n    snapshot: string,\n    options?: GetOperationDetailsOptionalParams,\n  ): Promise<GetOperationDetailsResponse> {\n    return this.sendOperationRequest(\n      { snapshot, options },\n      getOperationDetailsOperationSpec,\n    );\n  }\n\n  /**\n   * GetKeysNext\n   * @param nextLink The nextLink from the previous successful call to the GetKeys method.\n   * @param options The options parameters.\n   */\n  getKeysNext(\n    nextLink: string,\n    options?: GetKeysNextOptionalParams,\n  ): Promise<GetKeysNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      getKeysNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetKeyValuesNext\n   * @param nextLink The nextLink from the previous successful call to the GetKeyValues method.\n   * @param options The options parameters.\n   */\n  getKeyValuesNext(\n    nextLink: string,\n    options?: GetKeyValuesNextOptionalParams,\n  ): Promise<GetKeyValuesNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      getKeyValuesNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetSnapshotsNext\n   * @param nextLink The nextLink from the previous successful call to the GetSnapshots method.\n   * @param options The options parameters.\n   */\n  getSnapshotsNext(\n    nextLink: string,\n    options?: GetSnapshotsNextOptionalParams,\n  ): Promise<GetSnapshotsNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      getSnapshotsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetLabelsNext\n   * @param nextLink The nextLink from the previous successful call to the GetLabels method.\n   * @param options The options parameters.\n   */\n  getLabelsNext(\n    nextLink: string,\n    options?: GetLabelsNextOptionalParams,\n  ): Promise<GetLabelsNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      getLabelsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetRevisionsNext\n   * @param nextLink The nextLink from the previous successful call to the GetRevisions method.\n   * @param options The options parameters.\n   */\n  getRevisionsNext(\n    nextLink: string,\n    options?: GetRevisionsNextOptionalParams,\n  ): Promise<GetRevisionsNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      getRevisionsNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getKeysOperationSpec: coreClient.OperationSpec = {\n  path: \"/keys\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyListResult,\n      headersMapper: Mappers.AppConfigurationGetKeysHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [Parameters.name, Parameters.apiVersion, Parameters.after],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n  ],\n  serializer,\n};\nconst checkKeysOperationSpec: coreClient.OperationSpec = {\n  path: \"/keys\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppConfigurationCheckKeysHeaders,\n    },\n    default: {},\n  },\n  queryParameters: [Parameters.name, Parameters.apiVersion, Parameters.after],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.syncToken, Parameters.acceptDatetime],\n  serializer,\n};\nconst getKeyValuesOperationSpec: coreClient.OperationSpec = {\n  path: \"/kv\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValueListResult,\n      headersMapper: Mappers.AppConfigurationGetKeyValuesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.key,\n    Parameters.label,\n    Parameters.select,\n    Parameters.snapshot,\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.accept1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n  ],\n  serializer,\n};\nconst checkKeyValuesOperationSpec: coreClient.OperationSpec = {\n  path: \"/kv\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppConfigurationCheckKeyValuesHeaders,\n    },\n    default: {},\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.key,\n    Parameters.label,\n    Parameters.select,\n    Parameters.snapshot,\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n  ],\n  serializer,\n};\nconst getKeyValueOperationSpec: coreClient.OperationSpec = {\n  path: \"/kv/{key}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.AppConfigurationGetKeyValueHeaders,\n    },\n    304: {\n      headersMapper: Mappers.AppConfigurationGetKeyValueHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.label, Parameters.select],\n  urlParameters: [Parameters.endpoint, Parameters.key1],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.accept2,\n  ],\n  serializer,\n};\nconst putKeyValueOperationSpec: coreClient.OperationSpec = {\n  path: \"/kv/{key}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.AppConfigurationPutKeyValueHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  requestBody: Parameters.entity,\n  queryParameters: [Parameters.apiVersion, Parameters.label],\n  urlParameters: [Parameters.endpoint, Parameters.key1],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.accept2,\n    Parameters.contentType,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteKeyValueOperationSpec: coreClient.OperationSpec = {\n  path: \"/kv/{key}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.AppConfigurationDeleteKeyValueHeaders,\n    },\n    204: {\n      headersMapper: Mappers.AppConfigurationDeleteKeyValueHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.label],\n  urlParameters: [Parameters.endpoint, Parameters.key1],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.accept2,\n  ],\n  serializer,\n};\nconst checkKeyValueOperationSpec: coreClient.OperationSpec = {\n  path: \"/kv/{key}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppConfigurationCheckKeyValueHeaders,\n    },\n    304: {\n      headersMapper: Mappers.AppConfigurationCheckKeyValueHeaders,\n    },\n    default: {},\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.label, Parameters.select],\n  urlParameters: [Parameters.endpoint, Parameters.key1],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n  ],\n  serializer,\n};\nconst getSnapshotsOperationSpec: coreClient.OperationSpec = {\n  path: \"/snapshots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotListResult,\n      headersMapper: Mappers.AppConfigurationGetSnapshotsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [\n    Parameters.name,\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.select1,\n    Parameters.status,\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.syncToken, Parameters.accept3],\n  serializer,\n};\nconst checkSnapshotsOperationSpec: coreClient.OperationSpec = {\n  path: \"/snapshots\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppConfigurationCheckSnapshotsHeaders,\n    },\n    default: {},\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.after],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.syncToken],\n  serializer,\n};\nconst getSnapshotOperationSpec: coreClient.OperationSpec = {\n  path: \"/snapshots/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationSnapshot,\n      headersMapper: Mappers.AppConfigurationGetSnapshotHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.select1],\n  urlParameters: [Parameters.endpoint, Parameters.name1],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.accept4,\n  ],\n  serializer,\n};\nconst createSnapshotOperationSpec: coreClient.OperationSpec = {\n  path: \"/snapshots/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationSnapshot,\n      headersMapper: Mappers.AppConfigurationCreateSnapshotHeaders,\n    },\n    201: {\n      bodyMapper: Mappers.ConfigurationSnapshot,\n      headersMapper: Mappers.AppConfigurationCreateSnapshotHeaders,\n    },\n    202: {\n      bodyMapper: Mappers.ConfigurationSnapshot,\n      headersMapper: Mappers.AppConfigurationCreateSnapshotHeaders,\n    },\n    204: {\n      bodyMapper: Mappers.ConfigurationSnapshot,\n      headersMapper: Mappers.AppConfigurationCreateSnapshotHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  requestBody: Parameters.entity1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.name2],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.accept4,\n    Parameters.contentType1,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateSnapshotOperationSpec: coreClient.OperationSpec = {\n  path: \"/snapshots/{name}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationSnapshot,\n      headersMapper: Mappers.AppConfigurationUpdateSnapshotHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  requestBody: Parameters.entity2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.name1],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.accept4,\n    Parameters.contentType2,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst checkSnapshotOperationSpec: coreClient.OperationSpec = {\n  path: \"/snapshots/{name}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppConfigurationCheckSnapshotHeaders,\n    },\n    default: {},\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.name1],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n  ],\n  serializer,\n};\nconst getLabelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/labels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LabelListResult,\n      headersMapper: Mappers.AppConfigurationGetLabelsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [\n    Parameters.name,\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.select2,\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.accept5,\n  ],\n  serializer,\n};\nconst checkLabelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/labels\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppConfigurationCheckLabelsHeaders,\n    },\n    default: {},\n  },\n  queryParameters: [\n    Parameters.name,\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.select2,\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.syncToken, Parameters.acceptDatetime],\n  serializer,\n};\nconst putLockOperationSpec: coreClient.OperationSpec = {\n  path: \"/locks/{key}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.AppConfigurationPutLockHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.label],\n  urlParameters: [Parameters.endpoint, Parameters.key1],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.accept2,\n  ],\n  serializer,\n};\nconst deleteLockOperationSpec: coreClient.OperationSpec = {\n  path: \"/locks/{key}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.AppConfigurationDeleteLockHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.label],\n  urlParameters: [Parameters.endpoint, Parameters.key1],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.accept2,\n  ],\n  serializer,\n};\nconst getRevisionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/revisions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValueListResult,\n      headersMapper: Mappers.AppConfigurationGetRevisionsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.key,\n    Parameters.label,\n    Parameters.select,\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.accept1,\n  ],\n  serializer,\n};\nconst checkRevisionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/revisions\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppConfigurationCheckRevisionsHeaders,\n    },\n    default: {},\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.key,\n    Parameters.label,\n    Parameters.select,\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.syncToken, Parameters.acceptDatetime],\n  serializer,\n};\nconst getOperationDetailsOperationSpec: coreClient.OperationSpec = {\n  path: \"/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationDetails,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.snapshot1],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept6],\n  serializer,\n};\nconst getKeysNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyListResult,\n      headersMapper: Mappers.AppConfigurationGetKeysNextHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n  ],\n  serializer,\n};\nconst getKeyValuesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValueListResult,\n      headersMapper: Mappers.AppConfigurationGetKeyValuesNextHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.accept1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n  ],\n  serializer,\n};\nconst getSnapshotsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotListResult,\n      headersMapper: Mappers.AppConfigurationGetSnapshotsNextHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [Parameters.syncToken, Parameters.accept3],\n  serializer,\n};\nconst getLabelsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LabelListResult,\n      headersMapper: Mappers.AppConfigurationGetLabelsNextHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.accept5,\n  ],\n  serializer,\n};\nconst getRevisionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValueListResult,\n      headersMapper: Mappers.AppConfigurationGetRevisionsNextHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel,\n    },\n  },\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.accept1,\n  ],\n  serializer,\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { computeSha256Hash, computeSha256Hmac } from \"@azure/core-util\";\nimport { logger } from \"./logger\";\n\n/**\n * Create an HTTP pipeline policy to authenticate a request\n * using an `AzureKeyCredential` for AppConfig.\n */\nexport function appConfigKeyCredentialPolicy(credential: string, secret: string): PipelinePolicy {\n  return {\n    name: \"AppConfigKeyCredentialPolicy\",\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const verb = request.method;\n      const utcNow = new Date().toUTCString();\n      logger.info(\"[appConfigKeyCredentialPolicy] Computing SHA-256 from the request body\");\n      const contentHash = await computeSha256Hash(request.body?.toString() || \"\", \"base64\");\n      const signedHeaders = \"x-ms-date;host;x-ms-content-sha256\";\n      const url = new URL(request.url);\n      const query = url.search;\n      const urlPathAndQuery = query ? `${url.pathname}${query}` : url.pathname;\n      const stringToSign = `${verb}\\n${urlPathAndQuery}\\n${utcNow};${url.host};${contentHash}`;\n      logger.info(\"[appConfigKeyCredentialPolicy] Computing a SHA-256 Hmac signature\");\n      const signature = await computeSha256Hmac(secret, stringToSign, \"base64\");\n\n      request.headers.set(\"x-ms-date\", utcNow);\n      request.headers.set(\"x-ms-content-sha256\", contentHash);\n      // Syntax for Authorization header\n      // Reference - https://docs.microsoft.com/en-us/azure/azure-app-configuration/rest-api-authentication-hmac#syntax\n      request.headers.set(\n        \"Authorization\",\n        `HMAC-SHA256 Credential=${credential}&SignedHeaders=${signedHeaders}&Signature=${signature}`,\n      );\n\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * @internal\n */\nexport const packageVersion = \"1.6.0\";\n\n/**\n * @internal\n */\nexport const appConfigurationApiVersion = \"2023-10-01\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createTracingClient } from \"@azure/core-tracing\";\nimport { packageVersion } from \"./constants\";\n\n/** @internal */\nexport const tracingClient = createTracingClient({\n  namespace: \"Microsoft.AppConfiguration\",\n  packageName: \"@azure/app-configuration\",\n  packageVersion,\n});\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// https://azure.github.io/azure-sdk/typescript_design.html#ts-config-lib\n/// <reference lib=\"esnext.asynciterable\" />\n\nimport {\n  AddConfigurationSettingOptions,\n  AddConfigurationSettingParam,\n  AddConfigurationSettingResponse,\n  AppConfigurationClientOptions,\n  ConfigurationSetting,\n  ConfigurationSettingId,\n  CreateSnapshotOptions,\n  CreateSnapshotResponse,\n  DeleteConfigurationSettingOptions,\n  DeleteConfigurationSettingResponse,\n  GetConfigurationSettingOptions,\n  GetConfigurationSettingResponse,\n  GetSnapshotOptions,\n  GetSnapshotResponse,\n  HttpResponseField,\n  ListConfigurationSettingPage,\n  ListConfigurationSettingsForSnapshotOptions,\n  ListConfigurationSettingsOptions,\n  ListRevisionsOptions,\n  ListRevisionsPage,\n  ListSnapshotsOptions,\n  ListSnapshotsPage,\n  PageSettings,\n  SetConfigurationSettingOptions,\n  SetConfigurationSettingParam,\n  SetConfigurationSettingResponse,\n  SetReadOnlyOptions,\n  SetReadOnlyResponse,\n  SnapshotInfo,\n  UpdateSnapshotOptions,\n  UpdateSnapshotResponse,\n} from \"./models\";\nimport {\n  AppConfigurationGetKeyValuesHeaders,\n  AppConfigurationGetRevisionsHeaders,\n  AppConfigurationGetSnapshotsHeaders,\n  GetKeyValuesResponse,\n  GetRevisionsResponse,\n  GetSnapshotsResponse,\n  ConfigurationSnapshot,\n} from \"./generated/src/models\";\nimport { InternalClientPipelineOptions } from \"@azure/core-client\";\nimport { PagedAsyncIterableIterator, PagedResult, getPagedAsyncIterator } from \"@azure/core-paging\";\nimport {\n  PipelinePolicy,\n  bearerTokenAuthenticationPolicy,\n  RestError,\n} from \"@azure/core-rest-pipeline\";\nimport { SyncTokens, syncTokenPolicy } from \"./internal/synctokenpolicy\";\nimport { TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport {\n  SendConfigurationSettingsOptions,\n  assertResponse,\n  checkAndFormatIfAndIfNoneMatch,\n  extractAfterTokenFromLinkHeader,\n  extractAfterTokenFromNextLink,\n  formatAcceptDateTime,\n  formatConfigurationSettingsFiltersAndSelect,\n  formatFieldsForSelect,\n  formatFiltersAndSelect,\n  formatSnapshotFiltersAndSelect,\n  makeConfigurationSettingEmpty,\n  serializeAsConfigurationSettingParam,\n  transformKeyValue,\n  transformKeyValueResponse,\n  transformKeyValueResponseWithStatusCode,\n  transformSnapshotResponse,\n} from \"./internal/helpers\";\nimport { AppConfiguration } from \"./generated/src/appConfiguration\";\nimport { FeatureFlagValue } from \"./featureFlag\";\nimport { SecretReferenceValue } from \"./secretReference\";\nimport { appConfigKeyCredentialPolicy } from \"./appConfigCredential\";\nimport { tracingClient } from \"./internal/tracing\";\nimport { logger } from \"./logger\";\nimport { OperationState, SimplePollerLike } from \"@azure/core-lro\";\nimport { appConfigurationApiVersion } from \"./internal/constants\";\n\nconst ConnectionStringRegex = /Endpoint=(.*);Id=(.*);Secret=(.*)/;\nconst deserializationContentTypes = {\n  json: [\n    \"application/vnd.microsoft.appconfig.kvset+json\",\n    \"application/vnd.microsoft.appconfig.kv+json\",\n    \"application/vnd.microsoft.appconfig.kvs+json\",\n    \"application/vnd.microsoft.appconfig.keyset+json\",\n    \"application/vnd.microsoft.appconfig.revs+json\",\n    \"application/vnd.microsoft.appconfig.snapshotset+json\",\n    \"application/vnd.microsoft.appconfig.snapshot+json\",\n    \"application/json\",\n  ],\n};\n\n/**\n * Provides internal configuration options for AppConfigurationClient.\n * @internal\n */\nexport interface InternalAppConfigurationClientOptions extends AppConfigurationClientOptions {\n  /**\n   * The sync token cache to use for this client.\n   * NOTE: this is an internal option, not for general client usage.\n   */\n  syncTokens?: SyncTokens;\n}\n\n/**\n * Client for the Azure App Configuration service.\n */\nexport class AppConfigurationClient {\n  private client: AppConfiguration;\n  private _syncTokens: SyncTokens;\n\n  /**\n   * Initializes a new instance of the AppConfigurationClient class.\n   * @param connectionString - Connection string needed for a client to connect to Azure.\n   * @param options - Options for the AppConfigurationClient.\n   */\n  constructor(connectionString: string, options?: AppConfigurationClientOptions);\n  /**\n   * Initializes a new instance of the AppConfigurationClient class using\n   * a TokenCredential.\n   * @param endpoint - The endpoint of the App Configuration service (ex: https://sample.azconfig.io).\n   * @param tokenCredential - An object that implements the `TokenCredential` interface used to authenticate requests to the service. Use the \\@azure/identity package to create a credential that suits your needs.\n   * @param options - Options for the AppConfigurationClient.\n   */\n  constructor(\n    endpoint: string,\n    tokenCredential: TokenCredential,\n    options?: AppConfigurationClientOptions,\n  );\n  constructor(\n    connectionStringOrEndpoint: string,\n    tokenCredentialOrOptions?: TokenCredential | AppConfigurationClientOptions,\n    options?: AppConfigurationClientOptions,\n  ) {\n    let appConfigOptions: InternalAppConfigurationClientOptions = {};\n    let appConfigCredential: TokenCredential;\n    let appConfigEndpoint: string;\n    let authPolicy: PipelinePolicy;\n\n    if (isTokenCredential(tokenCredentialOrOptions)) {\n      appConfigOptions = (options as InternalAppConfigurationClientOptions) || {};\n      appConfigCredential = tokenCredentialOrOptions;\n      appConfigEndpoint = connectionStringOrEndpoint.endsWith(\"/\")\n        ? connectionStringOrEndpoint.slice(0, -1)\n        : connectionStringOrEndpoint;\n      authPolicy = bearerTokenAuthenticationPolicy({\n        scopes: `${appConfigEndpoint}/.default`,\n        credential: appConfigCredential,\n      });\n    } else {\n      appConfigOptions = (tokenCredentialOrOptions as InternalAppConfigurationClientOptions) || {};\n      const regexMatch = connectionStringOrEndpoint?.match(ConnectionStringRegex);\n      if (regexMatch) {\n        appConfigEndpoint = regexMatch[1];\n        authPolicy = appConfigKeyCredentialPolicy(regexMatch[2], regexMatch[3]);\n      } else {\n        throw new Error(\n          `Invalid connection string. Valid connection strings should match the regex '${ConnectionStringRegex.source}'.` +\n            ` To mitigate the issue, please refer to the troubleshooting guide here at https://aka.ms/azsdk/js/app-configuration/troubleshoot.`,\n        );\n      }\n    }\n\n    const internalClientPipelineOptions: InternalClientPipelineOptions = {\n      ...appConfigOptions,\n      loggingOptions: {\n        logger: logger.info,\n      },\n      deserializationOptions: {\n        expectedContentTypes: deserializationContentTypes,\n      },\n    };\n\n    this._syncTokens = appConfigOptions.syncTokens || new SyncTokens();\n    this.client = new AppConfiguration(\n      appConfigEndpoint,\n      appConfigurationApiVersion,\n      internalClientPipelineOptions,\n    );\n    this.client.pipeline.addPolicy(authPolicy, { phase: \"Sign\" });\n    this.client.pipeline.addPolicy(syncTokenPolicy(this._syncTokens), { afterPhase: \"Retry\" });\n  }\n\n  /**\n   * Add a setting into the Azure App Configuration service, failing if it\n   * already exists.\n   *\n   * Example usage:\n   * ```ts\n   * const result = await client.addConfigurationSetting({ key: \"MyKey\", label: \"MyLabel\", value: \"MyValue\" });\n   * ```\n   * @param configurationSetting - A configuration setting.\n   * @param options - Optional parameters for the request.\n   */\n  addConfigurationSetting(\n    configurationSetting:\n      | AddConfigurationSettingParam\n      | AddConfigurationSettingParam<FeatureFlagValue>\n      | AddConfigurationSettingParam<SecretReferenceValue>,\n    options: AddConfigurationSettingOptions = {},\n  ): Promise<AddConfigurationSettingResponse> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.addConfigurationSetting\",\n      options,\n      async (updatedOptions) => {\n        const keyValue = serializeAsConfigurationSettingParam(configurationSetting);\n        logger.info(\"[addConfigurationSetting] Creating a key value pair\");\n        try {\n          const originalResponse = await this.client.putKeyValue(configurationSetting.key, {\n            ifNoneMatch: \"*\",\n            label: configurationSetting.label,\n            entity: keyValue,\n            ...updatedOptions,\n          });\n          const response = transformKeyValueResponse(originalResponse);\n          assertResponse(response);\n          return response;\n        } catch (error) {\n          const err = error as RestError;\n          // Service does not return an error message. Raise a 412 error similar to .NET\n          if (err.statusCode === 412) {\n            err.message = `Status 412: Setting was already present`;\n          }\n          throw err;\n        }\n        throw new Error(\"Unreachable code\");\n      },\n    );\n  }\n\n  /**\n   * Delete a setting from the Azure App Configuration service\n   *\n   * Example usage:\n   * ```ts\n   * const deletedSetting = await client.deleteConfigurationSetting({ key: \"MyKey\", label: \"MyLabel\" });\n   * ```\n   * @param id - The id of the configuration setting to delete.\n   * @param options - Optional parameters for the request (ex: etag, label)\n   */\n  deleteConfigurationSetting(\n    id: ConfigurationSettingId,\n    options: DeleteConfigurationSettingOptions = {},\n  ): Promise<DeleteConfigurationSettingResponse> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.deleteConfigurationSetting\",\n      options,\n      async (updatedOptions) => {\n        let status;\n        logger.info(\"[deleteConfigurationSetting] Deleting key value pair\");\n        const originalResponse = await this.client.deleteKeyValue(id.key, {\n          label: id.label,\n          ...updatedOptions,\n          ...checkAndFormatIfAndIfNoneMatch(id, options),\n          onResponse: (response) => {\n            status = response.status;\n          },\n        });\n\n        const response = transformKeyValueResponseWithStatusCode(originalResponse, status);\n        assertResponse(response);\n        return response;\n      },\n    );\n  }\n\n  /**\n   * Gets a setting from the Azure App Configuration service.\n   *\n   * Example code:\n   * ```ts\n   * const setting = await client.getConfigurationSetting({ key: \"MyKey\", label: \"MyLabel\" });\n   * ```\n   * @param id - The id of the configuration setting to get.\n   * @param options - Optional parameters for the request.\n   */\n  async getConfigurationSetting(\n    id: ConfigurationSettingId,\n    options: GetConfigurationSettingOptions = {},\n  ): Promise<GetConfigurationSettingResponse> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.getConfigurationSetting\",\n      options,\n      async (updatedOptions) => {\n        let status;\n        logger.info(\"[getConfigurationSetting] Getting key value pair\");\n        const originalResponse = await this.client.getKeyValue(id.key, {\n          ...updatedOptions,\n          label: id.label,\n          select: formatFieldsForSelect(options.fields),\n          ...formatAcceptDateTime(options),\n          ...checkAndFormatIfAndIfNoneMatch(id, options),\n          onResponse: (response) => {\n            status = response.status;\n          },\n        });\n\n        const response = transformKeyValueResponseWithStatusCode(originalResponse, status);\n\n        // 304 only comes back if the user has passed a conditional option in their\n        // request _and_ the remote object has the same etag as what the user passed.\n        if (response.statusCode === 304) {\n          // this is one of our few 'required' fields so we'll make sure it does get initialized\n          // with a value\n          response.key = id.key;\n\n          // and now we'll undefine all the other properties that are not HTTP related\n          makeConfigurationSettingEmpty(response);\n        }\n        assertResponse(response);\n        return response;\n      },\n    );\n  }\n\n  /**\n   * Lists settings from the Azure App Configuration service, optionally\n   * filtered by key names, labels and accept datetime.\n   *\n   * Example code:\n   * ```ts\n   * const allSettingsWithLabel = client.listConfigurationSettings({ labelFilter: \"MyLabel\" });\n   * ```\n   * @param options - Optional parameters for the request.\n   */\n  listConfigurationSettings(\n    options: ListConfigurationSettingsOptions = {},\n  ): PagedAsyncIterableIterator<ConfigurationSetting, ListConfigurationSettingPage, PageSettings> {\n    const pageEtags = options.pageEtags ? [...options.pageEtags] : undefined;\n    delete options.pageEtags;\n    const etag = pageEtags?.shift();\n    const pagedResult: PagedResult<ListConfigurationSettingPage, PageSettings, string | undefined> =\n      {\n        firstPageLink: undefined,\n        getPage: async (pageLink: string | undefined) => {\n          try {\n            const response = await this.sendConfigurationSettingsRequest(\n              { ...options, etag },\n              pageLink,\n            );\n            const currentResponse: ListConfigurationSettingPage = {\n              ...response,\n              items: response.items != null ? response.items?.map(transformKeyValue) : [],\n              continuationToken: response.nextLink\n                ? extractAfterTokenFromNextLink(response.nextLink)\n                : undefined,\n              _response: response._response,\n            };\n            return {\n              page: currentResponse,\n              nextPageLink: currentResponse.continuationToken,\n            };\n          } catch (error) {\n            const err = error as RestError;\n\n            const link = err.response?.headers?.get(\"link\");\n            const continuationToken = link ? extractAfterTokenFromLinkHeader(link) : undefined;\n\n            if (err.statusCode === 304) {\n              err.message = `Status 304: No updates for this page`;\n              logger.info(\n                `[listConfigurationSettings] No updates for this page. The current etag for the page is ${etag}`,\n              );\n              return {\n                page: {\n                  items: [],\n                  etag,\n                  _response: { ...err.response, status: 304 },\n                } as unknown as ListConfigurationSettingPage,\n                nextPageLink: continuationToken,\n              };\n            }\n\n            throw err;\n          }\n        },\n        toElements: (page) => page.items,\n      };\n    return getPagedAsyncIterator(pagedResult);\n  }\n\n  /**\n   * Lists settings from the Azure App Configuration service for snapshots based on name, optionally\n   * filtered by key names, labels and accept datetime.\n   *\n   * Example code:\n   * ```ts\n   * const allSettingsWithLabel = client.listConfigurationSettingsForSnashots({ snapshotName: \"MySnapshot\" });\n   * ```\n   * @param options - Optional parameters for the request.\n   */\n  listConfigurationSettingsForSnapshot(\n    snapshotName: string,\n    options: ListConfigurationSettingsForSnapshotOptions = {},\n  ): PagedAsyncIterableIterator<ConfigurationSetting, ListConfigurationSettingPage, PageSettings> {\n    const pagedResult: PagedResult<ListConfigurationSettingPage, PageSettings, string | undefined> =\n      {\n        firstPageLink: undefined,\n        getPage: async (pageLink: string | undefined) => {\n          const response = await this.sendConfigurationSettingsRequest(\n            { snapshotName, ...options },\n            pageLink,\n          );\n          const currentResponse = {\n            ...response,\n            items: response.items != null ? response.items?.map(transformKeyValue) : [],\n            continuationToken: response.nextLink\n              ? extractAfterTokenFromNextLink(response.nextLink)\n              : undefined,\n          };\n          return {\n            page: currentResponse,\n            nextPageLink: currentResponse.continuationToken,\n          };\n        },\n        toElements: (page) => page.items,\n      };\n    return getPagedAsyncIterator(pagedResult);\n  }\n\n  private async sendConfigurationSettingsRequest(\n    options: SendConfigurationSettingsOptions & PageSettings = {},\n    pageLink: string | undefined,\n  ): Promise<GetKeyValuesResponse & HttpResponseField<AppConfigurationGetKeyValuesHeaders>> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.listConfigurationSettings\",\n      options,\n      async (updatedOptions) => {\n        const response = await this.client.getKeyValues({\n          ...updatedOptions,\n          ...formatAcceptDateTime(options),\n          ...formatConfigurationSettingsFiltersAndSelect(options),\n          ...checkAndFormatIfAndIfNoneMatch({ etag: options.etag }, { onlyIfChanged: true }),\n          after: pageLink,\n        });\n\n        return response as GetKeyValuesResponse &\n          HttpResponseField<AppConfigurationGetKeyValuesHeaders>;\n      },\n    );\n  }\n  /**\n   * Lists revisions of a set of keys, optionally filtered by key names,\n   * labels and accept datetime.\n   *\n   * Example code:\n   * ```ts\n   * const revisionsIterator = client.listRevisions({ keys: [\"MyKey\"] });\n   * ```\n   * @param options - Optional parameters for the request.\n   */\n  listRevisions(\n    options?: ListRevisionsOptions,\n  ): PagedAsyncIterableIterator<ConfigurationSetting, ListRevisionsPage, PageSettings> {\n    const pagedResult: PagedResult<ListRevisionsPage, PageSettings, string | undefined> = {\n      firstPageLink: undefined,\n      getPage: async (pageLink: string | undefined) => {\n        const response = await this.sendRevisionsRequest(options, pageLink);\n        const currentResponse = {\n          ...response,\n          items: response.items != null ? response.items.map(transformKeyValue) : [],\n          continuationToken: response.nextLink\n            ? extractAfterTokenFromNextLink(response.nextLink)\n            : undefined,\n        };\n        // let itemList = currentResponse.items;\n        return {\n          page: currentResponse,\n          nextPageLink: currentResponse.continuationToken,\n        };\n      },\n      toElements: (page) => page.items,\n    };\n    return getPagedAsyncIterator(pagedResult);\n  }\n\n  private async sendRevisionsRequest(\n    options: ListConfigurationSettingsOptions & PageSettings = {},\n    pageLink: string | undefined,\n  ): Promise<GetKeyValuesResponse & HttpResponseField<AppConfigurationGetKeyValuesHeaders>> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.listRevisions\",\n      options,\n      async (updatedOptions) => {\n        const response = await this.client.getRevisions({\n          ...updatedOptions,\n          ...formatAcceptDateTime(options),\n          ...formatFiltersAndSelect(updatedOptions),\n          after: pageLink,\n        });\n\n        return response as GetRevisionsResponse &\n          HttpResponseField<AppConfigurationGetRevisionsHeaders>;\n      },\n    );\n  }\n\n  /**\n   * Sets the value of a key in the Azure App Configuration service, allowing for an optional etag.\n   * @param key - The name of the key.\n   * @param configurationSetting - A configuration value.\n   * @param options - Optional parameters for the request.\n   *\n   * Example code:\n   * ```ts\n   * await client.setConfigurationSetting({ key: \"MyKey\", value: \"MyValue\" });\n   * ```\n   */\n  async setConfigurationSetting(\n    configurationSetting:\n      | SetConfigurationSettingParam\n      | SetConfigurationSettingParam<FeatureFlagValue>\n      | SetConfigurationSettingParam<SecretReferenceValue>,\n    options: SetConfigurationSettingOptions = {},\n  ): Promise<SetConfigurationSettingResponse> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.setConfigurationSetting\",\n      options,\n      async (updatedOptions) => {\n        const keyValue = serializeAsConfigurationSettingParam(configurationSetting);\n        logger.info(\"[setConfigurationSetting] Setting new key value\");\n        const response = transformKeyValueResponse(\n          await this.client.putKeyValue(configurationSetting.key, {\n            ...updatedOptions,\n            label: configurationSetting.label,\n            entity: keyValue,\n            ...checkAndFormatIfAndIfNoneMatch(configurationSetting, options),\n          }),\n        );\n        assertResponse(response);\n        return response;\n      },\n    );\n  }\n\n  /**\n   * Sets or clears a key's read-only status.\n   * @param id - The id of the configuration setting to modify.\n   */\n  async setReadOnly(\n    id: ConfigurationSettingId,\n    readOnly: boolean,\n    options: SetReadOnlyOptions = {},\n  ): Promise<SetReadOnlyResponse> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.setReadOnly\",\n      options,\n      async (newOptions) => {\n        let response;\n        if (readOnly) {\n          logger.info(\"[setReadOnly] Setting read-only status to ${readOnly}\");\n          response = await this.client.putLock(id.key, {\n            ...newOptions,\n            label: id.label,\n            ...checkAndFormatIfAndIfNoneMatch(id, options),\n          });\n        } else {\n          logger.info(\"[setReadOnly] Deleting read-only lock\");\n          response = await this.client.deleteLock(id.key, {\n            ...newOptions,\n            label: id.label,\n            ...checkAndFormatIfAndIfNoneMatch(id, options),\n          });\n        }\n        response = transformKeyValueResponse(response);\n        assertResponse(response);\n        return response;\n      },\n    );\n  }\n\n  /**\n   * Adds an external synchronization token to ensure service requests receive up-to-date values.\n   *\n   * @param syncToken - The synchronization token value.\n   */\n  updateSyncToken(syncToken: string): void {\n    this._syncTokens.addSyncTokenFromHeaderValue(syncToken);\n  }\n\n  /**\n   * Begins creating a snapshot for Azure App Configuration service, fails if it\n   * already exists.\n   */\n  beginCreateSnapshot(\n    snapshot: SnapshotInfo,\n    options: CreateSnapshotOptions = {},\n  ): Promise<SimplePollerLike<OperationState<CreateSnapshotResponse>, CreateSnapshotResponse>> {\n    return tracingClient.withSpan(\n      `${AppConfigurationClient.name}.beginCreateSnapshot`,\n      options,\n      (updatedOptions) =>\n        this.client.beginCreateSnapshot(snapshot.name, snapshot, { ...updatedOptions }),\n    );\n  }\n\n  /**\n   * Begins creating a snapshot for Azure App Configuration service, waits until it is done,\n   * fails if it already exists.\n   */\n  beginCreateSnapshotAndWait(\n    snapshot: SnapshotInfo,\n    options: CreateSnapshotOptions = {},\n  ): Promise<CreateSnapshotResponse> {\n    return tracingClient.withSpan(\n      `${AppConfigurationClient.name}.beginCreateSnapshotAndWait`,\n      options,\n      (updatedOptions) =>\n        this.client.beginCreateSnapshotAndWait(snapshot.name, snapshot, { ...updatedOptions }),\n    );\n  }\n\n  /**\n   * Get a snapshot from Azure App Configuration service\n   *\n   * Example usage:\n   * ```ts\n   * const result = await client.getSnapshot(\"MySnapshot\");\n   * ```\n   * @param name - The name of the snapshot.\n   * @param options - Optional parameters for the request.\n   */\n  getSnapshot(name: string, options: GetSnapshotOptions = {}): Promise<GetSnapshotResponse> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.getSnapshot\",\n      options,\n      async (updatedOptions) => {\n        logger.info(\"[getSnapshot] Get a snapshot\");\n        const originalResponse = await this.client.getSnapshot(name, {\n          ...updatedOptions,\n        });\n        const response = transformSnapshotResponse(originalResponse);\n        assertResponse(response);\n        return response;\n      },\n    );\n  }\n\n  /**\n   * Recover an archived snapshot back to ready status\n   *\n   * Example usage:\n   * ```ts\n   * const result = await client.recoverSnapshot(\"MySnapshot\");\n   * ```\n   * @param name - The name of the snapshot.\n   * @param options - Optional parameters for the request.\n   */\n  recoverSnapshot(\n    name: string,\n    options: UpdateSnapshotOptions = {},\n  ): Promise<UpdateSnapshotResponse> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.recoverSnapshot\",\n      options,\n      async (updatedOptions) => {\n        logger.info(\"[recoverSnapshot] Recover a snapshot\");\n        const originalResponse = await this.client.updateSnapshot(\n          name,\n          { status: \"ready\" },\n          {\n            ...updatedOptions,\n            ...checkAndFormatIfAndIfNoneMatch(\n              { etag: options.etag },\n              { onlyIfUnchanged: true, ...options },\n            ),\n          },\n        );\n        const response = transformSnapshotResponse(originalResponse);\n        assertResponse(response);\n        return response;\n      },\n    );\n  }\n  /**\n   * Archive a ready snapshot\n   *\n   * Example usage:\n   * ```ts\n   * const result = await client.archiveSnapshot({name: \"MySnapshot\"});\n   * ```\n   * @param name - The name of the snapshot.\n   * @param options - Optional parameters for the request.\n   */\n  archiveSnapshot(\n    name: string,\n    options: UpdateSnapshotOptions = {},\n  ): Promise<UpdateSnapshotResponse> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.archiveSnapshot\",\n      options,\n      async (updatedOptions) => {\n        logger.info(\"[archiveSnapshot] Archive a snapshot\");\n        const originalResponse = await this.client.updateSnapshot(\n          name,\n          { status: \"archived\" },\n          {\n            ...updatedOptions,\n            ...checkAndFormatIfAndIfNoneMatch(\n              { etag: options.etag },\n              { onlyIfUnchanged: true, ...options },\n            ),\n          },\n        );\n        const response = transformSnapshotResponse(originalResponse);\n        assertResponse(response);\n        return response;\n      },\n    );\n  }\n\n  /**\n   * List all snapshots from Azure App Configuration service\n   *\n   * Example usage:\n   * ```ts\n   * const result = await client.listSnapshots();\n   * ```\n   * @param options - Optional parameters for the request.\n   */\n  listSnapshots(\n    options: ListSnapshotsOptions = {},\n  ): PagedAsyncIterableIterator<ConfigurationSnapshot, ListSnapshotsPage, PageSettings> {\n    const pagedResult: PagedResult<ListSnapshotsPage, PageSettings, string | undefined> = {\n      firstPageLink: undefined,\n      getPage: async (pageLink: string | undefined) => {\n        const response = await this.sendSnapShotsRequest(options, pageLink);\n        const currentResponse = {\n          ...response,\n          items: response.items != null ? response.items : [],\n          continuationToken: response.nextLink\n            ? extractAfterTokenFromNextLink(response.nextLink)\n            : undefined,\n        };\n        return {\n          page: currentResponse,\n          nextPageLink: currentResponse.continuationToken,\n        };\n      },\n      toElements: (page) => page.items,\n    };\n    return getPagedAsyncIterator(pagedResult);\n  }\n\n  private async sendSnapShotsRequest(\n    options: ListSnapshotsOptions & PageSettings = {},\n    pageLink: string | undefined,\n  ): Promise<GetSnapshotsResponse & HttpResponseField<AppConfigurationGetSnapshotsHeaders>> {\n    return tracingClient.withSpan(\n      \"AppConfigurationClient.listSnapshots\",\n      options,\n      async (updatedOptions) => {\n        const response = await this.client.getSnapshots({\n          ...updatedOptions,\n          ...formatSnapshotFiltersAndSelect(options),\n          after: pageLink,\n        });\n\n        return response as GetSnapshotsResponse &\n          HttpResponseField<AppConfigurationGetSnapshotsHeaders>;\n      },\n    );\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\n\n/** The result of a list request. */\nexport interface KeyListResult {\n  /** The collection value. */\n  items?: Key[];\n  /** The URI that can be used to request the next set of paged results. */\n  nextLink?: string;\n}\n\nexport interface Key {\n  /**\n   * The name of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n}\n\n/** Azure App Configuration error object. */\nexport interface ErrorModel {\n  /** The type of the error. */\n  type?: string;\n  /** A brief summary of the error. */\n  title?: string;\n  /** The name of the parameter that resulted in the error. */\n  name?: string;\n  /** A detailed description of the error. */\n  detail?: string;\n  /** The HTTP status code that the error maps to. */\n  status?: number;\n}\n\n/** The result of a list request. */\nexport interface KeyValueListResult {\n  /** The collection value. */\n  items?: KeyValue[];\n  /** An identifier representing the returned state of the resource. */\n  etag?: string;\n  /** The URI that can be used to request the next set of paged results. */\n  nextLink?: string;\n}\n\nexport interface KeyValue {\n  /** The key of the key-value. */\n  key: string;\n  /** The label the key-value belongs to. */\n  label?: string;\n  /** The content type of the value stored within the key-value. */\n  contentType?: string;\n  /** The value of the key-value. */\n  value?: string;\n  /** A date representing the last time the key-value was modified. */\n  lastModified?: Date;\n  /** The tags of the key-value */\n  tags?: { [propertyName: string]: string };\n  /** Indicates whether the key-value is locked. */\n  locked?: boolean;\n  /** A value representing the current state of the resource. */\n  etag?: string;\n}\n\n/** The result of a snapshot list request. */\nexport interface SnapshotListResult {\n  /** The collection value. */\n  items?: ConfigurationSnapshot[];\n  /** The URI that can be used to request the next set of paged results. */\n  nextLink?: string;\n}\n\n/** Snapshot details include name, filters, expiresOn, sizeInBytes, status, itemCount, and more */\nexport interface ConfigurationSnapshot {\n  /**\n   * The name of the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name: string;\n  /**\n   * The current status of the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: ConfigurationSnapshotStatus;\n  /** A list of filters used to filter the key-values included in the snapshot. */\n  filters: ConfigurationSettingsFilter[];\n  /** The composition type describes how the key-values within the snapshot are composed. The 'key' composition type ensures there are no two key-values containing the same key. The 'key_label' composition type ensures there are no two key-values containing the same key and label. */\n  compositionType?: SnapshotComposition;\n  /**\n   * The time that the snapshot was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * The time that the snapshot will expire.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiresOn?: Date;\n  /** The amount of time, in seconds, that a snapshot will remain in the archived state before expiring. This property is only writable during the creation of a snapshot. If not specified, the default lifetime of key-value revisions will be used. */\n  retentionPeriodInSeconds?: number;\n  /**\n   * The size in bytes of the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sizeInBytes?: number;\n  /**\n   * The amount of key-values in the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly itemCount?: number;\n  /** The tags of the snapshot. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * A value representing the current state of the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** Enables filtering of key-values. */\nexport interface ConfigurationSettingsFilter {\n  /** Filters key-values by their key field. */\n  keyFilter: string;\n  /** Filters key-values by their label field. */\n  labelFilter?: string;\n}\n\n/** Parameters used to update a snapshot. */\nexport interface SnapshotUpdateParameters {\n  /** The desired status of the snapshot. */\n  status?: SnapshotStatus;\n}\n\n/** The result of a list request. */\nexport interface LabelListResult {\n  /** The collection value. */\n  items?: Label[];\n  /** The URI that can be used to request the next set of paged results. */\n  nextLink?: string;\n}\n\nexport interface Label {\n  /**\n   * The name of the label.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n}\n\n/** Details of a long running operation. */\nexport interface OperationDetails {\n  /** The unique id of the operation. */\n  id: string;\n  /** The current status of the operation */\n  status: State;\n  /** An error, available when the status is `Failed`, describing why the operation failed. */\n  error?: ErrorDetail;\n}\n\n/** The details of an error. */\nexport interface ErrorDetail {\n  /** One of a server-defined set of error codes. */\n  code: string;\n  /** A human-readable representation of the error. */\n  message: string;\n  /** An array of details about specific errors that led to this reported error. */\n  details?: ErrorDetail[];\n  /** An object containing more specific information than the current object about the error. */\n  innererror?: InnerError;\n}\n\n/** An object containing specific information about an error. */\nexport interface InnerError {\n  /** One of a server-defined set of error codes. */\n  code?: string;\n  /** An object containing more specific information than the current object about the error. */\n  innererror?: InnerError;\n}\n\n/** Defines headers for AppConfiguration_getKeys operation. */\nexport interface AppConfigurationGetKeysHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_checkKeys operation. */\nexport interface AppConfigurationCheckKeysHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getKeyValues operation. */\nexport interface AppConfigurationGetKeyValuesHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_checkKeyValues operation. */\nexport interface AppConfigurationCheckKeyValuesHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getKeyValue operation. */\nexport interface AppConfigurationGetKeyValueHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_putKeyValue operation. */\nexport interface AppConfigurationPutKeyValueHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_deleteKeyValue operation. */\nexport interface AppConfigurationDeleteKeyValueHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_checkKeyValue operation. */\nexport interface AppConfigurationCheckKeyValueHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getSnapshots operation. */\nexport interface AppConfigurationGetSnapshotsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_checkSnapshots operation. */\nexport interface AppConfigurationCheckSnapshotsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getSnapshot operation. */\nexport interface AppConfigurationGetSnapshotHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n  /** Includes links to related resources. */\n  link?: string;\n}\n\n/** Defines headers for AppConfiguration_createSnapshot operation. */\nexport interface AppConfigurationCreateSnapshotHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n  /** Includes links to related resources. */\n  link?: string;\n  /** The URL to track the status of the long running operation. */\n  operationLocation?: string;\n}\n\n/** Defines headers for AppConfiguration_updateSnapshot operation. */\nexport interface AppConfigurationUpdateSnapshotHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n  /** Includes links to related resources. */\n  link?: string;\n}\n\n/** Defines headers for AppConfiguration_checkSnapshot operation. */\nexport interface AppConfigurationCheckSnapshotHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n  /** Includes links to related resources. */\n  link?: string;\n}\n\n/** Defines headers for AppConfiguration_getLabels operation. */\nexport interface AppConfigurationGetLabelsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_checkLabels operation. */\nexport interface AppConfigurationCheckLabelsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_putLock operation. */\nexport interface AppConfigurationPutLockHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_deleteLock operation. */\nexport interface AppConfigurationDeleteLockHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getRevisions operation. */\nexport interface AppConfigurationGetRevisionsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_checkRevisions operation. */\nexport interface AppConfigurationCheckRevisionsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getKeysNext operation. */\nexport interface AppConfigurationGetKeysNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getKeyValuesNext operation. */\nexport interface AppConfigurationGetKeyValuesNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getSnapshotsNext operation. */\nexport interface AppConfigurationGetSnapshotsNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getLabelsNext operation. */\nexport interface AppConfigurationGetLabelsNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getRevisionsNext operation. */\nexport interface AppConfigurationGetRevisionsNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Known values of {@link ApiVersion20231001} that the service accepts. */\nexport enum KnownApiVersion20231001 {\n  /** Api Version '2023-10-01' */\n  TwoThousandTwentyThree1001 = \"2023-10-01\",\n}\n\n/**\n * Defines values for ApiVersion20231001. \\\n * {@link KnownApiVersion20231001} can be used interchangeably with ApiVersion20231001,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **2023-10-01**: Api Version '2023-10-01'\n */\nexport type ApiVersion20231001 = string;\n\n/** Known values of {@link KeyValueFields} that the service accepts. */\nexport enum KnownKeyValueFields {\n  /** Key */\n  Key = \"key\",\n  /** Label */\n  Label = \"label\",\n  /** ContentType */\n  ContentType = \"content_type\",\n  /** Value */\n  Value = \"value\",\n  /** LastModified */\n  LastModified = \"last_modified\",\n  /** Tags */\n  Tags = \"tags\",\n  /** Locked */\n  Locked = \"locked\",\n  /** Etag */\n  Etag = \"etag\",\n}\n\n/**\n * Defines values for KeyValueFields. \\\n * {@link KnownKeyValueFields} can be used interchangeably with KeyValueFields,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **key** \\\n * **label** \\\n * **content_type** \\\n * **value** \\\n * **last_modified** \\\n * **tags** \\\n * **locked** \\\n * **etag**\n */\nexport type KeyValueFields = string;\n\n/** Known values of {@link SnapshotFields} that the service accepts. */\nexport enum KnownSnapshotFields {\n  /** Name */\n  Name = \"name\",\n  /** Status */\n  Status = \"status\",\n  /** Filters */\n  Filters = \"filters\",\n  /** CompositionType */\n  CompositionType = \"composition_type\",\n  /** Created */\n  Created = \"created\",\n  /** Expires */\n  Expires = \"expires\",\n  /** RetentionPeriod */\n  RetentionPeriod = \"retention_period\",\n  /** Size */\n  Size = \"size\",\n  /** ItemsCount */\n  ItemsCount = \"items_count\",\n  /** Tags */\n  Tags = \"tags\",\n  /** Etag */\n  Etag = \"etag\",\n}\n\n/**\n * Defines values for SnapshotFields. \\\n * {@link KnownSnapshotFields} can be used interchangeably with SnapshotFields,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **name** \\\n * **status** \\\n * **filters** \\\n * **composition_type** \\\n * **created** \\\n * **expires** \\\n * **retention_period** \\\n * **size** \\\n * **items_count** \\\n * **tags** \\\n * **etag**\n */\nexport type SnapshotFields = string;\n\n/** Known values of {@link SnapshotStatus} that the service accepts. */\nexport enum KnownSnapshotStatus {\n  /** Provisioning */\n  Provisioning = \"provisioning\",\n  /** Ready */\n  Ready = \"ready\",\n  /** Archived */\n  Archived = \"archived\",\n  /** Failed */\n  Failed = \"failed\",\n}\n\n/**\n * Defines values for SnapshotStatus. \\\n * {@link KnownSnapshotStatus} can be used interchangeably with SnapshotStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **provisioning** \\\n * **ready** \\\n * **archived** \\\n * **failed**\n */\nexport type SnapshotStatus = string;\n\n/** Known values of {@link ConfigurationSnapshotStatus} that the service accepts. */\nexport enum KnownConfigurationSnapshotStatus {\n  /** Provisioning */\n  Provisioning = \"provisioning\",\n  /** Ready */\n  Ready = \"ready\",\n  /** Archived */\n  Archived = \"archived\",\n  /** Failed */\n  Failed = \"failed\",\n}\n\n/**\n * Defines values for ConfigurationSnapshotStatus. \\\n * {@link KnownConfigurationSnapshotStatus} can be used interchangeably with ConfigurationSnapshotStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **provisioning** \\\n * **ready** \\\n * **archived** \\\n * **failed**\n */\nexport type ConfigurationSnapshotStatus = string;\n\n/** Known values of {@link SnapshotComposition} that the service accepts. */\nexport enum KnownSnapshotComposition {\n  /** Key */\n  Key = \"key\",\n  /** KeyLabel */\n  KeyLabel = \"key_label\",\n}\n\n/**\n * Defines values for SnapshotComposition. \\\n * {@link KnownSnapshotComposition} can be used interchangeably with SnapshotComposition,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **key** \\\n * **key_label**\n */\nexport type SnapshotComposition = string;\n\n/** Known values of {@link LabelFields} that the service accepts. */\nexport enum KnownLabelFields {\n  /** Name */\n  Name = \"name\",\n}\n\n/**\n * Defines values for LabelFields. \\\n * {@link KnownLabelFields} can be used interchangeably with LabelFields,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **name**\n */\nexport type LabelFields = string;\n/** Defines values for State. */\nexport type State =\n  | \"NotStarted\"\n  | \"Running\"\n  | \"Succeeded\"\n  | \"Failed\"\n  | \"Canceled\";\n\n/** Optional parameters. */\nexport interface GetKeysOptionalParams extends coreClient.OperationOptions {\n  /** A filter for the name of the returned keys. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the getKeys operation. */\nexport type GetKeysResponse = AppConfigurationGetKeysHeaders & KeyListResult;\n\n/** Optional parameters. */\nexport interface CheckKeysOptionalParams extends coreClient.OperationOptions {\n  /** A filter for the name of the returned keys. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the checkKeys operation. */\nexport type CheckKeysResponse = AppConfigurationCheckKeysHeaders;\n\n/** Optional parameters. */\nexport interface GetKeyValuesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** A filter used to match keys. */\n  key?: string;\n  /** A filter used to match labels */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n  /** A filter used get key-values for a snapshot. The value should be the name of the snapshot. Not valid when used with 'key' and 'label' filters. */\n  snapshot?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the getKeyValues operation. */\nexport type GetKeyValuesResponse = AppConfigurationGetKeyValuesHeaders &\n  KeyValueListResult;\n\n/** Optional parameters. */\nexport interface CheckKeyValuesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** A filter used to match keys. */\n  key?: string;\n  /** A filter used to match labels */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n  /** A filter used get key-values for a snapshot. Not valid when used with 'key' and 'label' filters. */\n  snapshot?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the checkKeyValues operation. */\nexport type CheckKeyValuesResponse = AppConfigurationCheckKeyValuesHeaders;\n\n/** Optional parameters. */\nexport interface GetKeyValueOptionalParams extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** The label of the key-value to retrieve. */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the getKeyValue operation. */\nexport type GetKeyValueResponse = AppConfigurationGetKeyValueHeaders & KeyValue;\n\n/** Optional parameters. */\nexport interface PutKeyValueOptionalParams extends coreClient.OperationOptions {\n  /** The label of the key-value to create. */\n  label?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n  /** The key-value to create. */\n  entity?: KeyValue;\n}\n\n/** Contains response data for the putKeyValue operation. */\nexport type PutKeyValueResponse = AppConfigurationPutKeyValueHeaders & KeyValue;\n\n/** Optional parameters. */\nexport interface DeleteKeyValueOptionalParams\n  extends coreClient.OperationOptions {\n  /** The label of the key-value to delete. */\n  label?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the deleteKeyValue operation. */\nexport type DeleteKeyValueResponse = AppConfigurationDeleteKeyValueHeaders &\n  KeyValue;\n\n/** Optional parameters. */\nexport interface CheckKeyValueOptionalParams\n  extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** The label of the key-value to retrieve. */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the checkKeyValue operation. */\nexport type CheckKeyValueResponse = AppConfigurationCheckKeyValueHeaders;\n\n/** Optional parameters. */\nexport interface GetSnapshotsOptionalParams\n  extends coreClient.OperationOptions {\n  /** A filter for the name of the returned snapshots. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: SnapshotFields[];\n  /** Used to filter returned snapshots by their status property. */\n  status?: SnapshotStatus[];\n}\n\n/** Contains response data for the getSnapshots operation. */\nexport type GetSnapshotsResponse = AppConfigurationGetSnapshotsHeaders &\n  SnapshotListResult;\n\n/** Optional parameters. */\nexport interface CheckSnapshotsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n}\n\n/** Contains response data for the checkSnapshots operation. */\nexport type CheckSnapshotsResponse = AppConfigurationCheckSnapshotsHeaders;\n\n/** Optional parameters. */\nexport interface GetSnapshotOptionalParams extends coreClient.OperationOptions {\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: SnapshotFields[];\n}\n\n/** Contains response data for the getSnapshot operation. */\nexport type GetSnapshotResponse = AppConfigurationGetSnapshotHeaders &\n  ConfigurationSnapshot;\n\n/** Optional parameters. */\nexport interface CreateSnapshotOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createSnapshot operation. */\nexport type CreateSnapshotResponse = AppConfigurationCreateSnapshotHeaders &\n  ConfigurationSnapshot;\n\n/** Optional parameters. */\nexport interface UpdateSnapshotOptionalParams\n  extends coreClient.OperationOptions {\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the updateSnapshot operation. */\nexport type UpdateSnapshotResponse = AppConfigurationUpdateSnapshotHeaders &\n  ConfigurationSnapshot;\n\n/** Optional parameters. */\nexport interface CheckSnapshotOptionalParams\n  extends coreClient.OperationOptions {\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the checkSnapshot operation. */\nexport type CheckSnapshotResponse = AppConfigurationCheckSnapshotHeaders;\n\n/** Optional parameters. */\nexport interface GetLabelsOptionalParams extends coreClient.OperationOptions {\n  /** A filter for the name of the returned labels. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: LabelFields[];\n}\n\n/** Contains response data for the getLabels operation. */\nexport type GetLabelsResponse = AppConfigurationGetLabelsHeaders &\n  LabelListResult;\n\n/** Optional parameters. */\nexport interface CheckLabelsOptionalParams extends coreClient.OperationOptions {\n  /** A filter for the name of the returned labels. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: LabelFields[];\n}\n\n/** Contains response data for the checkLabels operation. */\nexport type CheckLabelsResponse = AppConfigurationCheckLabelsHeaders;\n\n/** Optional parameters. */\nexport interface PutLockOptionalParams extends coreClient.OperationOptions {\n  /** The label, if any, of the key-value to lock. */\n  label?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the putLock operation. */\nexport type PutLockResponse = AppConfigurationPutLockHeaders & KeyValue;\n\n/** Optional parameters. */\nexport interface DeleteLockOptionalParams extends coreClient.OperationOptions {\n  /** The label, if any, of the key-value to unlock. */\n  label?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the deleteLock operation. */\nexport type DeleteLockResponse = AppConfigurationDeleteLockHeaders & KeyValue;\n\n/** Optional parameters. */\nexport interface GetRevisionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** A filter used to match keys. */\n  key?: string;\n  /** A filter used to match labels */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n}\n\n/** Contains response data for the getRevisions operation. */\nexport type GetRevisionsResponse = AppConfigurationGetRevisionsHeaders &\n  KeyValueListResult;\n\n/** Optional parameters. */\nexport interface CheckRevisionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** A filter used to match keys. */\n  key?: string;\n  /** A filter used to match labels */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n}\n\n/** Contains response data for the checkRevisions operation. */\nexport type CheckRevisionsResponse = AppConfigurationCheckRevisionsHeaders;\n\n/** Optional parameters. */\nexport interface GetOperationDetailsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOperationDetails operation. */\nexport type GetOperationDetailsResponse = OperationDetails;\n\n/** Optional parameters. */\nexport interface GetKeysNextOptionalParams extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the getKeysNext operation. */\nexport type GetKeysNextResponse = AppConfigurationGetKeysNextHeaders &\n  KeyListResult;\n\n/** Optional parameters. */\nexport interface GetKeyValuesNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the getKeyValuesNext operation. */\nexport type GetKeyValuesNextResponse = AppConfigurationGetKeyValuesNextHeaders &\n  KeyValueListResult;\n\n/** Optional parameters. */\nexport interface GetSnapshotsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSnapshotsNext operation. */\nexport type GetSnapshotsNextResponse = AppConfigurationGetSnapshotsNextHeaders &\n  SnapshotListResult;\n\n/** Optional parameters. */\nexport interface GetLabelsNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the getLabelsNext operation. */\nexport type GetLabelsNextResponse = AppConfigurationGetLabelsNextHeaders &\n  LabelListResult;\n\n/** Optional parameters. */\nexport interface GetRevisionsNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the getRevisionsNext operation. */\nexport type GetRevisionsNextResponse = AppConfigurationGetRevisionsNextHeaders &\n  KeyValueListResult;\n\n/** Optional parameters. */\nexport interface AppConfigurationOptionalParams\n  extends coreHttpCompat.ExtendedServiceClientOptions {\n  /** Used to guarantee real-time consistency between requests. */\n  syncToken?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"],"names":["createClientLogger","__rest","isDefined","KeyValueMapper","ConfigurationSnapshotMapper","SnapshotUpdateParametersMapper","coreHttpCompat","createHttpPoller","coreClient","Mappers.KeyListResult","Mappers.AppConfigurationGetKeysHeaders","Mappers.ErrorModel","Parameters.name","Parameters.apiVersion","Parameters.after","Parameters.endpoint","Parameters.accept","Parameters.syncToken","Parameters.acceptDatetime","Mappers.AppConfigurationCheckKeysHeaders","Mappers.KeyValueListResult","Mappers.AppConfigurationGetKeyValuesHeaders","Parameters.key","Parameters.label","Parameters.select","Parameters.snapshot","Parameters.accept1","Parameters.ifMatch","Parameters.ifNoneMatch","Mappers.AppConfigurationCheckKeyValuesHeaders","Mappers.KeyValue","Mappers.AppConfigurationGetKeyValueHeaders","Parameters.key1","Parameters.accept2","Mappers.AppConfigurationPutKeyValueHeaders","Parameters.entity","Parameters.contentType","Mappers.AppConfigurationDeleteKeyValueHeaders","Mappers.AppConfigurationCheckKeyValueHeaders","Mappers.SnapshotListResult","Mappers.AppConfigurationGetSnapshotsHeaders","Parameters.select1","Parameters.status","Parameters.accept3","Mappers.AppConfigurationCheckSnapshotsHeaders","Mappers.ConfigurationSnapshot","Mappers.AppConfigurationGetSnapshotHeaders","Parameters.name1","Parameters.accept4","Mappers.AppConfigurationCreateSnapshotHeaders","Parameters.entity1","Parameters.name2","Parameters.contentType1","Mappers.AppConfigurationUpdateSnapshotHeaders","Parameters.entity2","Parameters.contentType2","Mappers.AppConfigurationCheckSnapshotHeaders","Mappers.LabelListResult","Mappers.AppConfigurationGetLabelsHeaders","Parameters.select2","Parameters.accept5","Mappers.AppConfigurationCheckLabelsHeaders","Mappers.AppConfigurationPutLockHeaders","Mappers.AppConfigurationDeleteLockHeaders","Mappers.AppConfigurationGetRevisionsHeaders","Mappers.AppConfigurationCheckRevisionsHeaders","Mappers.OperationDetails","Parameters.snapshot1","Parameters.accept6","Mappers.AppConfigurationGetKeysNextHeaders","Parameters.nextLink","Mappers.AppConfigurationGetKeyValuesNextHeaders","Mappers.AppConfigurationGetSnapshotsNextHeaders","Mappers.AppConfigurationGetLabelsNextHeaders","Mappers.AppConfigurationGetRevisionsNextHeaders","computeSha256Hash","computeSha256Hmac","createTracingClient","isTokenCredential","bearerTokenAuthenticationPolicy","getPagedAsyncIterator","KnownConfigurationSnapshotStatus","KnownSnapshotComposition"],"mappings":"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"}