{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/generated/src/models/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAmXH,2EAA2E;AAC3E,MAAM,CAAN,IAAY,uBAGX;AAHD,WAAY,uBAAuB;IACjC,+BAA+B;IAC/B,oEAAyC,CAAA;AAC3C,CAAC,EAHW,uBAAuB,KAAvB,uBAAuB,QAGlC;AAWD,uEAAuE;AACvE,MAAM,CAAN,IAAY,mBAiBX;AAjBD,WAAY,mBAAmB;IAC7B,UAAU;IACV,kCAAW,CAAA;IACX,YAAY;IACZ,sCAAe,CAAA;IACf,kBAAkB;IAClB,mDAA4B,CAAA;IAC5B,YAAY;IACZ,sCAAe,CAAA;IACf,mBAAmB;IACnB,qDAA8B,CAAA;IAC9B,WAAW;IACX,oCAAa,CAAA;IACb,aAAa;IACb,wCAAiB,CAAA;IACjB,WAAW;IACX,oCAAa,CAAA;AACf,CAAC,EAjBW,mBAAmB,KAAnB,mBAAmB,QAiB9B;AAkBD,uEAAuE;AACvE,MAAM,CAAN,IAAY,mBAuBX;AAvBD,WAAY,mBAAmB;IAC7B,WAAW;IACX,oCAAa,CAAA;IACb,aAAa;IACb,wCAAiB,CAAA;IACjB,cAAc;IACd,0CAAmB,CAAA;IACnB,sBAAsB;IACtB,2DAAoC,CAAA;IACpC,cAAc;IACd,0CAAmB,CAAA;IACnB,cAAc;IACd,0CAAmB,CAAA;IACnB,sBAAsB;IACtB,2DAAoC,CAAA;IACpC,WAAW;IACX,oCAAa,CAAA;IACb,iBAAiB;IACjB,iDAA0B,CAAA;IAC1B,WAAW;IACX,oCAAa,CAAA;IACb,WAAW;IACX,oCAAa,CAAA;AACf,CAAC,EAvBW,mBAAmB,KAAnB,mBAAmB,QAuB9B;AAqBD,uEAAuE;AACvE,MAAM,CAAN,IAAY,mBASX;AATD,WAAY,mBAAmB;IAC7B,mBAAmB;IACnB,oDAA6B,CAAA;IAC7B,YAAY;IACZ,sCAAe,CAAA;IACf,eAAe;IACf,4CAAqB,CAAA;IACrB,aAAa;IACb,wCAAiB,CAAA;AACnB,CAAC,EATW,mBAAmB,KAAnB,mBAAmB,QAS9B;AAcD,oFAAoF;AACpF,MAAM,CAAN,IAAY,gCASX;AATD,WAAY,gCAAgC;IAC1C,mBAAmB;IACnB,iEAA6B,CAAA;IAC7B,YAAY;IACZ,mDAAe,CAAA;IACf,eAAe;IACf,yDAAqB,CAAA;IACrB,aAAa;IACb,qDAAiB,CAAA;AACnB,CAAC,EATW,gCAAgC,KAAhC,gCAAgC,QAS3C;AAcD,4EAA4E;AAC5E,MAAM,CAAN,IAAY,wBAKX;AALD,WAAY,wBAAwB;IAClC,UAAU;IACV,uCAAW,CAAA;IACX,eAAe;IACf,kDAAsB,CAAA;AACxB,CAAC,EALW,wBAAwB,KAAxB,wBAAwB,QAKnC;AAYD,oEAAoE;AACpE,MAAM,CAAN,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IAC1B,WAAW;IACX,iCAAa,CAAA;AACf,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,QAG3B","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\n\n/** The result of a list request. */\nexport interface KeyListResult {\n  /** The collection value. */\n  items?: Key[];\n  /** The URI that can be used to request the next set of paged results. */\n  nextLink?: string;\n}\n\nexport interface Key {\n  /**\n   * The name of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n}\n\n/** Azure App Configuration error object. */\nexport interface ErrorModel {\n  /** The type of the error. */\n  type?: string;\n  /** A brief summary of the error. */\n  title?: string;\n  /** The name of the parameter that resulted in the error. */\n  name?: string;\n  /** A detailed description of the error. */\n  detail?: string;\n  /** The HTTP status code that the error maps to. */\n  status?: number;\n}\n\n/** The result of a list request. */\nexport interface KeyValueListResult {\n  /** The collection value. */\n  items?: KeyValue[];\n  /** An identifier representing the returned state of the resource. */\n  etag?: string;\n  /** The URI that can be used to request the next set of paged results. */\n  nextLink?: string;\n}\n\nexport interface KeyValue {\n  /** The key of the key-value. */\n  key: string;\n  /** The label the key-value belongs to. */\n  label?: string;\n  /** The content type of the value stored within the key-value. */\n  contentType?: string;\n  /** The value of the key-value. */\n  value?: string;\n  /** A date representing the last time the key-value was modified. */\n  lastModified?: Date;\n  /** The tags of the key-value */\n  tags?: { [propertyName: string]: string };\n  /** Indicates whether the key-value is locked. */\n  locked?: boolean;\n  /** A value representing the current state of the resource. */\n  etag?: string;\n}\n\n/** The result of a snapshot list request. */\nexport interface SnapshotListResult {\n  /** The collection value. */\n  items?: ConfigurationSnapshot[];\n  /** The URI that can be used to request the next set of paged results. */\n  nextLink?: string;\n}\n\n/** Snapshot details include name, filters, expiresOn, sizeInBytes, status, itemCount, and more */\nexport interface ConfigurationSnapshot {\n  /**\n   * The name of the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name: string;\n  /**\n   * The current status of the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: ConfigurationSnapshotStatus;\n  /** A list of filters used to filter the key-values included in the snapshot. */\n  filters: ConfigurationSettingsFilter[];\n  /** The composition type describes how the key-values within the snapshot are composed. The 'key' composition type ensures there are no two key-values containing the same key. The 'key_label' composition type ensures there are no two key-values containing the same key and label. */\n  compositionType?: SnapshotComposition;\n  /**\n   * The time that the snapshot was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * The time that the snapshot will expire.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiresOn?: Date;\n  /** The amount of time, in seconds, that a snapshot will remain in the archived state before expiring. This property is only writable during the creation of a snapshot. If not specified, the default lifetime of key-value revisions will be used. */\n  retentionPeriodInSeconds?: number;\n  /**\n   * The size in bytes of the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sizeInBytes?: number;\n  /**\n   * The amount of key-values in the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly itemCount?: number;\n  /** The tags of the snapshot. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * A value representing the current state of the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** Enables filtering of key-values. */\nexport interface ConfigurationSettingsFilter {\n  /** Filters key-values by their key field. */\n  keyFilter: string;\n  /** Filters key-values by their label field. */\n  labelFilter?: string;\n}\n\n/** Parameters used to update a snapshot. */\nexport interface SnapshotUpdateParameters {\n  /** The desired status of the snapshot. */\n  status?: SnapshotStatus;\n}\n\n/** The result of a list request. */\nexport interface LabelListResult {\n  /** The collection value. */\n  items?: Label[];\n  /** The URI that can be used to request the next set of paged results. */\n  nextLink?: string;\n}\n\nexport interface Label {\n  /**\n   * The name of the label.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n}\n\n/** Details of a long running operation. */\nexport interface OperationDetails {\n  /** The unique id of the operation. */\n  id: string;\n  /** The current status of the operation */\n  status: State;\n  /** An error, available when the status is `Failed`, describing why the operation failed. */\n  error?: ErrorDetail;\n}\n\n/** The details of an error. */\nexport interface ErrorDetail {\n  /** One of a server-defined set of error codes. */\n  code: string;\n  /** A human-readable representation of the error. */\n  message: string;\n  /** An array of details about specific errors that led to this reported error. */\n  details?: ErrorDetail[];\n  /** An object containing more specific information than the current object about the error. */\n  innererror?: InnerError;\n}\n\n/** An object containing specific information about an error. */\nexport interface InnerError {\n  /** One of a server-defined set of error codes. */\n  code?: string;\n  /** An object containing more specific information than the current object about the error. */\n  innererror?: InnerError;\n}\n\n/** Defines headers for AppConfiguration_getKeys operation. */\nexport interface AppConfigurationGetKeysHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_checkKeys operation. */\nexport interface AppConfigurationCheckKeysHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getKeyValues operation. */\nexport interface AppConfigurationGetKeyValuesHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_checkKeyValues operation. */\nexport interface AppConfigurationCheckKeyValuesHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getKeyValue operation. */\nexport interface AppConfigurationGetKeyValueHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_putKeyValue operation. */\nexport interface AppConfigurationPutKeyValueHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_deleteKeyValue operation. */\nexport interface AppConfigurationDeleteKeyValueHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_checkKeyValue operation. */\nexport interface AppConfigurationCheckKeyValueHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getSnapshots operation. */\nexport interface AppConfigurationGetSnapshotsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_checkSnapshots operation. */\nexport interface AppConfigurationCheckSnapshotsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getSnapshot operation. */\nexport interface AppConfigurationGetSnapshotHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n  /** Includes links to related resources. */\n  link?: string;\n}\n\n/** Defines headers for AppConfiguration_createSnapshot operation. */\nexport interface AppConfigurationCreateSnapshotHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n  /** Includes links to related resources. */\n  link?: string;\n  /** The URL to track the status of the long running operation. */\n  operationLocation?: string;\n}\n\n/** Defines headers for AppConfiguration_updateSnapshot operation. */\nexport interface AppConfigurationUpdateSnapshotHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n  /** Includes links to related resources. */\n  link?: string;\n}\n\n/** Defines headers for AppConfiguration_checkSnapshot operation. */\nexport interface AppConfigurationCheckSnapshotHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n  /** Includes links to related resources. */\n  link?: string;\n}\n\n/** Defines headers for AppConfiguration_getLabels operation. */\nexport interface AppConfigurationGetLabelsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_checkLabels operation. */\nexport interface AppConfigurationCheckLabelsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_putLock operation. */\nexport interface AppConfigurationPutLockHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_deleteLock operation. */\nexport interface AppConfigurationDeleteLockHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getRevisions operation. */\nexport interface AppConfigurationGetRevisionsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_checkRevisions operation. */\nexport interface AppConfigurationCheckRevisionsHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getKeysNext operation. */\nexport interface AppConfigurationGetKeysNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getKeyValuesNext operation. */\nexport interface AppConfigurationGetKeyValuesNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Defines headers for AppConfiguration_getSnapshotsNext operation. */\nexport interface AppConfigurationGetSnapshotsNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getLabelsNext operation. */\nexport interface AppConfigurationGetLabelsNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n}\n\n/** Defines headers for AppConfiguration_getRevisionsNext operation. */\nexport interface AppConfigurationGetRevisionsNextHeaders {\n  /** Enables real-time consistency between requests by providing the returned value in the next request made to the server. */\n  syncToken?: string;\n  /** An identifier representing the returned state of the resource. */\n  eTag?: string;\n}\n\n/** Known values of {@link ApiVersion20231001} that the service accepts. */\nexport enum KnownApiVersion20231001 {\n  /** Api Version '2023-10-01' */\n  TwoThousandTwentyThree1001 = \"2023-10-01\",\n}\n\n/**\n * Defines values for ApiVersion20231001. \\\n * {@link KnownApiVersion20231001} can be used interchangeably with ApiVersion20231001,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **2023-10-01**: Api Version '2023-10-01'\n */\nexport type ApiVersion20231001 = string;\n\n/** Known values of {@link KeyValueFields} that the service accepts. */\nexport enum KnownKeyValueFields {\n  /** Key */\n  Key = \"key\",\n  /** Label */\n  Label = \"label\",\n  /** ContentType */\n  ContentType = \"content_type\",\n  /** Value */\n  Value = \"value\",\n  /** LastModified */\n  LastModified = \"last_modified\",\n  /** Tags */\n  Tags = \"tags\",\n  /** Locked */\n  Locked = \"locked\",\n  /** Etag */\n  Etag = \"etag\",\n}\n\n/**\n * Defines values for KeyValueFields. \\\n * {@link KnownKeyValueFields} can be used interchangeably with KeyValueFields,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **key** \\\n * **label** \\\n * **content_type** \\\n * **value** \\\n * **last_modified** \\\n * **tags** \\\n * **locked** \\\n * **etag**\n */\nexport type KeyValueFields = string;\n\n/** Known values of {@link SnapshotFields} that the service accepts. */\nexport enum KnownSnapshotFields {\n  /** Name */\n  Name = \"name\",\n  /** Status */\n  Status = \"status\",\n  /** Filters */\n  Filters = \"filters\",\n  /** CompositionType */\n  CompositionType = \"composition_type\",\n  /** Created */\n  Created = \"created\",\n  /** Expires */\n  Expires = \"expires\",\n  /** RetentionPeriod */\n  RetentionPeriod = \"retention_period\",\n  /** Size */\n  Size = \"size\",\n  /** ItemsCount */\n  ItemsCount = \"items_count\",\n  /** Tags */\n  Tags = \"tags\",\n  /** Etag */\n  Etag = \"etag\",\n}\n\n/**\n * Defines values for SnapshotFields. \\\n * {@link KnownSnapshotFields} can be used interchangeably with SnapshotFields,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **name** \\\n * **status** \\\n * **filters** \\\n * **composition_type** \\\n * **created** \\\n * **expires** \\\n * **retention_period** \\\n * **size** \\\n * **items_count** \\\n * **tags** \\\n * **etag**\n */\nexport type SnapshotFields = string;\n\n/** Known values of {@link SnapshotStatus} that the service accepts. */\nexport enum KnownSnapshotStatus {\n  /** Provisioning */\n  Provisioning = \"provisioning\",\n  /** Ready */\n  Ready = \"ready\",\n  /** Archived */\n  Archived = \"archived\",\n  /** Failed */\n  Failed = \"failed\",\n}\n\n/**\n * Defines values for SnapshotStatus. \\\n * {@link KnownSnapshotStatus} can be used interchangeably with SnapshotStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **provisioning** \\\n * **ready** \\\n * **archived** \\\n * **failed**\n */\nexport type SnapshotStatus = string;\n\n/** Known values of {@link ConfigurationSnapshotStatus} that the service accepts. */\nexport enum KnownConfigurationSnapshotStatus {\n  /** Provisioning */\n  Provisioning = \"provisioning\",\n  /** Ready */\n  Ready = \"ready\",\n  /** Archived */\n  Archived = \"archived\",\n  /** Failed */\n  Failed = \"failed\",\n}\n\n/**\n * Defines values for ConfigurationSnapshotStatus. \\\n * {@link KnownConfigurationSnapshotStatus} can be used interchangeably with ConfigurationSnapshotStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **provisioning** \\\n * **ready** \\\n * **archived** \\\n * **failed**\n */\nexport type ConfigurationSnapshotStatus = string;\n\n/** Known values of {@link SnapshotComposition} that the service accepts. */\nexport enum KnownSnapshotComposition {\n  /** Key */\n  Key = \"key\",\n  /** KeyLabel */\n  KeyLabel = \"key_label\",\n}\n\n/**\n * Defines values for SnapshotComposition. \\\n * {@link KnownSnapshotComposition} can be used interchangeably with SnapshotComposition,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **key** \\\n * **key_label**\n */\nexport type SnapshotComposition = string;\n\n/** Known values of {@link LabelFields} that the service accepts. */\nexport enum KnownLabelFields {\n  /** Name */\n  Name = \"name\",\n}\n\n/**\n * Defines values for LabelFields. \\\n * {@link KnownLabelFields} can be used interchangeably with LabelFields,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **name**\n */\nexport type LabelFields = string;\n/** Defines values for State. */\nexport type State =\n  | \"NotStarted\"\n  | \"Running\"\n  | \"Succeeded\"\n  | \"Failed\"\n  | \"Canceled\";\n\n/** Optional parameters. */\nexport interface GetKeysOptionalParams extends coreClient.OperationOptions {\n  /** A filter for the name of the returned keys. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the getKeys operation. */\nexport type GetKeysResponse = AppConfigurationGetKeysHeaders & KeyListResult;\n\n/** Optional parameters. */\nexport interface CheckKeysOptionalParams extends coreClient.OperationOptions {\n  /** A filter for the name of the returned keys. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the checkKeys operation. */\nexport type CheckKeysResponse = AppConfigurationCheckKeysHeaders;\n\n/** Optional parameters. */\nexport interface GetKeyValuesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** A filter used to match keys. */\n  key?: string;\n  /** A filter used to match labels */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n  /** A filter used get key-values for a snapshot. The value should be the name of the snapshot. Not valid when used with 'key' and 'label' filters. */\n  snapshot?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the getKeyValues operation. */\nexport type GetKeyValuesResponse = AppConfigurationGetKeyValuesHeaders &\n  KeyValueListResult;\n\n/** Optional parameters. */\nexport interface CheckKeyValuesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** A filter used to match keys. */\n  key?: string;\n  /** A filter used to match labels */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n  /** A filter used get key-values for a snapshot. Not valid when used with 'key' and 'label' filters. */\n  snapshot?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the checkKeyValues operation. */\nexport type CheckKeyValuesResponse = AppConfigurationCheckKeyValuesHeaders;\n\n/** Optional parameters. */\nexport interface GetKeyValueOptionalParams extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** The label of the key-value to retrieve. */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the getKeyValue operation. */\nexport type GetKeyValueResponse = AppConfigurationGetKeyValueHeaders & KeyValue;\n\n/** Optional parameters. */\nexport interface PutKeyValueOptionalParams extends coreClient.OperationOptions {\n  /** The label of the key-value to create. */\n  label?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n  /** The key-value to create. */\n  entity?: KeyValue;\n}\n\n/** Contains response data for the putKeyValue operation. */\nexport type PutKeyValueResponse = AppConfigurationPutKeyValueHeaders & KeyValue;\n\n/** Optional parameters. */\nexport interface DeleteKeyValueOptionalParams\n  extends coreClient.OperationOptions {\n  /** The label of the key-value to delete. */\n  label?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the deleteKeyValue operation. */\nexport type DeleteKeyValueResponse = AppConfigurationDeleteKeyValueHeaders &\n  KeyValue;\n\n/** Optional parameters. */\nexport interface CheckKeyValueOptionalParams\n  extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** The label of the key-value to retrieve. */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the checkKeyValue operation. */\nexport type CheckKeyValueResponse = AppConfigurationCheckKeyValueHeaders;\n\n/** Optional parameters. */\nexport interface GetSnapshotsOptionalParams\n  extends coreClient.OperationOptions {\n  /** A filter for the name of the returned snapshots. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: SnapshotFields[];\n  /** Used to filter returned snapshots by their status property. */\n  status?: SnapshotStatus[];\n}\n\n/** Contains response data for the getSnapshots operation. */\nexport type GetSnapshotsResponse = AppConfigurationGetSnapshotsHeaders &\n  SnapshotListResult;\n\n/** Optional parameters. */\nexport interface CheckSnapshotsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n}\n\n/** Contains response data for the checkSnapshots operation. */\nexport type CheckSnapshotsResponse = AppConfigurationCheckSnapshotsHeaders;\n\n/** Optional parameters. */\nexport interface GetSnapshotOptionalParams extends coreClient.OperationOptions {\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: SnapshotFields[];\n}\n\n/** Contains response data for the getSnapshot operation. */\nexport type GetSnapshotResponse = AppConfigurationGetSnapshotHeaders &\n  ConfigurationSnapshot;\n\n/** Optional parameters. */\nexport interface CreateSnapshotOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createSnapshot operation. */\nexport type CreateSnapshotResponse = AppConfigurationCreateSnapshotHeaders &\n  ConfigurationSnapshot;\n\n/** Optional parameters. */\nexport interface UpdateSnapshotOptionalParams\n  extends coreClient.OperationOptions {\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the updateSnapshot operation. */\nexport type UpdateSnapshotResponse = AppConfigurationUpdateSnapshotHeaders &\n  ConfigurationSnapshot;\n\n/** Optional parameters. */\nexport interface CheckSnapshotOptionalParams\n  extends coreClient.OperationOptions {\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the checkSnapshot operation. */\nexport type CheckSnapshotResponse = AppConfigurationCheckSnapshotHeaders;\n\n/** Optional parameters. */\nexport interface GetLabelsOptionalParams extends coreClient.OperationOptions {\n  /** A filter for the name of the returned labels. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: LabelFields[];\n}\n\n/** Contains response data for the getLabels operation. */\nexport type GetLabelsResponse = AppConfigurationGetLabelsHeaders &\n  LabelListResult;\n\n/** Optional parameters. */\nexport interface CheckLabelsOptionalParams extends coreClient.OperationOptions {\n  /** A filter for the name of the returned labels. */\n  name?: string;\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: LabelFields[];\n}\n\n/** Contains response data for the checkLabels operation. */\nexport type CheckLabelsResponse = AppConfigurationCheckLabelsHeaders;\n\n/** Optional parameters. */\nexport interface PutLockOptionalParams extends coreClient.OperationOptions {\n  /** The label, if any, of the key-value to lock. */\n  label?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the putLock operation. */\nexport type PutLockResponse = AppConfigurationPutLockHeaders & KeyValue;\n\n/** Optional parameters. */\nexport interface DeleteLockOptionalParams extends coreClient.OperationOptions {\n  /** The label, if any, of the key-value to unlock. */\n  label?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the deleteLock operation. */\nexport type DeleteLockResponse = AppConfigurationDeleteLockHeaders & KeyValue;\n\n/** Optional parameters. */\nexport interface GetRevisionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** A filter used to match keys. */\n  key?: string;\n  /** A filter used to match labels */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n}\n\n/** Contains response data for the getRevisions operation. */\nexport type GetRevisionsResponse = AppConfigurationGetRevisionsHeaders &\n  KeyValueListResult;\n\n/** Optional parameters. */\nexport interface CheckRevisionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Instructs the server to return elements that appear after the element referred to by the specified token. */\n  after?: string;\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** A filter used to match keys. */\n  key?: string;\n  /** A filter used to match labels */\n  label?: string;\n  /** Used to select what fields are present in the returned resource(s). */\n  select?: KeyValueFields[];\n}\n\n/** Contains response data for the checkRevisions operation. */\nexport type CheckRevisionsResponse = AppConfigurationCheckRevisionsHeaders;\n\n/** Optional parameters. */\nexport interface GetOperationDetailsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOperationDetails operation. */\nexport type GetOperationDetailsResponse = OperationDetails;\n\n/** Optional parameters. */\nexport interface GetKeysNextOptionalParams extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the getKeysNext operation. */\nexport type GetKeysNextResponse = AppConfigurationGetKeysNextHeaders &\n  KeyListResult;\n\n/** Optional parameters. */\nexport interface GetKeyValuesNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n  /** Used to perform an operation only if the targeted resource's etag matches the value provided. */\n  ifMatch?: string;\n  /** Used to perform an operation only if the targeted resource's etag does not match the value provided. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the getKeyValuesNext operation. */\nexport type GetKeyValuesNextResponse = AppConfigurationGetKeyValuesNextHeaders &\n  KeyValueListResult;\n\n/** Optional parameters. */\nexport interface GetSnapshotsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSnapshotsNext operation. */\nexport type GetSnapshotsNextResponse = AppConfigurationGetSnapshotsNextHeaders &\n  SnapshotListResult;\n\n/** Optional parameters. */\nexport interface GetLabelsNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the getLabelsNext operation. */\nexport type GetLabelsNextResponse = AppConfigurationGetLabelsNextHeaders &\n  LabelListResult;\n\n/** Optional parameters. */\nexport interface GetRevisionsNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Requests the server to respond with the state of the resource at the specified time. */\n  acceptDatetime?: string;\n}\n\n/** Contains response data for the getRevisionsNext operation. */\nexport type GetRevisionsNextResponse = AppConfigurationGetRevisionsNextHeaders &\n  KeyValueListResult;\n\n/** Optional parameters. */\nexport interface AppConfigurationOptionalParams\n  extends coreHttpCompat.ExtendedServiceClientOptions {\n  /** Used to guarantee real-time consistency between requests. */\n  syncToken?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}