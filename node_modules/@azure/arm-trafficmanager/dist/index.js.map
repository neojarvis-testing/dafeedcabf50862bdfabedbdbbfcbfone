{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/endpoints.ts","../src/operations/profiles.ts","../src/operations/geographicHierarchies.ts","../src/operations/heatMap.ts","../src/operations/trafficManagerUserMetricsKeys.ts","../src/trafficManagerManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Subnet first address, scope, and/or last address. */\nexport interface EndpointPropertiesSubnetsItem {\n  /** First address in the subnet. */\n  first?: string;\n  /** Last address in the subnet. */\n  last?: string;\n  /** Block size (number of leading bits in the subnet mask). */\n  scope?: number;\n}\n\n/** Custom header name and value. */\nexport interface EndpointPropertiesCustomHeadersItem {\n  /** Header name. */\n  name?: string;\n  /** Header value. */\n  value?: string;\n}\n\n/** The core properties of ARM resources */\nexport interface Resource {\n  /** Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName} */\n  id?: string;\n  /** The name of the resource */\n  name?: string;\n  /** The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles. */\n  type?: string;\n}\n\n/** An error returned by the Azure Resource Manager */\nexport interface CloudError {\n  /** The content of the error. */\n  error?: CloudErrorBody;\n}\n\n/** The content of an error returned by the Azure Resource Manager */\nexport interface CloudErrorBody {\n  /** Error code */\n  code?: string;\n  /** Error message */\n  message?: string;\n  /** Error target */\n  target?: string;\n  /** Error details */\n  details?: CloudErrorBody[];\n}\n\n/** The result of the request or operation. */\nexport interface DeleteOperationResult {\n  /**\n   * The result of the operation or request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationResult?: boolean;\n}\n\n/** Parameters supplied to check Traffic Manager name operation. */\nexport interface CheckTrafficManagerRelativeDnsNameAvailabilityParameters {\n  /** The name of the resource. */\n  name?: string;\n  /** The type of the resource. */\n  type?: string;\n}\n\n/** Class representing a Traffic Manager Name Availability response. */\nexport interface TrafficManagerNameAvailability {\n  /** The relative name. */\n  name?: string;\n  /** Traffic Manager profile resource type. */\n  type?: string;\n  /** Describes whether the relative name is available or not. */\n  nameAvailable?: boolean;\n  /** The reason why the name is not available, when applicable. */\n  reason?: string;\n  /** Descriptive message that explains why the name is not available, when applicable. */\n  message?: string;\n}\n\n/** The list Traffic Manager profiles operation response. */\nexport interface ProfileListResult {\n  /** Gets the list of Traffic manager profiles. */\n  value?: Profile[];\n}\n\n/** Class containing DNS settings in a Traffic Manager profile. */\nexport interface DnsConfig {\n  /** The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile. */\n  relativeName?: string;\n  /**\n   * The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fqdn?: string;\n  /** The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile. */\n  ttl?: number;\n}\n\n/** Class containing endpoint monitoring settings in a Traffic Manager profile. */\nexport interface MonitorConfig {\n  /** The profile-level monitoring status of the Traffic Manager profile. */\n  profileMonitorStatus?: ProfileMonitorStatus;\n  /** The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health. */\n  protocol?: MonitorProtocol;\n  /** The TCP port used to probe for endpoint health. */\n  port?: number;\n  /** The path relative to the endpoint domain name used to probe for endpoint health. */\n  path?: string;\n  /** The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile. */\n  intervalInSeconds?: number;\n  /** The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check. */\n  timeoutInSeconds?: number;\n  /** The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check. */\n  toleratedNumberOfFailures?: number;\n  /** List of custom headers. */\n  customHeaders?: MonitorConfigCustomHeadersItem[];\n  /** List of expected status code ranges. */\n  expectedStatusCodeRanges?: MonitorConfigExpectedStatusCodeRangesItem[];\n}\n\n/** Custom header name and value. */\nexport interface MonitorConfigCustomHeadersItem {\n  /** Header name. */\n  name?: string;\n  /** Header value. */\n  value?: string;\n}\n\n/** Min and max value of a status code range. */\nexport interface MonitorConfigExpectedStatusCodeRangesItem {\n  /** Min status code. */\n  min?: number;\n  /** Max status code. */\n  max?: number;\n}\n\n/** Class representing a region in the Geographic hierarchy used with the Geographic traffic routing method. */\nexport interface Region {\n  /** The code of the region */\n  code?: string;\n  /** The name of the region */\n  name?: string;\n  /** The list of Regions grouped under this Region in the Geographic Hierarchy. */\n  regions?: Region[];\n}\n\n/** Class which is a sparse representation of a Traffic Manager endpoint. */\nexport interface HeatMapEndpoint {\n  /** The ARM Resource ID of this Traffic Manager endpoint. */\n  resourceId?: string;\n  /** A number uniquely identifying this endpoint in query experiences. */\n  endpointId?: number;\n}\n\n/** Class representing a Traffic Manager HeatMap traffic flow properties. */\nexport interface TrafficFlow {\n  /** The IP address that this query experience originated from. */\n  sourceIp?: string;\n  /** The approximate latitude that these queries originated from. */\n  latitude?: number;\n  /** The approximate longitude that these queries originated from. */\n  longitude?: number;\n  /** The query experiences produced in this HeatMap calculation. */\n  queryExperiences?: QueryExperience[];\n}\n\n/** Class representing a Traffic Manager HeatMap query experience properties. */\nexport interface QueryExperience {\n  /** The id of the endpoint from the 'endpoints' array which these queries were routed to. */\n  endpointId: number;\n  /** The number of queries originating from this location. */\n  queryCount: number;\n  /** The latency experienced by queries originating from this location. */\n  latency?: number;\n}\n\n/** The resource model definition for a ARM proxy resource. It will have everything other than required location and tags */\nexport interface ProxyResource extends Resource {}\n\n/** The resource model definition for a ARM tracked top level resource */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The Azure Region where the resource lives */\n  location?: string;\n}\n\n/** Class representing a Traffic Manager endpoint. */\nexport interface Endpoint extends ProxyResource {\n  /** The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'. */\n  targetResourceId?: string;\n  /** The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint. */\n  target?: string;\n  /** The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method. */\n  endpointStatus?: EndpointStatus;\n  /** The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000. */\n  weight?: number;\n  /** The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value. */\n  priority?: number;\n  /** Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method. */\n  endpointLocation?: string;\n  /** The monitoring status of the endpoint. */\n  endpointMonitorStatus?: EndpointMonitorStatus;\n  /** The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'. */\n  minChildEndpoints?: number;\n  /** The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'. */\n  minChildEndpointsIPv4?: number;\n  /** The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'. */\n  minChildEndpointsIPv6?: number;\n  /** The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values. */\n  geoMapping?: string[];\n  /** The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints. */\n  subnets?: EndpointPropertiesSubnetsItem[];\n  /** List of custom headers. */\n  customHeaders?: EndpointPropertiesCustomHeadersItem[];\n  /** If Always Serve is enabled, probing for endpoint health will be disabled and endpoints will be included in the traffic routing method. */\n  alwaysServe?: AlwaysServe;\n}\n\n/** Class representing the Geographic hierarchy used with the Geographic traffic routing method. */\nexport interface TrafficManagerGeographicHierarchy extends ProxyResource {\n  /** The region at the root of the hierarchy from all the regions in the hierarchy can be retrieved. */\n  geographicHierarchy?: Region;\n}\n\n/** Class representing a Traffic Manager HeatMap. */\nexport interface HeatMapModel extends ProxyResource {\n  /** The beginning of the time window for this HeatMap, inclusive. */\n  startTime?: Date;\n  /** The ending of the time window for this HeatMap, exclusive. */\n  endTime?: Date;\n  /** The endpoints used in this HeatMap calculation. */\n  endpoints?: HeatMapEndpoint[];\n  /** The traffic flows produced in this HeatMap calculation. */\n  trafficFlows?: TrafficFlow[];\n}\n\n/** Class representing Traffic Manager User Metrics. */\nexport interface UserMetricsModel extends ProxyResource {\n  /** The key returned by the User Metrics operation. */\n  key?: string;\n}\n\n/** Class representing a Traffic Manager profile. */\nexport interface Profile extends TrackedResource {\n  /** The status of the Traffic Manager profile. */\n  profileStatus?: ProfileStatus;\n  /** The traffic routing method of the Traffic Manager profile. */\n  trafficRoutingMethod?: TrafficRoutingMethod;\n  /** The DNS settings of the Traffic Manager profile. */\n  dnsConfig?: DnsConfig;\n  /** The endpoint monitoring settings of the Traffic Manager profile. */\n  monitorConfig?: MonitorConfig;\n  /** The list of endpoints in the Traffic Manager profile. */\n  endpoints?: Endpoint[];\n  /** Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile. */\n  trafficViewEnrollmentStatus?: TrafficViewEnrollmentStatus;\n  /** The list of allowed endpoint record types. */\n  allowedEndpointRecordTypes?: AllowedEndpointRecordType[];\n  /** Maximum number of endpoints to be returned for MultiValue routing type. */\n  maxReturn?: number;\n}\n\n/** Known values of {@link EndpointStatus} that the service accepts. */\nexport enum KnownEndpointStatus {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for EndpointStatus. \\\n * {@link KnownEndpointStatus} can be used interchangeably with EndpointStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type EndpointStatus = string;\n\n/** Known values of {@link EndpointMonitorStatus} that the service accepts. */\nexport enum KnownEndpointMonitorStatus {\n  /** CheckingEndpoint */\n  CheckingEndpoint = \"CheckingEndpoint\",\n  /** Online */\n  Online = \"Online\",\n  /** Degraded */\n  Degraded = \"Degraded\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Inactive */\n  Inactive = \"Inactive\",\n  /** Stopped */\n  Stopped = \"Stopped\",\n  /** Unmonitored */\n  Unmonitored = \"Unmonitored\"\n}\n\n/**\n * Defines values for EndpointMonitorStatus. \\\n * {@link KnownEndpointMonitorStatus} can be used interchangeably with EndpointMonitorStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CheckingEndpoint** \\\n * **Online** \\\n * **Degraded** \\\n * **Disabled** \\\n * **Inactive** \\\n * **Stopped** \\\n * **Unmonitored**\n */\nexport type EndpointMonitorStatus = string;\n\n/** Known values of {@link AlwaysServe} that the service accepts. */\nexport enum KnownAlwaysServe {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for AlwaysServe. \\\n * {@link KnownAlwaysServe} can be used interchangeably with AlwaysServe,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type AlwaysServe = string;\n\n/** Known values of {@link ProfileStatus} that the service accepts. */\nexport enum KnownProfileStatus {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for ProfileStatus. \\\n * {@link KnownProfileStatus} can be used interchangeably with ProfileStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type ProfileStatus = string;\n\n/** Known values of {@link TrafficRoutingMethod} that the service accepts. */\nexport enum KnownTrafficRoutingMethod {\n  /** Performance */\n  Performance = \"Performance\",\n  /** Priority */\n  Priority = \"Priority\",\n  /** Weighted */\n  Weighted = \"Weighted\",\n  /** Geographic */\n  Geographic = \"Geographic\",\n  /** MultiValue */\n  MultiValue = \"MultiValue\",\n  /** Subnet */\n  Subnet = \"Subnet\"\n}\n\n/**\n * Defines values for TrafficRoutingMethod. \\\n * {@link KnownTrafficRoutingMethod} can be used interchangeably with TrafficRoutingMethod,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Performance** \\\n * **Priority** \\\n * **Weighted** \\\n * **Geographic** \\\n * **MultiValue** \\\n * **Subnet**\n */\nexport type TrafficRoutingMethod = string;\n\n/** Known values of {@link ProfileMonitorStatus} that the service accepts. */\nexport enum KnownProfileMonitorStatus {\n  /** CheckingEndpoints */\n  CheckingEndpoints = \"CheckingEndpoints\",\n  /** Online */\n  Online = \"Online\",\n  /** Degraded */\n  Degraded = \"Degraded\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Inactive */\n  Inactive = \"Inactive\"\n}\n\n/**\n * Defines values for ProfileMonitorStatus. \\\n * {@link KnownProfileMonitorStatus} can be used interchangeably with ProfileMonitorStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CheckingEndpoints** \\\n * **Online** \\\n * **Degraded** \\\n * **Disabled** \\\n * **Inactive**\n */\nexport type ProfileMonitorStatus = string;\n\n/** Known values of {@link MonitorProtocol} that the service accepts. */\nexport enum KnownMonitorProtocol {\n  /** Http */\n  Http = \"HTTP\",\n  /** Https */\n  Https = \"HTTPS\",\n  /** TCP */\n  TCP = \"TCP\"\n}\n\n/**\n * Defines values for MonitorProtocol. \\\n * {@link KnownMonitorProtocol} can be used interchangeably with MonitorProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HTTP** \\\n * **HTTPS** \\\n * **TCP**\n */\nexport type MonitorProtocol = string;\n\n/** Known values of {@link TrafficViewEnrollmentStatus} that the service accepts. */\nexport enum KnownTrafficViewEnrollmentStatus {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for TrafficViewEnrollmentStatus. \\\n * {@link KnownTrafficViewEnrollmentStatus} can be used interchangeably with TrafficViewEnrollmentStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type TrafficViewEnrollmentStatus = string;\n\n/** Known values of {@link AllowedEndpointRecordType} that the service accepts. */\nexport enum KnownAllowedEndpointRecordType {\n  /** DomainName */\n  DomainName = \"DomainName\",\n  /** IPv4Address */\n  IPv4Address = \"IPv4Address\",\n  /** IPv6Address */\n  IPv6Address = \"IPv6Address\",\n  /** Any */\n  Any = \"Any\"\n}\n\n/**\n * Defines values for AllowedEndpointRecordType. \\\n * {@link KnownAllowedEndpointRecordType} can be used interchangeably with AllowedEndpointRecordType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DomainName** \\\n * **IPv4Address** \\\n * **IPv6Address** \\\n * **Any**\n */\nexport type AllowedEndpointRecordType = string;\n/** Defines values for EndpointType. */\nexport type EndpointType =\n  | \"AzureEndpoints\"\n  | \"ExternalEndpoints\"\n  | \"NestedEndpoints\";\n\n/** Optional parameters. */\nexport interface EndpointsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type EndpointsUpdateResponse = Endpoint;\n\n/** Optional parameters. */\nexport interface EndpointsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type EndpointsGetResponse = Endpoint;\n\n/** Optional parameters. */\nexport interface EndpointsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type EndpointsCreateOrUpdateResponse = Endpoint;\n\n/** Optional parameters. */\nexport interface EndpointsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the delete operation. */\nexport type EndpointsDeleteResponse = DeleteOperationResult;\n\n/** Optional parameters. */\nexport interface ProfilesCheckTrafficManagerRelativeDnsNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkTrafficManagerRelativeDnsNameAvailability operation. */\nexport type ProfilesCheckTrafficManagerRelativeDnsNameAvailabilityResponse = TrafficManagerNameAvailability;\n\n/** Optional parameters. */\nexport interface ProfilesCheckTrafficManagerNameAvailabilityV2OptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkTrafficManagerNameAvailabilityV2 operation. */\nexport type ProfilesCheckTrafficManagerNameAvailabilityV2Response = TrafficManagerNameAvailability;\n\n/** Optional parameters. */\nexport interface ProfilesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ProfilesListByResourceGroupResponse = ProfileListResult;\n\n/** Optional parameters. */\nexport interface ProfilesListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ProfilesListBySubscriptionResponse = ProfileListResult;\n\n/** Optional parameters. */\nexport interface ProfilesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ProfilesGetResponse = Profile;\n\n/** Optional parameters. */\nexport interface ProfilesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ProfilesCreateOrUpdateResponse = Profile;\n\n/** Optional parameters. */\nexport interface ProfilesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the delete operation. */\nexport type ProfilesDeleteResponse = DeleteOperationResult;\n\n/** Optional parameters. */\nexport interface ProfilesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ProfilesUpdateResponse = Profile;\n\n/** Optional parameters. */\nexport interface GeographicHierarchiesGetDefaultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDefault operation. */\nexport type GeographicHierarchiesGetDefaultResponse = TrafficManagerGeographicHierarchy;\n\n/** Optional parameters. */\nexport interface HeatMapGetOptionalParams extends coreClient.OperationOptions {\n  /** The top left latitude,longitude pair of the rectangular viewport to query for. */\n  topLeft?: number[];\n  /** The bottom right latitude,longitude pair of the rectangular viewport to query for. */\n  botRight?: number[];\n}\n\n/** Contains response data for the get operation. */\nexport type HeatMapGetResponse = HeatMapModel;\n\n/** Optional parameters. */\nexport interface TrafficManagerUserMetricsKeysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type TrafficManagerUserMetricsKeysGetResponse = UserMetricsModel;\n\n/** Optional parameters. */\nexport interface TrafficManagerUserMetricsKeysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type TrafficManagerUserMetricsKeysCreateOrUpdateResponse = UserMetricsModel;\n\n/** Optional parameters. */\nexport interface TrafficManagerUserMetricsKeysDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the delete operation. */\nexport type TrafficManagerUserMetricsKeysDeleteResponse = DeleteOperationResult;\n\n/** Optional parameters. */\nexport interface TrafficManagerManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const EndpointPropertiesSubnetsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointPropertiesSubnetsItem\",\n    modelProperties: {\n      first: {\n        serializedName: \"first\",\n        type: {\n          name: \"String\"\n        }\n      },\n      last: {\n        serializedName: \"last\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointPropertiesCustomHeadersItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointPropertiesCustomHeadersItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudErrorBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudErrorBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CloudErrorBody\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DeleteOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeleteOperationResult\",\n    modelProperties: {\n      operationResult: {\n        serializedName: \"boolean\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckTrafficManagerRelativeDnsNameAvailabilityParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckTrafficManagerRelativeDnsNameAvailabilityParameters\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrafficManagerNameAvailability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrafficManagerNameAvailability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProfileListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProfileListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Profile\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DnsConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DnsConfig\",\n    modelProperties: {\n      relativeName: {\n        serializedName: \"relativeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fqdn: {\n        serializedName: \"fqdn\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MonitorConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MonitorConfig\",\n    modelProperties: {\n      profileMonitorStatus: {\n        serializedName: \"profileMonitorStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      protocol: {\n        serializedName: \"protocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      intervalInSeconds: {\n        serializedName: \"intervalInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeoutInSeconds: {\n        serializedName: \"timeoutInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      toleratedNumberOfFailures: {\n        serializedName: \"toleratedNumberOfFailures\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      customHeaders: {\n        serializedName: \"customHeaders\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MonitorConfigCustomHeadersItem\"\n            }\n          }\n        }\n      },\n      expectedStatusCodeRanges: {\n        serializedName: \"expectedStatusCodeRanges\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MonitorConfigExpectedStatusCodeRangesItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MonitorConfigCustomHeadersItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MonitorConfigCustomHeadersItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MonitorConfigExpectedStatusCodeRangesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MonitorConfigExpectedStatusCodeRangesItem\",\n    modelProperties: {\n      min: {\n        serializedName: \"min\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      max: {\n        serializedName: \"max\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Region: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Region\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      regions: {\n        serializedName: \"regions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Region\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HeatMapEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HeatMapEndpoint\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointId: {\n        serializedName: \"endpointId\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrafficFlow: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrafficFlow\",\n    modelProperties: {\n      sourceIp: {\n        serializedName: \"sourceIp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      latitude: {\n        serializedName: \"latitude\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      longitude: {\n        serializedName: \"longitude\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      queryExperiences: {\n        serializedName: \"queryExperiences\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryExperience\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryExperience: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryExperience\",\n    modelProperties: {\n      endpointId: {\n        serializedName: \"endpointId\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      queryCount: {\n        serializedName: \"queryCount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      latency: {\n        serializedName: \"latency\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Endpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Endpoint\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      targetResourceId: {\n        serializedName: \"properties.targetResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"properties.target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointStatus: {\n        serializedName: \"properties.endpointStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      weight: {\n        serializedName: \"properties.weight\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      priority: {\n        serializedName: \"properties.priority\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      endpointLocation: {\n        serializedName: \"properties.endpointLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointMonitorStatus: {\n        serializedName: \"properties.endpointMonitorStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      minChildEndpoints: {\n        serializedName: \"properties.minChildEndpoints\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minChildEndpointsIPv4: {\n        serializedName: \"properties.minChildEndpointsIPv4\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minChildEndpointsIPv6: {\n        serializedName: \"properties.minChildEndpointsIPv6\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      geoMapping: {\n        serializedName: \"properties.geoMapping\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      subnets: {\n        serializedName: \"properties.subnets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EndpointPropertiesSubnetsItem\"\n            }\n          }\n        }\n      },\n      customHeaders: {\n        serializedName: \"properties.customHeaders\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EndpointPropertiesCustomHeadersItem\"\n            }\n          }\n        }\n      },\n      alwaysServe: {\n        serializedName: \"properties.alwaysServe\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrafficManagerGeographicHierarchy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrafficManagerGeographicHierarchy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      geographicHierarchy: {\n        serializedName: \"properties.geographicHierarchy\",\n        type: {\n          name: \"Composite\",\n          className: \"Region\"\n        }\n      }\n    }\n  }\n};\n\nexport const HeatMapModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HeatMapModel\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      startTime: {\n        serializedName: \"properties.startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endpoints: {\n        serializedName: \"properties.endpoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"HeatMapEndpoint\"\n            }\n          }\n        }\n      },\n      trafficFlows: {\n        serializedName: \"properties.trafficFlows\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TrafficFlow\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserMetricsModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserMetricsModel\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      key: {\n        serializedName: \"properties.key\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Profile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Profile\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      profileStatus: {\n        serializedName: \"properties.profileStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trafficRoutingMethod: {\n        serializedName: \"properties.trafficRoutingMethod\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsConfig: {\n        serializedName: \"properties.dnsConfig\",\n        type: {\n          name: \"Composite\",\n          className: \"DnsConfig\"\n        }\n      },\n      monitorConfig: {\n        serializedName: \"properties.monitorConfig\",\n        type: {\n          name: \"Composite\",\n          className: \"MonitorConfig\"\n        }\n      },\n      endpoints: {\n        serializedName: \"properties.endpoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Endpoint\"\n            }\n          }\n        }\n      },\n      trafficViewEnrollmentStatus: {\n        serializedName: \"properties.trafficViewEnrollmentStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedEndpointRecordTypes: {\n        serializedName: \"properties.allowedEndpointRecordTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      maxReturn: {\n        serializedName: \"properties.maxReturn\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  Endpoint as EndpointMapper,\n  CheckTrafficManagerRelativeDnsNameAvailabilityParameters as CheckTrafficManagerRelativeDnsNameAvailabilityParametersMapper,\n  Profile as ProfileMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: EndpointMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const profileName: OperationURLParameter = {\n  parameterPath: \"profileName\",\n  mapper: {\n    serializedName: \"profileName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endpointType: OperationURLParameter = {\n  parameterPath: \"endpointType\",\n  mapper: {\n    serializedName: \"endpointType\",\n    required: true,\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"AzureEndpoints\", \"ExternalEndpoints\", \"NestedEndpoints\"]\n    }\n  }\n};\n\nexport const endpointName: OperationURLParameter = {\n  parameterPath: \"endpointName\",\n  mapper: {\n    serializedName: \"endpointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-04-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CheckTrafficManagerRelativeDnsNameAvailabilityParametersMapper\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ProfileMapper\n};\n\nexport const heatMapType: OperationURLParameter = {\n  parameterPath: \"heatMapType\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"heatMapType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const topLeft: OperationQueryParameter = {\n  parameterPath: [\"options\", \"topLeft\"],\n  mapper: {\n    constraints: {\n      MinItems: 2,\n      MaxItems: 2\n    },\n    serializedName: \"topLeft\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"CSV\"\n};\n\nexport const botRight: OperationQueryParameter = {\n  parameterPath: [\"options\", \"botRight\"],\n  mapper: {\n    constraints: {\n      MinItems: 2,\n      MaxItems: 2\n    },\n    serializedName: \"botRight\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"CSV\"\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Endpoints } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { TrafficManagerManagementClient } from \"../trafficManagerManagementClient\";\nimport {\n  Endpoint,\n  EndpointType,\n  EndpointsUpdateOptionalParams,\n  EndpointsUpdateResponse,\n  EndpointsGetOptionalParams,\n  EndpointsGetResponse,\n  EndpointsCreateOrUpdateOptionalParams,\n  EndpointsCreateOrUpdateResponse,\n  EndpointsDeleteOptionalParams,\n  EndpointsDeleteResponse\n} from \"../models\";\n\n/** Class containing Endpoints operations. */\nexport class EndpointsImpl implements Endpoints {\n  private readonly client: TrafficManagerManagementClient;\n\n  /**\n   * Initialize a new instance of the class Endpoints class.\n   * @param client Reference to the service client\n   */\n  constructor(client: TrafficManagerManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Update a Traffic Manager endpoint.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param profileName The name of the Traffic Manager profile.\n   * @param endpointType The type of the Traffic Manager endpoint to be updated.\n   * @param endpointName The name of the Traffic Manager endpoint to be updated.\n   * @param parameters The Traffic Manager endpoint parameters supplied to the Update operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    profileName: string,\n    endpointType: EndpointType,\n    endpointName: string,\n    parameters: Endpoint,\n    options?: EndpointsUpdateOptionalParams\n  ): Promise<EndpointsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        endpointType,\n        endpointName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a Traffic Manager endpoint.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param profileName The name of the Traffic Manager profile.\n   * @param endpointType The type of the Traffic Manager endpoint.\n   * @param endpointName The name of the Traffic Manager endpoint.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    endpointType: EndpointType,\n    endpointName: string,\n    options?: EndpointsGetOptionalParams\n  ): Promise<EndpointsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointType, endpointName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a Traffic Manager endpoint.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param profileName The name of the Traffic Manager profile.\n   * @param endpointType The type of the Traffic Manager endpoint to be created or updated.\n   * @param endpointName The name of the Traffic Manager endpoint to be created or updated.\n   * @param parameters The Traffic Manager endpoint parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    endpointType: EndpointType,\n    endpointName: string,\n    parameters: Endpoint,\n    options?: EndpointsCreateOrUpdateOptionalParams\n  ): Promise<EndpointsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        profileName,\n        endpointType,\n        endpointName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a Traffic Manager endpoint.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param profileName The name of the Traffic Manager profile.\n   * @param endpointType The type of the Traffic Manager endpoint to be deleted.\n   * @param endpointName The name of the Traffic Manager endpoint to be deleted.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    profileName: string,\n    endpointType: EndpointType,\n    endpointName: string,\n    options?: EndpointsDeleteOptionalParams\n  ): Promise<EndpointsDeleteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, endpointType, endpointName, options },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Endpoint\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointType,\n    Parameters.endpointName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Endpoint\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointType,\n    Parameters.endpointName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Endpoint\n    },\n    201: {\n      bodyMapper: Mappers.Endpoint\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointType,\n    Parameters.endpointName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeleteOperationResult\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.endpointType,\n    Parameters.endpointName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Profiles } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { TrafficManagerManagementClient } from \"../trafficManagerManagementClient\";\nimport {\n  Profile,\n  ProfilesListByResourceGroupOptionalParams,\n  ProfilesListByResourceGroupResponse,\n  ProfilesListBySubscriptionOptionalParams,\n  ProfilesListBySubscriptionResponse,\n  CheckTrafficManagerRelativeDnsNameAvailabilityParameters,\n  ProfilesCheckTrafficManagerRelativeDnsNameAvailabilityOptionalParams,\n  ProfilesCheckTrafficManagerRelativeDnsNameAvailabilityResponse,\n  ProfilesCheckTrafficManagerNameAvailabilityV2OptionalParams,\n  ProfilesCheckTrafficManagerNameAvailabilityV2Response,\n  ProfilesGetOptionalParams,\n  ProfilesGetResponse,\n  ProfilesCreateOrUpdateOptionalParams,\n  ProfilesCreateOrUpdateResponse,\n  ProfilesDeleteOptionalParams,\n  ProfilesDeleteResponse,\n  ProfilesUpdateOptionalParams,\n  ProfilesUpdateResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Profiles operations. */\nexport class ProfilesImpl implements Profiles {\n  private readonly client: TrafficManagerManagementClient;\n\n  /**\n   * Initialize a new instance of the class Profiles class.\n   * @param client Reference to the service client\n   */\n  constructor(client: TrafficManagerManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all Traffic Manager profiles within a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ProfilesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Profile> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ProfilesListByResourceGroupOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Profile[]> {\n    let result: ProfilesListByResourceGroupResponse;\n    result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ProfilesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Profile> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all Traffic Manager profiles within a subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ProfilesListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<Profile> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ProfilesListBySubscriptionOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Profile[]> {\n    let result: ProfilesListBySubscriptionResponse;\n    result = await this._listBySubscription(options);\n    yield result.value || [];\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ProfilesListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<Profile> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks the availability of a Traffic Manager Relative DNS name.\n   * @param parameters The Traffic Manager name parameters supplied to the\n   *                   CheckTrafficManagerNameAvailability operation.\n   * @param options The options parameters.\n   */\n  checkTrafficManagerRelativeDnsNameAvailability(\n    parameters: CheckTrafficManagerRelativeDnsNameAvailabilityParameters,\n    options?: ProfilesCheckTrafficManagerRelativeDnsNameAvailabilityOptionalParams\n  ): Promise<ProfilesCheckTrafficManagerRelativeDnsNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { parameters, options },\n      checkTrafficManagerRelativeDnsNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Checks the availability of a Traffic Manager Relative DNS name.\n   * @param parameters The Traffic Manager name parameters supplied to the\n   *                   CheckTrafficManagerNameAvailability operation.\n   * @param options The options parameters.\n   */\n  checkTrafficManagerNameAvailabilityV2(\n    parameters: CheckTrafficManagerRelativeDnsNameAvailabilityParameters,\n    options?: ProfilesCheckTrafficManagerNameAvailabilityV2OptionalParams\n  ): Promise<ProfilesCheckTrafficManagerNameAvailabilityV2Response> {\n    return this.client.sendOperationRequest(\n      { parameters, options },\n      checkTrafficManagerNameAvailabilityV2OperationSpec\n    );\n  }\n\n  /**\n   * Lists all Traffic Manager profiles within a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ProfilesListByResourceGroupOptionalParams\n  ): Promise<ProfilesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists all Traffic Manager profiles within a subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ProfilesListBySubscriptionOptionalParams\n  ): Promise<ProfilesListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Gets a Traffic Manager profile.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param profileName The name of the Traffic Manager profile.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesGetOptionalParams\n  ): Promise<ProfilesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a Traffic Manager profile.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param profileName The name of the Traffic Manager profile.\n   * @param parameters The Traffic Manager profile parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    profileName: string,\n    parameters: Profile,\n    options?: ProfilesCreateOrUpdateOptionalParams\n  ): Promise<ProfilesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a Traffic Manager profile.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param profileName The name of the Traffic Manager profile to be deleted.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    profileName: string,\n    options?: ProfilesDeleteOptionalParams\n  ): Promise<ProfilesDeleteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Update a Traffic Manager profile.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param profileName The name of the Traffic Manager profile.\n   * @param parameters The Traffic Manager profile parameters supplied to the Update operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    profileName: string,\n    parameters: Profile,\n    options?: ProfilesUpdateOptionalParams\n  ): Promise<ProfilesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, parameters, options },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkTrafficManagerRelativeDnsNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Network/checkTrafficManagerNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TrafficManagerNameAvailability\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst checkTrafficManagerNameAvailabilityV2OperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Network/checkTrafficManagerNameAvailabilityV2\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TrafficManagerNameAvailability\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficmanagerprofiles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Profile\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Profile\n    },\n    201: {\n      bodyMapper: Mappers.Profile\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeleteOperationResult\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Profile\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { GeographicHierarchies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { TrafficManagerManagementClient } from \"../trafficManagerManagementClient\";\nimport {\n  GeographicHierarchiesGetDefaultOptionalParams,\n  GeographicHierarchiesGetDefaultResponse\n} from \"../models\";\n\n/** Class containing GeographicHierarchies operations. */\nexport class GeographicHierarchiesImpl implements GeographicHierarchies {\n  private readonly client: TrafficManagerManagementClient;\n\n  /**\n   * Initialize a new instance of the class GeographicHierarchies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: TrafficManagerManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the default Geographic Hierarchy used by the Geographic traffic routing method.\n   * @param options The options parameters.\n   */\n  getDefault(\n    options?: GeographicHierarchiesGetDefaultOptionalParams\n  ): Promise<GeographicHierarchiesGetDefaultResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getDefaultOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getDefaultOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Network/trafficManagerGeographicHierarchies/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TrafficManagerGeographicHierarchy\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { HeatMap } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { TrafficManagerManagementClient } from \"../trafficManagerManagementClient\";\nimport { HeatMapGetOptionalParams, HeatMapGetResponse } from \"../models\";\n\n/** Class containing HeatMap operations. */\nexport class HeatMapImpl implements HeatMap {\n  private readonly client: TrafficManagerManagementClient;\n\n  /**\n   * Initialize a new instance of the class HeatMap class.\n   * @param client Reference to the service client\n   */\n  constructor(client: TrafficManagerManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets latest heatmap for Traffic Manager profile.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param profileName The name of the Traffic Manager profile.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    profileName: string,\n    options?: HeatMapGetOptionalParams\n  ): Promise<HeatMapGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, profileName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/heatMaps/{heatMapType}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HeatMapModel\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.topLeft,\n    Parameters.botRight\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.profileName,\n    Parameters.subscriptionId,\n    Parameters.heatMapType\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { TrafficManagerUserMetricsKeys } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { TrafficManagerManagementClient } from \"../trafficManagerManagementClient\";\nimport {\n  TrafficManagerUserMetricsKeysGetOptionalParams,\n  TrafficManagerUserMetricsKeysGetResponse,\n  TrafficManagerUserMetricsKeysCreateOrUpdateOptionalParams,\n  TrafficManagerUserMetricsKeysCreateOrUpdateResponse,\n  TrafficManagerUserMetricsKeysDeleteOptionalParams,\n  TrafficManagerUserMetricsKeysDeleteResponse\n} from \"../models\";\n\n/** Class containing TrafficManagerUserMetricsKeys operations. */\nexport class TrafficManagerUserMetricsKeysImpl\n  implements TrafficManagerUserMetricsKeys {\n  private readonly client: TrafficManagerManagementClient;\n\n  /**\n   * Initialize a new instance of the class TrafficManagerUserMetricsKeys class.\n   * @param client Reference to the service client\n   */\n  constructor(client: TrafficManagerManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the subscription-level key used for Real User Metrics collection.\n   * @param options The options parameters.\n   */\n  get(\n    options?: TrafficManagerUserMetricsKeysGetOptionalParams\n  ): Promise<TrafficManagerUserMetricsKeysGetResponse> {\n    return this.client.sendOperationRequest({ options }, getOperationSpec);\n  }\n\n  /**\n   * Create or update a subscription-level key used for Real User Metrics collection.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    options?: TrafficManagerUserMetricsKeysCreateOrUpdateOptionalParams\n  ): Promise<TrafficManagerUserMetricsKeysCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Delete a subscription-level key used for Real User Metrics collection.\n   * @param options The options parameters.\n   */\n  delete(\n    options?: TrafficManagerUserMetricsKeysDeleteOptionalParams\n  ): Promise<TrafficManagerUserMetricsKeysDeleteResponse> {\n    return this.client.sendOperationRequest({ options }, deleteOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficManagerUserMetricsKeys/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserMetricsModel\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficManagerUserMetricsKeys/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.UserMetricsModel\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficManagerUserMetricsKeys/default\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeleteOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  EndpointsImpl,\n  ProfilesImpl,\n  GeographicHierarchiesImpl,\n  HeatMapImpl,\n  TrafficManagerUserMetricsKeysImpl\n} from \"./operations\";\nimport {\n  Endpoints,\n  Profiles,\n  GeographicHierarchies,\n  HeatMap,\n  TrafficManagerUserMetricsKeys\n} from \"./operationsInterfaces\";\nimport { TrafficManagerManagementClientOptionalParams } from \"./models\";\n\nexport class TrafficManagerManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the TrafficManagerManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: TrafficManagerManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: TrafficManagerManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-trafficmanager/6.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2022-04-01\";\n    this.endpoints = new EndpointsImpl(this);\n    this.profiles = new ProfilesImpl(this);\n    this.geographicHierarchies = new GeographicHierarchiesImpl(this);\n    this.heatMap = new HeatMapImpl(this);\n    this.trafficManagerUserMetricsKeys = new TrafficManagerUserMetricsKeysImpl(\n      this\n    );\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  endpoints: Endpoints;\n  profiles: Profiles;\n  geographicHierarchies: GeographicHierarchies;\n  heatMap: HeatMap;\n  trafficManagerUserMetricsKeys: TrafficManagerUserMetricsKeys;\n}\n"],"names":["KnownEndpointStatus","KnownEndpointMonitorStatus","KnownAlwaysServe","KnownProfileStatus","KnownTrafficRoutingMethod","KnownProfileMonitorStatus","KnownMonitorProtocol","KnownTrafficViewEnrollmentStatus","KnownAllowedEndpointRecordType","EndpointMapper","CheckTrafficManagerRelativeDnsNameAvailabilityParametersMapper","ProfileMapper","updateOperationSpec","getOperationSpec","createOrUpdateOperationSpec","deleteOperationSpec","serializer","coreClient","Mappers.Endpoint","Mappers.CloudError","Parameters.parameters","Parameters.apiVersion","Parameters.$host","Parameters.resourceGroupName","Parameters.profileName","Parameters.endpointType","Parameters.endpointName","Parameters.subscriptionId","Parameters.contentType","Parameters.accept","Mappers.DeleteOperationResult","__await","__asyncValues","__asyncDelegator","Mappers.TrafficManagerNameAvailability","Parameters.parameters1","Mappers.ProfileListResult","Mappers.Profile","Parameters.parameters2","Mappers.TrafficManagerGeographicHierarchy","Mappers.HeatMapModel","Parameters.topLeft","Parameters.botRight","Parameters.heatMapType","Mappers.UserMetricsModel","coreRestPipeline"],"mappings":"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"}