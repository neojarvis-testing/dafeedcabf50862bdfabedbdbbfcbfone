"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("tslib"),coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline");function _interopNamespace(t){var a;return t&&t.__esModule?t:(a=Object.create(null),t&&Object.keys(t).forEach(function(e){var r;"default"!==e&&(r=Object.getOwnPropertyDescriptor(t,e),Object.defineProperty(a,e,r.get?r:{enumerable:!0,get:function(){return t[e]}}))}),a.default=t,Object.freeze(a))}var coreClient__namespace=_interopNamespace(coreClient),coreRestPipeline__namespace=_interopNamespace(coreRestPipeline);const pageMap=new WeakMap;function getContinuationToken(e){return"object"!=typeof e||null===e||null==(e=pageMap.get(e))?void 0:e.continuationToken}exports.KnownEndpointStatus=void 0,function(e){e.Enabled="Enabled",e.Disabled="Disabled"}(exports.KnownEndpointStatus||(exports.KnownEndpointStatus={})),exports.KnownEndpointMonitorStatus=void 0,function(e){e.CheckingEndpoint="CheckingEndpoint",e.Online="Online",e.Degraded="Degraded",e.Disabled="Disabled",e.Inactive="Inactive",e.Stopped="Stopped",e.Unmonitored="Unmonitored"}(exports.KnownEndpointMonitorStatus||(exports.KnownEndpointMonitorStatus={})),exports.KnownAlwaysServe=void 0,function(e){e.Enabled="Enabled",e.Disabled="Disabled"}(exports.KnownAlwaysServe||(exports.KnownAlwaysServe={})),exports.KnownProfileStatus=void 0,function(e){e.Enabled="Enabled",e.Disabled="Disabled"}(exports.KnownProfileStatus||(exports.KnownProfileStatus={})),exports.KnownTrafficRoutingMethod=void 0,function(e){e.Performance="Performance",e.Priority="Priority",e.Weighted="Weighted",e.Geographic="Geographic",e.MultiValue="MultiValue",e.Subnet="Subnet"}(exports.KnownTrafficRoutingMethod||(exports.KnownTrafficRoutingMethod={})),exports.KnownProfileMonitorStatus=void 0,function(e){e.CheckingEndpoints="CheckingEndpoints",e.Online="Online",e.Degraded="Degraded",e.Disabled="Disabled",e.Inactive="Inactive"}(exports.KnownProfileMonitorStatus||(exports.KnownProfileMonitorStatus={})),exports.KnownMonitorProtocol=void 0,function(e){e.Http="HTTP",e.Https="HTTPS",e.TCP="TCP"}(exports.KnownMonitorProtocol||(exports.KnownMonitorProtocol={})),exports.KnownTrafficViewEnrollmentStatus=void 0,function(e){e.Enabled="Enabled",e.Disabled="Disabled"}(exports.KnownTrafficViewEnrollmentStatus||(exports.KnownTrafficViewEnrollmentStatus={})),exports.KnownAllowedEndpointRecordType=void 0,function(e){e.DomainName="DomainName",e.IPv4Address="IPv4Address",e.IPv6Address="IPv6Address",e.Any="Any"}(exports.KnownAllowedEndpointRecordType||(exports.KnownAllowedEndpointRecordType={}));const EndpointPropertiesSubnetsItem={type:{name:"Composite",className:"EndpointPropertiesSubnetsItem",modelProperties:{first:{serializedName:"first",type:{name:"String"}},last:{serializedName:"last",type:{name:"String"}},scope:{serializedName:"scope",type:{name:"Number"}}}}},EndpointPropertiesCustomHeadersItem={type:{name:"Composite",className:"EndpointPropertiesCustomHeadersItem",modelProperties:{name:{serializedName:"name",type:{name:"String"}},value:{serializedName:"value",type:{name:"String"}}}}},Resource={type:{name:"Composite",className:"Resource",modelProperties:{id:{serializedName:"id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}}}},CloudError={type:{name:"Composite",className:"CloudError",modelProperties:{error:{serializedName:"error",type:{name:"Composite",className:"CloudErrorBody"}}}}},CloudErrorBody={type:{name:"Composite",className:"CloudErrorBody",modelProperties:{code:{serializedName:"code",type:{name:"String"}},message:{serializedName:"message",type:{name:"String"}},target:{serializedName:"target",type:{name:"String"}},details:{serializedName:"details",type:{name:"Sequence",element:{type:{name:"Composite",className:"CloudErrorBody"}}}}}}},DeleteOperationResult={type:{name:"Composite",className:"DeleteOperationResult",modelProperties:{operationResult:{serializedName:"boolean",readOnly:!0,type:{name:"Boolean"}}}}},CheckTrafficManagerRelativeDnsNameAvailabilityParameters={type:{name:"Composite",className:"CheckTrafficManagerRelativeDnsNameAvailabilityParameters",modelProperties:{name:{serializedName:"name",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}}}},TrafficManagerNameAvailability={type:{name:"Composite",className:"TrafficManagerNameAvailability",modelProperties:{name:{serializedName:"name",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}},nameAvailable:{serializedName:"nameAvailable",type:{name:"Boolean"}},reason:{serializedName:"reason",type:{name:"String"}},message:{serializedName:"message",type:{name:"String"}}}}},ProfileListResult={type:{name:"Composite",className:"ProfileListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"Profile"}}}}}}},DnsConfig={type:{name:"Composite",className:"DnsConfig",modelProperties:{relativeName:{serializedName:"relativeName",type:{name:"String"}},fqdn:{serializedName:"fqdn",readOnly:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"Number"}}}}},MonitorConfig={type:{name:"Composite",className:"MonitorConfig",modelProperties:{profileMonitorStatus:{serializedName:"profileMonitorStatus",type:{name:"String"}},protocol:{serializedName:"protocol",type:{name:"String"}},port:{serializedName:"port",type:{name:"Number"}},path:{serializedName:"path",type:{name:"String"}},intervalInSeconds:{serializedName:"intervalInSeconds",type:{name:"Number"}},timeoutInSeconds:{serializedName:"timeoutInSeconds",type:{name:"Number"}},toleratedNumberOfFailures:{serializedName:"toleratedNumberOfFailures",type:{name:"Number"}},customHeaders:{serializedName:"customHeaders",type:{name:"Sequence",element:{type:{name:"Composite",className:"MonitorConfigCustomHeadersItem"}}}},expectedStatusCodeRanges:{serializedName:"expectedStatusCodeRanges",type:{name:"Sequence",element:{type:{name:"Composite",className:"MonitorConfigExpectedStatusCodeRangesItem"}}}}}}},MonitorConfigCustomHeadersItem={type:{name:"Composite",className:"MonitorConfigCustomHeadersItem",modelProperties:{name:{serializedName:"name",type:{name:"String"}},value:{serializedName:"value",type:{name:"String"}}}}},MonitorConfigExpectedStatusCodeRangesItem={type:{name:"Composite",className:"MonitorConfigExpectedStatusCodeRangesItem",modelProperties:{min:{serializedName:"min",type:{name:"Number"}},max:{serializedName:"max",type:{name:"Number"}}}}},Region={type:{name:"Composite",className:"Region",modelProperties:{code:{serializedName:"code",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},regions:{serializedName:"regions",type:{name:"Sequence",element:{type:{name:"Composite",className:"Region"}}}}}}},HeatMapEndpoint={type:{name:"Composite",className:"HeatMapEndpoint",modelProperties:{resourceId:{serializedName:"resourceId",type:{name:"String"}},endpointId:{serializedName:"endpointId",type:{name:"Number"}}}}},TrafficFlow={type:{name:"Composite",className:"TrafficFlow",modelProperties:{sourceIp:{serializedName:"sourceIp",type:{name:"String"}},latitude:{serializedName:"latitude",type:{name:"Number"}},longitude:{serializedName:"longitude",type:{name:"Number"}},queryExperiences:{serializedName:"queryExperiences",type:{name:"Sequence",element:{type:{name:"Composite",className:"QueryExperience"}}}}}}},QueryExperience={type:{name:"Composite",className:"QueryExperience",modelProperties:{endpointId:{serializedName:"endpointId",required:!0,type:{name:"Number"}},queryCount:{serializedName:"queryCount",required:!0,type:{name:"Number"}},latency:{serializedName:"latency",type:{name:"Number"}}}}},ProxyResource={type:{name:"Composite",className:"ProxyResource",modelProperties:Object.assign({},Resource.type.modelProperties)}},TrackedResource={type:{name:"Composite",className:"TrackedResource",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},location:{serializedName:"location",type:{name:"String"}}})}},Endpoint={type:{name:"Composite",className:"Endpoint",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{targetResourceId:{serializedName:"properties.targetResourceId",type:{name:"String"}},target:{serializedName:"properties.target",type:{name:"String"}},endpointStatus:{serializedName:"properties.endpointStatus",type:{name:"String"}},weight:{serializedName:"properties.weight",type:{name:"Number"}},priority:{serializedName:"properties.priority",type:{name:"Number"}},endpointLocation:{serializedName:"properties.endpointLocation",type:{name:"String"}},endpointMonitorStatus:{serializedName:"properties.endpointMonitorStatus",type:{name:"String"}},minChildEndpoints:{serializedName:"properties.minChildEndpoints",type:{name:"Number"}},minChildEndpointsIPv4:{serializedName:"properties.minChildEndpointsIPv4",type:{name:"Number"}},minChildEndpointsIPv6:{serializedName:"properties.minChildEndpointsIPv6",type:{name:"Number"}},geoMapping:{serializedName:"properties.geoMapping",type:{name:"Sequence",element:{type:{name:"String"}}}},subnets:{serializedName:"properties.subnets",type:{name:"Sequence",element:{type:{name:"Composite",className:"EndpointPropertiesSubnetsItem"}}}},customHeaders:{serializedName:"properties.customHeaders",type:{name:"Sequence",element:{type:{name:"Composite",className:"EndpointPropertiesCustomHeadersItem"}}}},alwaysServe:{serializedName:"properties.alwaysServe",type:{name:"String"}}})}},TrafficManagerGeographicHierarchy={type:{name:"Composite",className:"TrafficManagerGeographicHierarchy",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{geographicHierarchy:{serializedName:"properties.geographicHierarchy",type:{name:"Composite",className:"Region"}}})}},HeatMapModel={type:{name:"Composite",className:"HeatMapModel",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{startTime:{serializedName:"properties.startTime",type:{name:"DateTime"}},endTime:{serializedName:"properties.endTime",type:{name:"DateTime"}},endpoints:{serializedName:"properties.endpoints",type:{name:"Sequence",element:{type:{name:"Composite",className:"HeatMapEndpoint"}}}},trafficFlows:{serializedName:"properties.trafficFlows",type:{name:"Sequence",element:{type:{name:"Composite",className:"TrafficFlow"}}}}})}},UserMetricsModel={type:{name:"Composite",className:"UserMetricsModel",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{key:{serializedName:"properties.key",type:{name:"String"}}})}},Profile={type:{name:"Composite",className:"Profile",modelProperties:Object.assign(Object.assign({},TrackedResource.type.modelProperties),{profileStatus:{serializedName:"properties.profileStatus",type:{name:"String"}},trafficRoutingMethod:{serializedName:"properties.trafficRoutingMethod",type:{name:"String"}},dnsConfig:{serializedName:"properties.dnsConfig",type:{name:"Composite",className:"DnsConfig"}},monitorConfig:{serializedName:"properties.monitorConfig",type:{name:"Composite",className:"MonitorConfig"}},endpoints:{serializedName:"properties.endpoints",type:{name:"Sequence",element:{type:{name:"Composite",className:"Endpoint"}}}},trafficViewEnrollmentStatus:{serializedName:"properties.trafficViewEnrollmentStatus",type:{name:"String"}},allowedEndpointRecordTypes:{serializedName:"properties.allowedEndpointRecordTypes",type:{name:"Sequence",element:{type:{name:"String"}}}},maxReturn:{serializedName:"properties.maxReturn",type:{name:"Number"}}})}};var Mappers=Object.freeze({__proto__:null,EndpointPropertiesSubnetsItem:EndpointPropertiesSubnetsItem,EndpointPropertiesCustomHeadersItem:EndpointPropertiesCustomHeadersItem,Resource:Resource,CloudError:CloudError,CloudErrorBody:CloudErrorBody,DeleteOperationResult:DeleteOperationResult,CheckTrafficManagerRelativeDnsNameAvailabilityParameters:CheckTrafficManagerRelativeDnsNameAvailabilityParameters,TrafficManagerNameAvailability:TrafficManagerNameAvailability,ProfileListResult:ProfileListResult,DnsConfig:DnsConfig,MonitorConfig:MonitorConfig,MonitorConfigCustomHeadersItem:MonitorConfigCustomHeadersItem,MonitorConfigExpectedStatusCodeRangesItem:MonitorConfigExpectedStatusCodeRangesItem,Region:Region,HeatMapEndpoint:HeatMapEndpoint,TrafficFlow:TrafficFlow,QueryExperience:QueryExperience,ProxyResource:ProxyResource,TrackedResource:TrackedResource,Endpoint:Endpoint,TrafficManagerGeographicHierarchy:TrafficManagerGeographicHierarchy,HeatMapModel:HeatMapModel,UserMetricsModel:UserMetricsModel,Profile:Profile});const contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},parameters={parameterPath:"parameters",mapper:Endpoint},accept={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},resourceGroupName={parameterPath:"resourceGroupName",mapper:{constraints:{MaxLength:90,MinLength:1},serializedName:"resourceGroupName",required:!0,type:{name:"String"}}},profileName={parameterPath:"profileName",mapper:{serializedName:"profileName",required:!0,type:{name:"String"}}},endpointType={parameterPath:"endpointType",mapper:{serializedName:"endpointType",required:!0,type:{name:"Enum",allowedValues:["AzureEndpoints","ExternalEndpoints","NestedEndpoints"]}}},endpointName={parameterPath:"endpointName",mapper:{serializedName:"endpointName",required:!0,type:{name:"String"}}},apiVersion={parameterPath:"apiVersion",mapper:{defaultValue:"2022-04-01",isConstant:!0,serializedName:"api-version",type:{name:"String"}}},subscriptionId={parameterPath:"subscriptionId",mapper:{constraints:{MinLength:1},serializedName:"subscriptionId",required:!0,type:{name:"String"}}},parameters1={parameterPath:"parameters",mapper:CheckTrafficManagerRelativeDnsNameAvailabilityParameters},parameters2={parameterPath:"parameters",mapper:Profile},heatMapType={parameterPath:"heatMapType",mapper:{defaultValue:"default",isConstant:!0,serializedName:"heatMapType",type:{name:"String"}}},topLeft={parameterPath:["options","topLeft"],mapper:{constraints:{MinItems:2,MaxItems:2},serializedName:"topLeft",type:{name:"Sequence",element:{type:{name:"Number"}}}},collectionFormat:"CSV"},botRight={parameterPath:["options","botRight"],mapper:{constraints:{MinItems:2,MaxItems:2},serializedName:"botRight",type:{name:"Sequence",element:{type:{name:"Number"}}}},collectionFormat:"CSV"};class EndpointsImpl{constructor(e){this.client=e}update(e,r,t,a,i,o){return this.client.sendOperationRequest({resourceGroupName:e,profileName:r,endpointType:t,endpointName:a,parameters:i,options:o},updateOperationSpec$1)}get(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,profileName:r,endpointType:t,endpointName:a,options:i},getOperationSpec$3)}createOrUpdate(e,r,t,a,i,o){return this.client.sendOperationRequest({resourceGroupName:e,profileName:r,endpointType:t,endpointName:a,parameters:i,options:o},createOrUpdateOperationSpec$2)}delete(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,profileName:r,endpointType:t,endpointName:a,options:i},deleteOperationSpec$2)}}const serializer$4=coreClient__namespace.createSerializer(Mappers,!1),updateOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}",httpMethod:"PATCH",responses:{200:{bodyMapper:Endpoint},default:{bodyMapper:CloudError}},requestBody:parameters,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,profileName,endpointType,endpointName,subscriptionId],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$4},getOperationSpec$3={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}",httpMethod:"GET",responses:{200:{bodyMapper:Endpoint},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,profileName,endpointType,endpointName,subscriptionId],headerParameters:[accept],serializer:serializer$4},createOrUpdateOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}",httpMethod:"PUT",responses:{200:{bodyMapper:Endpoint},201:{bodyMapper:Endpoint},default:{bodyMapper:CloudError}},requestBody:parameters,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,profileName,endpointType,endpointName,subscriptionId],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$4},deleteOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}",httpMethod:"DELETE",responses:{200:{bodyMapper:DeleteOperationResult},204:{},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,profileName,endpointType,endpointName,subscriptionId],headerParameters:[accept],serializer:serializer$4};class ProfilesImpl{constructor(e){this.client=e}listByResourceGroup(r,t){const e=this.listByResourceGroupPagingAll(r,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByResourceGroupPagingPage(r,t,e)}}}listByResourceGroupPagingPage(r,t,e){return tslib.__asyncGenerator(this,arguments,function*(){var e=yield tslib.__await(this._listByResourceGroup(r,t));yield yield tslib.__await(e.value||[])})}listByResourceGroupPagingAll(n,p){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,a;try{for(var i,o=!0,s=tslib.__asyncValues(this.listByResourceGroupPagingPage(n,p));!(e=(i=yield tslib.__await(s.next())).done);){a=i.value,o=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(a)))}finally{o=!0}}}catch(e){r={error:e}}finally{try{o||e||!(t=s.return)||(yield tslib.__await(t.call(s)))}finally{if(r)throw r.error}}})}listBySubscription(r){const e=this.listBySubscriptionPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listBySubscriptionPagingPage(r,e)}}}listBySubscriptionPagingPage(r,e){return tslib.__asyncGenerator(this,arguments,function*(){var e=yield tslib.__await(this._listBySubscription(r));yield yield tslib.__await(e.value||[])})}listBySubscriptionPagingAll(n){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,a;try{for(var i,o=!0,s=tslib.__asyncValues(this.listBySubscriptionPagingPage(n));!(e=(i=yield tslib.__await(s.next())).done);){a=i.value,o=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(a)))}finally{o=!0}}}catch(e){r={error:e}}finally{try{o||e||!(t=s.return)||(yield tslib.__await(t.call(s)))}finally{if(r)throw r.error}}})}checkTrafficManagerRelativeDnsNameAvailability(e,r){return this.client.sendOperationRequest({parameters:e,options:r},checkTrafficManagerRelativeDnsNameAvailabilityOperationSpec)}checkTrafficManagerNameAvailabilityV2(e,r){return this.client.sendOperationRequest({parameters:e,options:r},checkTrafficManagerNameAvailabilityV2OperationSpec)}_listByResourceGroup(e,r){return this.client.sendOperationRequest({resourceGroupName:e,options:r},listByResourceGroupOperationSpec)}_listBySubscription(e){return this.client.sendOperationRequest({options:e},listBySubscriptionOperationSpec)}get(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,profileName:r,options:t},getOperationSpec$2)}createOrUpdate(e,r,t,a){return this.client.sendOperationRequest({resourceGroupName:e,profileName:r,parameters:t,options:a},createOrUpdateOperationSpec$1)}delete(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,profileName:r,options:t},deleteOperationSpec$1)}update(e,r,t,a){return this.client.sendOperationRequest({resourceGroupName:e,profileName:r,parameters:t,options:a},updateOperationSpec)}}const serializer$3=coreClient__namespace.createSerializer(Mappers,!1),checkTrafficManagerRelativeDnsNameAvailabilityOperationSpec={path:"/providers/Microsoft.Network/checkTrafficManagerNameAvailability",httpMethod:"POST",responses:{200:{bodyMapper:TrafficManagerNameAvailability},default:{bodyMapper:CloudError}},requestBody:parameters1,queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$3},checkTrafficManagerNameAvailabilityV2OperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Network/checkTrafficManagerNameAvailabilityV2",httpMethod:"POST",responses:{200:{bodyMapper:TrafficManagerNameAvailability},default:{bodyMapper:CloudError}},requestBody:parameters1,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$3},listByResourceGroupOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles",httpMethod:"GET",responses:{200:{bodyMapper:ProfileListResult},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,subscriptionId],headerParameters:[accept],serializer:serializer$3},listBySubscriptionOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficmanagerprofiles",httpMethod:"GET",responses:{200:{bodyMapper:ProfileListResult},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$3},getOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}",httpMethod:"GET",responses:{200:{bodyMapper:Profile},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,profileName,subscriptionId],headerParameters:[accept],serializer:serializer$3},createOrUpdateOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}",httpMethod:"PUT",responses:{200:{bodyMapper:Profile},201:{bodyMapper:Profile},default:{bodyMapper:CloudError}},requestBody:parameters2,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,profileName,subscriptionId],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$3},deleteOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}",httpMethod:"DELETE",responses:{200:{bodyMapper:DeleteOperationResult},204:{},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,profileName,subscriptionId],headerParameters:[accept],serializer:serializer$3},updateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}",httpMethod:"PATCH",responses:{200:{bodyMapper:Profile},default:{bodyMapper:CloudError}},requestBody:parameters2,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,profileName,subscriptionId],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$3};class GeographicHierarchiesImpl{constructor(e){this.client=e}getDefault(e){return this.client.sendOperationRequest({options:e},getDefaultOperationSpec)}}const serializer$2=coreClient__namespace.createSerializer(Mappers,!1),getDefaultOperationSpec={path:"/providers/Microsoft.Network/trafficManagerGeographicHierarchies/default",httpMethod:"GET",responses:{200:{bodyMapper:TrafficManagerGeographicHierarchy},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[accept],serializer:serializer$2};class HeatMapImpl{constructor(e){this.client=e}get(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,profileName:r,options:t},getOperationSpec$1)}}const serializer$1=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/heatMaps/{heatMapType}",httpMethod:"GET",responses:{200:{bodyMapper:HeatMapModel},default:{bodyMapper:CloudError}},queryParameters:[apiVersion,topLeft,botRight],urlParameters:[$host,resourceGroupName,profileName,subscriptionId,heatMapType],headerParameters:[accept],serializer:serializer$1};class TrafficManagerUserMetricsKeysImpl{constructor(e){this.client=e}get(e){return this.client.sendOperationRequest({options:e},getOperationSpec)}createOrUpdate(e){return this.client.sendOperationRequest({options:e},createOrUpdateOperationSpec)}delete(e){return this.client.sendOperationRequest({options:e},deleteOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficManagerUserMetricsKeys/default",httpMethod:"GET",responses:{200:{bodyMapper:UserMetricsModel},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer},createOrUpdateOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficManagerUserMetricsKeys/default",httpMethod:"PUT",responses:{201:{bodyMapper:UserMetricsModel},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer},deleteOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficManagerUserMetricsKeys/default",httpMethod:"DELETE",responses:{200:{bodyMapper:DeleteOperationResult},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer};class TrafficManagerManagementClient extends coreClient__namespace.ServiceClient{constructor(e,r,t){if(void 0===e)throw new Error("'credentials' cannot be null");if(void 0===r)throw new Error("'subscriptionId' cannot be null");var a,i="azsdk-js-arm-trafficmanager/6.1.0",i=(t=t||{}).userAgentOptions&&t.userAgentOptions.userAgentPrefix?t.userAgentOptions.userAgentPrefix+" "+i:i,i=Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8",credential:e}),t),{userAgentOptions:{userAgentPrefix:i},endpoint:null!=(i=null!=(i=t.endpoint)?i:t.baseUri)?i:"https://management.azure.com"});super(i);let o=!1;null!=t&&t.pipeline&&0<t.pipeline.getOrderedPolicies().length&&(a=t.pipeline.getOrderedPolicies(),o=a.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),t&&t.pipeline&&0!=t.pipeline.getOrderedPolicies().length&&o||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:null!=(a=i.credentialScopes)?a:i.endpoint+"/.default",challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.subscriptionId=r,this.$host=t.$host||"https://management.azure.com",this.apiVersion=t.apiVersion||"2022-04-01",this.endpoints=new EndpointsImpl(this),this.profiles=new ProfilesImpl(this),this.geographicHierarchies=new GeographicHierarchiesImpl(this),this.heatMap=new HeatMapImpl(this),this.trafficManagerUserMetricsKeys=new TrafficManagerUserMetricsKeysImpl(this),this.addCustomApiVersionPolicy(t.apiVersion)}addCustomApiVersionPolicy(i){i&&this.pipeline.addPolicy({name:"CustomApiVersionPolicy",sendRequest(t,a){return tslib.__awaiter(this,void 0,void 0,function*(){var e,r=t.url.split("?");return 1<r.length&&(e=r[1].split("&").map(e=>-1<e.indexOf("api-version")?"api-version="+i:e),t.url=r[0]+"?"+e.join("&")),a(t)})}})}}exports.TrafficManagerManagementClient=TrafficManagerManagementClient,exports.getContinuationToken=getContinuationToken;