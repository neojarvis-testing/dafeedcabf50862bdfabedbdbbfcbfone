/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { TrafficManagerManagementClient } from "@azure/arm-trafficmanager";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Checks the availability of a Traffic Manager Relative DNS name.
 *
 * @summary Checks the availability of a Traffic Manager Relative DNS name.
 * x-ms-original-file: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/NameAvailabilityTest_NameAvailable-POST-example-21.json
 */
function nameAvailabilityTestNameAvailablePost21() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["TRAFFICMANAGER_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const parameters = {
            name: "azsmnet5403",
            type: "microsoft.network/trafficmanagerprofiles"
        };
        const credential = new DefaultAzureCredential();
        const client = new TrafficManagerManagementClient(credential, subscriptionId);
        const result = yield client.profiles.checkTrafficManagerRelativeDnsNameAvailability(parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Checks the availability of a Traffic Manager Relative DNS name.
 *
 * @summary Checks the availability of a Traffic Manager Relative DNS name.
 * x-ms-original-file: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/NameAvailabilityTest_NameNotAvailable-POST-example-23.json
 */
function nameAvailabilityTestNameNotAvailablePost23() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["TRAFFICMANAGER_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const parameters = {
            name: "azsmnet4696",
            type: "microsoft.network/trafficmanagerprofiles"
        };
        const credential = new DefaultAzureCredential();
        const client = new TrafficManagerManagementClient(credential, subscriptionId);
        const result = yield client.profiles.checkTrafficManagerRelativeDnsNameAvailability(parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        nameAvailabilityTestNameAvailablePost21();
        nameAvailabilityTestNameNotAvailablePost23();
    });
}
main().catch(console.error);
//# sourceMappingURL=profilesCheckTrafficManagerRelativeDnsNameAvailabilitySample.js.map