/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { TrafficManagerManagementClient } from "@azure/arm-trafficmanager";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Gets latest heatmap for Traffic Manager profile.
 *
 * @summary Gets latest heatmap for Traffic Manager profile.
 * x-ms-original-file: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/HeatMap-GET.json
 */
function heatMapGet() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["TRAFFICMANAGER_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["TRAFFICMANAGER_RESOURCE_GROUP"] ||
            "azuresdkfornetautoresttrafficmanager1323";
        const profileName = "azuresdkfornetautoresttrafficmanager3880";
        const credential = new DefaultAzureCredential();
        const client = new TrafficManagerManagementClient(credential, subscriptionId);
        const result = yield client.heatMap.get(resourceGroupName, profileName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Gets latest heatmap for Traffic Manager profile.
 *
 * @summary Gets latest heatmap for Traffic Manager profile.
 * x-ms-original-file: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/HeatMap-GET-With-Null-Values.json
 */
function heatMapGetWithNullValues() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["TRAFFICMANAGER_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["TRAFFICMANAGER_RESOURCE_GROUP"] ||
            "azuresdkfornetautoresttrafficmanager1323";
        const profileName = "azuresdkfornetautoresttrafficmanager3880";
        const credential = new DefaultAzureCredential();
        const client = new TrafficManagerManagementClient(credential, subscriptionId);
        const result = yield client.heatMap.get(resourceGroupName, profileName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Gets latest heatmap for Traffic Manager profile.
 *
 * @summary Gets latest heatmap for Traffic Manager profile.
 * x-ms-original-file: specification/trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/examples/HeatMap-GET-With-TopLeft-BotRight.json
 */
function heatMapGetWithTopLeftBotRight() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["TRAFFICMANAGER_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["TRAFFICMANAGER_RESOURCE_GROUP"] ||
            "azuresdkfornetautoresttrafficmanager1323";
        const profileName = "azuresdkfornetautoresttrafficmanager3880";
        const topLeft = [10, 50.001];
        const botRight = [-50.001, 80];
        const options = { topLeft, botRight };
        const credential = new DefaultAzureCredential();
        const client = new TrafficManagerManagementClient(credential, subscriptionId);
        const result = yield client.heatMap.get(resourceGroupName, profileName, options);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        heatMapGet();
        heatMapGetWithNullValues();
        heatMapGetWithTopLeftBotRight();
    });
}
main().catch(console.error);
//# sourceMappingURL=heatMapGetSample.js.map