import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Endpoints, Profiles, GeographicHierarchies, HeatMap, TrafficManagerUserMetricsKeys } from "./operationsInterfaces";
import { TrafficManagerManagementClientOptionalParams } from "./models";
export declare class TrafficManagerManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the TrafficManagerManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: TrafficManagerManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    endpoints: Endpoints;
    profiles: Profiles;
    geographicHierarchies: GeographicHierarchies;
    heatMap: HeatMap;
    trafficManagerUserMetricsKeys: TrafficManagerUserMetricsKeys;
}
//# sourceMappingURL=trafficManagerManagementClient.d.ts.map