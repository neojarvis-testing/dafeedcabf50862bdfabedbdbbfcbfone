/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export var acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
export var apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export var artifactSourceName = {
    parameterPath: "artifactSourceName",
    mapper: {
        required: true,
        serializedName: "artifactSourceName",
        type: {
            name: "String"
        }
    }
};
export var resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        required: true,
        serializedName: "resourceGroupName",
        constraints: {
            MaxLength: 90,
            MinLength: 1,
            Pattern: /^[-\w\._\(\)]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var retryAttempt = {
    parameterPath: [
        "options",
        "retryAttempt"
    ],
    mapper: {
        serializedName: "retryAttempt",
        type: {
            name: "Number"
        }
    }
};
export var rolloutName = {
    parameterPath: "rolloutName",
    mapper: {
        required: true,
        serializedName: "rolloutName",
        type: {
            name: "String"
        }
    }
};
export var serviceName = {
    parameterPath: "serviceName",
    mapper: {
        required: true,
        serializedName: "serviceName",
        type: {
            name: "String"
        }
    }
};
export var serviceTopologyName = {
    parameterPath: "serviceTopologyName",
    mapper: {
        required: true,
        serializedName: "serviceTopologyName",
        type: {
            name: "String"
        }
    }
};
export var serviceUnitName = {
    parameterPath: "serviceUnitName",
    mapper: {
        required: true,
        serializedName: "serviceUnitName",
        type: {
            name: "String"
        }
    }
};
export var skipSucceeded = {
    parameterPath: [
        "options",
        "skipSucceeded"
    ],
    mapper: {
        serializedName: "skipSucceeded",
        type: {
            name: "Boolean"
        }
    }
};
export var stepName = {
    parameterPath: "stepName",
    mapper: {
        required: true,
        serializedName: "stepName",
        type: {
            name: "String"
        }
    }
};
export var subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        required: true,
        serializedName: "subscriptionId",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map