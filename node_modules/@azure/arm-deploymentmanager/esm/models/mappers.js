/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __assign } from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var Identity = {
    serializedName: "Identity",
    type: {
        name: "Composite",
        className: "Identity",
        modelProperties: {
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            identityIds: {
                required: true,
                serializedName: "identityIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var PrePostStep = {
    serializedName: "PrePostStep",
    type: {
        name: "Composite",
        className: "PrePostStep",
        modelProperties: {
            stepId: {
                required: true,
                serializedName: "stepId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StepGroup = {
    serializedName: "StepGroup",
    type: {
        name: "Composite",
        className: "StepGroup",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            dependsOnStepGroups: {
                serializedName: "dependsOnStepGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            preDeploymentSteps: {
                serializedName: "preDeploymentSteps",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrePostStep"
                        }
                    }
                }
            },
            deploymentTargetId: {
                required: true,
                serializedName: "deploymentTargetId",
                type: {
                    name: "String"
                }
            },
            postDeploymentSteps: {
                serializedName: "postDeploymentSteps",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrePostStep"
                        }
                    }
                }
            }
        }
    }
};
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TrackedResource = {
    serializedName: "TrackedResource",
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            } })
    }
};
export var RolloutRequest = {
    serializedName: "RolloutRequest",
    type: {
        name: "Composite",
        className: "RolloutRequest",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { identity: {
                required: true,
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            }, buildVersion: {
                required: true,
                serializedName: "properties.buildVersion",
                type: {
                    name: "String"
                }
            }, artifactSourceId: {
                serializedName: "properties.artifactSourceId",
                type: {
                    name: "String"
                }
            }, targetServiceTopologyId: {
                required: true,
                serializedName: "properties.targetServiceTopologyId",
                type: {
                    name: "String"
                }
            }, stepGroups: {
                required: true,
                serializedName: "properties.stepGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StepGroup"
                        }
                    }
                }
            } })
    }
};
export var ArtifactSource = {
    serializedName: "ArtifactSource",
    type: {
        name: "Composite",
        className: "ArtifactSource",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { sourceType: {
                required: true,
                serializedName: "properties.sourceType",
                type: {
                    name: "String"
                }
            }, artifactRoot: {
                serializedName: "properties.artifactRoot",
                type: {
                    name: "String"
                }
            }, authentication: {
                required: true,
                serializedName: "properties.authentication",
                type: {
                    name: "Composite",
                    className: "Authentication"
                }
            } })
    }
};
export var Authentication = {
    serializedName: "Authentication",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "type",
            clientName: "type"
        },
        uberParent: "Authentication",
        className: "Authentication",
        modelProperties: {
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ArtifactSourcePropertiesModel = {
    serializedName: "ArtifactSourceProperties",
    type: {
        name: "Composite",
        className: "ArtifactSourcePropertiesModel",
        modelProperties: {
            sourceType: {
                required: true,
                serializedName: "sourceType",
                type: {
                    name: "String"
                }
            },
            artifactRoot: {
                serializedName: "artifactRoot",
                type: {
                    name: "String"
                }
            },
            authentication: {
                required: true,
                serializedName: "authentication",
                type: {
                    name: "Composite",
                    className: "Authentication"
                }
            }
        }
    }
};
export var SasAuthentication = {
    serializedName: "Sas",
    type: {
        name: "Composite",
        polymorphicDiscriminator: Authentication.type.polymorphicDiscriminator,
        uberParent: "Authentication",
        className: "SasAuthentication",
        modelProperties: __assign(__assign({}, Authentication.type.modelProperties), { sasUri: {
                required: true,
                serializedName: "properties.sasUri",
                type: {
                    name: "String"
                }
            } })
    }
};
export var CloudErrorBody = {
    serializedName: "CloudErrorBody",
    type: {
        name: "Composite",
        className: "CloudErrorBody",
        modelProperties: {
            code: {
                readOnly: true,
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                readOnly: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CloudErrorBody"
                        }
                    }
                }
            }
        }
    }
};
export var RolloutOperationInfo = {
    serializedName: "RolloutOperationInfo",
    type: {
        name: "Composite",
        className: "RolloutOperationInfo",
        modelProperties: {
            retryAttempt: {
                readOnly: true,
                serializedName: "retryAttempt",
                type: {
                    name: "Number"
                }
            },
            skipSucceededOnRetry: {
                readOnly: true,
                serializedName: "skipSucceededOnRetry",
                type: {
                    name: "Boolean"
                }
            },
            startTime: {
                readOnly: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                readOnly: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            error: {
                readOnly: true,
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "CloudErrorBody"
                }
            }
        }
    }
};
export var StepOperationInfo = {
    serializedName: "StepOperationInfo",
    type: {
        name: "Composite",
        className: "StepOperationInfo",
        modelProperties: {
            deploymentName: {
                readOnly: true,
                serializedName: "deploymentName",
                type: {
                    name: "String"
                }
            },
            correlationId: {
                readOnly: true,
                serializedName: "correlationId",
                type: {
                    name: "String"
                }
            },
            startTime: {
                readOnly: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                readOnly: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            lastUpdatedTime: {
                readOnly: true,
                serializedName: "lastUpdatedTime",
                type: {
                    name: "DateTime"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "CloudErrorBody"
                }
            }
        }
    }
};
export var ResourceOperation = {
    serializedName: "ResourceOperation",
    type: {
        name: "Composite",
        className: "ResourceOperation",
        modelProperties: {
            resourceName: {
                serializedName: "resourceName",
                type: {
                    name: "String"
                }
            },
            operationId: {
                readOnly: true,
                serializedName: "operationId",
                type: {
                    name: "String"
                }
            },
            resourceType: {
                serializedName: "resourceType",
                type: {
                    name: "String"
                }
            },
            provisioningState: {
                readOnly: true,
                serializedName: "provisioningState",
                type: {
                    name: "String"
                }
            },
            statusMessage: {
                readOnly: true,
                serializedName: "statusMessage",
                type: {
                    name: "String"
                }
            },
            statusCode: {
                readOnly: true,
                serializedName: "statusCode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Message = {
    serializedName: "Message",
    type: {
        name: "Composite",
        className: "Message",
        modelProperties: {
            timeStamp: {
                readOnly: true,
                serializedName: "timeStamp",
                type: {
                    name: "DateTime"
                }
            },
            message: {
                readOnly: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RolloutStep = {
    serializedName: "RolloutStep",
    type: {
        name: "Composite",
        className: "RolloutStep",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            status: {
                readOnly: true,
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            stepGroup: {
                serializedName: "stepGroup",
                type: {
                    name: "String"
                }
            },
            operationInfo: {
                readOnly: true,
                serializedName: "operationInfo",
                type: {
                    name: "Composite",
                    className: "StepOperationInfo"
                }
            },
            resourceOperations: {
                readOnly: true,
                serializedName: "resourceOperations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceOperation"
                        }
                    }
                }
            },
            messages: {
                readOnly: true,
                serializedName: "messages",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Message"
                        }
                    }
                }
            }
        }
    }
};
export var ServiceUnitProperties = {
    serializedName: "ServiceUnitProperties",
    type: {
        name: "Composite",
        className: "ServiceUnitProperties",
        modelProperties: {
            targetResourceGroup: {
                required: true,
                serializedName: "targetResourceGroup",
                type: {
                    name: "String"
                }
            },
            deploymentMode: {
                required: true,
                serializedName: "deploymentMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Incremental",
                        "Complete"
                    ]
                }
            },
            artifacts: {
                serializedName: "artifacts",
                type: {
                    name: "Composite",
                    className: "ServiceUnitArtifacts"
                }
            }
        }
    }
};
export var ServiceUnit = {
    serializedName: "ServiceUnit",
    type: {
        name: "Composite",
        className: "ServiceUnit",
        modelProperties: __assign(__assign({}, ServiceUnitProperties.type.modelProperties), { name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, steps: {
                serializedName: "steps",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RolloutStep"
                        }
                    }
                }
            } })
    }
};
export var ServiceProperties = {
    serializedName: "ServiceProperties",
    type: {
        name: "Composite",
        className: "ServiceProperties",
        modelProperties: {
            targetLocation: {
                required: true,
                serializedName: "targetLocation",
                type: {
                    name: "String"
                }
            },
            targetSubscriptionId: {
                required: true,
                serializedName: "targetSubscriptionId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Service = {
    serializedName: "Service",
    type: {
        name: "Composite",
        className: "Service",
        modelProperties: __assign(__assign({}, ServiceProperties.type.modelProperties), { name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, serviceUnits: {
                serializedName: "serviceUnits",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServiceUnit"
                        }
                    }
                }
            } })
    }
};
export var Rollout = {
    serializedName: "Rollout",
    type: {
        name: "Composite",
        className: "Rollout",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            }, buildVersion: {
                required: true,
                serializedName: "properties.buildVersion",
                type: {
                    name: "String"
                }
            }, artifactSourceId: {
                serializedName: "properties.artifactSourceId",
                type: {
                    name: "String"
                }
            }, targetServiceTopologyId: {
                required: true,
                serializedName: "properties.targetServiceTopologyId",
                type: {
                    name: "String"
                }
            }, stepGroups: {
                required: true,
                serializedName: "properties.stepGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StepGroup"
                        }
                    }
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "String"
                }
            }, totalRetryAttempts: {
                readOnly: true,
                serializedName: "properties.totalRetryAttempts",
                type: {
                    name: "Number"
                }
            }, operationInfo: {
                readOnly: true,
                serializedName: "properties.operationInfo",
                type: {
                    name: "Composite",
                    className: "RolloutOperationInfo"
                }
            }, services: {
                readOnly: true,
                serializedName: "properties.services",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Service"
                        }
                    }
                }
            } })
    }
};
export var RolloutPropertiesModel = {
    serializedName: "RolloutProperties",
    type: {
        name: "Composite",
        className: "RolloutPropertiesModel",
        modelProperties: {
            status: {
                readOnly: true,
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            totalRetryAttempts: {
                readOnly: true,
                serializedName: "totalRetryAttempts",
                type: {
                    name: "Number"
                }
            },
            operationInfo: {
                readOnly: true,
                serializedName: "operationInfo",
                type: {
                    name: "Composite",
                    className: "RolloutOperationInfo"
                }
            },
            services: {
                readOnly: true,
                serializedName: "services",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Service"
                        }
                    }
                }
            }
        }
    }
};
export var ServiceTopologyResource = {
    serializedName: "ServiceTopologyResource",
    type: {
        name: "Composite",
        className: "ServiceTopologyResource",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { artifactSourceId: {
                serializedName: "properties.artifactSourceId",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ServiceTopologyProperties = {
    serializedName: "ServiceTopologyProperties",
    type: {
        name: "Composite",
        className: "ServiceTopologyProperties",
        modelProperties: {
            artifactSourceId: {
                serializedName: "artifactSourceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ServiceResource = {
    serializedName: "ServiceResource",
    type: {
        name: "Composite",
        className: "ServiceResource",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { targetLocation: {
                required: true,
                serializedName: "properties.targetLocation",
                type: {
                    name: "String"
                }
            }, targetSubscriptionId: {
                required: true,
                serializedName: "properties.targetSubscriptionId",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ServiceUnitResource = {
    serializedName: "ServiceUnitResource",
    type: {
        name: "Composite",
        className: "ServiceUnitResource",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { targetResourceGroup: {
                required: true,
                serializedName: "properties.targetResourceGroup",
                type: {
                    name: "String"
                }
            }, deploymentMode: {
                required: true,
                serializedName: "properties.deploymentMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Incremental",
                        "Complete"
                    ]
                }
            }, artifacts: {
                serializedName: "properties.artifacts",
                type: {
                    name: "Composite",
                    className: "ServiceUnitArtifacts"
                }
            } })
    }
};
export var ServiceUnitArtifacts = {
    serializedName: "ServiceUnitArtifacts",
    type: {
        name: "Composite",
        className: "ServiceUnitArtifacts",
        modelProperties: {
            templateUri: {
                serializedName: "templateUri",
                type: {
                    name: "String"
                }
            },
            parametersUri: {
                serializedName: "parametersUri",
                type: {
                    name: "String"
                }
            },
            templateArtifactSourceRelativePath: {
                serializedName: "templateArtifactSourceRelativePath",
                type: {
                    name: "String"
                }
            },
            parametersArtifactSourceRelativePath: {
                serializedName: "parametersArtifactSourceRelativePath",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var OperationDetail = {
    serializedName: "OperationDetail",
    type: {
        name: "Composite",
        className: "OperationDetail",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Operation = {
    serializedName: "Operation",
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDetail"
                }
            },
            origin: {
                serializedName: "origin",
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Object"
                }
            }
        }
    }
};
export var OperationsList = {
    serializedName: "OperationsList",
    type: {
        name: "Composite",
        className: "OperationsList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Composite",
                    className: "Operation"
                }
            }
        }
    }
};
export var StepProperties = {
    serializedName: "StepProperties",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "stepType",
            clientName: "stepType"
        },
        uberParent: "StepProperties",
        className: "StepProperties",
        modelProperties: {
            stepType: {
                required: true,
                serializedName: "stepType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StepResource = {
    serializedName: "StepResource",
    type: {
        name: "Composite",
        className: "StepResource",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { properties: {
                required: true,
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "StepProperties"
                }
            } })
    }
};
export var HealthCheckStepAttributes = {
    serializedName: "HealthCheckStepAttributes",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "type",
            clientName: "type"
        },
        uberParent: "HealthCheckStepAttributes",
        className: "HealthCheckStepAttributes",
        modelProperties: {
            waitDuration: {
                serializedName: "waitDuration",
                type: {
                    name: "String"
                }
            },
            maxElasticDuration: {
                serializedName: "maxElasticDuration",
                type: {
                    name: "String"
                }
            },
            healthyStateDuration: {
                required: true,
                serializedName: "healthyStateDuration",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HealthCheckStepProperties = {
    serializedName: "HealthCheck",
    type: {
        name: "Composite",
        polymorphicDiscriminator: StepProperties.type.polymorphicDiscriminator,
        uberParent: "StepProperties",
        className: "HealthCheckStepProperties",
        modelProperties: __assign(__assign({}, StepProperties.type.modelProperties), { attributes: {
                required: true,
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "HealthCheckStepAttributes"
                }
            } })
    }
};
export var RestRequestAuthentication = {
    serializedName: "RestRequestAuthentication",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "type",
            clientName: "type"
        },
        uberParent: "RestRequestAuthentication",
        className: "RestRequestAuthentication",
        modelProperties: {
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RestRequest = {
    serializedName: "RestRequest",
    type: {
        name: "Composite",
        className: "RestRequest",
        modelProperties: {
            method: {
                required: true,
                serializedName: "method",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "GET",
                        "POST"
                    ]
                }
            },
            uri: {
                required: true,
                serializedName: "uri",
                type: {
                    name: "String"
                }
            },
            authentication: {
                required: true,
                serializedName: "authentication",
                type: {
                    name: "Composite",
                    className: "RestRequestAuthentication"
                }
            }
        }
    }
};
export var RestResponseRegex = {
    serializedName: "RestResponse_regex",
    type: {
        name: "Composite",
        className: "RestResponseRegex",
        modelProperties: {
            matches: {
                serializedName: "matches",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            matchQuantifier: {
                serializedName: "matchQuantifier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "All",
                        "Any"
                    ]
                }
            }
        }
    }
};
export var RestResponse = {
    serializedName: "RestResponse",
    type: {
        name: "Composite",
        className: "RestResponse",
        modelProperties: {
            successStatusCodes: {
                serializedName: "successStatusCodes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            regex: {
                serializedName: "regex",
                type: {
                    name: "Composite",
                    className: "RestResponseRegex"
                }
            }
        }
    }
};
export var RestHealthCheck = {
    serializedName: "RestHealthCheck",
    type: {
        name: "Composite",
        className: "RestHealthCheck",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            request: {
                required: true,
                serializedName: "request",
                type: {
                    name: "Composite",
                    className: "RestRequest"
                }
            },
            response: {
                serializedName: "response",
                type: {
                    name: "Composite",
                    className: "RestResponse"
                }
            }
        }
    }
};
export var RestHealthCheckStepAttributes = {
    serializedName: "REST",
    type: {
        name: "Composite",
        polymorphicDiscriminator: HealthCheckStepAttributes.type.polymorphicDiscriminator,
        uberParent: "HealthCheckStepAttributes",
        className: "RestHealthCheckStepAttributes",
        modelProperties: __assign(__assign({}, HealthCheckStepAttributes.type.modelProperties), { healthChecks: {
                required: true,
                serializedName: "properties.healthChecks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestHealthCheck"
                        }
                    }
                }
            } })
    }
};
export var RolloutIdentityAuthentication = {
    serializedName: "RolloutIdentity",
    type: {
        name: "Composite",
        polymorphicDiscriminator: RestRequestAuthentication.type.polymorphicDiscriminator,
        uberParent: "RestRequestAuthentication",
        className: "RolloutIdentityAuthentication",
        modelProperties: __assign({}, RestRequestAuthentication.type.modelProperties)
    }
};
export var ApiKeyAuthentication = {
    serializedName: "ApiKey",
    type: {
        name: "Composite",
        polymorphicDiscriminator: RestRequestAuthentication.type.polymorphicDiscriminator,
        uberParent: "RestRequestAuthentication",
        className: "ApiKeyAuthentication",
        modelProperties: __assign(__assign({}, RestRequestAuthentication.type.modelProperties), { name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, inProperty: {
                required: true,
                serializedName: "in",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Query",
                        "Header"
                    ]
                }
            }, value: {
                required: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            } })
    }
};
export var WaitStepAttributes = {
    serializedName: "WaitStepAttributes",
    type: {
        name: "Composite",
        className: "WaitStepAttributes",
        modelProperties: {
            duration: {
                required: true,
                serializedName: "duration",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WaitStepProperties = {
    serializedName: "Wait",
    type: {
        name: "Composite",
        polymorphicDiscriminator: StepProperties.type.polymorphicDiscriminator,
        uberParent: "StepProperties",
        className: "WaitStepProperties",
        modelProperties: __assign(__assign({}, StepProperties.type.modelProperties), { attributes: {
                required: true,
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "WaitStepAttributes"
                }
            } })
    }
};
export var ProxyResource = {
    serializedName: "ProxyResource",
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: __assign({}, Resource.type.modelProperties)
    }
};
export var AzureEntityResource = {
    serializedName: "AzureEntityResource",
    type: {
        name: "Composite",
        className: "AzureEntityResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { etag: {
                readOnly: true,
                serializedName: "etag",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ServiceUnitsCreateOrUpdateHeaders = {
    serializedName: "serviceunits-createorupdate-headers",
    type: {
        name: "Composite",
        className: "ServiceUnitsCreateOrUpdateHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RolloutsCreateOrUpdateHeaders = {
    serializedName: "rollouts-createorupdate-headers",
    type: {
        name: "Composite",
        className: "RolloutsCreateOrUpdateHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var discriminators = {
    'Authentication': Authentication,
    'Authentication.Sas': SasAuthentication,
    'StepProperties': StepProperties,
    'HealthCheckStepAttributes': HealthCheckStepAttributes,
    'StepProperties.HealthCheck': HealthCheckStepProperties,
    'RestRequestAuthentication': RestRequestAuthentication,
    'HealthCheckStepAttributes.REST': RestHealthCheckStepAttributes,
    'RestRequestAuthentication.RolloutIdentity': RolloutIdentityAuthentication,
    'RestRequestAuthentication.ApiKey': ApiKeyAuthentication,
    'StepProperties.Wait': WaitStepProperties
};
//# sourceMappingURL=mappers.js.map