import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AzureDeploymentManagerContext } from "../azureDeploymentManagerContext";
/** Class representing a Steps. */
export declare class Steps {
    private readonly client;
    /**
     * Create a Steps.
     * @param {AzureDeploymentManagerContext} client Reference to the service client.
     */
    constructor(client: AzureDeploymentManagerContext);
    /**
     * Synchronously creates a new step or updates an existing step.
     * @summary Creates or updates a rollout step with the given step properties.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param stepName The name of the deployment step.
     * @param [options] The optional parameters
     * @returns Promise<Models.StepsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, stepName: string, options?: Models.StepsCreateOrUpdateOptionalParams): Promise<Models.StepsCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param stepName The name of the deployment step.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, stepName: string, callback: msRest.ServiceCallback<Models.StepResource>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param stepName The name of the deployment step.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, stepName: string, options: Models.StepsCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.StepResource>): void;
    /**
     * @summary Gets the step.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param stepName The name of the deployment step.
     * @param [options] The optional parameters
     * @returns Promise<Models.StepsGetResponse>
     */
    get(resourceGroupName: string, stepName: string, options?: msRest.RequestOptionsBase): Promise<Models.StepsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param stepName The name of the deployment step.
     * @param callback The callback
     */
    get(resourceGroupName: string, stepName: string, callback: msRest.ServiceCallback<Models.StepResource>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param stepName The name of the deployment step.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, stepName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StepResource>): void;
    /**
     * @summary Deletes the step.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param stepName The name of the deployment step.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, stepName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param stepName The name of the deployment step.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, stepName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param stepName The name of the deployment step.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, stepName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * @summary Lists the steps in a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param [options] The optional parameters
     * @returns Promise<Models.StepsListResponse>
     */
    list(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.StepsListResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param callback The callback
     */
    list(resourceGroupName: string, callback: msRest.ServiceCallback<Models.StepResource[]>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StepResource[]>): void;
}
//# sourceMappingURL=steps.d.ts.map