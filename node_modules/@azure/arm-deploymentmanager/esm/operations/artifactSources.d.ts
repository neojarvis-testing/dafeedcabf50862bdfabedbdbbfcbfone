import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AzureDeploymentManagerContext } from "../azureDeploymentManagerContext";
/** Class representing a ArtifactSources. */
export declare class ArtifactSources {
    private readonly client;
    /**
     * Create a ArtifactSources.
     * @param {AzureDeploymentManagerContext} client Reference to the service client.
     */
    constructor(client: AzureDeploymentManagerContext);
    /**
     * Synchronously creates a new artifact source or updates an existing artifact source.
     * @summary Creates or updates an artifact source.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param artifactSourceName The name of the artifact source.
     * @param [options] The optional parameters
     * @returns Promise<Models.ArtifactSourcesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, artifactSourceName: string, options?: Models.ArtifactSourcesCreateOrUpdateOptionalParams): Promise<Models.ArtifactSourcesCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param artifactSourceName The name of the artifact source.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, artifactSourceName: string, callback: msRest.ServiceCallback<Models.ArtifactSource>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param artifactSourceName The name of the artifact source.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, artifactSourceName: string, options: Models.ArtifactSourcesCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.ArtifactSource>): void;
    /**
     * @summary Gets an artifact source.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param artifactSourceName The name of the artifact source.
     * @param [options] The optional parameters
     * @returns Promise<Models.ArtifactSourcesGetResponse>
     */
    get(resourceGroupName: string, artifactSourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ArtifactSourcesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param artifactSourceName The name of the artifact source.
     * @param callback The callback
     */
    get(resourceGroupName: string, artifactSourceName: string, callback: msRest.ServiceCallback<Models.ArtifactSource>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param artifactSourceName The name of the artifact source.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, artifactSourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ArtifactSource>): void;
    /**
     * @summary Deletes an artifact source.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param artifactSourceName The name of the artifact source.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, artifactSourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param artifactSourceName The name of the artifact source.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, artifactSourceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param artifactSourceName The name of the artifact source.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, artifactSourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * @summary Lists the artifact sources in a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param [options] The optional parameters
     * @returns Promise<Models.ArtifactSourcesListResponse>
     */
    list(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ArtifactSourcesListResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param callback The callback
     */
    list(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ArtifactSource[]>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ArtifactSource[]>): void;
}
//# sourceMappingURL=artifactSources.d.ts.map