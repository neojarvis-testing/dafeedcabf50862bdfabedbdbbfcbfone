import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Namespaces, PrivateEndpointConnections, PrivateLinkResources, Operations, DisasterRecoveryConfigs, MigrationConfigs, Queues, Topics, Rules, Subscriptions } from "./operationsInterfaces";
import { ServiceBusManagementClientOptionalParams } from "./models";
export declare class ServiceBusManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the ServiceBusManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Subscription credentials that uniquely identify a Microsoft Azure
     *                       subscription. The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ServiceBusManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    namespaces: Namespaces;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    operations: Operations;
    disasterRecoveryConfigs: DisasterRecoveryConfigs;
    migrationConfigs: MigrationConfigs;
    queues: Queues;
    topics: Topics;
    rules: Rules;
    subscriptions: Subscriptions;
}
//# sourceMappingURL=serviceBusManagementClient.d.ts.map