import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Rule, RulesListBySubscriptionsOptionalParams, RulesCreateOrUpdateOptionalParams, RulesCreateOrUpdateResponse, RulesDeleteOptionalParams, RulesGetOptionalParams, RulesGetResponse } from "../models";
/** Interface representing a Rules. */
export interface Rules {
    /**
     * List all the rules within given topic-subscription
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param topicName The topic name.
     * @param subscriptionName The subscription name.
     * @param options The options parameters.
     */
    listBySubscriptions(resourceGroupName: string, namespaceName: string, topicName: string, subscriptionName: string, options?: RulesListBySubscriptionsOptionalParams): PagedAsyncIterableIterator<Rule>;
    /**
     * Creates a new rule and updates an existing rule
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param topicName The topic name.
     * @param subscriptionName The subscription name.
     * @param ruleName The rule name.
     * @param parameters Parameters supplied to create a rule.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, namespaceName: string, topicName: string, subscriptionName: string, ruleName: string, parameters: Rule, options?: RulesCreateOrUpdateOptionalParams): Promise<RulesCreateOrUpdateResponse>;
    /**
     * Deletes an existing rule.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param topicName The topic name.
     * @param subscriptionName The subscription name.
     * @param ruleName The rule name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, namespaceName: string, topicName: string, subscriptionName: string, ruleName: string, options?: RulesDeleteOptionalParams): Promise<void>;
    /**
     * Retrieves the description for the specified rule.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param topicName The topic name.
     * @param subscriptionName The subscription name.
     * @param ruleName The rule name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, namespaceName: string, topicName: string, subscriptionName: string, ruleName: string, options?: RulesGetOptionalParams): Promise<RulesGetResponse>;
}
//# sourceMappingURL=rules.d.ts.map