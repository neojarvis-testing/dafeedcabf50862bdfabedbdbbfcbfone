/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ServiceBusManagementClient } from "@azure/arm-servicebus";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Creates a new rule and updates an existing rule
 *
 * @summary Creates a new rule and updates an existing rule
 * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Rules/RuleCreate_CorrelationFilter.json
 */
function rulesCreateCorrelationFilter() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subscriptionId";
        const resourceGroupName = "resourceGroupName";
        const namespaceName = "sdk-Namespace-1319";
        const topicName = "sdk-Topics-2081";
        const subscriptionName = "sdk-Subscriptions-8691";
        const ruleName = "sdk-Rules-6571";
        const parameters = {
            correlationFilter: { properties: { topicHint: "Crop" } },
            filterType: "CorrelationFilter"
        };
        const credential = new DefaultAzureCredential();
        const client = new ServiceBusManagementClient(credential, subscriptionId);
        const result = yield client.rules.createOrUpdate(resourceGroupName, namespaceName, topicName, subscriptionName, ruleName, parameters);
        console.log(result);
    });
}
rulesCreateCorrelationFilter().catch(console.error);
/**
 * This sample demonstrates how to Creates a new rule and updates an existing rule
 *
 * @summary Creates a new rule and updates an existing rule
 * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Rules/RuleCreate.json
 */
function rulesCreateOrUpdate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subscriptionId";
        const resourceGroupName = "resourceGroupName";
        const namespaceName = "sdk-Namespace-1319";
        const topicName = "sdk-Topics-2081";
        const subscriptionName = "sdk-Subscriptions-8691";
        const ruleName = "sdk-Rules-6571";
        const parameters = {};
        const credential = new DefaultAzureCredential();
        const client = new ServiceBusManagementClient(credential, subscriptionId);
        const result = yield client.rules.createOrUpdate(resourceGroupName, namespaceName, topicName, subscriptionName, ruleName, parameters);
        console.log(result);
    });
}
rulesCreateOrUpdate().catch(console.error);
/**
 * This sample demonstrates how to Creates a new rule and updates an existing rule
 *
 * @summary Creates a new rule and updates an existing rule
 * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Rules/RuleCreate_SqlFilter.json
 */
function rulesCreateSqlFilter() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subscriptionId";
        const resourceGroupName = "resourceGroupName";
        const namespaceName = "sdk-Namespace-1319";
        const topicName = "sdk-Topics-2081";
        const subscriptionName = "sdk-Subscriptions-8691";
        const ruleName = "sdk-Rules-6571";
        const parameters = {
            filterType: "SqlFilter",
            sqlFilter: { sqlExpression: "myproperty=test" }
        };
        const credential = new DefaultAzureCredential();
        const client = new ServiceBusManagementClient(credential, subscriptionId);
        const result = yield client.rules.createOrUpdate(resourceGroupName, namespaceName, topicName, subscriptionName, ruleName, parameters);
        console.log(result);
    });
}
rulesCreateSqlFilter().catch(console.error);
//# sourceMappingURL=rulesCreateOrUpdateSample.js.map