/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __asyncValues, __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ServiceBusManagementClient } from "@azure/arm-servicebus";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Gets all authorization rules for a queue.
 *
 * @summary Gets all authorization rules for a queue.
 * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Queues/SBQueueAuthorizationRuleListAll.json
 */
function queueAuthorizationRuleListAll() {
    var e_1, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "5f750a97-50d9-4e36-8081-c9ee4c0210d4";
        const resourceGroupName = "ArunMonocle";
        const namespaceName = "sdk-Namespace-7982";
        const queueName = "sdk-Queues-2317";
        const credential = new DefaultAzureCredential();
        const client = new ServiceBusManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.queues.listAuthorizationRules(resourceGroupName, namespaceName, queueName)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(resArray);
    });
}
queueAuthorizationRuleListAll().catch(console.error);
//# sourceMappingURL=queuesListAuthorizationRulesSample.js.map