import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Keys, ManagedHsmKeys, Vaults, PrivateEndpointConnections, PrivateLinkResources, ManagedHsms, MhsmPrivateEndpointConnections, MhsmPrivateLinkResources, MhsmRegions, Operations, Secrets } from "./operationsInterfaces";
import { KeyVaultManagementClientOptionalParams } from "./models";
export declare class KeyVaultManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the KeyVaultManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.
     *                       The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: KeyVaultManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    keys: Keys;
    managedHsmKeys: ManagedHsmKeys;
    vaults: Vaults;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    managedHsms: ManagedHsms;
    mhsmPrivateEndpointConnections: MhsmPrivateEndpointConnections;
    mhsmPrivateLinkResources: MhsmPrivateLinkResources;
    mhsmRegions: MhsmRegions;
    operations: Operations;
    secrets: Secrets;
}
//# sourceMappingURL=keyVaultManagementClient.d.ts.map