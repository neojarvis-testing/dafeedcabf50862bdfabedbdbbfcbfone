/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { KeyVaultManagementClient } from "@azure/arm-keyvault";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Update a secret in the specified subscription.  NOTE: This API is intended for internal use in ARM deployments.  Users should use the data-plane REST service for interaction with vault secrets.
 *
 * @summary Update a secret in the specified subscription.  NOTE: This API is intended for internal use in ARM deployments.  Users should use the data-plane REST service for interaction with vault secrets.
 * x-ms-original-file: specification/keyvault/resource-manager/Microsoft.KeyVault/stable/2023-07-01/examples/updateSecret.json
 */
function updateASecret() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["KEYVAULT_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = process.env["KEYVAULT_RESOURCE_GROUP"] || "sample-group";
        const vaultName = "sample-vault";
        const secretName = "secret-name";
        const parameters = {
            properties: { value: "secret-value2" }
        };
        const credential = new DefaultAzureCredential();
        const client = new KeyVaultManagementClient(credential, subscriptionId);
        const result = yield client.secrets.update(resourceGroupName, vaultName, secretName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        updateASecret();
    });
}
main().catch(console.error);
//# sourceMappingURL=secretsUpdateSample.js.map