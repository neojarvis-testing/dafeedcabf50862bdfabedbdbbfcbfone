/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { KeyVaultManagementClient } from "@azure/arm-keyvault";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates the first version of a new key if it does not exist. If it already exists, then the existing key is returned without any write operations being performed. This API does not create subsequent versions, and does not update existing keys.
 *
 * @summary Creates the first version of a new key if it does not exist. If it already exists, then the existing key is returned without any write operations being performed. This API does not create subsequent versions, and does not update existing keys.
 * x-ms-original-file: specification/keyvault/resource-manager/Microsoft.KeyVault/stable/2023-07-01/examples/createKey.json
 */
function createAKey() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["KEYVAULT_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = process.env["KEYVAULT_RESOURCE_GROUP"] || "sample-group";
        const vaultName = "sample-vault-name";
        const keyName = "sample-key-name";
        const parameters = { properties: { kty: "RSA" } };
        const credential = new DefaultAzureCredential();
        const client = new KeyVaultManagementClient(credential, subscriptionId);
        const result = yield client.keys.createIfNotExist(resourceGroupName, vaultName, keyName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createAKey();
    });
}
main().catch(console.error);
//# sourceMappingURL=keysCreateIfNotExistSample.js.map