/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __asyncValues, __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SecurityCenter } from "@azure/arm-security";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to The location of the responsible ASC of the specific subscription (home region). For each subscription there is only one responsible location. The location in the response should be used to read or write other resources in ASC according to their ID.
 *
 * @summary The location of the responsible ASC of the specific subscription (home region). For each subscription there is only one responsible location. The location in the response should be used to read or write other resources in ASC according to their ID.
 * x-ms-original-file: specification/security/resource-manager/Microsoft.Security/preview/2015-06-01-preview/examples/Locations/GetLocations_example.json
 */
function getSecurityDataLocations() {
    var e_1, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "20ff7fc3-e762-44dd-bd96-b71116dcdc23";
        const credential = new DefaultAzureCredential();
        const client = new SecurityCenter(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.locations.list()), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(resArray);
    });
}
getSecurityDataLocations().catch(console.error);
//# sourceMappingURL=locationsListSample.js.map