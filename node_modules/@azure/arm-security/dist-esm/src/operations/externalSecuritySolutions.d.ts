import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ExternalSecuritySolutions } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { ExternalSecuritySolutionUnion, ExternalSecuritySolutionsListOptionalParams, ExternalSecuritySolutionsListByHomeRegionOptionalParams, ExternalSecuritySolutionsGetOptionalParams, ExternalSecuritySolutionsGetResponse } from "../models";
/** Class containing ExternalSecuritySolutions operations. */
export declare class ExternalSecuritySolutionsImpl implements ExternalSecuritySolutions {
    private readonly client;
    /**
     * Initialize a new instance of the class ExternalSecuritySolutions class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Gets a list of external security solutions for the subscription.
     * @param options The options parameters.
     */
    list(options?: ExternalSecuritySolutionsListOptionalParams): PagedAsyncIterableIterator<ExternalSecuritySolutionUnion>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets a list of external Security Solutions for the subscription and location.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByHomeRegion(ascLocation: string, options?: ExternalSecuritySolutionsListByHomeRegionOptionalParams): PagedAsyncIterableIterator<ExternalSecuritySolutionUnion>;
    private listByHomeRegionPagingPage;
    private listByHomeRegionPagingAll;
    /**
     * Gets a list of external security solutions for the subscription.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets a list of external Security Solutions for the subscription and location.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    private _listByHomeRegion;
    /**
     * Gets a specific external Security Solution.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param externalSecuritySolutionsName Name of an external security solution.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ascLocation: string, externalSecuritySolutionsName: string, options?: ExternalSecuritySolutionsGetOptionalParams): Promise<ExternalSecuritySolutionsGetResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListByHomeRegionNext
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param nextLink The nextLink from the previous successful call to the ListByHomeRegion method.
     * @param options The options parameters.
     */
    private _listByHomeRegionNext;
}
//# sourceMappingURL=externalSecuritySolutions.d.ts.map