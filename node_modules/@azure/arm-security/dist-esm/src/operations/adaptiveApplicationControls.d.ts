import { AdaptiveApplicationControls } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { AdaptiveApplicationControlsListOptionalParams, AdaptiveApplicationControlsListResponse, AdaptiveApplicationControlsGetOptionalParams, AdaptiveApplicationControlsGetResponse, AdaptiveApplicationControlGroup, AdaptiveApplicationControlsPutOptionalParams, AdaptiveApplicationControlsPutResponse, AdaptiveApplicationControlsDeleteOptionalParams } from "../models";
/** Class containing AdaptiveApplicationControls operations. */
export declare class AdaptiveApplicationControlsImpl implements AdaptiveApplicationControls {
    private readonly client;
    /**
     * Initialize a new instance of the class AdaptiveApplicationControls class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Gets a list of application control machine groups for the subscription.
     * @param options The options parameters.
     */
    list(options?: AdaptiveApplicationControlsListOptionalParams): Promise<AdaptiveApplicationControlsListResponse>;
    /**
     * Gets an application control VM/server group.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param groupName Name of an application control machine group
     * @param options The options parameters.
     */
    get(ascLocation: string, groupName: string, options?: AdaptiveApplicationControlsGetOptionalParams): Promise<AdaptiveApplicationControlsGetResponse>;
    /**
     * Update an application control machine group
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param groupName Name of an application control machine group
     * @param body
     * @param options The options parameters.
     */
    put(ascLocation: string, groupName: string, body: AdaptiveApplicationControlGroup, options?: AdaptiveApplicationControlsPutOptionalParams): Promise<AdaptiveApplicationControlsPutResponse>;
    /**
     * Delete an application control machine group
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param groupName Name of an application control machine group
     * @param options The options parameters.
     */
    delete(ascLocation: string, groupName: string, options?: AdaptiveApplicationControlsDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=adaptiveApplicationControls.d.ts.map