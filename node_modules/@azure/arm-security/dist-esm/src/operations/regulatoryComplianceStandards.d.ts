import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RegulatoryComplianceStandards } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { RegulatoryComplianceStandard, RegulatoryComplianceStandardsListOptionalParams, RegulatoryComplianceStandardsGetOptionalParams, RegulatoryComplianceStandardsGetResponse } from "../models";
/** Class containing RegulatoryComplianceStandards operations. */
export declare class RegulatoryComplianceStandardsImpl implements RegulatoryComplianceStandards {
    private readonly client;
    /**
     * Initialize a new instance of the class RegulatoryComplianceStandards class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Supported regulatory compliance standards details and state
     * @param options The options parameters.
     */
    list(options?: RegulatoryComplianceStandardsListOptionalParams): PagedAsyncIterableIterator<RegulatoryComplianceStandard>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Supported regulatory compliance standards details and state
     * @param options The options parameters.
     */
    private _list;
    /**
     * Supported regulatory compliance details state for selected standard
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param options The options parameters.
     */
    get(regulatoryComplianceStandardName: string, options?: RegulatoryComplianceStandardsGetOptionalParams): Promise<RegulatoryComplianceStandardsGetResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=regulatoryComplianceStandards.d.ts.map