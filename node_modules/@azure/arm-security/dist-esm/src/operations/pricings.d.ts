import { Pricings } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { PricingsListOptionalParams, PricingsListResponse, PricingsGetOptionalParams, PricingsGetResponse, Pricing, PricingsUpdateOptionalParams, PricingsUpdateResponse } from "../models";
/** Class containing Pricings operations. */
export declare class PricingsImpl implements Pricings {
    private readonly client;
    /**
     * Initialize a new instance of the class Pricings class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Lists Security Center pricing configurations in the subscription.
     * @param options The options parameters.
     */
    list(options?: PricingsListOptionalParams): Promise<PricingsListResponse>;
    /**
     * Gets a provided Security Center pricing configuration in the subscription.
     * @param pricingName name of the pricing configuration
     * @param options The options parameters.
     */
    get(pricingName: string, options?: PricingsGetOptionalParams): Promise<PricingsGetResponse>;
    /**
     * Updates a provided Security Center pricing configuration in the subscription.
     * @param pricingName name of the pricing configuration
     * @param pricing Pricing object
     * @param options The options parameters.
     */
    update(pricingName: string, pricing: Pricing, options?: PricingsUpdateOptionalParams): Promise<PricingsUpdateResponse>;
}
//# sourceMappingURL=pricings.d.ts.map