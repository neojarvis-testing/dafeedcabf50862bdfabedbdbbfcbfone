import { SqlVulnerabilityAssessmentScanResults } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { SqlVulnerabilityAssessmentScanResultsGetOptionalParams, SqlVulnerabilityAssessmentScanResultsGetResponse, SqlVulnerabilityAssessmentScanResultsListOptionalParams, SqlVulnerabilityAssessmentScanResultsListResponse } from "../models";
/** Class containing SqlVulnerabilityAssessmentScanResults operations. */
export declare class SqlVulnerabilityAssessmentScanResultsImpl implements SqlVulnerabilityAssessmentScanResults {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlVulnerabilityAssessmentScanResults class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Gets the scan results of a single rule in a scan record.
     * @param scanId The scan Id. Type 'latest' to get the scan results for the latest scan.
     * @param scanResultId The rule Id of the results.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    get(scanId: string, scanResultId: string, workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentScanResultsGetOptionalParams): Promise<SqlVulnerabilityAssessmentScanResultsGetResponse>;
    /**
     * Gets a list of scan results for a single scan record.
     * @param scanId The scan Id. Type 'latest' to get the scan results for the latest scan.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    list(scanId: string, workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentScanResultsListOptionalParams): Promise<SqlVulnerabilityAssessmentScanResultsListResponse>;
}
//# sourceMappingURL=sqlVulnerabilityAssessmentScanResults.d.ts.map