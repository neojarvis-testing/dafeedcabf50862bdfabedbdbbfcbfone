import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SubAssessments } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { SecuritySubAssessment, SubAssessmentsListAllOptionalParams, SubAssessmentsListOptionalParams, SubAssessmentsGetOptionalParams, SubAssessmentsGetResponse } from "../models";
/** Class containing SubAssessments operations. */
export declare class SubAssessmentsImpl implements SubAssessments {
    private readonly client;
    /**
     * Initialize a new instance of the class SubAssessments class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Get security sub-assessments on all your scanned resources inside a subscription scope
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param options The options parameters.
     */
    listAll(scope: string, options?: SubAssessmentsListAllOptionalParams): PagedAsyncIterableIterator<SecuritySubAssessment>;
    private listAllPagingPage;
    private listAllPagingAll;
    /**
     * Get security sub-assessments on all your scanned resources inside a scope
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param assessmentName The Assessment Key - Unique key for the assessment type
     * @param options The options parameters.
     */
    list(scope: string, assessmentName: string, options?: SubAssessmentsListOptionalParams): PagedAsyncIterableIterator<SecuritySubAssessment>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get security sub-assessments on all your scanned resources inside a subscription scope
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param options The options parameters.
     */
    private _listAll;
    /**
     * Get security sub-assessments on all your scanned resources inside a scope
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param assessmentName The Assessment Key - Unique key for the assessment type
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get a security sub-assessment on your scanned resource
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param assessmentName The Assessment Key - Unique key for the assessment type
     * @param subAssessmentName The Sub-Assessment Key - Unique key for the sub-assessment type
     * @param options The options parameters.
     */
    get(scope: string, assessmentName: string, subAssessmentName: string, options?: SubAssessmentsGetOptionalParams): Promise<SubAssessmentsGetResponse>;
    /**
     * ListAllNext
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param nextLink The nextLink from the previous successful call to the ListAll method.
     * @param options The options parameters.
     */
    private _listAllNext;
    /**
     * ListNext
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param assessmentName The Assessment Key - Unique key for the assessment type
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=subAssessments.d.ts.map