import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SoftwareInventories } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { Software, SoftwareInventoriesListByExtendedResourceOptionalParams, SoftwareInventoriesListBySubscriptionOptionalParams, SoftwareInventoriesGetOptionalParams, SoftwareInventoriesGetResponse } from "../models";
/** Class containing SoftwareInventories operations. */
export declare class SoftwareInventoriesImpl implements SoftwareInventories {
    private readonly client;
    /**
     * Initialize a new instance of the class SoftwareInventories class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Gets the software inventory of the virtual machine.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param options The options parameters.
     */
    listByExtendedResource(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, options?: SoftwareInventoriesListByExtendedResourceOptionalParams): PagedAsyncIterableIterator<Software>;
    private listByExtendedResourcePagingPage;
    private listByExtendedResourcePagingAll;
    /**
     * Gets the software inventory of all virtual machines in the subscriptions.
     * @param options The options parameters.
     */
    listBySubscription(options?: SoftwareInventoriesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Software>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Gets the software inventory of the virtual machine.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param options The options parameters.
     */
    private _listByExtendedResource;
    /**
     * Gets the software inventory of all virtual machines in the subscriptions.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Gets a single software data of the virtual machine.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param softwareName Name of the installed software.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, softwareName: string, options?: SoftwareInventoriesGetOptionalParams): Promise<SoftwareInventoriesGetResponse>;
    /**
     * ListByExtendedResourceNext
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param nextLink The nextLink from the previous successful call to the ListByExtendedResource method.
     * @param options The options parameters.
     */
    private _listByExtendedResourceNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=softwareInventories.d.ts.map