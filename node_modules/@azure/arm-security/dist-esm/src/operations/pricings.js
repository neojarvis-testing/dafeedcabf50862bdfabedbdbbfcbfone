/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing Pricings operations. */
export class PricingsImpl {
    /**
     * Initialize a new instance of the class Pricings class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Lists Security Center pricing configurations in the subscription.
     * @param options The options parameters.
     */
    list(options) {
        return this.client.sendOperationRequest({ options }, listOperationSpec);
    }
    /**
     * Gets a provided Security Center pricing configuration in the subscription.
     * @param pricingName name of the pricing configuration
     * @param options The options parameters.
     */
    get(pricingName, options) {
        return this.client.sendOperationRequest({ pricingName, options }, getOperationSpec);
    }
    /**
     * Updates a provided Security Center pricing configuration in the subscription.
     * @param pricingName name of the pricing configuration
     * @param pricing Pricing object
     * @param options The options parameters.
     */
    update(pricingName, pricing, options) {
        return this.client.sendOperationRequest({ pricingName, pricing, options }, updateOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const listOperationSpec = {
    path: "/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.PricingList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    queryParameters: [Parameters.apiVersion3],
    urlParameters: [Parameters.$host, Parameters.subscriptionId],
    headerParameters: [Parameters.accept],
    serializer
};
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings/{pricingName}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.Pricing
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    queryParameters: [Parameters.apiVersion3],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.pricingName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const updateOperationSpec = {
    path: "/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings/{pricingName}",
    httpMethod: "PUT",
    responses: {
        200: {
            bodyMapper: Mappers.Pricing
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    requestBody: Parameters.pricing,
    queryParameters: [Parameters.apiVersion3],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.pricingName
    ],
    headerParameters: [Parameters.accept, Parameters.contentType],
    mediaType: "json",
    serializer
};
//# sourceMappingURL=pricings.js.map