import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Tasks } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { SecurityTask, TasksListOptionalParams, TasksListByHomeRegionOptionalParams, TasksListByResourceGroupOptionalParams, TasksGetSubscriptionLevelTaskOptionalParams, TasksGetSubscriptionLevelTaskResponse, TaskUpdateActionType, TasksUpdateSubscriptionLevelTaskStateOptionalParams, TasksGetResourceGroupLevelTaskOptionalParams, TasksGetResourceGroupLevelTaskResponse, TasksUpdateResourceGroupLevelTaskStateOptionalParams } from "../models";
/** Class containing Tasks operations. */
export declare class TasksImpl implements Tasks {
    private readonly client;
    /**
     * Initialize a new instance of the class Tasks class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param options The options parameters.
     */
    list(options?: TasksListOptionalParams): PagedAsyncIterableIterator<SecurityTask>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByHomeRegion(ascLocation: string, options?: TasksListByHomeRegionOptionalParams): PagedAsyncIterableIterator<SecurityTask>;
    private listByHomeRegionPagingPage;
    private listByHomeRegionPagingAll;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, ascLocation: string, options?: TasksListByResourceGroupOptionalParams): PagedAsyncIterableIterator<SecurityTask>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param options The options parameters.
     */
    private _list;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    private _listByHomeRegion;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param taskName Name of the task object, will be a GUID
     * @param options The options parameters.
     */
    getSubscriptionLevelTask(ascLocation: string, taskName: string, options?: TasksGetSubscriptionLevelTaskOptionalParams): Promise<TasksGetSubscriptionLevelTaskResponse>;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param taskName Name of the task object, will be a GUID
     * @param taskUpdateActionType Type of the action to do on the task
     * @param options The options parameters.
     */
    updateSubscriptionLevelTaskState(ascLocation: string, taskName: string, taskUpdateActionType: TaskUpdateActionType, options?: TasksUpdateSubscriptionLevelTaskStateOptionalParams): Promise<void>;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param taskName Name of the task object, will be a GUID
     * @param options The options parameters.
     */
    getResourceGroupLevelTask(resourceGroupName: string, ascLocation: string, taskName: string, options?: TasksGetResourceGroupLevelTaskOptionalParams): Promise<TasksGetResourceGroupLevelTaskResponse>;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param taskName Name of the task object, will be a GUID
     * @param taskUpdateActionType Type of the action to do on the task
     * @param options The options parameters.
     */
    updateResourceGroupLevelTaskState(resourceGroupName: string, ascLocation: string, taskName: string, taskUpdateActionType: TaskUpdateActionType, options?: TasksUpdateResourceGroupLevelTaskStateOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListByHomeRegionNext
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param nextLink The nextLink from the previous successful call to the ListByHomeRegion method.
     * @param options The options parameters.
     */
    private _listByHomeRegionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=tasks.d.ts.map