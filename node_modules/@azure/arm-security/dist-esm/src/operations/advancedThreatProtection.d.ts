import { AdvancedThreatProtection } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { AdvancedThreatProtectionGetOptionalParams, AdvancedThreatProtectionGetResponse, AdvancedThreatProtectionSetting, AdvancedThreatProtectionCreateOptionalParams, AdvancedThreatProtectionCreateResponse } from "../models";
/** Class containing AdvancedThreatProtection operations. */
export declare class AdvancedThreatProtectionImpl implements AdvancedThreatProtection {
    private readonly client;
    /**
     * Initialize a new instance of the class AdvancedThreatProtection class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Gets the Advanced Threat Protection settings for the specified resource.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    get(resourceId: string, options?: AdvancedThreatProtectionGetOptionalParams): Promise<AdvancedThreatProtectionGetResponse>;
    /**
     * Creates or updates the Advanced Threat Protection settings on a specified resource.
     * @param resourceId The identifier of the resource.
     * @param advancedThreatProtectionSetting Advanced Threat Protection Settings
     * @param options The options parameters.
     */
    create(resourceId: string, advancedThreatProtectionSetting: AdvancedThreatProtectionSetting, options?: AdvancedThreatProtectionCreateOptionalParams): Promise<AdvancedThreatProtectionCreateResponse>;
}
//# sourceMappingURL=advancedThreatProtection.d.ts.map