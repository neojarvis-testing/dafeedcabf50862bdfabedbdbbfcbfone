import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AlertsSuppressionRules } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { AlertsSuppressionRule, AlertsSuppressionRulesListOptionalParams, AlertsSuppressionRulesGetOptionalParams, AlertsSuppressionRulesGetResponse, AlertsSuppressionRulesUpdateOptionalParams, AlertsSuppressionRulesUpdateResponse, AlertsSuppressionRulesDeleteOptionalParams } from "../models";
/** Class containing AlertsSuppressionRules operations. */
export declare class AlertsSuppressionRulesImpl implements AlertsSuppressionRules {
    private readonly client;
    /**
     * Initialize a new instance of the class AlertsSuppressionRules class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * List of all the dismiss rules for the given subscription
     * @param options The options parameters.
     */
    list(options?: AlertsSuppressionRulesListOptionalParams): PagedAsyncIterableIterator<AlertsSuppressionRule>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List of all the dismiss rules for the given subscription
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get dismiss rule, with name: {alertsSuppressionRuleName}, for the given subscription
     * @param alertsSuppressionRuleName The unique name of the suppression alert rule
     * @param options The options parameters.
     */
    get(alertsSuppressionRuleName: string, options?: AlertsSuppressionRulesGetOptionalParams): Promise<AlertsSuppressionRulesGetResponse>;
    /**
     * Update existing rule or create new rule if it doesn't exist
     * @param alertsSuppressionRuleName The unique name of the suppression alert rule
     * @param alertsSuppressionRule Suppression rule object
     * @param options The options parameters.
     */
    update(alertsSuppressionRuleName: string, alertsSuppressionRule: AlertsSuppressionRule, options?: AlertsSuppressionRulesUpdateOptionalParams): Promise<AlertsSuppressionRulesUpdateResponse>;
    /**
     * Delete dismiss alert rule for this subscription.
     * @param alertsSuppressionRuleName The unique name of the suppression alert rule
     * @param options The options parameters.
     */
    delete(alertsSuppressionRuleName: string, options?: AlertsSuppressionRulesDeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=alertsSuppressionRules.d.ts.map