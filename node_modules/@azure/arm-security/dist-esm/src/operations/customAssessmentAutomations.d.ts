import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { CustomAssessmentAutomations } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { CustomAssessmentAutomation, CustomAssessmentAutomationsListByResourceGroupOptionalParams, CustomAssessmentAutomationsListBySubscriptionOptionalParams, CustomAssessmentAutomationsGetOptionalParams, CustomAssessmentAutomationsGetResponse, CustomAssessmentAutomationRequest, CustomAssessmentAutomationsCreateOptionalParams, CustomAssessmentAutomationsCreateResponse, CustomAssessmentAutomationsDeleteOptionalParams } from "../models";
/** Class containing CustomAssessmentAutomations operations. */
export declare class CustomAssessmentAutomationsImpl implements CustomAssessmentAutomations {
    private readonly client;
    /**
     * Initialize a new instance of the class CustomAssessmentAutomations class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * List custom assessment automations by provided subscription and resource group
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: CustomAssessmentAutomationsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<CustomAssessmentAutomation>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List custom assessment automations by provided subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: CustomAssessmentAutomationsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<CustomAssessmentAutomation>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Gets a single custom assessment automation by name for the provided subscription and resource group.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param customAssessmentAutomationName Name of the Custom Assessment Automation.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, customAssessmentAutomationName: string, options?: CustomAssessmentAutomationsGetOptionalParams): Promise<CustomAssessmentAutomationsGetResponse>;
    /**
     * Creates or updates a custom assessment automation for the provided subscription. Please note that
     * providing an existing custom assessment automation will replace the existing record.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param customAssessmentAutomationName Name of the Custom Assessment Automation.
     * @param customAssessmentAutomationBody Custom Assessment Automation body
     * @param options The options parameters.
     */
    create(resourceGroupName: string, customAssessmentAutomationName: string, customAssessmentAutomationBody: CustomAssessmentAutomationRequest, options?: CustomAssessmentAutomationsCreateOptionalParams): Promise<CustomAssessmentAutomationsCreateResponse>;
    /**
     * Deletes a custom assessment automation by name for a provided subscription
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param customAssessmentAutomationName Name of the Custom Assessment Automation.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, customAssessmentAutomationName: string, options?: CustomAssessmentAutomationsDeleteOptionalParams): Promise<void>;
    /**
     * List custom assessment automations by provided subscription and resource group
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * List custom assessment automations by provided subscription
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=customAssessmentAutomations.d.ts.map