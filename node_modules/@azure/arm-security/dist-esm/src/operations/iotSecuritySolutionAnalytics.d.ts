import { IotSecuritySolutionAnalytics } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { IotSecuritySolutionAnalyticsListOptionalParams, IotSecuritySolutionAnalyticsListResponse, IotSecuritySolutionAnalyticsGetOptionalParams, IotSecuritySolutionAnalyticsGetResponse } from "../models";
/** Class containing IotSecuritySolutionAnalytics operations. */
export declare class IotSecuritySolutionAnalyticsImpl implements IotSecuritySolutionAnalytics {
    private readonly client;
    /**
     * Initialize a new instance of the class IotSecuritySolutionAnalytics class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Use this method to get IoT security Analytics metrics in an array.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, solutionName: string, options?: IotSecuritySolutionAnalyticsListOptionalParams): Promise<IotSecuritySolutionAnalyticsListResponse>;
    /**
     * Use this method to get IoT Security Analytics metrics.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, solutionName: string, options?: IotSecuritySolutionAnalyticsGetOptionalParams): Promise<IotSecuritySolutionAnalyticsGetResponse>;
}
//# sourceMappingURL=iotSecuritySolutionAnalytics.d.ts.map