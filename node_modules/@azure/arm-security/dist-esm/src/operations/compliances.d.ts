import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Compliances } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { Compliance, CompliancesListOptionalParams, CompliancesGetOptionalParams, CompliancesGetResponse } from "../models";
/** Class containing Compliances operations. */
export declare class CompliancesImpl implements Compliances {
    private readonly client;
    /**
     * Initialize a new instance of the class Compliances class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * The Compliance scores of the specific management group.
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param options The options parameters.
     */
    list(scope: string, options?: CompliancesListOptionalParams): PagedAsyncIterableIterator<Compliance>;
    private listPagingPage;
    private listPagingAll;
    /**
     * The Compliance scores of the specific management group.
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param options The options parameters.
     */
    private _list;
    /**
     * Details of a specific Compliance.
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param complianceName name of the Compliance
     * @param options The options parameters.
     */
    get(scope: string, complianceName: string, options?: CompliancesGetOptionalParams): Promise<CompliancesGetResponse>;
    /**
     * ListNext
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=compliances.d.ts.map