import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Alerts } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { Alert, AlertsListOptionalParams, AlertsListByResourceGroupOptionalParams, AlertsListSubscriptionLevelByRegionOptionalParams, AlertsListResourceGroupLevelByRegionOptionalParams, AlertsGetSubscriptionLevelOptionalParams, AlertsGetSubscriptionLevelResponse, AlertsGetResourceGroupLevelOptionalParams, AlertsGetResourceGroupLevelResponse, AlertsUpdateSubscriptionLevelStateToDismissOptionalParams, AlertsUpdateSubscriptionLevelStateToResolveOptionalParams, AlertsUpdateSubscriptionLevelStateToActivateOptionalParams, AlertsUpdateResourceGroupLevelStateToResolveOptionalParams, AlertsUpdateResourceGroupLevelStateToDismissOptionalParams, AlertsUpdateResourceGroupLevelStateToActivateOptionalParams, AlertSimulatorRequestBody, AlertsSimulateOptionalParams } from "../models";
/** Class containing Alerts operations. */
export declare class AlertsImpl implements Alerts {
    private readonly client;
    /**
     * Initialize a new instance of the class Alerts class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * List all the alerts that are associated with the subscription
     * @param options The options parameters.
     */
    list(options?: AlertsListOptionalParams): PagedAsyncIterableIterator<Alert>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List all the alerts that are associated with the resource group
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AlertsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Alert>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List all the alerts that are associated with the subscription that are stored in a specific location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listSubscriptionLevelByRegion(ascLocation: string, options?: AlertsListSubscriptionLevelByRegionOptionalParams): PagedAsyncIterableIterator<Alert>;
    private listSubscriptionLevelByRegionPagingPage;
    private listSubscriptionLevelByRegionPagingAll;
    /**
     * List all the alerts that are associated with the resource group that are stored in a specific
     * location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listResourceGroupLevelByRegion(ascLocation: string, resourceGroupName: string, options?: AlertsListResourceGroupLevelByRegionOptionalParams): PagedAsyncIterableIterator<Alert>;
    private listResourceGroupLevelByRegionPagingPage;
    private listResourceGroupLevelByRegionPagingAll;
    /**
     * List all the alerts that are associated with the subscription
     * @param options The options parameters.
     */
    private _list;
    /**
     * List all the alerts that are associated with the resource group
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * List all the alerts that are associated with the subscription that are stored in a specific location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    private _listSubscriptionLevelByRegion;
    /**
     * List all the alerts that are associated with the resource group that are stored in a specific
     * location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    private _listResourceGroupLevelByRegion;
    /**
     * Get an alert that is associated with a subscription
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param options The options parameters.
     */
    getSubscriptionLevel(ascLocation: string, alertName: string, options?: AlertsGetSubscriptionLevelOptionalParams): Promise<AlertsGetSubscriptionLevelResponse>;
    /**
     * Get an alert that is associated a resource group or a resource in a resource group
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    getResourceGroupLevel(ascLocation: string, alertName: string, resourceGroupName: string, options?: AlertsGetResourceGroupLevelOptionalParams): Promise<AlertsGetResourceGroupLevelResponse>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param options The options parameters.
     */
    updateSubscriptionLevelStateToDismiss(ascLocation: string, alertName: string, options?: AlertsUpdateSubscriptionLevelStateToDismissOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param options The options parameters.
     */
    updateSubscriptionLevelStateToResolve(ascLocation: string, alertName: string, options?: AlertsUpdateSubscriptionLevelStateToResolveOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param options The options parameters.
     */
    updateSubscriptionLevelStateToActivate(ascLocation: string, alertName: string, options?: AlertsUpdateSubscriptionLevelStateToActivateOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    updateResourceGroupLevelStateToResolve(ascLocation: string, alertName: string, resourceGroupName: string, options?: AlertsUpdateResourceGroupLevelStateToResolveOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    updateResourceGroupLevelStateToDismiss(ascLocation: string, alertName: string, resourceGroupName: string, options?: AlertsUpdateResourceGroupLevelStateToDismissOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    updateResourceGroupLevelStateToActivate(ascLocation: string, alertName: string, resourceGroupName: string, options?: AlertsUpdateResourceGroupLevelStateToActivateOptionalParams): Promise<void>;
    /**
     * Simulate security alerts
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertSimulatorRequestBody Alert Simulator Request Properties
     * @param options The options parameters.
     */
    simulate(ascLocation: string, alertSimulatorRequestBody: AlertSimulatorRequestBody, options?: AlertsSimulateOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListSubscriptionLevelByRegionNext
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param nextLink The nextLink from the previous successful call to the ListSubscriptionLevelByRegion
     *                 method.
     * @param options The options parameters.
     */
    private _listSubscriptionLevelByRegionNext;
    /**
     * ListResourceGroupLevelByRegionNext
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListResourceGroupLevelByRegion
     *                 method.
     * @param options The options parameters.
     */
    private _listResourceGroupLevelByRegionNext;
}
//# sourceMappingURL=alerts.d.ts.map