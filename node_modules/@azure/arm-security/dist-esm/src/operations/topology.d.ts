import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Topology } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { TopologyResource, TopologyListOptionalParams, TopologyListByHomeRegionOptionalParams, TopologyGetOptionalParams, TopologyGetResponse } from "../models";
/** Class containing Topology operations. */
export declare class TopologyImpl implements Topology {
    private readonly client;
    /**
     * Initialize a new instance of the class Topology class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Gets a list that allows to build a topology view of a subscription.
     * @param options The options parameters.
     */
    list(options?: TopologyListOptionalParams): PagedAsyncIterableIterator<TopologyResource>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets a list that allows to build a topology view of a subscription and location.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByHomeRegion(ascLocation: string, options?: TopologyListByHomeRegionOptionalParams): PagedAsyncIterableIterator<TopologyResource>;
    private listByHomeRegionPagingPage;
    private listByHomeRegionPagingAll;
    /**
     * Gets a list that allows to build a topology view of a subscription.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets a list that allows to build a topology view of a subscription and location.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    private _listByHomeRegion;
    /**
     * Gets a specific topology component.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param topologyResourceName Name of a topology resources collection.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ascLocation: string, topologyResourceName: string, options?: TopologyGetOptionalParams): Promise<TopologyGetResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListByHomeRegionNext
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param nextLink The nextLink from the previous successful call to the ListByHomeRegion method.
     * @param options The options parameters.
     */
    private _listByHomeRegionNext;
}
//# sourceMappingURL=topology.d.ts.map