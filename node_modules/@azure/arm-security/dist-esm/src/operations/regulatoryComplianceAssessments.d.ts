import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RegulatoryComplianceAssessments } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { RegulatoryComplianceAssessment, RegulatoryComplianceAssessmentsListOptionalParams, RegulatoryComplianceAssessmentsGetOptionalParams, RegulatoryComplianceAssessmentsGetResponse } from "../models";
/** Class containing RegulatoryComplianceAssessments operations. */
export declare class RegulatoryComplianceAssessmentsImpl implements RegulatoryComplianceAssessments {
    private readonly client;
    /**
     * Initialize a new instance of the class RegulatoryComplianceAssessments class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Details and state of assessments mapped to selected regulatory compliance control
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param regulatoryComplianceControlName Name of the regulatory compliance control object
     * @param options The options parameters.
     */
    list(regulatoryComplianceStandardName: string, regulatoryComplianceControlName: string, options?: RegulatoryComplianceAssessmentsListOptionalParams): PagedAsyncIterableIterator<RegulatoryComplianceAssessment>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Details and state of assessments mapped to selected regulatory compliance control
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param regulatoryComplianceControlName Name of the regulatory compliance control object
     * @param options The options parameters.
     */
    private _list;
    /**
     * Supported regulatory compliance details and state for selected assessment
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param regulatoryComplianceControlName Name of the regulatory compliance control object
     * @param regulatoryComplianceAssessmentName Name of the regulatory compliance assessment object
     * @param options The options parameters.
     */
    get(regulatoryComplianceStandardName: string, regulatoryComplianceControlName: string, regulatoryComplianceAssessmentName: string, options?: RegulatoryComplianceAssessmentsGetOptionalParams): Promise<RegulatoryComplianceAssessmentsGetResponse>;
    /**
     * ListNext
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param regulatoryComplianceControlName Name of the regulatory compliance control object
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=regulatoryComplianceAssessments.d.ts.map