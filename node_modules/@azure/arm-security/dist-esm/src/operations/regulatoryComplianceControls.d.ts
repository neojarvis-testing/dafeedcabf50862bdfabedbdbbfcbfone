import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RegulatoryComplianceControls } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { RegulatoryComplianceControl, RegulatoryComplianceControlsListOptionalParams, RegulatoryComplianceControlsGetOptionalParams, RegulatoryComplianceControlsGetResponse } from "../models";
/** Class containing RegulatoryComplianceControls operations. */
export declare class RegulatoryComplianceControlsImpl implements RegulatoryComplianceControls {
    private readonly client;
    /**
     * Initialize a new instance of the class RegulatoryComplianceControls class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * All supported regulatory compliance controls details and state for selected standard
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param options The options parameters.
     */
    list(regulatoryComplianceStandardName: string, options?: RegulatoryComplianceControlsListOptionalParams): PagedAsyncIterableIterator<RegulatoryComplianceControl>;
    private listPagingPage;
    private listPagingAll;
    /**
     * All supported regulatory compliance controls details and state for selected standard
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param options The options parameters.
     */
    private _list;
    /**
     * Selected regulatory compliance control details and state
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param regulatoryComplianceControlName Name of the regulatory compliance control object
     * @param options The options parameters.
     */
    get(regulatoryComplianceStandardName: string, regulatoryComplianceControlName: string, options?: RegulatoryComplianceControlsGetOptionalParams): Promise<RegulatoryComplianceControlsGetResponse>;
    /**
     * ListNext
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=regulatoryComplianceControls.d.ts.map