import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AutoProvisioningSettings } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { AutoProvisioningSetting, AutoProvisioningSettingsListOptionalParams, AutoProvisioningSettingsGetOptionalParams, AutoProvisioningSettingsGetResponse, AutoProvisioningSettingsCreateOptionalParams, AutoProvisioningSettingsCreateResponse } from "../models";
/** Class containing AutoProvisioningSettings operations. */
export declare class AutoProvisioningSettingsImpl implements AutoProvisioningSettings {
    private readonly client;
    /**
     * Initialize a new instance of the class AutoProvisioningSettings class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Exposes the auto provisioning settings of the subscriptions
     * @param options The options parameters.
     */
    list(options?: AutoProvisioningSettingsListOptionalParams): PagedAsyncIterableIterator<AutoProvisioningSetting>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Exposes the auto provisioning settings of the subscriptions
     * @param options The options parameters.
     */
    private _list;
    /**
     * Details of a specific setting
     * @param settingName Auto provisioning setting key
     * @param options The options parameters.
     */
    get(settingName: string, options?: AutoProvisioningSettingsGetOptionalParams): Promise<AutoProvisioningSettingsGetResponse>;
    /**
     * Details of a specific setting
     * @param settingName Auto provisioning setting key
     * @param setting Auto provisioning setting key
     * @param options The options parameters.
     */
    create(settingName: string, setting: AutoProvisioningSetting, options?: AutoProvisioningSettingsCreateOptionalParams): Promise<AutoProvisioningSettingsCreateResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=autoProvisioningSettings.d.ts.map