import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SecureScoreControls } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { SecureScoreControlDetails, SecureScoreControlsListBySecureScoreOptionalParams, SecureScoreControlsListOptionalParams } from "../models";
/** Class containing SecureScoreControls operations. */
export declare class SecureScoreControlsImpl implements SecureScoreControls {
    private readonly client;
    /**
     * Initialize a new instance of the class SecureScoreControls class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Get all security controls for a specific initiative within a scope
     * @param secureScoreName The initiative name. For the ASC Default initiative, use 'ascScore' as in the
     *                        sample request below.
     * @param options The options parameters.
     */
    listBySecureScore(secureScoreName: string, options?: SecureScoreControlsListBySecureScoreOptionalParams): PagedAsyncIterableIterator<SecureScoreControlDetails>;
    private listBySecureScorePagingPage;
    private listBySecureScorePagingAll;
    /**
     * Get all security controls within a scope
     * @param options The options parameters.
     */
    list(options?: SecureScoreControlsListOptionalParams): PagedAsyncIterableIterator<SecureScoreControlDetails>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get all security controls for a specific initiative within a scope
     * @param secureScoreName The initiative name. For the ASC Default initiative, use 'ascScore' as in the
     *                        sample request below.
     * @param options The options parameters.
     */
    private _listBySecureScore;
    /**
     * Get all security controls within a scope
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListBySecureScoreNext
     * @param secureScoreName The initiative name. For the ASC Default initiative, use 'ascScore' as in the
     *                        sample request below.
     * @param nextLink The nextLink from the previous successful call to the ListBySecureScore method.
     * @param options The options parameters.
     */
    private _listBySecureScoreNext;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=secureScoreControls.d.ts.map