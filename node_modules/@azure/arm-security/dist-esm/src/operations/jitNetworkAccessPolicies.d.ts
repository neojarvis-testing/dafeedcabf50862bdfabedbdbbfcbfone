import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { JitNetworkAccessPolicies } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { JitNetworkAccessPolicy, JitNetworkAccessPoliciesListOptionalParams, JitNetworkAccessPoliciesListByRegionOptionalParams, JitNetworkAccessPoliciesListByResourceGroupOptionalParams, JitNetworkAccessPoliciesListByResourceGroupAndRegionOptionalParams, JitNetworkAccessPoliciesGetOptionalParams, JitNetworkAccessPoliciesGetResponse, JitNetworkAccessPoliciesCreateOrUpdateOptionalParams, JitNetworkAccessPoliciesCreateOrUpdateResponse, JitNetworkAccessPoliciesDeleteOptionalParams, JitNetworkAccessPolicyInitiateRequest, JitNetworkAccessPoliciesInitiateOptionalParams, JitNetworkAccessPoliciesInitiateResponse } from "../models";
/** Class containing JitNetworkAccessPolicies operations. */
export declare class JitNetworkAccessPoliciesImpl implements JitNetworkAccessPolicies {
    private readonly client;
    /**
     * Initialize a new instance of the class JitNetworkAccessPolicies class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Policies for protecting resources using Just-in-Time access control.
     * @param options The options parameters.
     */
    list(options?: JitNetworkAccessPoliciesListOptionalParams): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByRegion(ascLocation: string, options?: JitNetworkAccessPoliciesListByRegionOptionalParams): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
    private listByRegionPagingPage;
    private listByRegionPagingAll;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: JitNetworkAccessPoliciesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByResourceGroupAndRegion(resourceGroupName: string, ascLocation: string, options?: JitNetworkAccessPoliciesListByResourceGroupAndRegionOptionalParams): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
    private listByResourceGroupAndRegionPagingPage;
    private listByResourceGroupAndRegionPagingAll;
    /**
     * Policies for protecting resources using Just-in-Time access control.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    private _listByRegion;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    private _listByResourceGroupAndRegion;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ascLocation: string, jitNetworkAccessPolicyName: string, options?: JitNetworkAccessPoliciesGetOptionalParams): Promise<JitNetworkAccessPoliciesGetResponse>;
    /**
     * Create a policy for protecting resources using Just-in-Time access control
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
     * @param body
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, ascLocation: string, jitNetworkAccessPolicyName: string, body: JitNetworkAccessPolicy, options?: JitNetworkAccessPoliciesCreateOrUpdateOptionalParams): Promise<JitNetworkAccessPoliciesCreateOrUpdateResponse>;
    /**
     * Delete a Just-in-Time access control policy.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, ascLocation: string, jitNetworkAccessPolicyName: string, options?: JitNetworkAccessPoliciesDeleteOptionalParams): Promise<void>;
    /**
     * Initiate a JIT access from a specific Just-in-Time policy configuration.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
     * @param body
     * @param options The options parameters.
     */
    initiate(resourceGroupName: string, ascLocation: string, jitNetworkAccessPolicyName: string, body: JitNetworkAccessPolicyInitiateRequest, options?: JitNetworkAccessPoliciesInitiateOptionalParams): Promise<JitNetworkAccessPoliciesInitiateResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListByRegionNext
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param nextLink The nextLink from the previous successful call to the ListByRegion method.
     * @param options The options parameters.
     */
    private _listByRegionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListByResourceGroupAndRegionNext
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroupAndRegion
     *                 method.
     * @param options The options parameters.
     */
    private _listByResourceGroupAndRegionNext;
}
//# sourceMappingURL=jitNetworkAccessPolicies.d.ts.map