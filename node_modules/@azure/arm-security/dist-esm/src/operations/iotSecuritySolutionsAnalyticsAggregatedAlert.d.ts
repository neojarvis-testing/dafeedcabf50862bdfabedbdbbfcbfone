import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { IotSecuritySolutionsAnalyticsAggregatedAlert } from "../operationsInterfaces";
import { SecurityCenter } from "../securityCenter";
import { IoTSecurityAggregatedAlert, IotSecuritySolutionsAnalyticsAggregatedAlertListOptionalParams, IotSecuritySolutionsAnalyticsAggregatedAlertGetOptionalParams, IotSecuritySolutionsAnalyticsAggregatedAlertGetResponse, IotSecuritySolutionsAnalyticsAggregatedAlertDismissOptionalParams } from "../models";
/** Class containing IotSecuritySolutionsAnalyticsAggregatedAlert operations. */
export declare class IotSecuritySolutionsAnalyticsAggregatedAlertImpl implements IotSecuritySolutionsAnalyticsAggregatedAlert {
    private readonly client;
    /**
     * Initialize a new instance of the class IotSecuritySolutionsAnalyticsAggregatedAlert class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityCenter);
    /**
     * Use this method to get the aggregated alert list of yours IoT Security solution.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, solutionName: string, options?: IotSecuritySolutionsAnalyticsAggregatedAlertListOptionalParams): PagedAsyncIterableIterator<IoTSecurityAggregatedAlert>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Use this method to get the aggregated alert list of yours IoT Security solution.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Use this method to get a single the aggregated alert of yours IoT Security solution. This
     * aggregation is performed by alert name.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param aggregatedAlertName Identifier of the aggregated alert.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, solutionName: string, aggregatedAlertName: string, options?: IotSecuritySolutionsAnalyticsAggregatedAlertGetOptionalParams): Promise<IotSecuritySolutionsAnalyticsAggregatedAlertGetResponse>;
    /**
     * Use this method to dismiss an aggregated IoT Security Solution Alert.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param aggregatedAlertName Identifier of the aggregated alert.
     * @param options The options parameters.
     */
    dismiss(resourceGroupName: string, solutionName: string, aggregatedAlertName: string, options?: IotSecuritySolutionsAnalyticsAggregatedAlertDismissOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=iotSecuritySolutionsAnalyticsAggregatedAlert.d.ts.map