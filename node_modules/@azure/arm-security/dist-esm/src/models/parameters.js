/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { CustomAssessmentAutomationRequest as CustomAssessmentAutomationRequestMapper, CustomEntityStoreAssignmentRequest as CustomEntityStoreAssignmentRequestMapper, Pricing as PricingMapper, AdvancedThreatProtectionSetting as AdvancedThreatProtectionSettingMapper, DeviceSecurityGroup as DeviceSecurityGroupMapper, IoTSecuritySolutionModel as IoTSecuritySolutionModelMapper, UpdateIotSecuritySolutionData as UpdateIotSecuritySolutionDataMapper, AutoProvisioningSetting as AutoProvisioningSettingMapper, InformationProtectionPolicy as InformationProtectionPolicyMapper, SecurityContact as SecurityContactMapper, WorkspaceSetting as WorkspaceSettingMapper, Automation as AutomationMapper, AlertsSuppressionRule as AlertsSuppressionRuleMapper, SecurityAssessmentMetadataResponse as SecurityAssessmentMetadataResponseMapper, SecurityAssessment as SecurityAssessmentMapper, AdaptiveApplicationControlGroup as AdaptiveApplicationControlGroupMapper, AdaptiveNetworkHardeningEnforceRequest as AdaptiveNetworkHardeningEnforceRequestMapper, JitNetworkAccessPolicy as JitNetworkAccessPolicyMapper, JitNetworkAccessPolicyInitiateRequest as JitNetworkAccessPolicyInitiateRequestMapper, ConnectorSetting as ConnectorSettingMapper, RuleResultsInput as RuleResultsInputMapper, RulesResultsInput as RulesResultsInputMapper, AlertSimulatorRequestBody as AlertSimulatorRequestBodyMapper, Setting as SettingMapper, IngestionSetting as IngestionSettingMapper, SecurityConnector as SecurityConnectorMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-10-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$")
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-07-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[-\\w\\._\\(\\)]+$"),
            MaxLength: 90,
            MinLength: 1
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const customAssessmentAutomationName = {
    parameterPath: "customAssessmentAutomationName",
    mapper: {
        serializedName: "customAssessmentAutomationName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const customAssessmentAutomationBody = {
    parameterPath: "customAssessmentAutomationBody",
    mapper: CustomAssessmentAutomationRequestMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const customEntityStoreAssignmentName = {
    parameterPath: "customEntityStoreAssignmentName",
    mapper: {
        serializedName: "customEntityStoreAssignmentName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const customEntityStoreAssignmentRequestBody = {
    parameterPath: "customEntityStoreAssignmentRequestBody",
    mapper: CustomEntityStoreAssignmentRequestMapper
};
export const apiVersion2 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2017-08-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const scope = {
    parameterPath: "scope",
    mapper: {
        serializedName: "scope",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const resourceId = {
    parameterPath: "resourceId",
    mapper: {
        serializedName: "resourceId",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const complianceResultName = {
    parameterPath: "complianceResultName",
    mapper: {
        serializedName: "complianceResultName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion3 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-03-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const pricingName = {
    parameterPath: "pricingName",
    mapper: {
        serializedName: "pricingName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const pricing = {
    parameterPath: "pricing",
    mapper: PricingMapper
};
export const apiVersion4 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2019-01-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const settingName = {
    parameterPath: "settingName",
    mapper: {
        defaultValue: "current",
        isConstant: true,
        serializedName: "settingName",
        type: {
            name: "String"
        }
    }
};
export const advancedThreatProtectionSetting = {
    parameterPath: "advancedThreatProtectionSetting",
    mapper: AdvancedThreatProtectionSettingMapper
};
export const apiVersion5 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2019-08-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const deviceSecurityGroupName = {
    parameterPath: "deviceSecurityGroupName",
    mapper: {
        serializedName: "deviceSecurityGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const deviceSecurityGroup = {
    parameterPath: "deviceSecurityGroup",
    mapper: DeviceSecurityGroupMapper
};
export const filter = {
    parameterPath: ["options", "filter"],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export const solutionName = {
    parameterPath: "solutionName",
    mapper: {
        serializedName: "solutionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const iotSecuritySolutionData = {
    parameterPath: "iotSecuritySolutionData",
    mapper: IoTSecuritySolutionModelMapper
};
export const updateIotSecuritySolutionData = {
    parameterPath: "updateIotSecuritySolutionData",
    mapper: UpdateIotSecuritySolutionDataMapper
};
export const top = {
    parameterPath: ["options", "top"],
    mapper: {
        serializedName: "$top",
        type: {
            name: "Number"
        }
    }
};
export const aggregatedAlertName = {
    parameterPath: "aggregatedAlertName",
    mapper: {
        serializedName: "aggregatedAlertName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const aggregatedRecommendationName = {
    parameterPath: "aggregatedRecommendationName",
    mapper: {
        serializedName: "aggregatedRecommendationName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion6 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2015-06-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const ascLocation = {
    parameterPath: "ascLocation",
    mapper: {
        serializedName: "ascLocation",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const taskName = {
    parameterPath: "taskName",
    mapper: {
        serializedName: "taskName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const taskUpdateActionType = {
    parameterPath: "taskUpdateActionType",
    mapper: {
        serializedName: "taskUpdateActionType",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion7 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2017-08-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const settingName1 = {
    parameterPath: "settingName",
    mapper: {
        serializedName: "settingName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const setting = {
    parameterPath: "setting",
    mapper: AutoProvisioningSettingMapper
};
export const complianceName = {
    parameterPath: "complianceName",
    mapper: {
        serializedName: "complianceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const informationProtectionPolicyName = {
    parameterPath: "informationProtectionPolicyName",
    mapper: {
        serializedName: "informationProtectionPolicyName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const informationProtectionPolicy = {
    parameterPath: "informationProtectionPolicy",
    mapper: InformationProtectionPolicyMapper
};
export const securityContactName = {
    parameterPath: "securityContactName",
    mapper: {
        serializedName: "securityContactName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const securityContact = {
    parameterPath: "securityContact",
    mapper: SecurityContactMapper
};
export const workspaceSettingName = {
    parameterPath: "workspaceSettingName",
    mapper: {
        serializedName: "workspaceSettingName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const workspaceSetting = {
    parameterPath: "workspaceSetting",
    mapper: WorkspaceSettingMapper
};
export const apiVersion8 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2019-01-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const regulatoryComplianceStandardName = {
    parameterPath: "regulatoryComplianceStandardName",
    mapper: {
        serializedName: "regulatoryComplianceStandardName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const regulatoryComplianceControlName = {
    parameterPath: "regulatoryComplianceControlName",
    mapper: {
        serializedName: "regulatoryComplianceControlName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const regulatoryComplianceAssessmentName = {
    parameterPath: "regulatoryComplianceAssessmentName",
    mapper: {
        serializedName: "regulatoryComplianceAssessmentName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const assessmentName = {
    parameterPath: "assessmentName",
    mapper: {
        serializedName: "assessmentName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const subAssessmentName = {
    parameterPath: "subAssessmentName",
    mapper: {
        serializedName: "subAssessmentName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const automationName = {
    parameterPath: "automationName",
    mapper: {
        serializedName: "automationName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const automation = {
    parameterPath: "automation",
    mapper: AutomationMapper
};
export const alertType = {
    parameterPath: ["options", "alertType"],
    mapper: {
        serializedName: "AlertType",
        type: {
            name: "String"
        }
    }
};
export const alertsSuppressionRuleName = {
    parameterPath: "alertsSuppressionRuleName",
    mapper: {
        serializedName: "alertsSuppressionRuleName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const alertsSuppressionRule = {
    parameterPath: "alertsSuppressionRule",
    mapper: AlertsSuppressionRuleMapper
};
export const resourceNamespace = {
    parameterPath: "resourceNamespace",
    mapper: {
        serializedName: "resourceNamespace",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceType = {
    parameterPath: "resourceType",
    mapper: {
        serializedName: "resourceType",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceName = {
    parameterPath: "resourceName",
    mapper: {
        serializedName: "resourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion9 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-01-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const serverVulnerabilityAssessment = {
    parameterPath: "serverVulnerabilityAssessment",
    mapper: {
        defaultValue: "default",
        isConstant: true,
        serializedName: "serverVulnerabilityAssessment",
        type: {
            name: "String"
        }
    }
};
export const apiVersion10 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-06-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const assessmentMetadataName = {
    parameterPath: "assessmentMetadataName",
    mapper: {
        serializedName: "assessmentMetadataName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const assessmentMetadata = {
    parameterPath: "assessmentMetadata",
    mapper: SecurityAssessmentMetadataResponseMapper
};
export const expand = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String"
        }
    }
};
export const assessment = {
    parameterPath: "assessment",
    mapper: SecurityAssessmentMapper
};
export const includePathRecommendations = {
    parameterPath: ["options", "includePathRecommendations"],
    mapper: {
        serializedName: "includePathRecommendations",
        type: {
            name: "Boolean"
        }
    }
};
export const summary = {
    parameterPath: ["options", "summary"],
    mapper: {
        serializedName: "summary",
        type: {
            name: "Boolean"
        }
    }
};
export const groupName = {
    parameterPath: "groupName",
    mapper: {
        serializedName: "groupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body = {
    parameterPath: "body",
    mapper: AdaptiveApplicationControlGroupMapper
};
export const adaptiveNetworkHardeningResourceName = {
    parameterPath: "adaptiveNetworkHardeningResourceName",
    mapper: {
        serializedName: "adaptiveNetworkHardeningResourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body1 = {
    parameterPath: "body",
    mapper: AdaptiveNetworkHardeningEnforceRequestMapper
};
export const adaptiveNetworkHardeningEnforceAction = {
    parameterPath: "adaptiveNetworkHardeningEnforceAction",
    mapper: {
        defaultValue: "enforce",
        isConstant: true,
        serializedName: "adaptiveNetworkHardeningEnforceAction",
        type: {
            name: "String"
        }
    }
};
export const connectionType = {
    parameterPath: "connectionType",
    mapper: {
        serializedName: "connectionType",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const topologyResourceName = {
    parameterPath: "topologyResourceName",
    mapper: {
        serializedName: "topologyResourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const jitNetworkAccessPolicyName = {
    parameterPath: "jitNetworkAccessPolicyName",
    mapper: {
        serializedName: "jitNetworkAccessPolicyName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body2 = {
    parameterPath: "body",
    mapper: JitNetworkAccessPolicyMapper
};
export const body3 = {
    parameterPath: "body",
    mapper: JitNetworkAccessPolicyInitiateRequestMapper
};
export const jitNetworkAccessPolicyInitiateType = {
    parameterPath: "jitNetworkAccessPolicyInitiateType",
    mapper: {
        defaultValue: "initiate",
        isConstant: true,
        serializedName: "jitNetworkAccessPolicyInitiateType",
        type: {
            name: "String"
        }
    }
};
export const discoveredSecuritySolutionName = {
    parameterPath: "discoveredSecuritySolutionName",
    mapper: {
        serializedName: "discoveredSecuritySolutionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const externalSecuritySolutionsName = {
    parameterPath: "externalSecuritySolutionsName",
    mapper: {
        serializedName: "externalSecuritySolutionsName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const secureScoreName = {
    parameterPath: "secureScoreName",
    mapper: {
        serializedName: "secureScoreName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const expand1 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String"
        }
    }
};
export const securitySolutionName = {
    parameterPath: "securitySolutionName",
    mapper: {
        serializedName: "securitySolutionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion11 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-01-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const connectorName = {
    parameterPath: "connectorName",
    mapper: {
        serializedName: "connectorName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const connectorSetting = {
    parameterPath: "connectorSetting",
    mapper: ConnectorSettingMapper
};
export const scanId = {
    parameterPath: "scanId",
    mapper: {
        serializedName: "scanId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const workspaceId = {
    parameterPath: "workspaceId",
    mapper: {
        serializedName: "workspaceId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion12 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-07-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const scanResultId = {
    parameterPath: "scanResultId",
    mapper: {
        serializedName: "scanResultId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body4 = {
    parameterPath: ["options", "body"],
    mapper: RuleResultsInputMapper
};
export const ruleId = {
    parameterPath: "ruleId",
    mapper: {
        serializedName: "ruleId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body5 = {
    parameterPath: ["options", "body"],
    mapper: RulesResultsInputMapper
};
export const apiVersion13 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-11-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const alertName = {
    parameterPath: "alertName",
    mapper: {
        serializedName: "alertName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const alertSimulatorRequestBody = {
    parameterPath: "alertSimulatorRequestBody",
    mapper: AlertSimulatorRequestBodyMapper
};
export const apiVersion14 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-07-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const settingName2 = {
    parameterPath: "settingName",
    mapper: {
        serializedName: "settingName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const setting1 = {
    parameterPath: "setting",
    mapper: SettingMapper
};
export const apiVersion15 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-01-15-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const ingestionSettingName = {
    parameterPath: "ingestionSettingName",
    mapper: {
        serializedName: "ingestionSettingName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const ingestionSetting = {
    parameterPath: "ingestionSetting",
    mapper: IngestionSettingMapper
};
export const apiVersion16 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-05-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const softwareName = {
    parameterPath: "softwareName",
    mapper: {
        serializedName: "softwareName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const securityConnectorName = {
    parameterPath: "securityConnectorName",
    mapper: {
        serializedName: "securityConnectorName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const securityConnector = {
    parameterPath: "securityConnector",
    mapper: SecurityConnectorMapper
};
//# sourceMappingURL=parameters.js.map