import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { MdeOnboardings, CustomAssessmentAutomations, CustomEntityStoreAssignments, ComplianceResults, Pricings, AdvancedThreatProtection, DeviceSecurityGroups, IotSecuritySolution, IotSecuritySolutionAnalytics, IotSecuritySolutionsAnalyticsAggregatedAlert, IotSecuritySolutionsAnalyticsRecommendation, Locations, Operations, Tasks, AutoProvisioningSettings, Compliances, InformationProtectionPolicies, SecurityContacts, WorkspaceSettings, RegulatoryComplianceStandards, RegulatoryComplianceControls, RegulatoryComplianceAssessments, SubAssessments, Automations, AlertsSuppressionRules, ServerVulnerabilityAssessmentOperations, AssessmentsMetadata, Assessments, AdaptiveApplicationControls, AdaptiveNetworkHardenings, AllowedConnections, Topology, JitNetworkAccessPolicies, DiscoveredSecuritySolutions, SecuritySolutionsReferenceDataOperations, ExternalSecuritySolutions, SecureScores, SecureScoreControls, SecureScoreControlDefinitions, SecuritySolutions, Connectors, SqlVulnerabilityAssessmentScans, SqlVulnerabilityAssessmentScanResults, SqlVulnerabilityAssessmentBaselineRules, Alerts, Settings, IngestionSettings, SoftwareInventories, SecurityConnectors } from "./operationsInterfaces";
import { SecurityCenterOptionalParams } from "./models";
export declare class SecurityCenter extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the SecurityCenter class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Azure subscription ID
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: SecurityCenterOptionalParams);
    mdeOnboardings: MdeOnboardings;
    customAssessmentAutomations: CustomAssessmentAutomations;
    customEntityStoreAssignments: CustomEntityStoreAssignments;
    complianceResults: ComplianceResults;
    pricings: Pricings;
    advancedThreatProtection: AdvancedThreatProtection;
    deviceSecurityGroups: DeviceSecurityGroups;
    iotSecuritySolution: IotSecuritySolution;
    iotSecuritySolutionAnalytics: IotSecuritySolutionAnalytics;
    iotSecuritySolutionsAnalyticsAggregatedAlert: IotSecuritySolutionsAnalyticsAggregatedAlert;
    iotSecuritySolutionsAnalyticsRecommendation: IotSecuritySolutionsAnalyticsRecommendation;
    locations: Locations;
    operations: Operations;
    tasks: Tasks;
    autoProvisioningSettings: AutoProvisioningSettings;
    compliances: Compliances;
    informationProtectionPolicies: InformationProtectionPolicies;
    securityContacts: SecurityContacts;
    workspaceSettings: WorkspaceSettings;
    regulatoryComplianceStandards: RegulatoryComplianceStandards;
    regulatoryComplianceControls: RegulatoryComplianceControls;
    regulatoryComplianceAssessments: RegulatoryComplianceAssessments;
    subAssessments: SubAssessments;
    automations: Automations;
    alertsSuppressionRules: AlertsSuppressionRules;
    serverVulnerabilityAssessmentOperations: ServerVulnerabilityAssessmentOperations;
    assessmentsMetadata: AssessmentsMetadata;
    assessments: Assessments;
    adaptiveApplicationControls: AdaptiveApplicationControls;
    adaptiveNetworkHardenings: AdaptiveNetworkHardenings;
    allowedConnections: AllowedConnections;
    topology: Topology;
    jitNetworkAccessPolicies: JitNetworkAccessPolicies;
    discoveredSecuritySolutions: DiscoveredSecuritySolutions;
    securitySolutionsReferenceDataOperations: SecuritySolutionsReferenceDataOperations;
    externalSecuritySolutions: ExternalSecuritySolutions;
    secureScores: SecureScores;
    secureScoreControls: SecureScoreControls;
    secureScoreControlDefinitions: SecureScoreControlDefinitions;
    securitySolutions: SecuritySolutions;
    connectors: Connectors;
    sqlVulnerabilityAssessmentScans: SqlVulnerabilityAssessmentScans;
    sqlVulnerabilityAssessmentScanResults: SqlVulnerabilityAssessmentScanResults;
    sqlVulnerabilityAssessmentBaselineRules: SqlVulnerabilityAssessmentBaselineRules;
    alerts: Alerts;
    settings: Settings;
    ingestionSettings: IngestionSettings;
    softwareInventories: SoftwareInventories;
    securityConnectors: SecurityConnectors;
}
//# sourceMappingURL=securityCenter.d.ts.map