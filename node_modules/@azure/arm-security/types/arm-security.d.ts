import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/**
 * Defines values for AadConnectivityState. \
 * {@link KnownAadConnectivityState} can be used interchangeably with AadConnectivityState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Discovered** \
 * **NotLicensed** \
 * **Connected**
 */
export declare type AadConnectivityState = string;

/** Describes an Azure resource with kind */
export declare interface AadConnectivityStateAutoGenerated {
    /** The connectivity state of the external AAD solution */
    connectivityState?: AadConnectivityState;
}

/** Represents an AAD identity protection solution which sends logs to an OMS workspace. */
export declare type AadExternalSecuritySolution = ExternalSecuritySolution & {
    /** The external security solution properties for AAD solutions */
    properties?: AadSolutionProperties;
};

/** The external security solution properties for AAD solutions */
export declare type AadSolutionProperties = ExternalSecuritySolutionProperties & AadConnectivityStateAutoGenerated & {};

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LogicApp** \
 * **EventHub** \
 * **Workspace**
 */
export declare type ActionType = string;

/** Number of active connections is not in allowed range. */
export declare type ActiveConnectionsNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "ActiveConnectionsNotInAllowedRange";
};

export declare type AdaptiveApplicationControlGroup = Resource & Location_2 & {
    /** The application control policy enforcement/protection mode of the machine group */
    enforcementMode?: EnforcementMode;
    /** The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux. */
    protectionMode?: ProtectionMode;
    /**
     * The configuration status of the machines group or machine or rule
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly configurationStatus?: ConfigurationStatus;
    /**
     * The initial recommendation status of the machine group or machine
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recommendationStatus?: RecommendationStatus;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly issues?: AdaptiveApplicationControlIssueSummary[];
    /**
     * The source type of the machine group
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sourceSystem?: SourceSystem;
    vmRecommendations?: VmRecommendation[];
    pathRecommendations?: PathRecommendation[];
};

/** Represents a list of machine groups and set of rules that are recommended by Azure Security Center to be allowed */
export declare interface AdaptiveApplicationControlGroups {
    value?: AdaptiveApplicationControlGroup[];
}

/**
 * Defines values for AdaptiveApplicationControlIssue. \
 * {@link KnownAdaptiveApplicationControlIssue} can be used interchangeably with AdaptiveApplicationControlIssue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ViolationsAudited** \
 * **ViolationsBlocked** \
 * **MsiAndScriptViolationsAudited** \
 * **MsiAndScriptViolationsBlocked** \
 * **ExecutableViolationsAudited** \
 * **RulesViolatedManually**
 */
export declare type AdaptiveApplicationControlIssue = string;

/** Represents a summary of the alerts of the machine group */
export declare interface AdaptiveApplicationControlIssueSummary {
    /** An alert that machines within a group can have */
    issue?: AdaptiveApplicationControlIssue;
    /** The number of machines in the group that have this alert */
    numberOfVms?: number;
}

/** Interface representing a AdaptiveApplicationControls. */
export declare interface AdaptiveApplicationControls {
    /**
     * Gets a list of application control machine groups for the subscription.
     * @param options The options parameters.
     */
    list(options?: AdaptiveApplicationControlsListOptionalParams): Promise<AdaptiveApplicationControlsListResponse>;
    /**
     * Gets an application control VM/server group.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param groupName Name of an application control machine group
     * @param options The options parameters.
     */
    get(ascLocation: string, groupName: string, options?: AdaptiveApplicationControlsGetOptionalParams): Promise<AdaptiveApplicationControlsGetResponse>;
    /**
     * Update an application control machine group
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param groupName Name of an application control machine group
     * @param body
     * @param options The options parameters.
     */
    put(ascLocation: string, groupName: string, body: AdaptiveApplicationControlGroup, options?: AdaptiveApplicationControlsPutOptionalParams): Promise<AdaptiveApplicationControlsPutResponse>;
    /**
     * Delete an application control machine group
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param groupName Name of an application control machine group
     * @param options The options parameters.
     */
    delete(ascLocation: string, groupName: string, options?: AdaptiveApplicationControlsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface AdaptiveApplicationControlsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AdaptiveApplicationControlsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AdaptiveApplicationControlsGetResponse = AdaptiveApplicationControlGroup;

/** Optional parameters. */
export declare interface AdaptiveApplicationControlsListOptionalParams extends coreClient.OperationOptions {
    /** Include the policy rules */
    includePathRecommendations?: boolean;
    /** Return output in a summarized form */
    summary?: boolean;
}

/** Contains response data for the list operation. */
export declare type AdaptiveApplicationControlsListResponse = AdaptiveApplicationControlGroups;

/** Optional parameters. */
export declare interface AdaptiveApplicationControlsPutOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the put operation. */
export declare type AdaptiveApplicationControlsPutResponse = AdaptiveApplicationControlGroup;

/** The resource whose properties describes the Adaptive Network Hardening settings for some Azure resource */
export declare type AdaptiveNetworkHardening = Resource & {
    /** The security rules which are recommended to be effective on the VM */
    rules?: Rule[];
    /** The UTC time on which the rules were calculated */
    rulesCalculationTime?: Date;
    /** The Network Security Groups effective on the network interfaces of the protected resource */
    effectiveNetworkSecurityGroups?: EffectiveNetworkSecurityGroups[];
};

export declare interface AdaptiveNetworkHardeningEnforceRequest {
    /** The rules to enforce */
    rules: Rule[];
    /** The Azure resource IDs of the effective network security groups that will be updated with the created security rules from the Adaptive Network Hardening rules */
    networkSecurityGroups: string[];
}

/** Interface representing a AdaptiveNetworkHardenings. */
export declare interface AdaptiveNetworkHardenings {
    /**
     * Gets a list of Adaptive Network Hardenings resources in scope of an extended resource.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param options The options parameters.
     */
    listByExtendedResource(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, options?: AdaptiveNetworkHardeningsListByExtendedResourceOptionalParams): PagedAsyncIterableIterator<AdaptiveNetworkHardening>;
    /**
     * Gets a single Adaptive Network Hardening resource
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param adaptiveNetworkHardeningResourceName The name of the Adaptive Network Hardening resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, adaptiveNetworkHardeningResourceName: string, options?: AdaptiveNetworkHardeningsGetOptionalParams): Promise<AdaptiveNetworkHardeningsGetResponse>;
    /**
     * Enforces the given rules on the NSG(s) listed in the request
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param adaptiveNetworkHardeningResourceName The name of the Adaptive Network Hardening resource.
     * @param body
     * @param options The options parameters.
     */
    beginEnforce(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, adaptiveNetworkHardeningResourceName: string, body: AdaptiveNetworkHardeningEnforceRequest, options?: AdaptiveNetworkHardeningsEnforceOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Enforces the given rules on the NSG(s) listed in the request
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param adaptiveNetworkHardeningResourceName The name of the Adaptive Network Hardening resource.
     * @param body
     * @param options The options parameters.
     */
    beginEnforceAndWait(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, adaptiveNetworkHardeningResourceName: string, body: AdaptiveNetworkHardeningEnforceRequest, options?: AdaptiveNetworkHardeningsEnforceOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface AdaptiveNetworkHardeningsEnforceOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AdaptiveNetworkHardeningsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AdaptiveNetworkHardeningsGetResponse = AdaptiveNetworkHardening;

/** Response for ListAdaptiveNetworkHardenings API service call */
export declare interface AdaptiveNetworkHardeningsList {
    /** A list of Adaptive Network Hardenings resources */
    value?: AdaptiveNetworkHardening[];
    /** The URL to get the next set of results */
    nextLink?: string;
}

/** Optional parameters. */
export declare interface AdaptiveNetworkHardeningsListByExtendedResourceNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByExtendedResourceNext operation. */
export declare type AdaptiveNetworkHardeningsListByExtendedResourceNextResponse = AdaptiveNetworkHardeningsList;

/** Optional parameters. */
export declare interface AdaptiveNetworkHardeningsListByExtendedResourceOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByExtendedResource operation. */
export declare type AdaptiveNetworkHardeningsListByExtendedResourceResponse = AdaptiveNetworkHardeningsList;

/** Details of the sub-assessment */
export declare interface AdditionalData {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    assessedResourceType: "SqlServerVulnerability" | "ContainerRegistryVulnerability" | "ServerVulnerabilityAssessment";
}

export declare type AdditionalDataUnion = AdditionalData | SqlServerVulnerabilityProperties | ContainerRegistryVulnerabilityProperties | ServerVulnerabilityProperties;

/**
 * Defines values for AdditionalWorkspaceDataType. \
 * {@link KnownAdditionalWorkspaceDataType} can be used interchangeably with AdditionalWorkspaceDataType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Alerts** \
 * **RawEvents**
 */
export declare type AdditionalWorkspaceDataType = string;

/** Properties of the additional workspaces. */
export declare interface AdditionalWorkspacesProperties {
    /** Workspace resource id */
    workspace?: string;
    /** Workspace type. */
    type?: AdditionalWorkspaceType;
    /** List of data types sent to workspace */
    dataTypes?: AdditionalWorkspaceDataType[];
}

/**
 * Defines values for AdditionalWorkspaceType. \
 * {@link KnownAdditionalWorkspaceType} can be used interchangeably with AdditionalWorkspaceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Sentinel**
 */
export declare type AdditionalWorkspaceType = string;

/** Interface representing a AdvancedThreatProtection. */
export declare interface AdvancedThreatProtection {
    /**
     * Gets the Advanced Threat Protection settings for the specified resource.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    get(resourceId: string, options?: AdvancedThreatProtectionGetOptionalParams): Promise<AdvancedThreatProtectionGetResponse>;
    /**
     * Creates or updates the Advanced Threat Protection settings on a specified resource.
     * @param resourceId The identifier of the resource.
     * @param advancedThreatProtectionSetting Advanced Threat Protection Settings
     * @param options The options parameters.
     */
    create(resourceId: string, advancedThreatProtectionSetting: AdvancedThreatProtectionSetting, options?: AdvancedThreatProtectionCreateOptionalParams): Promise<AdvancedThreatProtectionCreateResponse>;
}

/** Optional parameters. */
export declare interface AdvancedThreatProtectionCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type AdvancedThreatProtectionCreateResponse = AdvancedThreatProtectionSetting;

/** Optional parameters. */
export declare interface AdvancedThreatProtectionGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AdvancedThreatProtectionGetResponse = AdvancedThreatProtectionSetting;

/** The Advanced Threat Protection resource. */
export declare type AdvancedThreatProtectionSetting = Resource & {
    /** Indicates whether Advanced Threat Protection is enabled. */
    isEnabled?: boolean;
};

/** Security alert */
export declare type Alert = Resource & {
    /**
     * Unique identifier for the detection logic (all alert instances from the same detection logic will have the same alertType).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly alertType?: string;
    /**
     * Unique identifier for the alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemAlertId?: string;
    /**
     * The name of Azure Security Center pricing tier which powering this alert. Learn more: https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly productComponentName?: string;
    /**
     * The display name of the alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly alertDisplayName?: string;
    /**
     * Description of the suspicious activity that was detected.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * The risk level of the threat that was detected. Learn more: https://docs.microsoft.com/en-us/azure/security-center/security-center-alerts-overview#how-are-alerts-classified.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly severity?: AlertSeverity;
    /**
     * The kill chain related intent behind the alert. For list of supported values, and explanations of Azure Security Center's supported kill chain intents.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly intent?: Intent;
    /**
     * The UTC time of the first event or activity included in the alert in ISO8601 format.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly startTimeUtc?: Date;
    /**
     * The UTC time of the last event or activity included in the alert in ISO8601 format.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endTimeUtc?: Date;
    /**
     * The resource identifiers that can be used to direct the alert to the right product exposure group (tenant, workspace, subscription etc.). There can be multiple identifiers of different type per alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceIdentifiers?: ResourceIdentifierUnion[];
    /**
     * Manual action items to take to remediate the alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly remediationSteps?: string[];
    /**
     * The name of the vendor that raises the alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly vendorName?: string;
    /**
     * The life cycle status of the alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: AlertStatus;
    /**
     * Links related to the alert
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly extendedLinks?: {
        [propertyName: string]: string;
    }[];
    /**
     * A direct link to the alert page in Azure Portal.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly alertUri?: string;
    /**
     * The UTC time the alert was generated in ISO8601 format.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly timeGeneratedUtc?: Date;
    /**
     * The name of the product which published this alert (Azure Security Center, Azure ATP, Microsoft Defender ATP, O365 ATP, MCAS, and so on).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly productName?: string;
    /**
     * The UTC processing end time of the alert in ISO8601 format.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly processingEndTimeUtc?: Date;
    /**
     * A list of entities related to the alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly entities?: AlertEntity[];
    /**
     * This field determines whether the alert is an incident (a compound grouping of several alerts) or a single alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isIncident?: boolean;
    /**
     * Key for corelating related alerts. Alerts with the same correlation key considered to be related.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly correlationKey?: string;
    /** Custom properties for the alert. */
    extendedProperties?: {
        [propertyName: string]: string;
    };
    /**
     * The display name of the resource most related to this alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly compromisedEntity?: string;
};

/** Changing set of properties depending on the entity type. */
export declare interface AlertEntity {
    /** Describes unknown properties. The value of an unknown property can be of "any" type. */
    [property: string]: any;
    /**
     * Type of entity
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** List of security alerts */
export declare interface AlertList {
    /** describes security alert properties. */
    value?: Alert[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for AlertNotifications. \
 * {@link KnownAlertNotifications} can be used interchangeably with AlertNotifications,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **On**: Get notifications on new alerts \
 * **Off**: Don't get notifications on new alerts
 */
export declare type AlertNotifications = string;

/** Interface representing a Alerts. */
export declare interface Alerts {
    /**
     * List all the alerts that are associated with the subscription
     * @param options The options parameters.
     */
    list(options?: AlertsListOptionalParams): PagedAsyncIterableIterator<Alert>;
    /**
     * List all the alerts that are associated with the resource group
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AlertsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Alert>;
    /**
     * List all the alerts that are associated with the subscription that are stored in a specific location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listSubscriptionLevelByRegion(ascLocation: string, options?: AlertsListSubscriptionLevelByRegionOptionalParams): PagedAsyncIterableIterator<Alert>;
    /**
     * List all the alerts that are associated with the resource group that are stored in a specific
     * location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listResourceGroupLevelByRegion(ascLocation: string, resourceGroupName: string, options?: AlertsListResourceGroupLevelByRegionOptionalParams): PagedAsyncIterableIterator<Alert>;
    /**
     * Get an alert that is associated with a subscription
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param options The options parameters.
     */
    getSubscriptionLevel(ascLocation: string, alertName: string, options?: AlertsGetSubscriptionLevelOptionalParams): Promise<AlertsGetSubscriptionLevelResponse>;
    /**
     * Get an alert that is associated a resource group or a resource in a resource group
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    getResourceGroupLevel(ascLocation: string, alertName: string, resourceGroupName: string, options?: AlertsGetResourceGroupLevelOptionalParams): Promise<AlertsGetResourceGroupLevelResponse>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param options The options parameters.
     */
    updateSubscriptionLevelStateToDismiss(ascLocation: string, alertName: string, options?: AlertsUpdateSubscriptionLevelStateToDismissOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param options The options parameters.
     */
    updateSubscriptionLevelStateToResolve(ascLocation: string, alertName: string, options?: AlertsUpdateSubscriptionLevelStateToResolveOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param options The options parameters.
     */
    updateSubscriptionLevelStateToActivate(ascLocation: string, alertName: string, options?: AlertsUpdateSubscriptionLevelStateToActivateOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    updateResourceGroupLevelStateToResolve(ascLocation: string, alertName: string, resourceGroupName: string, options?: AlertsUpdateResourceGroupLevelStateToResolveOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    updateResourceGroupLevelStateToDismiss(ascLocation: string, alertName: string, resourceGroupName: string, options?: AlertsUpdateResourceGroupLevelStateToDismissOptionalParams): Promise<void>;
    /**
     * Update the alert's state
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertName Name of the alert object
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    updateResourceGroupLevelStateToActivate(ascLocation: string, alertName: string, resourceGroupName: string, options?: AlertsUpdateResourceGroupLevelStateToActivateOptionalParams): Promise<void>;
    /**
     * Simulate security alerts
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param alertSimulatorRequestBody Alert Simulator Request Properties
     * @param options The options parameters.
     */
    simulate(ascLocation: string, alertSimulatorRequestBody: AlertSimulatorRequestBody, options?: AlertsSimulateOptionalParams): Promise<void>;
}

/**
 * Defines values for AlertSeverity. \
 * {@link KnownAlertSeverity} can be used interchangeably with AlertSeverity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Informational**: Informational \
 * **Low**: Low \
 * **Medium**: Medium \
 * **High**: High
 */
export declare type AlertSeverity = string;

/** Optional parameters. */
export declare interface AlertsGetResourceGroupLevelOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getResourceGroupLevel operation. */
export declare type AlertsGetResourceGroupLevelResponse = Alert;

/** Optional parameters. */
export declare interface AlertsGetSubscriptionLevelOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getSubscriptionLevel operation. */
export declare type AlertsGetSubscriptionLevelResponse = Alert;

/** Simulate alerts according to this bundles. */
export declare type AlertSimulatorBundlesRequestProperties = AlertSimulatorRequestProperties & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    kind: "Bundles";
    /** Bundles list. */
    bundles?: BundleType[];
};

/** Alert Simulator request body. */
export declare interface AlertSimulatorRequestBody {
    /** Alert Simulator request body data. */
    properties?: AlertSimulatorRequestPropertiesUnion;
}

/** Describes properties of an alert simulation request */
export declare interface AlertSimulatorRequestProperties {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    kind: "Bundles";
    /** Describes unknown properties. The value of an unknown property can be of "any" type. */
    [property: string]: any;
}

export declare type AlertSimulatorRequestPropertiesUnion = AlertSimulatorRequestProperties | AlertSimulatorBundlesRequestProperties;

/** Optional parameters. */
export declare interface AlertsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type AlertsListByResourceGroupNextResponse = AlertList;

/** Optional parameters. */
export declare interface AlertsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type AlertsListByResourceGroupResponse = AlertList;

/** Optional parameters. */
export declare interface AlertsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type AlertsListNextResponse = AlertList;

/** Optional parameters. */
export declare interface AlertsListOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AlertsListResourceGroupLevelByRegionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceGroupLevelByRegionNext operation. */
export declare type AlertsListResourceGroupLevelByRegionNextResponse = AlertList;

/** Optional parameters. */
export declare interface AlertsListResourceGroupLevelByRegionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listResourceGroupLevelByRegion operation. */
export declare type AlertsListResourceGroupLevelByRegionResponse = AlertList;

/** Contains response data for the list operation. */
export declare type AlertsListResponse = AlertList;

/** Optional parameters. */
export declare interface AlertsListSubscriptionLevelByRegionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listSubscriptionLevelByRegionNext operation. */
export declare type AlertsListSubscriptionLevelByRegionNextResponse = AlertList;

/** Optional parameters. */
export declare interface AlertsListSubscriptionLevelByRegionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listSubscriptionLevelByRegion operation. */
export declare type AlertsListSubscriptionLevelByRegionResponse = AlertList;

/** Optional parameters. */
export declare interface AlertsSimulateOptionalParams extends coreClient.OperationOptions {
}

/** Describes the suppression rule */
export declare type AlertsSuppressionRule = Resource & {
    /** Type of the alert to automatically suppress. For all alert types, use '*' */
    alertType?: string;
    /**
     * The last time this rule was modified
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastModifiedUtc?: Date;
    /** Expiration date of the rule, if value is not provided or provided as null this field will default to the maximum allowed expiration date. */
    expirationDateUtc?: Date;
    /** The reason for dismissing the alert */
    reason?: string;
    /** Possible states of the rule */
    state?: RuleState;
    /** Any comment regarding the rule */
    comment?: string;
    /** The suppression conditions */
    suppressionAlertsScope?: SuppressionAlertsScope;
};

/** Interface representing a AlertsSuppressionRules. */
export declare interface AlertsSuppressionRules {
    /**
     * List of all the dismiss rules for the given subscription
     * @param options The options parameters.
     */
    list(options?: AlertsSuppressionRulesListOptionalParams): PagedAsyncIterableIterator<AlertsSuppressionRule>;
    /**
     * Get dismiss rule, with name: {alertsSuppressionRuleName}, for the given subscription
     * @param alertsSuppressionRuleName The unique name of the suppression alert rule
     * @param options The options parameters.
     */
    get(alertsSuppressionRuleName: string, options?: AlertsSuppressionRulesGetOptionalParams): Promise<AlertsSuppressionRulesGetResponse>;
    /**
     * Update existing rule or create new rule if it doesn't exist
     * @param alertsSuppressionRuleName The unique name of the suppression alert rule
     * @param alertsSuppressionRule Suppression rule object
     * @param options The options parameters.
     */
    update(alertsSuppressionRuleName: string, alertsSuppressionRule: AlertsSuppressionRule, options?: AlertsSuppressionRulesUpdateOptionalParams): Promise<AlertsSuppressionRulesUpdateResponse>;
    /**
     * Delete dismiss alert rule for this subscription.
     * @param alertsSuppressionRuleName The unique name of the suppression alert rule
     * @param options The options parameters.
     */
    delete(alertsSuppressionRuleName: string, options?: AlertsSuppressionRulesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface AlertsSuppressionRulesDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AlertsSuppressionRulesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AlertsSuppressionRulesGetResponse = AlertsSuppressionRule;

/** Suppression rules list for subscription. */
export declare interface AlertsSuppressionRulesList {
    value: AlertsSuppressionRule[];
    /**
     * URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface AlertsSuppressionRulesListNextOptionalParams extends coreClient.OperationOptions {
    /** Type of the alert to get rules for */
    alertType?: string;
}

/** Contains response data for the listNext operation. */
export declare type AlertsSuppressionRulesListNextResponse = AlertsSuppressionRulesList;

/** Optional parameters. */
export declare interface AlertsSuppressionRulesListOptionalParams extends coreClient.OperationOptions {
    /** Type of the alert to get rules for */
    alertType?: string;
}

/** Contains response data for the list operation. */
export declare type AlertsSuppressionRulesListResponse = AlertsSuppressionRulesList;

/** Optional parameters. */
export declare interface AlertsSuppressionRulesUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type AlertsSuppressionRulesUpdateResponse = AlertsSuppressionRule;

/**
 * Defines values for AlertStatus. \
 * {@link KnownAlertStatus} can be used interchangeably with AlertStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active**: An alert which doesn't specify a value is assigned the status 'Active' \
 * **Resolved**: Alert closed after handling \
 * **Dismissed**: Alert dismissed as false positive
 */
export declare type AlertStatus = string;

/**
 * Defines values for AlertsToAdmins. \
 * {@link KnownAlertsToAdmins} can be used interchangeably with AlertsToAdmins,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **On**: Send notification on new alerts to the subscription's admins \
 * **Off**: Don't send notification on new alerts to the subscription's admins
 */
export declare type AlertsToAdmins = string;

/** Optional parameters. */
export declare interface AlertsUpdateResourceGroupLevelStateToActivateOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AlertsUpdateResourceGroupLevelStateToDismissOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AlertsUpdateResourceGroupLevelStateToResolveOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AlertsUpdateSubscriptionLevelStateToActivateOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AlertsUpdateSubscriptionLevelStateToDismissOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AlertsUpdateSubscriptionLevelStateToResolveOptionalParams extends coreClient.OperationOptions {
}

/** Represents an alert sync setting */
export declare type AlertSyncSettings = Setting & {
    /** Is the alert sync setting enabled */
    enabled?: boolean;
};

/** Interface representing a AllowedConnections. */
export declare interface AllowedConnections {
    /**
     * Gets the list of all possible traffic between resources for the subscription
     * @param options The options parameters.
     */
    list(options?: AllowedConnectionsListOptionalParams): PagedAsyncIterableIterator<AllowedConnectionsResource>;
    /**
     * Gets the list of all possible traffic between resources for the subscription and location.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByHomeRegion(ascLocation: string, options?: AllowedConnectionsListByHomeRegionOptionalParams): PagedAsyncIterableIterator<AllowedConnectionsResource>;
    /**
     * Gets the list of all possible traffic between resources for the subscription and location, based on
     * connection type.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param connectionType The type of allowed connections (Internal, External)
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ascLocation: string, connectionType: ConnectionType_2, options?: AllowedConnectionsGetOptionalParams): Promise<AllowedConnectionsGetResponse>;
}

/** Optional parameters. */
export declare interface AllowedConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AllowedConnectionsGetResponse = AllowedConnectionsResource;

/** List of all possible traffic between Azure resources */
export declare interface AllowedConnectionsList {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly value?: AllowedConnectionsResource[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface AllowedConnectionsListByHomeRegionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByHomeRegionNext operation. */
export declare type AllowedConnectionsListByHomeRegionNextResponse = AllowedConnectionsList;

/** Optional parameters. */
export declare interface AllowedConnectionsListByHomeRegionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByHomeRegion operation. */
export declare type AllowedConnectionsListByHomeRegionResponse = AllowedConnectionsList;

/** Optional parameters. */
export declare interface AllowedConnectionsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type AllowedConnectionsListNextResponse = AllowedConnectionsList;

/** Optional parameters. */
export declare interface AllowedConnectionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type AllowedConnectionsListResponse = AllowedConnectionsList;

/** The resource whose properties describes the allowed traffic between Azure resources */
export declare type AllowedConnectionsResource = Resource & Location_2 & {
    /**
     * The UTC time on which the allowed connections resource was calculated
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly calculatedDateTime?: Date;
    /**
     * List of connectable resources
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly connectableResources?: ConnectableResource[];
};

/** A custom alert rule that checks if a value (depends on the custom alert type) is allowed. */
export declare type AllowlistCustomAlertRule = ListCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "AllowlistCustomAlertRule" | "ConnectionToIpNotAllowed" | "ConnectionFromIpNotAllowed" | "LocalUserNotAllowed" | "ProcessNotAllowed";
    /** The values to allow. The format of the values depends on the rule type. */
    allowlistValues: string[];
};

export declare type AllowlistCustomAlertRuleUnion = AllowlistCustomAlertRule | ConnectionToIpNotAllowed | ConnectionFromIpNotAllowed | LocalUserNotAllowed | ProcessNotAllowed;

/** Number of cloud to device messages (AMQP protocol) is not in allowed range. */
export declare type AmqpC2DMessagesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "AmqpC2DMessagesNotInAllowedRange";
};

/** Number of rejected cloud to device messages (AMQP protocol) is not in allowed range. */
export declare type AmqpC2DRejectedMessagesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "AmqpC2DRejectedMessagesNotInAllowedRange";
};

/** Number of device to cloud messages (AMQP protocol) is not in allowed range. */
export declare type AmqpD2CMessagesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "AmqpD2CMessagesNotInAllowedRange";
};

/** The ASC location of the subscription is in the "name" field */
export declare type AscLocation = Resource & {
    /** Any object */
    properties?: Record<string, unknown>;
};

/** List of locations where ASC saves your data */
export declare interface AscLocationList {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly value?: AscLocation[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for AssessedResourceType. \
 * {@link KnownAssessedResourceType} can be used interchangeably with AssessedResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SqlServerVulnerability** \
 * **ContainerRegistryVulnerability** \
 * **ServerVulnerability**
 */
export declare type AssessedResourceType = string;

/** Links relevant to the assessment */
export declare interface AssessmentLinks {
    /**
     * Link to assessment in Azure Portal
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly azurePortalUri?: string;
}

/** Interface representing a Assessments. */
export declare interface Assessments {
    /**
     * Get security assessments on all your scanned resources inside a scope
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param options The options parameters.
     */
    list(scope: string, options?: AssessmentsListOptionalParams): PagedAsyncIterableIterator<SecurityAssessmentResponse>;
    /**
     * Get a security assessment on your scanned resource
     * @param resourceId The identifier of the resource.
     * @param assessmentName The Assessment Key - Unique key for the assessment type
     * @param options The options parameters.
     */
    get(resourceId: string, assessmentName: string, options?: AssessmentsGetOptionalParams): Promise<AssessmentsGetResponse>;
    /**
     * Create a security assessment on your resource. An assessment metadata that describes this assessment
     * must be predefined with the same name before inserting the assessment result
     * @param resourceId The identifier of the resource.
     * @param assessmentName The Assessment Key - Unique key for the assessment type
     * @param assessment Calculated assessment on a pre-defined assessment metadata
     * @param options The options parameters.
     */
    createOrUpdate(resourceId: string, assessmentName: string, assessment: SecurityAssessment, options?: AssessmentsCreateOrUpdateOptionalParams): Promise<AssessmentsCreateOrUpdateResponse>;
    /**
     * Delete a security assessment on your resource. An assessment metadata that describes this assessment
     * must be predefined with the same name before inserting the assessment result
     * @param resourceId The identifier of the resource.
     * @param assessmentName The Assessment Key - Unique key for the assessment type
     * @param options The options parameters.
     */
    delete(resourceId: string, assessmentName: string, options?: AssessmentsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface AssessmentsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type AssessmentsCreateOrUpdateResponse = SecurityAssessmentResponse;

/** Optional parameters. */
export declare interface AssessmentsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AssessmentsGetOptionalParams extends coreClient.OperationOptions {
    /** OData expand. Optional. */
    expand?: ExpandEnum;
}

/** Contains response data for the get operation. */
export declare type AssessmentsGetResponse = SecurityAssessmentResponse;

/** Optional parameters. */
export declare interface AssessmentsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type AssessmentsListNextResponse = SecurityAssessmentList;

/** Optional parameters. */
export declare interface AssessmentsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type AssessmentsListResponse = SecurityAssessmentList;

/** Interface representing a AssessmentsMetadata. */
export declare interface AssessmentsMetadata {
    /**
     * Get metadata information on all assessment types
     * @param options The options parameters.
     */
    list(options?: AssessmentsMetadataListOptionalParams): PagedAsyncIterableIterator<SecurityAssessmentMetadataResponse>;
    /**
     * Get metadata information on all assessment types in a specific subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: AssessmentsMetadataListBySubscriptionOptionalParams): PagedAsyncIterableIterator<SecurityAssessmentMetadataResponse>;
    /**
     * Get metadata information on an assessment type
     * @param assessmentMetadataName The Assessment Key - Unique key for the assessment type
     * @param options The options parameters.
     */
    get(assessmentMetadataName: string, options?: AssessmentsMetadataGetOptionalParams): Promise<AssessmentsMetadataGetResponse>;
    /**
     * Get metadata information on an assessment type in a specific subscription
     * @param assessmentMetadataName The Assessment Key - Unique key for the assessment type
     * @param options The options parameters.
     */
    getInSubscription(assessmentMetadataName: string, options?: AssessmentsMetadataGetInSubscriptionOptionalParams): Promise<AssessmentsMetadataGetInSubscriptionResponse>;
    /**
     * Create metadata information on an assessment type in a specific subscription
     * @param assessmentMetadataName The Assessment Key - Unique key for the assessment type
     * @param assessmentMetadata AssessmentMetadata object
     * @param options The options parameters.
     */
    createInSubscription(assessmentMetadataName: string, assessmentMetadata: SecurityAssessmentMetadataResponse, options?: AssessmentsMetadataCreateInSubscriptionOptionalParams): Promise<AssessmentsMetadataCreateInSubscriptionResponse>;
    /**
     * Delete metadata information on an assessment type in a specific subscription, will cause the
     * deletion of all the assessments of that type in that subscription
     * @param assessmentMetadataName The Assessment Key - Unique key for the assessment type
     * @param options The options parameters.
     */
    deleteInSubscription(assessmentMetadataName: string, options?: AssessmentsMetadataDeleteInSubscriptionOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface AssessmentsMetadataCreateInSubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createInSubscription operation. */
export declare type AssessmentsMetadataCreateInSubscriptionResponse = SecurityAssessmentMetadataResponse;

/** Optional parameters. */
export declare interface AssessmentsMetadataDeleteInSubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AssessmentsMetadataGetInSubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getInSubscription operation. */
export declare type AssessmentsMetadataGetInSubscriptionResponse = SecurityAssessmentMetadataResponse;

/** Optional parameters. */
export declare interface AssessmentsMetadataGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AssessmentsMetadataGetResponse = SecurityAssessmentMetadataResponse;

/** Optional parameters. */
export declare interface AssessmentsMetadataListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type AssessmentsMetadataListBySubscriptionNextResponse = SecurityAssessmentMetadataResponseList;

/** Optional parameters. */
export declare interface AssessmentsMetadataListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type AssessmentsMetadataListBySubscriptionResponse = SecurityAssessmentMetadataResponseList;

/** Optional parameters. */
export declare interface AssessmentsMetadataListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type AssessmentsMetadataListNextResponse = SecurityAssessmentMetadataResponseList;

/** Optional parameters. */
export declare interface AssessmentsMetadataListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type AssessmentsMetadataListResponse = SecurityAssessmentMetadataResponseList;

/** The result of the assessment */
export declare interface AssessmentStatus {
    /** Programmatic code for the status of the assessment */
    code: AssessmentStatusCode;
    /** Programmatic code for the cause of the assessment status */
    cause?: string;
    /** Human readable description of the assessment status */
    description?: string;
}

/**
 * Defines values for AssessmentStatusCode. \
 * {@link KnownAssessmentStatusCode} can be used interchangeably with AssessmentStatusCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Healthy**: The resource is healthy \
 * **Unhealthy**: The resource has a security issue that needs to be addressed \
 * **NotApplicable**: Assessment for this resource did not happen
 */
export declare type AssessmentStatusCode = string;

/** The result of the assessment */
export declare type AssessmentStatusResponse = AssessmentStatus & {
    /**
     * The time that the assessment was created and first evaluated. Returned as UTC time in ISO 8601 format
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly firstEvaluationDate?: Date;
    /**
     * The time that the status of the assessment last changed. Returned as UTC time in ISO 8601 format
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly statusChangeDate?: Date;
};

/**
 * Defines values for AssessmentType. \
 * {@link KnownAssessmentType} can be used interchangeably with AssessmentType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BuiltIn**: Azure Security Center managed assessments \
 * **CustomPolicy**: User defined policies that are automatically ingested from Azure Policy to Azure Security Center \
 * **CustomerManaged**: User assessments pushed directly by the user or other third party to Azure Security Center \
 * **VerifiedPartner**: An assessment that was created by a verified 3rd party if the user connected it to ASC
 */
export declare type AssessmentType = string;

/** Represents an ATA security solution which sends logs to an OMS workspace */
export declare type AtaExternalSecuritySolution = ExternalSecuritySolution & {
    /** The external security solution properties for ATA solutions */
    properties?: AtaSolutionProperties;
};

/** The external security solution properties for ATA solutions */
export declare type AtaSolutionProperties = ExternalSecuritySolutionProperties & {
    lastEventReceived?: string;
};

/** Settings for cloud authentication management */
export declare interface AuthenticationDetailsProperties {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    authenticationType: "awsCreds" | "awsAssumeRole" | "gcpCredentials";
    /**
     * State of the multi-cloud connector
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly authenticationProvisioningState?: AuthenticationProvisioningState;
    /**
     * The permissions detected in the cloud account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly grantedPermissions?: PermissionProperty[];
}

export declare type AuthenticationDetailsPropertiesUnion = AuthenticationDetailsProperties | AwsCredsAuthenticationDetailsProperties | AwAssumeRoleAuthenticationDetailsProperties | GcpCredentialsDetailsProperties;

/**
 * Defines values for AuthenticationProvisioningState. \
 * {@link KnownAuthenticationProvisioningState} can be used interchangeably with AuthenticationProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Valid**: Valid connector \
 * **Invalid**: Invalid connector \
 * **Expired**: the connection has expired \
 * **IncorrectPolicy**: Incorrect policy of the connector
 */
export declare type AuthenticationProvisioningState = string;

/**
 * Defines values for AuthenticationType. \
 * {@link KnownAuthenticationType} can be used interchangeably with AuthenticationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **awsCreds**: AWS cloud account connector user credentials authentication \
 * **awsAssumeRole**: AWS account connector assume role authentication \
 * **gcpCredentials**: GCP account connector service to service authentication
 */
export declare type AuthenticationType = string;

/** The security automation resource. */
export declare type Automation = TrackedResource & {
    /** The security automation description. */
    description?: string;
    /** Indicates whether the security automation is enabled. */
    isEnabled?: boolean;
    /** A collection of scopes on which the security automations logic is applied. Supported scopes are the subscription itself or a resource group under that subscription. The automation will only apply on defined scopes. */
    scopes?: AutomationScope[];
    /** A collection of the source event types which evaluate the security automation set of rules. */
    sources?: AutomationSource[];
    /** A collection of the actions which are triggered if all the configured rules evaluations, within at least one rule set, are true. */
    actions?: AutomationActionUnion[];
};

/** The action that should be triggered. */
export declare interface AutomationAction {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    actionType: "LogicApp" | "EventHub" | "Workspace";
}

/** The target Event Hub to which event data will be exported. To learn more about Security Center continuous export capabilities, visit https://aka.ms/ASCExportLearnMore */
export declare type AutomationActionEventHub = AutomationAction & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    actionType: "EventHub";
    /** The target Event Hub Azure Resource ID. */
    eventHubResourceId?: string;
    /**
     * The target Event Hub SAS policy name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sasPolicyName?: string;
    /** The target Event Hub connection string (it will not be included in any response). */
    connectionString?: string;
};

/** The logic app action that should be triggered. To learn more about Security Center's Workflow Automation capabilities, visit https://aka.ms/ASCWorkflowAutomationLearnMore */
export declare type AutomationActionLogicApp = AutomationAction & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    actionType: "LogicApp";
    /** The triggered Logic App Azure Resource ID. This can also reside on other subscriptions, given that you have permissions to trigger the Logic App */
    logicAppResourceId?: string;
    /** The Logic App trigger URI endpoint (it will not be included in any response). */
    uri?: string;
};

export declare type AutomationActionUnion = AutomationAction | AutomationActionLogicApp | AutomationActionEventHub | AutomationActionWorkspace;

/** The Log Analytics Workspace to which event data will be exported. Security alerts data will reside in the 'SecurityAlert' table and the assessments data will reside in the 'SecurityRecommendation' table (under the 'Security'/'SecurityCenterFree' solutions). Note that in order to view the data in the workspace, the Security Center Log Analytics free/standard solution needs to be enabled on that workspace. To learn more about Security Center continuous export capabilities, visit https://aka.ms/ASCExportLearnMore */
export declare type AutomationActionWorkspace = AutomationAction & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    actionType: "Workspace";
    /** The fully qualified Log Analytics Workspace Azure Resource ID. */
    workspaceResourceId?: string;
};

/** List of security automations response. */
export declare interface AutomationList {
    /** The list of security automations under the given scope. */
    value: Automation[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** A rule set which evaluates all its rules upon an event interception. Only when all the included rules in the rule set will be evaluated as 'true', will the event trigger the defined actions. */
export declare interface AutomationRuleSet {
    rules?: AutomationTriggeringRule[];
}

/** Interface representing a Automations. */
export declare interface Automations {
    /**
     * Lists all the security automations in the specified subscription. Use the 'nextLink' property in the
     * response to get the next page of security automations for the specified subscription.
     * @param options The options parameters.
     */
    list(options?: AutomationsListOptionalParams): PagedAsyncIterableIterator<Automation>;
    /**
     * Lists all the security automations in the specified resource group. Use the 'nextLink' property in
     * the response to get the next page of security automations for the specified resource group.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AutomationsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Automation>;
    /**
     * Retrieves information about the model of a security automation.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param automationName The security automation name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, automationName: string, options?: AutomationsGetOptionalParams): Promise<AutomationsGetResponse>;
    /**
     * Creates or updates a security automation. If a security automation is already created and a
     * subsequent request is issued for the same automation id, then it will be updated.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param automationName The security automation name.
     * @param automation The security automation resource
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, automationName: string, automation: Automation, options?: AutomationsCreateOrUpdateOptionalParams): Promise<AutomationsCreateOrUpdateResponse>;
    /**
     * Deletes a security automation.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param automationName The security automation name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, automationName: string, options?: AutomationsDeleteOptionalParams): Promise<void>;
    /**
     * Validates the security automation model before create or update. Any validation errors are returned
     * to the client.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param automationName The security automation name.
     * @param automation The security automation resource
     * @param options The options parameters.
     */
    validate(resourceGroupName: string, automationName: string, automation: Automation, options?: AutomationsValidateOptionalParams): Promise<AutomationsValidateResponse>;
}

/** A single automation scope. */
export declare interface AutomationScope {
    /** The resources scope description. */
    description?: string;
    /** The resources scope path. Can be the subscription on which the automation is defined on or a resource group under that subscription (fully qualified Azure resource IDs). */
    scopePath?: string;
}

/** Optional parameters. */
export declare interface AutomationsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type AutomationsCreateOrUpdateResponse = Automation;

/** Optional parameters. */
export declare interface AutomationsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AutomationsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AutomationsGetResponse = Automation;

/** Optional parameters. */
export declare interface AutomationsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type AutomationsListByResourceGroupNextResponse = AutomationList;

/** Optional parameters. */
export declare interface AutomationsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type AutomationsListByResourceGroupResponse = AutomationList;

/** Optional parameters. */
export declare interface AutomationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type AutomationsListNextResponse = AutomationList;

/** Optional parameters. */
export declare interface AutomationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type AutomationsListResponse = AutomationList;

/** The source event types which evaluate the security automation set of rules. For example - security alerts and security assessments. To learn more about the supported security events data models schemas - please visit https://aka.ms/ASCAutomationSchemas. */
export declare interface AutomationSource {
    /** A valid event source type. */
    eventSource?: EventSource_2;
    /** A set of rules which evaluate upon event interception. A logical disjunction is applied between defined rule sets (logical 'or'). */
    ruleSets?: AutomationRuleSet[];
}

/** Optional parameters. */
export declare interface AutomationsValidateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the validate operation. */
export declare type AutomationsValidateResponse = AutomationValidationStatus;

/** A rule which is evaluated upon event interception. The rule is configured by comparing a specific value from the event model to an expected value. This comparison is done by using one of the supported operators set. */
export declare interface AutomationTriggeringRule {
    /** The JPath of the entity model property that should be checked. */
    propertyJPath?: string;
    /** The data type of the compared operands (string, integer, floating point number or a boolean [true/false]] */
    propertyType?: PropertyType;
    /** The expected value. */
    expectedValue?: string;
    /** A valid comparer operator to use. A case-insensitive comparison will be applied for String PropertyType. */
    operator?: Operator;
}

/** The security automation model state property bag. */
export declare interface AutomationValidationStatus {
    /** Indicates whether the model is valid or not. */
    isValid?: boolean;
    /** The validation message. */
    message?: string;
}

/**
 * Defines values for AutoProvision. \
 * {@link KnownAutoProvision} can be used interchangeably with AutoProvision,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **On**: Install missing security agent on VMs automatically \
 * **Off**: Do not install security agent on the VMs automatically
 */
export declare type AutoProvision = string;

/** Auto provisioning setting */
export declare type AutoProvisioningSetting = Resource & {
    /** Describes what kind of security agent provisioning action to take */
    autoProvision?: AutoProvision;
};

/** List of all the auto provisioning settings response */
export declare interface AutoProvisioningSettingList {
    /** List of all the auto provisioning settings */
    value?: AutoProvisioningSetting[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a AutoProvisioningSettings. */
export declare interface AutoProvisioningSettings {
    /**
     * Exposes the auto provisioning settings of the subscriptions
     * @param options The options parameters.
     */
    list(options?: AutoProvisioningSettingsListOptionalParams): PagedAsyncIterableIterator<AutoProvisioningSetting>;
    /**
     * Details of a specific setting
     * @param settingName Auto provisioning setting key
     * @param options The options parameters.
     */
    get(settingName: string, options?: AutoProvisioningSettingsGetOptionalParams): Promise<AutoProvisioningSettingsGetResponse>;
    /**
     * Details of a specific setting
     * @param settingName Auto provisioning setting key
     * @param setting Auto provisioning setting key
     * @param options The options parameters.
     */
    create(settingName: string, setting: AutoProvisioningSetting, options?: AutoProvisioningSettingsCreateOptionalParams): Promise<AutoProvisioningSettingsCreateResponse>;
}

/** Optional parameters. */
export declare interface AutoProvisioningSettingsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type AutoProvisioningSettingsCreateResponse = AutoProvisioningSetting;

/** Optional parameters. */
export declare interface AutoProvisioningSettingsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AutoProvisioningSettingsGetResponse = AutoProvisioningSetting;

/** Optional parameters. */
export declare interface AutoProvisioningSettingsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type AutoProvisioningSettingsListNextResponse = AutoProvisioningSettingList;

/** Optional parameters. */
export declare interface AutoProvisioningSettingsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type AutoProvisioningSettingsListResponse = AutoProvisioningSettingList;

/** AWS cloud account connector based assume role, the role enables delegating access to your AWS resources. The role is composed of role Amazon Resource Name (ARN) and external ID. For more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html">Creating a Role to Delegate Permissions to an IAM User (write only)</a> */
export declare type AwAssumeRoleAuthenticationDetailsProperties = AuthenticationDetailsProperties & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    authenticationType: "awsAssumeRole";
    /**
     * The ID of the cloud account
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly accountId?: string;
    /** Assumed role ID is an identifier that you can use to create temporary security credentials. */
    awsAssumeRoleArn: string;
    /** A unique identifier that is required when you assume a role in another account. */
    awsExternalId: string;
};

/** AWS cloud account connector based credentials, the credentials is composed of access key ID and secret key, for more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html">Creating an IAM User in Your AWS Account (write only)</a> */
export declare type AwsCredsAuthenticationDetailsProperties = AuthenticationDetailsProperties & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    authenticationType: "awsCreds";
    /**
     * The ID of the cloud account
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly accountId?: string;
    /** Public key element of the AWS credential object (write only) */
    awsAccessKeyId: string;
    /** Secret key element of the AWS credential object (write only) */
    awsSecretAccessKey: string;
};

/** Details of the Azure resource that was assessed */
export declare type AzureResourceDetails = ResourceDetails & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    source: "Azure";
    /**
     * Azure resource Id of the assessed resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
};

/** Azure resource identifier. */
export declare type AzureResourceIdentifier = ResourceIdentifier & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "AzureResource";
    /**
     * ARM resource identifier for the cloud resource being alerted on
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly azureResourceId?: string;
};

/** Describes an Azure resource with kind */
export declare interface AzureResourceLink {
    /**
     * Azure resource Id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
}

/** Describes an Azure resource with location */
export declare interface AzureTrackedResourceLocation {
    /** Location where the resource is stored */
    location?: string;
}

/** Baseline details. */
export declare interface Baseline {
    /** Expected results. */
    expectedResults?: string[][];
    /** Baseline update time (UTC). */
    updatedTime?: Date;
}

/** The rule result adjusted with baseline. */
export declare interface BaselineAdjustedResult {
    /** Baseline details. */
    baseline?: Baseline;
    /** The rule result status. */
    status?: RuleStatus;
    /** Results the are not in baseline. */
    resultsNotInBaseline?: string[][];
    /** Results the are in baseline. */
    resultsOnlyInBaseline?: string[][];
}

/** The benchmark references. */
export declare interface BenchmarkReference {
    /** The benchmark name. */
    benchmark?: string;
    /** The benchmark reference. */
    reference?: string;
}

/**
 * Defines values for BundleType. \
 * {@link KnownBundleType} can be used interchangeably with BundleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AppServices** \
 * **DNS** \
 * **KeyVaults** \
 * **KubernetesService** \
 * **ResourceManager** \
 * **SqlServers** \
 * **StorageAccounts** \
 * **VirtualMachines**
 */
export declare type BundleType = string;

/**
 * Defines values for Categories. \
 * {@link KnownCategories} can be used interchangeably with Categories,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Compute** \
 * **Networking** \
 * **Data** \
 * **IdentityAndAccess** \
 * **IoT**
 */
export declare type Categories = string;

/** Represents a security solution which sends CEF logs to an OMS workspace */
export declare type CefExternalSecuritySolution = ExternalSecuritySolution & {
    /** The external security solution properties for CEF solutions */
    properties?: CefSolutionProperties;
};

/** The external security solution properties for CEF solutions */
export declare type CefSolutionProperties = ExternalSecuritySolutionProperties & {
    hostname?: string;
    agent?: string;
    lastEventReceived?: string;
};

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface CloudError {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: CloudErrorBody[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The error detail. */
export declare interface CloudErrorBody {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: CloudErrorBody[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Defines values for CloudName. \
 * {@link KnownCloudName} can be used interchangeably with CloudName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Azure** \
 * **AWS** \
 * **GCP**
 */
export declare type CloudName = string;

/** The security offering details */
export declare interface CloudOffering {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    offeringType: "CspmMonitorAws" | "DefenderForContainersAws" | "DefenderForServersAws" | "InformationProtectionAws";
    /**
     * The offering description.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

export declare type CloudOfferingUnion = CloudOffering | CspmMonitorAwsOffering | DefenderForContainersAwsOffering | DefenderForServersAwsOffering | InformationProtectionAwsOffering;

/** Compliance of a scope */
export declare type Compliance = Resource & {
    /**
     * The timestamp when the Compliance calculation was conducted.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly assessmentTimestampUtcDate?: Date;
    /**
     * The resource count of the given subscription for which the Compliance calculation was conducted (needed for Management Group Compliance calculation).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceCount?: number;
    /**
     * An array of segment, which is the actually the compliance assessment.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly assessmentResult?: ComplianceSegment[];
};

/** List of Compliance objects response */
export declare interface ComplianceList {
    /** List of Compliance objects */
    value?: Compliance[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** a compliance result */
export declare type ComplianceResult = Resource & {
    /**
     * The status of the resource regarding a single assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceStatus?: ResourceStatus;
};

/** List of compliance results response */
export declare interface ComplianceResultList {
    /** List of compliance results */
    value: ComplianceResult[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a ComplianceResults. */
export declare interface ComplianceResults {
    /**
     * Security compliance results in the subscription
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param options The options parameters.
     */
    list(scope: string, options?: ComplianceResultsListOptionalParams): PagedAsyncIterableIterator<ComplianceResult>;
    /**
     * Security Compliance Result
     * @param resourceId The identifier of the resource.
     * @param complianceResultName name of the desired assessment compliance result
     * @param options The options parameters.
     */
    get(resourceId: string, complianceResultName: string, options?: ComplianceResultsGetOptionalParams): Promise<ComplianceResultsGetResponse>;
}

/** Optional parameters. */
export declare interface ComplianceResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ComplianceResultsGetResponse = ComplianceResult;

/** Optional parameters. */
export declare interface ComplianceResultsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ComplianceResultsListNextResponse = ComplianceResultList;

/** Optional parameters. */
export declare interface ComplianceResultsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ComplianceResultsListResponse = ComplianceResultList;

/** Interface representing a Compliances. */
export declare interface Compliances {
    /**
     * The Compliance scores of the specific management group.
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param options The options parameters.
     */
    list(scope: string, options?: CompliancesListOptionalParams): PagedAsyncIterableIterator<Compliance>;
    /**
     * Details of a specific Compliance.
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param complianceName name of the Compliance
     * @param options The options parameters.
     */
    get(scope: string, complianceName: string, options?: CompliancesGetOptionalParams): Promise<CompliancesGetResponse>;
}

/** A segment of a compliance assessment. */
export declare interface ComplianceSegment {
    /**
     * The segment type, e.g. compliant, non-compliance, insufficient coverage, N/A, etc.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly segmentType?: string;
    /**
     * The size (%) of the segment.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly percentage?: number;
}

/** Optional parameters. */
export declare interface CompliancesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type CompliancesGetResponse = Compliance;

/** Optional parameters. */
export declare interface CompliancesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type CompliancesListNextResponse = ComplianceList;

/** Optional parameters. */
export declare interface CompliancesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type CompliancesListResponse = ComplianceList;

/**
 * Defines values for ConfigurationStatus. \
 * {@link KnownConfigurationStatus} can be used interchangeably with ConfigurationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Configured** \
 * **NotConfigured** \
 * **InProgress** \
 * **Failed** \
 * **NoStatus**
 */
export declare type ConfigurationStatus = string;

/** Describes the allowed inbound and outbound traffic of an Azure resource */
export declare interface ConnectableResource {
    /**
     * The Azure resource id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The list of Azure resources that the resource has inbound allowed connection from
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly inboundConnectedResources?: ConnectedResource[];
    /**
     * The list of Azure resources that the resource has outbound allowed connection to
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly outboundConnectedResources?: ConnectedResource[];
}

/** Describes properties of a connected resource */
export declare interface ConnectedResource {
    /**
     * The Azure resource id of the connected resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly connectedResourceId?: string;
    /**
     * The allowed tcp ports
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tcpPorts?: string;
    /**
     * The allowed udp ports
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly udpPorts?: string;
}

/** Represents an OMS workspace to which the solution is connected */
export declare interface ConnectedWorkspace {
    /** Azure resource ID of the connected OMS workspace */
    id?: string;
}

/** Inbound connection from an ip that isn't allowed. Allow list consists of ipv4 or ipv6 range in CIDR notation. */
export declare type ConnectionFromIpNotAllowed = AllowlistCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "ConnectionFromIpNotAllowed";
};

/** Connection string for ingesting security data and logs */
export declare interface ConnectionStrings {
    /** Connection strings */
    value: IngestionConnectionString[];
}

/** Outbound connection to an ip that isn't allowed. Allow list consists of ipv4 or ipv6 range in CIDR notation. */
export declare type ConnectionToIpNotAllowed = AllowlistCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "ConnectionToIpNotAllowed";
};

/**
 * Defines values for ConnectionType. \
 * {@link KnownConnectionType} can be used interchangeably with ConnectionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal** \
 * **External**
 */
declare type ConnectionType_2 = string;
export { ConnectionType_2 as ConnectionType }

/** Interface representing a Connectors. */
export declare interface Connectors {
    /**
     * Cloud accounts connectors of a subscription
     * @param options The options parameters.
     */
    list(options?: ConnectorsListOptionalParams): PagedAsyncIterableIterator<ConnectorSetting>;
    /**
     * Details of a specific cloud account connector
     * @param connectorName Name of the cloud account connector
     * @param options The options parameters.
     */
    get(connectorName: string, options?: ConnectorsGetOptionalParams): Promise<ConnectorsGetResponse>;
    /**
     * Create a cloud account connector or update an existing one. Connect to your cloud account. For AWS,
     * use either account credentials or role-based authentication. For GCP, use account organization
     * credentials.
     * @param connectorName Name of the cloud account connector
     * @param connectorSetting Settings for the cloud account connector
     * @param options The options parameters.
     */
    createOrUpdate(connectorName: string, connectorSetting: ConnectorSetting, options?: ConnectorsCreateOrUpdateOptionalParams): Promise<ConnectorsCreateOrUpdateResponse>;
    /**
     * Delete a cloud account connector from a subscription
     * @param connectorName Name of the cloud account connector
     * @param options The options parameters.
     */
    delete(connectorName: string, options?: ConnectorsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface ConnectorsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type ConnectorsCreateOrUpdateResponse = ConnectorSetting;

/** Optional parameters. */
export declare interface ConnectorsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** The connector setting */
export declare type ConnectorSetting = Resource & {
    /** Settings for hybrid compute management. These settings are relevant only for Arc autoProvision (Hybrid Compute). */
    hybridComputeSettings?: HybridComputeSettingsProperties;
    /** Settings for authentication management, these settings are relevant only for the cloud connector. */
    authenticationDetails?: AuthenticationDetailsPropertiesUnion;
};

/** For a subscription, list of all cloud account connectors and their settings */
export declare interface ConnectorSettingList {
    /** List of all the cloud account connector settings */
    value?: ConnectorSetting[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface ConnectorsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ConnectorsGetResponse = ConnectorSetting;

/** Optional parameters. */
export declare interface ConnectorsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ConnectorsListNextResponse = ConnectorSettingList;

/** Optional parameters. */
export declare interface ConnectorsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ConnectorsListResponse = ConnectorSettingList;

/** Additional context fields for container registry Vulnerability assessment */
export declare type ContainerRegistryVulnerabilityProperties = AdditionalData & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    assessedResourceType: "ContainerRegistryVulnerability";
    /**
     * Vulnerability Type. e.g: Vulnerability, Potential Vulnerability, Information Gathered, Vulnerability
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Dictionary from cvss version to cvss details object
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly cvss?: {
        [propertyName: string]: Cvss;
    };
    /**
     * Indicates whether a patch is available or not
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly patchable?: boolean;
    /**
     * List of CVEs
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly cve?: Cve[];
    /**
     * Published time
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly publishedTime?: Date;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly vendorReferences?: VendorReference[];
    /**
     * Name of the repository which the vulnerable image belongs to
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly repositoryName?: string;
    /**
     * Digest of the vulnerable image
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly imageDigest?: string;
};

/**
 * Defines values for ControlType. \
 * {@link KnownControlType} can be used interchangeably with ControlType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BuiltIn**: Azure Security Center managed assessments \
 * **Custom**: Non Azure Security Center managed assessments
 */
export declare type ControlType = string;

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** The CSPM monitoring for AWS offering configurations */
export declare type CspmMonitorAwsOffering = CloudOffering & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    offeringType: "CspmMonitorAws";
    /** The native cloud connection configuration */
    nativeCloudConnection?: CspmMonitorAwsOfferingNativeCloudConnection;
};

/** The native cloud connection configuration */
export declare interface CspmMonitorAwsOfferingNativeCloudConnection {
    /** The cloud role ARN in AWS for this feature */
    cloudRoleArn?: string;
}

/** A custom alert rule. */
export declare interface CustomAlertRule {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "ThresholdCustomAlertRule" | "TimeWindowCustomAlertRule" | "ListCustomAlertRule" | "AllowlistCustomAlertRule" | "DenylistCustomAlertRule" | "ConnectionToIpNotAllowed" | "ConnectionFromIpNotAllowed" | "LocalUserNotAllowed" | "ProcessNotAllowed" | "ActiveConnectionsNotInAllowedRange" | "AmqpC2DMessagesNotInAllowedRange" | "MqttC2DMessagesNotInAllowedRange" | "HttpC2DMessagesNotInAllowedRange" | "AmqpC2DRejectedMessagesNotInAllowedRange" | "MqttC2DRejectedMessagesNotInAllowedRange" | "HttpC2DRejectedMessagesNotInAllowedRange" | "AmqpD2CMessagesNotInAllowedRange" | "MqttD2CMessagesNotInAllowedRange" | "HttpD2CMessagesNotInAllowedRange" | "DirectMethodInvokesNotInAllowedRange" | "FailedLocalLoginsNotInAllowedRange" | "FileUploadsNotInAllowedRange" | "QueuePurgesNotInAllowedRange" | "TwinUpdatesNotInAllowedRange" | "UnauthorizedOperationsNotInAllowedRange";
    /**
     * The display name of the custom alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
    /**
     * The description of the custom alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /** Status of the custom alert. */
    isEnabled: boolean;
}

export declare type CustomAlertRuleUnion = CustomAlertRule | ThresholdCustomAlertRuleUnion | ListCustomAlertRuleUnion;

/** Custom Assessment Automation */
export declare type CustomAssessmentAutomation = Resource & {
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** GZip encoded KQL query representing the assessment automation results required. */
    compressedQuery?: string;
    /** Relevant cloud for the custom assessment automation. */
    supportedCloud?: SupportedCloudEnum;
    /** The severity to relate to the assessments generated by this assessment automation. */
    severity?: SeverityEnum;
    /** The display name of the assessments generated by this assessment automation. */
    displayName?: string;
    /** The description to relate to the assessments generated by this assessment automation. */
    description?: string;
    /** The remediation description to relate to the assessments generated by this assessment automation. */
    remediationDescription?: string;
    /** The assessment metadata key used when an assessment is generated for this assessment automation. */
    assessmentKey?: string;
};

/** Custom Assessment Automation request */
export declare type CustomAssessmentAutomationRequest = Resource & {
    /** Base 64 encoded KQL query representing the assessment automation results required. */
    compressedQuery?: string;
    /** Relevant cloud for the custom assessment automation. */
    supportedCloud?: SupportedCloudEnum;
    /** The severity to relate to the assessments generated by this assessment automation. */
    severity?: SeverityEnum;
    /** The display name of the assessments generated by this assessment automation. */
    displayName?: string;
    /** The description to relate to the assessments generated by this assessment automation. */
    description?: string;
    /** The remediation description to relate to the assessments generated by this assessment automation. */
    remediationDescription?: string;
};

/** Interface representing a CustomAssessmentAutomations. */
export declare interface CustomAssessmentAutomations {
    /**
     * List custom assessment automations by provided subscription and resource group
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: CustomAssessmentAutomationsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<CustomAssessmentAutomation>;
    /**
     * List custom assessment automations by provided subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: CustomAssessmentAutomationsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<CustomAssessmentAutomation>;
    /**
     * Gets a single custom assessment automation by name for the provided subscription and resource group.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param customAssessmentAutomationName Name of the Custom Assessment Automation.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, customAssessmentAutomationName: string, options?: CustomAssessmentAutomationsGetOptionalParams): Promise<CustomAssessmentAutomationsGetResponse>;
    /**
     * Creates or updates a custom assessment automation for the provided subscription. Please note that
     * providing an existing custom assessment automation will replace the existing record.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param customAssessmentAutomationName Name of the Custom Assessment Automation.
     * @param customAssessmentAutomationBody Custom Assessment Automation body
     * @param options The options parameters.
     */
    create(resourceGroupName: string, customAssessmentAutomationName: string, customAssessmentAutomationBody: CustomAssessmentAutomationRequest, options?: CustomAssessmentAutomationsCreateOptionalParams): Promise<CustomAssessmentAutomationsCreateResponse>;
    /**
     * Deletes a custom assessment automation by name for a provided subscription
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param customAssessmentAutomationName Name of the Custom Assessment Automation.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, customAssessmentAutomationName: string, options?: CustomAssessmentAutomationsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface CustomAssessmentAutomationsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type CustomAssessmentAutomationsCreateResponse = CustomAssessmentAutomation;

/** Optional parameters. */
export declare interface CustomAssessmentAutomationsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface CustomAssessmentAutomationsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type CustomAssessmentAutomationsGetResponse = CustomAssessmentAutomation;

/** Optional parameters. */
export declare interface CustomAssessmentAutomationsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type CustomAssessmentAutomationsListByResourceGroupNextResponse = CustomAssessmentAutomationsListResult;

/** Optional parameters. */
export declare interface CustomAssessmentAutomationsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type CustomAssessmentAutomationsListByResourceGroupResponse = CustomAssessmentAutomationsListResult;

/** Optional parameters. */
export declare interface CustomAssessmentAutomationsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type CustomAssessmentAutomationsListBySubscriptionNextResponse = CustomAssessmentAutomationsListResult;

/** Optional parameters. */
export declare interface CustomAssessmentAutomationsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type CustomAssessmentAutomationsListBySubscriptionResponse = CustomAssessmentAutomationsListResult;

/** A list of Custom Assessment Automations */
export declare interface CustomAssessmentAutomationsListResult {
    /**
     * Collection of Custom Assessment Automations
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: CustomAssessmentAutomation[];
    /** The link used to get the next page of operations. */
    nextLink?: string;
}

/** Custom entity store assignment */
export declare type CustomEntityStoreAssignment = Resource & {
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The principal assigned with entity store. Format of principal is: [AAD type]=[PrincipalObjectId];[TenantId] */
    principal?: string;
    /** The link to entity store database. */
    entityStoreDatabaseLink?: string;
};

/** describes the custom entity store assignment request */
export declare interface CustomEntityStoreAssignmentRequest {
    /** The principal assigned with entity store. If not provided, will use caller principal. Format of principal is: [AAD type]=[PrincipalObjectId];[TenantId] */
    principal?: string;
}

/** Interface representing a CustomEntityStoreAssignments. */
export declare interface CustomEntityStoreAssignments {
    /**
     * List custom entity store assignments by a provided subscription and resource group
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: CustomEntityStoreAssignmentsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<CustomEntityStoreAssignment>;
    /**
     * List custom entity store assignments by provided subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: CustomEntityStoreAssignmentsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<CustomEntityStoreAssignment>;
    /**
     * Gets a single custom entity store assignment by name for the provided subscription and resource
     * group.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param customEntityStoreAssignmentName Name of the custom entity store assignment. Generated name is
     *                                        GUID.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, customEntityStoreAssignmentName: string, options?: CustomEntityStoreAssignmentsGetOptionalParams): Promise<CustomEntityStoreAssignmentsGetResponse>;
    /**
     * Creates a custom entity store assignment for the provided subscription, if not already exists.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param customEntityStoreAssignmentName Name of the custom entity store assignment. Generated name is
     *                                        GUID.
     * @param customEntityStoreAssignmentRequestBody Custom entity store assignment body
     * @param options The options parameters.
     */
    create(resourceGroupName: string, customEntityStoreAssignmentName: string, customEntityStoreAssignmentRequestBody: CustomEntityStoreAssignmentRequest, options?: CustomEntityStoreAssignmentsCreateOptionalParams): Promise<CustomEntityStoreAssignmentsCreateResponse>;
    /**
     * Delete a custom entity store assignment by name for a provided subscription
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param customEntityStoreAssignmentName Name of the custom entity store assignment. Generated name is
     *                                        GUID.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, customEntityStoreAssignmentName: string, options?: CustomEntityStoreAssignmentsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface CustomEntityStoreAssignmentsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type CustomEntityStoreAssignmentsCreateResponse = CustomEntityStoreAssignment;

/** Optional parameters. */
export declare interface CustomEntityStoreAssignmentsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface CustomEntityStoreAssignmentsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type CustomEntityStoreAssignmentsGetResponse = CustomEntityStoreAssignment;

/** Optional parameters. */
export declare interface CustomEntityStoreAssignmentsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type CustomEntityStoreAssignmentsListByResourceGroupNextResponse = CustomEntityStoreAssignmentsListResult;

/** Optional parameters. */
export declare interface CustomEntityStoreAssignmentsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type CustomEntityStoreAssignmentsListByResourceGroupResponse = CustomEntityStoreAssignmentsListResult;

/** Optional parameters. */
export declare interface CustomEntityStoreAssignmentsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type CustomEntityStoreAssignmentsListBySubscriptionNextResponse = CustomEntityStoreAssignmentsListResult;

/** Optional parameters. */
export declare interface CustomEntityStoreAssignmentsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type CustomEntityStoreAssignmentsListBySubscriptionResponse = CustomEntityStoreAssignmentsListResult;

/** A list of custom entity store assignments */
export declare interface CustomEntityStoreAssignmentsListResult {
    /**
     * Collection of custom entity store assignments
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: CustomEntityStoreAssignment[];
    /** The link used to get the next page of operations. */
    nextLink?: string;
}

/** CVE details */
export declare interface Cve {
    /**
     * CVE title
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly title?: string;
    /**
     * Link url
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly link?: string;
}

/** CVSS details */
export declare interface Cvss {
    /**
     * CVSS base
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly base?: number;
}

/** Represents a data export setting */
export declare type DataExportSettings = Setting & {
    /** Is the data export setting enabled */
    enabled?: boolean;
};

/**
 * Defines values for DataSource. \
 * {@link KnownDataSource} can be used interchangeably with DataSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TwinData**: Devices twin data
 */
export declare type DataSource = string;

/** The Defender for Containers AWS offering configurations */
export declare type DefenderForContainersAwsOffering = CloudOffering & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    offeringType: "DefenderForContainersAws";
    /** The kubernetes service connection configuration */
    kubernetesService?: DefenderForContainersAwsOfferingKubernetesService;
    /** The kubernetes to scuba connection configuration */
    kubernetesScubaReader?: DefenderForContainersAwsOfferingKubernetesScubaReader;
    /** The cloudwatch to kinesis connection configuration */
    cloudWatchToKinesis?: DefenderForContainersAwsOfferingCloudWatchToKinesis;
    /** The kinesis to s3 connection configuration */
    kinesisToS3?: DefenderForContainersAwsOfferingKinesisToS3;
};

/** The cloudwatch to kinesis connection configuration */
export declare interface DefenderForContainersAwsOfferingCloudWatchToKinesis {
    /** The cloud role ARN in AWS for this feature */
    cloudRoleArn?: string;
}

/** The kinesis to s3 connection configuration */
export declare interface DefenderForContainersAwsOfferingKinesisToS3 {
    /** The cloud role ARN in AWS for this feature */
    cloudRoleArn?: string;
}

/** The kubernetes to scuba connection configuration */
export declare interface DefenderForContainersAwsOfferingKubernetesScubaReader {
    /** The cloud role ARN in AWS for this feature */
    cloudRoleArn?: string;
}

/** The kubernetes service connection configuration */
export declare interface DefenderForContainersAwsOfferingKubernetesService {
    /** The cloud role ARN in AWS for this feature */
    cloudRoleArn?: string;
}

/** The Defender for Servers AWS offering configurations */
export declare type DefenderForServersAwsOffering = CloudOffering & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    offeringType: "DefenderForServersAws";
    /** The Defender for servers connection configuration */
    defenderForServers?: DefenderForServersAwsOfferingDefenderForServers;
    /** The ARC autoprovisioning configuration */
    arcAutoProvisioning?: DefenderForServersAwsOfferingArcAutoProvisioning;
};

/** The ARC autoprovisioning configuration */
export declare interface DefenderForServersAwsOfferingArcAutoProvisioning {
    /** Is arc auto provisioning enabled */
    enabled?: boolean;
    /** Metadata of Service Principal secret for autoprovisioning */
    servicePrincipalSecretMetadata?: DefenderForServersAwsOfferingArcAutoProvisioningServicePrincipalSecretMetadata;
}

/** Metadata of Service Principal secret for autoprovisioning */
export declare interface DefenderForServersAwsOfferingArcAutoProvisioningServicePrincipalSecretMetadata {
    /** expiration date of service principal secret */
    expiryDate?: string;
    /** region of parameter store where secret is kept */
    parameterStoreRegion?: string;
    /** name of secret resource in parameter store */
    parameterNameInStore?: string;
}

/** The Defender for servers connection configuration */
export declare interface DefenderForServersAwsOfferingDefenderForServers {
    /** The cloud role ARN in AWS for this feature */
    cloudRoleArn?: string;
}

/** A custom alert rule that checks if a value (depends on the custom alert type) is denied. */
export declare type DenylistCustomAlertRule = ListCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "DenylistCustomAlertRule";
    /** The values to deny. The format of the values depends on the rule type. */
    denylistValues: string[];
};

/** The device security group resource */
export declare type DeviceSecurityGroup = Resource & {
    /** The list of custom alert threshold rules. */
    thresholdRules?: ThresholdCustomAlertRuleUnion[];
    /** The list of custom alert time-window rules. */
    timeWindowRules?: TimeWindowCustomAlertRuleUnion[];
    /** The allow-list custom alert rules. */
    allowlistRules?: AllowlistCustomAlertRuleUnion[];
    /** The deny-list custom alert rules. */
    denylistRules?: DenylistCustomAlertRule[];
};

/** List of device security groups */
export declare interface DeviceSecurityGroupList {
    /** List of device security group objects */
    value?: DeviceSecurityGroup[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a DeviceSecurityGroups. */
export declare interface DeviceSecurityGroups {
    /**
     * Use this method get the list of device security groups for the specified IoT Hub resource.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    list(resourceId: string, options?: DeviceSecurityGroupsListOptionalParams): PagedAsyncIterableIterator<DeviceSecurityGroup>;
    /**
     * Use this method to get the device security group for the specified IoT Hub resource.
     * @param resourceId The identifier of the resource.
     * @param deviceSecurityGroupName The name of the device security group. Note that the name of the
     *                                device security group is case insensitive.
     * @param options The options parameters.
     */
    get(resourceId: string, deviceSecurityGroupName: string, options?: DeviceSecurityGroupsGetOptionalParams): Promise<DeviceSecurityGroupsGetResponse>;
    /**
     * Use this method to creates or updates the device security group on a specified IoT Hub resource.
     * @param resourceId The identifier of the resource.
     * @param deviceSecurityGroupName The name of the device security group. Note that the name of the
     *                                device security group is case insensitive.
     * @param deviceSecurityGroup Security group object.
     * @param options The options parameters.
     */
    createOrUpdate(resourceId: string, deviceSecurityGroupName: string, deviceSecurityGroup: DeviceSecurityGroup, options?: DeviceSecurityGroupsCreateOrUpdateOptionalParams): Promise<DeviceSecurityGroupsCreateOrUpdateResponse>;
    /**
     * User this method to deletes the device security group.
     * @param resourceId The identifier of the resource.
     * @param deviceSecurityGroupName The name of the device security group. Note that the name of the
     *                                device security group is case insensitive.
     * @param options The options parameters.
     */
    delete(resourceId: string, deviceSecurityGroupName: string, options?: DeviceSecurityGroupsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface DeviceSecurityGroupsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type DeviceSecurityGroupsCreateOrUpdateResponse = DeviceSecurityGroup;

/** Optional parameters. */
export declare interface DeviceSecurityGroupsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface DeviceSecurityGroupsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DeviceSecurityGroupsGetResponse = DeviceSecurityGroup;

/** Optional parameters. */
export declare interface DeviceSecurityGroupsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type DeviceSecurityGroupsListNextResponse = DeviceSecurityGroupList;

/** Optional parameters. */
export declare interface DeviceSecurityGroupsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type DeviceSecurityGroupsListResponse = DeviceSecurityGroupList;

/**
 * Defines values for Direction. \
 * {@link KnownDirection} can be used interchangeably with Direction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Inbound** \
 * **Outbound**
 */
export declare type Direction = string;

/** Number of direct method invokes is not in allowed range. */
export declare type DirectMethodInvokesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "DirectMethodInvokesNotInAllowedRange";
};

export declare type DiscoveredSecuritySolution = Resource & Location_2 & {
    /** The security family of the discovered solution */
    securityFamily: SecurityFamily;
    /** The security solutions' image offer */
    offer: string;
    /** The security solutions' image publisher */
    publisher: string;
    /** The security solutions' image sku */
    sku: string;
};

export declare interface DiscoveredSecuritySolutionList {
    value?: DiscoveredSecuritySolution[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a DiscoveredSecuritySolutions. */
export declare interface DiscoveredSecuritySolutions {
    /**
     * Gets a list of discovered Security Solutions for the subscription.
     * @param options The options parameters.
     */
    list(options?: DiscoveredSecuritySolutionsListOptionalParams): PagedAsyncIterableIterator<DiscoveredSecuritySolution>;
    /**
     * Gets a list of discovered Security Solutions for the subscription and location.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByHomeRegion(ascLocation: string, options?: DiscoveredSecuritySolutionsListByHomeRegionOptionalParams): PagedAsyncIterableIterator<DiscoveredSecuritySolution>;
    /**
     * Gets a specific discovered Security Solution.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param discoveredSecuritySolutionName Name of a discovered security solution.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ascLocation: string, discoveredSecuritySolutionName: string, options?: DiscoveredSecuritySolutionsGetOptionalParams): Promise<DiscoveredSecuritySolutionsGetResponse>;
}

/** Optional parameters. */
export declare interface DiscoveredSecuritySolutionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DiscoveredSecuritySolutionsGetResponse = DiscoveredSecuritySolution;

/** Optional parameters. */
export declare interface DiscoveredSecuritySolutionsListByHomeRegionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByHomeRegionNext operation. */
export declare type DiscoveredSecuritySolutionsListByHomeRegionNextResponse = DiscoveredSecuritySolutionList;

/** Optional parameters. */
export declare interface DiscoveredSecuritySolutionsListByHomeRegionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByHomeRegion operation. */
export declare type DiscoveredSecuritySolutionsListByHomeRegionResponse = DiscoveredSecuritySolutionList;

/** Optional parameters. */
export declare interface DiscoveredSecuritySolutionsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type DiscoveredSecuritySolutionsListNextResponse = DiscoveredSecuritySolutionList;

/** Optional parameters. */
export declare interface DiscoveredSecuritySolutionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type DiscoveredSecuritySolutionsListResponse = DiscoveredSecuritySolutionList;

/** Describes the Network Security Groups effective on a network interface */
export declare interface EffectiveNetworkSecurityGroups {
    /** The Azure resource ID of the network interface */
    networkInterface?: string;
    /** The Network Security Groups effective on the network interface */
    networkSecurityGroups?: string[];
}

/**
 * Defines values for EndOfSupportStatus. \
 * {@link KnownEndOfSupportStatus} can be used interchangeably with EndOfSupportStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **noLongerSupported** \
 * **versionNoLongerSupported** \
 * **upcomingNoLongerSupported** \
 * **upcomingVersionNoLongerSupported**
 */
export declare type EndOfSupportStatus = string;

/**
 * Defines values for EnforcementMode. \
 * {@link KnownEnforcementMode} can be used interchangeably with EnforcementMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Audit** \
 * **Enforce** \
 * **None**
 */
export declare type EnforcementMode = string;

/**
 * Defines values for EnforcementSupport. \
 * {@link KnownEnforcementSupport} can be used interchangeably with EnforcementSupport,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Supported** \
 * **NotSupported** \
 * **Unknown**
 */
export declare type EnforcementSupport = string;

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** Entity tag is used for comparing two or more entities from the same requested resource. */
export declare interface ETag {
    /** Entity tag is used for comparing two or more entities from the same requested resource. */
    etag?: string;
}

/**
 * Defines values for EventSource. \
 * {@link KnownEventSource} can be used interchangeably with EventSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Assessments** \
 * **AssessmentsSnapshot** \
 * **SubAssessments** \
 * **SubAssessmentsSnapshot** \
 * **Alerts** \
 * **SecureScores** \
 * **SecureScoresSnapshot** \
 * **SecureScoreControls** \
 * **SecureScoreControlsSnapshot** \
 * **RegulatoryComplianceAssessment** \
 * **RegulatoryComplianceAssessmentSnapshot**
 */
declare type EventSource_2 = string;
export { EventSource_2 as EventSource }

/**
 * Defines values for ExpandControlsEnum. \
 * {@link KnownExpandControlsEnum} can be used interchangeably with ExpandControlsEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **definition**: Add definition object for each control
 */
export declare type ExpandControlsEnum = string;

/**
 * Defines values for ExpandEnum. \
 * {@link KnownExpandEnum} can be used interchangeably with ExpandEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **links**: All links associated with an assessment \
 * **metadata**: Assessment metadata
 */
export declare type ExpandEnum = string;

/**
 * Defines values for ExportData. \
 * {@link KnownExportData} can be used interchangeably with ExportData,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RawEvents**: Agent raw events
 */
export declare type ExportData = string;

/** Represents a security solution external to Azure Security Center which sends information to an OMS workspace and whose data is displayed by Azure Security Center. */
export declare type ExternalSecuritySolution = Resource & ExternalSecuritySolutionKindAutoGenerated & Location_2 & {};

/**
 * Defines values for ExternalSecuritySolutionKind. \
 * {@link KnownExternalSecuritySolutionKind} can be used interchangeably with ExternalSecuritySolutionKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CEF** \
 * **ATA** \
 * **AAD**
 */
export declare type ExternalSecuritySolutionKind = string;

/** Describes an Azure resource with kind */
export declare interface ExternalSecuritySolutionKindAutoGenerated {
    /** The kind of the external solution */
    kind?: ExternalSecuritySolutionKind;
}

export declare interface ExternalSecuritySolutionList {
    value?: ExternalSecuritySolutionUnion[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** The solution properties (correspond to the solution kind) */
export declare interface ExternalSecuritySolutionProperties {
    /** Describes unknown properties. The value of an unknown property can be of "any" type. */
    [property: string]: any;
    deviceVendor?: string;
    deviceType?: string;
    /** Represents an OMS workspace to which the solution is connected */
    workspace?: ConnectedWorkspace;
}

/** Interface representing a ExternalSecuritySolutions. */
export declare interface ExternalSecuritySolutions {
    /**
     * Gets a list of external security solutions for the subscription.
     * @param options The options parameters.
     */
    list(options?: ExternalSecuritySolutionsListOptionalParams): PagedAsyncIterableIterator<ExternalSecuritySolutionUnion>;
    /**
     * Gets a list of external Security Solutions for the subscription and location.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByHomeRegion(ascLocation: string, options?: ExternalSecuritySolutionsListByHomeRegionOptionalParams): PagedAsyncIterableIterator<ExternalSecuritySolutionUnion>;
    /**
     * Gets a specific external Security Solution.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param externalSecuritySolutionsName Name of an external security solution.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ascLocation: string, externalSecuritySolutionsName: string, options?: ExternalSecuritySolutionsGetOptionalParams): Promise<ExternalSecuritySolutionsGetResponse>;
}

/** Optional parameters. */
export declare interface ExternalSecuritySolutionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ExternalSecuritySolutionsGetResponse = ExternalSecuritySolutionUnion;

/** Optional parameters. */
export declare interface ExternalSecuritySolutionsListByHomeRegionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByHomeRegionNext operation. */
export declare type ExternalSecuritySolutionsListByHomeRegionNextResponse = ExternalSecuritySolutionList;

/** Optional parameters. */
export declare interface ExternalSecuritySolutionsListByHomeRegionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByHomeRegion operation. */
export declare type ExternalSecuritySolutionsListByHomeRegionResponse = ExternalSecuritySolutionList;

/** Optional parameters. */
export declare interface ExternalSecuritySolutionsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ExternalSecuritySolutionsListNextResponse = ExternalSecuritySolutionList;

/** Optional parameters. */
export declare interface ExternalSecuritySolutionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ExternalSecuritySolutionsListResponse = ExternalSecuritySolutionList;

export declare type ExternalSecuritySolutionUnion = ExternalSecuritySolution | CefExternalSecuritySolution | AtaExternalSecuritySolution | AadExternalSecuritySolution;

/** Number of failed local logins is not in allowed range. */
export declare type FailedLocalLoginsNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "FailedLocalLoginsNotInAllowedRange";
};

/**
 * Defines values for FileType. \
 * {@link KnownFileType} can be used interchangeably with FileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Exe** \
 * **Dll** \
 * **Msi** \
 * **Script** \
 * **Executable** \
 * **Unknown**
 */
export declare type FileType = string;

/** Number of file uploads is not in allowed range. */
export declare type FileUploadsNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "FileUploadsNotInAllowedRange";
};

/** GCP cloud account connector based service to service credentials, the credentials are composed of the organization ID and a JSON API key (write only) */
export declare type GcpCredentialsDetailsProperties = AuthenticationDetailsProperties & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    authenticationType: "gcpCredentials";
    /** The organization ID of the GCP cloud account */
    organizationId: string;
    /** Type field of the API key (write only) */
    type: string;
    /** Project ID field of the API key (write only) */
    projectId: string;
    /** Private key ID field of the API key (write only) */
    privateKeyId: string;
    /** Private key field of the API key (write only) */
    privateKey: string;
    /** Client email field of the API key (write only) */
    clientEmail: string;
    /** Client ID field of the API key (write only) */
    clientId: string;
    /** Auth URI field of the API key (write only) */
    authUri: string;
    /** Token URI field of the API key (write only) */
    tokenUri: string;
    /** Auth provider x509 certificate URL field of the API key (write only) */
    authProviderX509CertUrl: string;
    /** Client x509 certificate URL field of the API key (write only) */
    clientX509CertUrl: string;
};

/** Number of cloud to device messages (HTTP protocol) is not in allowed range. */
export declare type HttpC2DMessagesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "HttpC2DMessagesNotInAllowedRange";
};

/** Number of rejected cloud to device messages (HTTP protocol) is not in allowed range. */
export declare type HttpC2DRejectedMessagesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "HttpC2DRejectedMessagesNotInAllowedRange";
};

/** Number of device to cloud messages (HTTP protocol) is not in allowed range. */
export declare type HttpD2CMessagesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "HttpD2CMessagesNotInAllowedRange";
};

/**
 * Defines values for HybridComputeProvisioningState. \
 * {@link KnownHybridComputeProvisioningState} can be used interchangeably with HybridComputeProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Valid**: Valid service principal details. \
 * **Invalid**: Invalid service principal details. \
 * **Expired**: the service principal details are expired
 */
export declare type HybridComputeProvisioningState = string;

/** Settings for hybrid compute management */
export declare interface HybridComputeSettingsProperties {
    /**
     * State of the service principal and its secret
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hybridComputeProvisioningState?: HybridComputeProvisioningState;
    /** Whether or not to automatically install Azure Arc (hybrid compute) agents on machines */
    autoProvision: AutoProvision;
    /** The name of the resource group where Arc (Hybrid Compute) connectors are connected. */
    resourceGroupName?: string;
    /** The location where the metadata of machines will be stored */
    region?: string;
    /** For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use. */
    proxyServer?: ProxyServerProperties;
    /** An object to access resources that are secured by an Azure AD tenant. */
    servicePrincipal?: ServicePrincipalProperties;
}

/**
 * Defines values for ImplementationEffort. \
 * {@link KnownImplementationEffort} can be used interchangeably with ImplementationEffort,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Low** \
 * **Moderate** \
 * **High**
 */
export declare type ImplementationEffort = string;

/** The information protection for AWS offering configurations */
export declare type InformationProtectionAwsOffering = CloudOffering & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    offeringType: "InformationProtectionAws";
    /** The native cloud connection configuration */
    informationProtection?: InformationProtectionAwsOfferingInformationProtection;
};

/** The native cloud connection configuration */
export declare interface InformationProtectionAwsOfferingInformationProtection {
    /** The cloud role ARN in AWS for this feature */
    cloudRoleArn?: string;
}

/** The information type keyword. */
export declare interface InformationProtectionKeyword {
    /** The keyword pattern. */
    pattern?: string;
    /** Indicates whether the keyword is custom or not. */
    custom?: boolean;
    /** Indicates whether the keyword can be applied on numeric types or not. */
    canBeNumeric?: boolean;
    /** Indicates whether the keyword is excluded or not. */
    excluded?: boolean;
}

/** Interface representing a InformationProtectionPolicies. */
export declare interface InformationProtectionPolicies {
    /**
     * Information protection policies of a specific management group.
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param options The options parameters.
     */
    list(scope: string, options?: InformationProtectionPoliciesListOptionalParams): PagedAsyncIterableIterator<InformationProtectionPolicy>;
    /**
     * Details of the information protection policy.
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param informationProtectionPolicyName Name of the information protection policy.
     * @param options The options parameters.
     */
    get(scope: string, informationProtectionPolicyName: InformationProtectionPolicyName, options?: InformationProtectionPoliciesGetOptionalParams): Promise<InformationProtectionPoliciesGetResponse>;
    /**
     * Details of the information protection policy.
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param informationProtectionPolicyName Name of the information protection policy.
     * @param informationProtectionPolicy Information protection policy.
     * @param options The options parameters.
     */
    createOrUpdate(scope: string, informationProtectionPolicyName: InformationProtectionPolicyName, informationProtectionPolicy: InformationProtectionPolicy, options?: InformationProtectionPoliciesCreateOrUpdateOptionalParams): Promise<InformationProtectionPoliciesCreateOrUpdateResponse>;
}

/** Optional parameters. */
export declare interface InformationProtectionPoliciesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type InformationProtectionPoliciesCreateOrUpdateResponse = InformationProtectionPolicy;

/** Optional parameters. */
export declare interface InformationProtectionPoliciesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type InformationProtectionPoliciesGetResponse = InformationProtectionPolicy;

/** Optional parameters. */
export declare interface InformationProtectionPoliciesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type InformationProtectionPoliciesListNextResponse = InformationProtectionPolicyList;

/** Optional parameters. */
export declare interface InformationProtectionPoliciesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type InformationProtectionPoliciesListResponse = InformationProtectionPolicyList;

/** Information protection policy. */
export declare type InformationProtectionPolicy = Resource & {
    /**
     * Describes the last UTC time the policy was modified.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastModifiedUtc?: Date;
    /**
     * Describes the version of the policy.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly version?: string;
    /** Dictionary of sensitivity labels. */
    labels?: {
        [propertyName: string]: SensitivityLabel;
    };
    /** The sensitivity information types. */
    informationTypes?: {
        [propertyName: string]: InformationType;
    };
};

/** Information protection policies response. */
export declare interface InformationProtectionPolicyList {
    /** List of information protection policies. */
    value?: InformationProtectionPolicy[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for InformationProtectionPolicyName. \
 * {@link KnownInformationProtectionPolicyName} can be used interchangeably with InformationProtectionPolicyName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **effective** \
 * **custom**
 */
export declare type InformationProtectionPolicyName = string;

/** The information type. */
export declare interface InformationType {
    /** The name of the information type. */
    displayName?: string;
    /** The description of the information type. */
    description?: string;
    /** The order of the information type. */
    order?: number;
    /** The recommended label id to be associated with this information type. */
    recommendedLabelId?: string;
    /** Indicates whether the information type is enabled or not. */
    enabled?: boolean;
    /** Indicates whether the information type is custom or not. */
    custom?: boolean;
    /** The information type keywords. */
    keywords?: InformationProtectionKeyword[];
}

/** Connection string for ingesting security data and logs */
export declare interface IngestionConnectionString {
    /**
     * The region where ingested logs and data resides
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly location?: string;
    /**
     * Connection string value
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: string;
}

/** Configures how to correlate scan data and logs with resources associated with the subscription. */
export declare type IngestionSetting = Resource & {
    /** Ingestion setting data */
    properties?: Record<string, unknown>;
};

/** List of ingestion settings */
export declare interface IngestionSettingList {
    /**
     * List of ingestion settings
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: IngestionSetting[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a IngestionSettings. */
export declare interface IngestionSettings {
    /**
     * Settings for ingesting security data and logs to correlate with resources associated with the
     * subscription.
     * @param options The options parameters.
     */
    list(options?: IngestionSettingsListOptionalParams): PagedAsyncIterableIterator<IngestionSetting>;
    /**
     * Settings for ingesting security data and logs to correlate with resources associated with the
     * subscription.
     * @param ingestionSettingName Name of the ingestion setting
     * @param options The options parameters.
     */
    get(ingestionSettingName: string, options?: IngestionSettingsGetOptionalParams): Promise<IngestionSettingsGetResponse>;
    /**
     * Create setting for ingesting security data and logs to correlate with resources associated with the
     * subscription.
     * @param ingestionSettingName Name of the ingestion setting
     * @param ingestionSetting Ingestion setting object
     * @param options The options parameters.
     */
    create(ingestionSettingName: string, ingestionSetting: IngestionSetting, options?: IngestionSettingsCreateOptionalParams): Promise<IngestionSettingsCreateResponse>;
    /**
     * Deletes the ingestion settings for this subscription.
     * @param ingestionSettingName Name of the ingestion setting
     * @param options The options parameters.
     */
    delete(ingestionSettingName: string, options?: IngestionSettingsDeleteOptionalParams): Promise<void>;
    /**
     * Returns the token that is used for correlating ingested telemetry with the resources in the
     * subscription.
     * @param ingestionSettingName Name of the ingestion setting
     * @param options The options parameters.
     */
    listTokens(ingestionSettingName: string, options?: IngestionSettingsListTokensOptionalParams): Promise<IngestionSettingsListTokensResponse>;
    /**
     * Connection strings for ingesting security scan logs and data.
     * @param ingestionSettingName Name of the ingestion setting
     * @param options The options parameters.
     */
    listConnectionStrings(ingestionSettingName: string, options?: IngestionSettingsListConnectionStringsOptionalParams): Promise<IngestionSettingsListConnectionStringsResponse>;
}

/** Optional parameters. */
export declare interface IngestionSettingsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type IngestionSettingsCreateResponse = IngestionSetting;

/** Optional parameters. */
export declare interface IngestionSettingsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface IngestionSettingsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type IngestionSettingsGetResponse = IngestionSetting;

/** Optional parameters. */
export declare interface IngestionSettingsListConnectionStringsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listConnectionStrings operation. */
export declare type IngestionSettingsListConnectionStringsResponse = ConnectionStrings;

/** Optional parameters. */
export declare interface IngestionSettingsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type IngestionSettingsListNextResponse = IngestionSettingList;

/** Optional parameters. */
export declare interface IngestionSettingsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type IngestionSettingsListResponse = IngestionSettingList;

/** Optional parameters. */
export declare interface IngestionSettingsListTokensOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listTokens operation. */
export declare type IngestionSettingsListTokensResponse = IngestionSettingToken;

/** Configures how to correlate scan data and logs with resources associated with the subscription. */
export declare interface IngestionSettingToken {
    /**
     * The token is used for correlating security data and logs with the resources in the subscription.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly token?: string;
}

/**
 * Defines values for Intent. \
 * {@link KnownIntent} can be used interchangeably with Intent,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown**: Unknown \
 * **PreAttack**: PreAttack could be either an attempt to access a certain resource regardless of a malicious intent, or a failed attempt to gain access to a target system to gather information prior to exploitation. This step is usually detected as an attempt, originating from outside the network, to scan the target system and find a way in.  Further details on the PreAttack stage can be read in [MITRE Pre-Att&ck matrix](https:\/\/attack.mitre.org\/matrices\/pre\/). \
 * **InitialAccess**: InitialAccess is the stage where an attacker manages to get foothold on the attacked resource. \
 * **Persistence**: Persistence is any access, action, or configuration change to a system that gives a threat actor a persistent presence on that system. \
 * **PrivilegeEscalation**: Privilege escalation is the result of actions that allow an adversary to obtain a higher level of permissions on a system or network. \
 * **DefenseEvasion**: Defense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. \
 * **CredentialAccess**: Credential access represents techniques resulting in access to or control over system, domain, or service credentials that are used within an enterprise environment. \
 * **Discovery**: Discovery consists of techniques that allow the adversary to gain knowledge about the system and internal network. \
 * **LateralMovement**: Lateral movement consists of techniques that enable an adversary to access and control remote systems on a network and could, but does not necessarily, include execution of tools on remote systems. \
 * **Execution**: The execution tactic represents techniques that result in execution of adversary-controlled code on a local or remote system. \
 * **Collection**: Collection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. \
 * **Exfiltration**: Exfiltration refers to techniques and attributes that result or aid in the adversary removing files and information from a target network. \
 * **CommandAndControl**: The command and control tactic represents how adversaries communicate with systems under their control within a target network. \
 * **Impact**: Impact events primarily try to directly reduce the availability or integrity of a system, service, or network; including manipulation of data to impact a business or operational process. \
 * **Probing**: Probing could be either an attempt to access a certain resource regardless of a malicious intent, or a failed attempt to gain access to a target system to gather information prior to exploitation. \
 * **Exploitation**: Exploitation is the stage where an attacker manages to get a foothold on the attacked resource. This stage is relevant for compute hosts and resources such as user accounts, certificates etc.
 */
export declare type Intent = string;

/** Security Solution Aggregated Alert information */
export declare type IoTSecurityAggregatedAlert = Resource & TagsResource & {
    /**
     * Name of the alert type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly alertType?: string;
    /**
     * Display name of the alert type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly alertDisplayName?: string;
    /**
     * Date of detection.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly aggregatedDateUtc?: Date;
    /**
     * Name of the organization that raised the alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly vendorName?: string;
    /**
     * Assessed alert severity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reportedSeverity?: ReportedSeverity;
    /**
     * Recommended steps for remediation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly remediationSteps?: string;
    /**
     * Description of the suspected vulnerability and meaning.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * Number of alerts occurrences within the aggregated time window.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly count?: number;
    /**
     * Azure resource ID of the resource that received the alerts.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly effectedResourceType?: string;
    /**
     * The type of the alerted resource (Azure, Non-Azure).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemSource?: string;
    /**
     * IoT Security solution alert response.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly actionTaken?: string;
    /**
     * Log analytics query for getting the list of affected devices/alerts.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly logAnalyticsQuery?: string;
    /**
     * 10 devices with the highest number of occurrences of this alert type, on this day.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly topDevicesList?: IoTSecurityAggregatedAlertPropertiesTopDevicesListItem[];
};

/** List of IoT Security solution aggregated alert data. */
export declare interface IoTSecurityAggregatedAlertList {
    /** List of aggregated alerts data. */
    value: IoTSecurityAggregatedAlert[];
    /**
     * When there is too much alert data for one page, use this URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

export declare interface IoTSecurityAggregatedAlertPropertiesTopDevicesListItem {
    /**
     * Name of the device.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly deviceId?: string;
    /**
     * Number of alerts raised for this device.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly alertsCount?: number;
    /**
     * Most recent time this alert was raised for this device, on this day.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastOccurrence?: string;
}

/** IoT Security solution recommendation information. */
export declare type IoTSecurityAggregatedRecommendation = Resource & TagsResource & {
    /** Name of the recommendation. */
    recommendationName?: string;
    /**
     * Display name of the recommendation type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recommendationDisplayName?: string;
    /**
     * Description of the suspected vulnerability and meaning.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * Recommendation-type GUID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recommendationTypeId?: string;
    /**
     * Name of the organization that made the recommendation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly detectedBy?: string;
    /**
     * Recommended steps for remediation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly remediationSteps?: string;
    /**
     * Assessed recommendation severity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reportedSeverity?: ReportedSeverity;
    /**
     * Number of healthy devices within the IoT Security solution.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly healthyDevices?: number;
    /**
     * Number of unhealthy devices within the IoT Security solution.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unhealthyDeviceCount?: number;
    /**
     * Log analytics query for getting the list of affected devices/alerts.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly logAnalyticsQuery?: string;
};

/** List of IoT Security solution aggregated recommendations. */
export declare interface IoTSecurityAggregatedRecommendationList {
    /** List of aggregated recommendations data. */
    value: IoTSecurityAggregatedRecommendation[];
    /**
     * When there is too much alert data for one page, use this URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Statistical information about the number of alerts per device during last set number of days. */
export declare interface IoTSecurityAlertedDevice {
    /**
     * Device identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly deviceId?: string;
    /**
     * Number of alerts raised for this device.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly alertsCount?: number;
}

/** Statistical information about the number of alerts per alert type during last set number of days */
export declare interface IoTSecurityDeviceAlert {
    /**
     * Display name of the alert
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly alertDisplayName?: string;
    /**
     * Assessed Alert severity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reportedSeverity?: ReportedSeverity;
    /**
     * Number of alerts raised for this alert type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly alertsCount?: number;
}

/** Statistical information about the number of recommendations per device, per recommendation type. */
export declare interface IoTSecurityDeviceRecommendation {
    /**
     * Display name of the recommendation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recommendationDisplayName?: string;
    /**
     * Assessed recommendation severity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reportedSeverity?: ReportedSeverity;
    /**
     * Number of devices with this recommendation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly devicesCount?: number;
}

/** Interface representing a IotSecuritySolution. */
export declare interface IotSecuritySolution {
    /**
     * Use this method to get the list of IoT Security solutions by subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: IotSecuritySolutionListBySubscriptionOptionalParams): PagedAsyncIterableIterator<IoTSecuritySolutionModel>;
    /**
     * Use this method to get the list IoT Security solutions organized by resource group.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: IotSecuritySolutionListByResourceGroupOptionalParams): PagedAsyncIterableIterator<IoTSecuritySolutionModel>;
    /**
     * User this method to get details of a specific IoT Security solution based on solution name
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, solutionName: string, options?: IotSecuritySolutionGetOptionalParams): Promise<IotSecuritySolutionGetResponse>;
    /**
     * Use this method to create or update yours IoT Security solution
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param iotSecuritySolutionData The security solution data
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, solutionName: string, iotSecuritySolutionData: IoTSecuritySolutionModel, options?: IotSecuritySolutionCreateOrUpdateOptionalParams): Promise<IotSecuritySolutionCreateOrUpdateResponse>;
    /**
     * Use this method to update existing IoT Security solution tags or user defined resources. To update
     * other fields use the CreateOrUpdate method.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param updateIotSecuritySolutionData The security solution data
     * @param options The options parameters.
     */
    update(resourceGroupName: string, solutionName: string, updateIotSecuritySolutionData: UpdateIotSecuritySolutionData, options?: IotSecuritySolutionUpdateOptionalParams): Promise<IotSecuritySolutionUpdateResponse>;
    /**
     * Use this method to delete yours IoT Security solution
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, solutionName: string, options?: IotSecuritySolutionDeleteOptionalParams): Promise<void>;
}

/** Interface representing a IotSecuritySolutionAnalytics. */
export declare interface IotSecuritySolutionAnalytics {
    /**
     * Use this method to get IoT security Analytics metrics in an array.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, solutionName: string, options?: IotSecuritySolutionAnalyticsListOptionalParams): Promise<IotSecuritySolutionAnalyticsListResponse>;
    /**
     * Use this method to get IoT Security Analytics metrics.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, solutionName: string, options?: IotSecuritySolutionAnalyticsGetOptionalParams): Promise<IotSecuritySolutionAnalyticsGetResponse>;
}

/** Optional parameters. */
export declare interface IotSecuritySolutionAnalyticsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type IotSecuritySolutionAnalyticsGetResponse = IoTSecuritySolutionAnalyticsModel;

/** Optional parameters. */
export declare interface IotSecuritySolutionAnalyticsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type IotSecuritySolutionAnalyticsListResponse = IoTSecuritySolutionAnalyticsModelList;

/** Security analytics of your IoT Security solution */
export declare type IoTSecuritySolutionAnalyticsModel = Resource & {
    /**
     * Security analytics of your IoT Security solution.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly metrics?: IoTSeverityMetrics;
    /**
     * Number of unhealthy devices within your IoT Security solution.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unhealthyDeviceCount?: number;
    /**
     * List of device metrics by the aggregation date.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly devicesMetrics?: IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem[];
    /** List of the 3 devices with the most alerts. */
    topAlertedDevices?: IoTSecurityAlertedDevice[];
    /** List of the 3 most prevalent device alerts. */
    mostPrevalentDeviceAlerts?: IoTSecurityDeviceAlert[];
    /** List of the 3 most prevalent device recommendations. */
    mostPrevalentDeviceRecommendations?: IoTSecurityDeviceRecommendation[];
};

/** List of Security analytics of your IoT Security solution */
export declare interface IoTSecuritySolutionAnalyticsModelList {
    /** List of Security analytics of your IoT Security solution */
    value: IoTSecuritySolutionAnalyticsModel[];
    /**
     * When there is too much alert data for one page, use this URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

export declare interface IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsItem {
    /** Aggregation of IoT Security solution device alert metrics by date. */
    date?: Date;
    /** Device alert count by severity. */
    devicesMetrics?: IoTSeverityMetrics;
}

/** Optional parameters. */
export declare interface IotSecuritySolutionCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type IotSecuritySolutionCreateOrUpdateResponse = IoTSecuritySolutionModel;

/** Optional parameters. */
export declare interface IotSecuritySolutionDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface IotSecuritySolutionGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type IotSecuritySolutionGetResponse = IoTSecuritySolutionModel;

/** Optional parameters. */
export declare interface IotSecuritySolutionListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
    /** Filter the IoT Security solution with OData syntax. Supports filtering by iotHubs. */
    filter?: string;
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type IotSecuritySolutionListByResourceGroupNextResponse = IoTSecuritySolutionsList;

/** Optional parameters. */
export declare interface IotSecuritySolutionListByResourceGroupOptionalParams extends coreClient.OperationOptions {
    /** Filter the IoT Security solution with OData syntax. Supports filtering by iotHubs. */
    filter?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export declare type IotSecuritySolutionListByResourceGroupResponse = IoTSecuritySolutionsList;

/** Optional parameters. */
export declare interface IotSecuritySolutionListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
    /** Filter the IoT Security solution with OData syntax. Supports filtering by iotHubs. */
    filter?: string;
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type IotSecuritySolutionListBySubscriptionNextResponse = IoTSecuritySolutionsList;

/** Optional parameters. */
export declare interface IotSecuritySolutionListBySubscriptionOptionalParams extends coreClient.OperationOptions {
    /** Filter the IoT Security solution with OData syntax. Supports filtering by iotHubs. */
    filter?: string;
}

/** Contains response data for the listBySubscription operation. */
export declare type IotSecuritySolutionListBySubscriptionResponse = IoTSecuritySolutionsList;

/** IoT Security solution configuration and resource information. */
export declare type IoTSecuritySolutionModel = Resource & TagsResource & {
    /** The resource location. */
    location?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** Workspace resource ID */
    workspace?: string;
    /** Resource display name. */
    displayName?: string;
    /** Status of the IoT Security solution. */
    status?: SecuritySolutionStatus;
    /** List of additional options for exporting to workspace data. */
    export?: ExportData[];
    /** Disabled data sources. Disabling these data sources compromises the system. */
    disabledDataSources?: DataSource[];
    /** IoT Hub resource IDs */
    iotHubs?: string[];
    /** Properties of the IoT Security solution's user defined resources. */
    userDefinedResources?: UserDefinedResourcesProperties;
    /**
     * List of resources that were automatically discovered as relevant to the security solution.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly autoDiscoveredResources?: string[];
    /** List of the configuration status for each recommendation type. */
    recommendationsConfiguration?: RecommendationConfigurationProperties[];
    /** Unmasked IP address logging status */
    unmaskedIpLoggingStatus?: UnmaskedIpLoggingStatus;
    /** List of additional workspaces */
    additionalWorkspaces?: AdditionalWorkspacesProperties[];
};

/** Interface representing a IotSecuritySolutionsAnalyticsAggregatedAlert. */
export declare interface IotSecuritySolutionsAnalyticsAggregatedAlert {
    /**
     * Use this method to get the aggregated alert list of yours IoT Security solution.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, solutionName: string, options?: IotSecuritySolutionsAnalyticsAggregatedAlertListOptionalParams): PagedAsyncIterableIterator<IoTSecurityAggregatedAlert>;
    /**
     * Use this method to get a single the aggregated alert of yours IoT Security solution. This
     * aggregation is performed by alert name.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param aggregatedAlertName Identifier of the aggregated alert.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, solutionName: string, aggregatedAlertName: string, options?: IotSecuritySolutionsAnalyticsAggregatedAlertGetOptionalParams): Promise<IotSecuritySolutionsAnalyticsAggregatedAlertGetResponse>;
    /**
     * Use this method to dismiss an aggregated IoT Security Solution Alert.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param aggregatedAlertName Identifier of the aggregated alert.
     * @param options The options parameters.
     */
    dismiss(resourceGroupName: string, solutionName: string, aggregatedAlertName: string, options?: IotSecuritySolutionsAnalyticsAggregatedAlertDismissOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface IotSecuritySolutionsAnalyticsAggregatedAlertDismissOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface IotSecuritySolutionsAnalyticsAggregatedAlertGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type IotSecuritySolutionsAnalyticsAggregatedAlertGetResponse = IoTSecurityAggregatedAlert;

/** Optional parameters. */
export declare interface IotSecuritySolutionsAnalyticsAggregatedAlertListNextOptionalParams extends coreClient.OperationOptions {
    /** Number of results to retrieve. */
    top?: number;
}

/** Contains response data for the listNext operation. */
export declare type IotSecuritySolutionsAnalyticsAggregatedAlertListNextResponse = IoTSecurityAggregatedAlertList;

/** Optional parameters. */
export declare interface IotSecuritySolutionsAnalyticsAggregatedAlertListOptionalParams extends coreClient.OperationOptions {
    /** Number of results to retrieve. */
    top?: number;
}

/** Contains response data for the list operation. */
export declare type IotSecuritySolutionsAnalyticsAggregatedAlertListResponse = IoTSecurityAggregatedAlertList;

/** Interface representing a IotSecuritySolutionsAnalyticsRecommendation. */
export declare interface IotSecuritySolutionsAnalyticsRecommendation {
    /**
     * Use this method to get the list of aggregated security analytics recommendations of yours IoT
     * Security solution.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, solutionName: string, options?: IotSecuritySolutionsAnalyticsRecommendationListOptionalParams): PagedAsyncIterableIterator<IoTSecurityAggregatedRecommendation>;
    /**
     * Use this method to get the aggregated security analytics recommendation of yours IoT Security
     * solution. This aggregation is performed by recommendation name.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param solutionName The name of the IoT Security solution.
     * @param aggregatedRecommendationName Name of the recommendation aggregated for this query.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, solutionName: string, aggregatedRecommendationName: string, options?: IotSecuritySolutionsAnalyticsRecommendationGetOptionalParams): Promise<IotSecuritySolutionsAnalyticsRecommendationGetResponse>;
}

/** Optional parameters. */
export declare interface IotSecuritySolutionsAnalyticsRecommendationGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type IotSecuritySolutionsAnalyticsRecommendationGetResponse = IoTSecurityAggregatedRecommendation;

/** Optional parameters. */
export declare interface IotSecuritySolutionsAnalyticsRecommendationListNextOptionalParams extends coreClient.OperationOptions {
    /** Number of results to retrieve. */
    top?: number;
}

/** Contains response data for the listNext operation. */
export declare type IotSecuritySolutionsAnalyticsRecommendationListNextResponse = IoTSecurityAggregatedRecommendationList;

/** Optional parameters. */
export declare interface IotSecuritySolutionsAnalyticsRecommendationListOptionalParams extends coreClient.OperationOptions {
    /** Number of results to retrieve. */
    top?: number;
}

/** Contains response data for the list operation. */
export declare type IotSecuritySolutionsAnalyticsRecommendationListResponse = IoTSecurityAggregatedRecommendationList;

/** List of IoT Security solutions. */
export declare interface IoTSecuritySolutionsList {
    /** List of IoT Security solutions */
    value: IoTSecuritySolutionModel[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface IotSecuritySolutionUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type IotSecuritySolutionUpdateResponse = IoTSecuritySolutionModel;

/** IoT Security solution analytics severity metrics. */
export declare interface IoTSeverityMetrics {
    /** Count of high severity alerts/recommendations. */
    high?: number;
    /** Count of medium severity alerts/recommendations. */
    medium?: number;
    /** Count of low severity alerts/recommendations. */
    low?: number;
}

/** Interface representing a JitNetworkAccessPolicies. */
export declare interface JitNetworkAccessPolicies {
    /**
     * Policies for protecting resources using Just-in-Time access control.
     * @param options The options parameters.
     */
    list(options?: JitNetworkAccessPoliciesListOptionalParams): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByRegion(ascLocation: string, options?: JitNetworkAccessPoliciesListByRegionOptionalParams): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: JitNetworkAccessPoliciesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByResourceGroupAndRegion(resourceGroupName: string, ascLocation: string, options?: JitNetworkAccessPoliciesListByResourceGroupAndRegionOptionalParams): PagedAsyncIterableIterator<JitNetworkAccessPolicy>;
    /**
     * Policies for protecting resources using Just-in-Time access control for the subscription, location
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ascLocation: string, jitNetworkAccessPolicyName: string, options?: JitNetworkAccessPoliciesGetOptionalParams): Promise<JitNetworkAccessPoliciesGetResponse>;
    /**
     * Create a policy for protecting resources using Just-in-Time access control
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
     * @param body
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, ascLocation: string, jitNetworkAccessPolicyName: string, body: JitNetworkAccessPolicy, options?: JitNetworkAccessPoliciesCreateOrUpdateOptionalParams): Promise<JitNetworkAccessPoliciesCreateOrUpdateResponse>;
    /**
     * Delete a Just-in-Time access control policy.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, ascLocation: string, jitNetworkAccessPolicyName: string, options?: JitNetworkAccessPoliciesDeleteOptionalParams): Promise<void>;
    /**
     * Initiate a JIT access from a specific Just-in-Time policy configuration.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param jitNetworkAccessPolicyName Name of a Just-in-Time access configuration policy.
     * @param body
     * @param options The options parameters.
     */
    initiate(resourceGroupName: string, ascLocation: string, jitNetworkAccessPolicyName: string, body: JitNetworkAccessPolicyInitiateRequest, options?: JitNetworkAccessPoliciesInitiateOptionalParams): Promise<JitNetworkAccessPoliciesInitiateResponse>;
}

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type JitNetworkAccessPoliciesCreateOrUpdateResponse = JitNetworkAccessPolicy;

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type JitNetworkAccessPoliciesGetResponse = JitNetworkAccessPolicy;

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesInitiateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the initiate operation. */
export declare type JitNetworkAccessPoliciesInitiateResponse = JitNetworkAccessRequest;

export declare interface JitNetworkAccessPoliciesList {
    value?: JitNetworkAccessPolicy[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesListByRegionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByRegionNext operation. */
export declare type JitNetworkAccessPoliciesListByRegionNextResponse = JitNetworkAccessPoliciesList;

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesListByRegionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByRegion operation. */
export declare type JitNetworkAccessPoliciesListByRegionResponse = JitNetworkAccessPoliciesList;

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesListByResourceGroupAndRegionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupAndRegionNext operation. */
export declare type JitNetworkAccessPoliciesListByResourceGroupAndRegionNextResponse = JitNetworkAccessPoliciesList;

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesListByResourceGroupAndRegionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupAndRegion operation. */
export declare type JitNetworkAccessPoliciesListByResourceGroupAndRegionResponse = JitNetworkAccessPoliciesList;

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type JitNetworkAccessPoliciesListByResourceGroupNextResponse = JitNetworkAccessPoliciesList;

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type JitNetworkAccessPoliciesListByResourceGroupResponse = JitNetworkAccessPoliciesList;

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type JitNetworkAccessPoliciesListNextResponse = JitNetworkAccessPoliciesList;

/** Optional parameters. */
export declare interface JitNetworkAccessPoliciesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type JitNetworkAccessPoliciesListResponse = JitNetworkAccessPoliciesList;

export declare type JitNetworkAccessPolicy = Resource & KindAutoGenerated & Location_2 & {
    /** Configurations for Microsoft.Compute/virtualMachines resource type. */
    virtualMachines: JitNetworkAccessPolicyVirtualMachine[];
    requests?: JitNetworkAccessRequest[];
    /**
     * Gets the provisioning state of the Just-in-Time policy.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
};

export declare interface JitNetworkAccessPolicyInitiatePort {
    number: number;
    /** Source of the allowed traffic. If omitted, the request will be for the source IP address of the initiate request. */
    allowedSourceAddressPrefix?: string;
    /** The time to close the request in UTC */
    endTimeUtc: Date;
}

export declare interface JitNetworkAccessPolicyInitiateRequest {
    /** A list of virtual machines & ports to open access for */
    virtualMachines: JitNetworkAccessPolicyInitiateVirtualMachine[];
    /** The justification for making the initiate request */
    justification?: string;
}

export declare interface JitNetworkAccessPolicyInitiateVirtualMachine {
    /** Resource ID of the virtual machine that is linked to this policy */
    id: string;
    /** The ports to open for the resource with the `id` */
    ports: JitNetworkAccessPolicyInitiatePort[];
}

export declare interface JitNetworkAccessPolicyVirtualMachine {
    /** Resource ID of the virtual machine that is linked to this policy */
    id: string;
    /** Port configurations for the virtual machine */
    ports: JitNetworkAccessPortRule[];
    /** Public IP address of the Azure Firewall that is linked to this policy, if applicable */
    publicIpAddress?: string;
}

export declare interface JitNetworkAccessPortRule {
    number: number;
    protocol: Protocol;
    /** Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16". */
    allowedSourceAddressPrefix?: string;
    /** Mutually exclusive with the "allowedSourceAddressPrefix" parameter. */
    allowedSourceAddressPrefixes?: string[];
    /** Maximum duration requests can be made for. In ISO 8601 duration format. Minimum 5 minutes, maximum 1 day */
    maxRequestAccessDuration: string;
}

export declare interface JitNetworkAccessRequest {
    virtualMachines: JitNetworkAccessRequestVirtualMachine[];
    /** The start time of the request in UTC */
    startTimeUtc: Date;
    /** The identity of the person who made the request */
    requestor: string;
    /** The justification for making the initiate request */
    justification?: string;
}

export declare interface JitNetworkAccessRequestPort {
    number: number;
    /** Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16". */
    allowedSourceAddressPrefix?: string;
    /** Mutually exclusive with the "allowedSourceAddressPrefix" parameter. */
    allowedSourceAddressPrefixes?: string[];
    /** The date & time at which the request ends in UTC */
    endTimeUtc: Date;
    /** The status of the port */
    status: Status;
    /** A description of why the `status` has its value */
    statusReason: StatusReason;
    /** The port which is mapped to this port's `number` in the Azure Firewall, if applicable */
    mappedPort?: number;
}

export declare interface JitNetworkAccessRequestVirtualMachine {
    /** Resource ID of the virtual machine that is linked to this policy */
    id: string;
    /** The ports that were opened for the virtual machine */
    ports: JitNetworkAccessRequestPort[];
}

/**
 * Defines values for Kind. \
 * {@link KnownKind} can be used interchangeably with Kind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Bundles**: Simulate alerts according to bundles
 */
export declare type Kind = string;

/** Describes an Azure resource with kind */
export declare interface KindAutoGenerated {
    /** Kind of the resource */
    kind?: string;
}

/** Known values of {@link AadConnectivityState} that the service accepts. */
export declare enum KnownAadConnectivityState {
    Discovered = "Discovered",
    NotLicensed = "NotLicensed",
    Connected = "Connected"
}

/** Known values of {@link ActionType} that the service accepts. */
export declare enum KnownActionType {
    LogicApp = "LogicApp",
    EventHub = "EventHub",
    Workspace = "Workspace"
}

/** Known values of {@link AdaptiveApplicationControlIssue} that the service accepts. */
export declare enum KnownAdaptiveApplicationControlIssue {
    ViolationsAudited = "ViolationsAudited",
    ViolationsBlocked = "ViolationsBlocked",
    MsiAndScriptViolationsAudited = "MsiAndScriptViolationsAudited",
    MsiAndScriptViolationsBlocked = "MsiAndScriptViolationsBlocked",
    ExecutableViolationsAudited = "ExecutableViolationsAudited",
    RulesViolatedManually = "RulesViolatedManually"
}

/** Known values of {@link AdditionalWorkspaceDataType} that the service accepts. */
export declare enum KnownAdditionalWorkspaceDataType {
    Alerts = "Alerts",
    RawEvents = "RawEvents"
}

/** Known values of {@link AdditionalWorkspaceType} that the service accepts. */
export declare enum KnownAdditionalWorkspaceType {
    Sentinel = "Sentinel"
}

/** Known values of {@link AlertNotifications} that the service accepts. */
export declare enum KnownAlertNotifications {
    /** Get notifications on new alerts */
    On = "On",
    /** Don't get notifications on new alerts */
    Off = "Off"
}

/** Known values of {@link AlertSeverity} that the service accepts. */
export declare enum KnownAlertSeverity {
    /** Informational */
    Informational = "Informational",
    /** Low */
    Low = "Low",
    /** Medium */
    Medium = "Medium",
    /** High */
    High = "High"
}

/** Known values of {@link AlertStatus} that the service accepts. */
export declare enum KnownAlertStatus {
    /** An alert which doesn't specify a value is assigned the status 'Active' */
    Active = "Active",
    /** Alert closed after handling */
    Resolved = "Resolved",
    /** Alert dismissed as false positive */
    Dismissed = "Dismissed"
}

/** Known values of {@link AlertsToAdmins} that the service accepts. */
export declare enum KnownAlertsToAdmins {
    /** Send notification on new alerts to the subscription's admins */
    On = "On",
    /** Don't send notification on new alerts to the subscription's admins */
    Off = "Off"
}

/** Known values of {@link AssessedResourceType} that the service accepts. */
export declare enum KnownAssessedResourceType {
    SqlServerVulnerability = "SqlServerVulnerability",
    ContainerRegistryVulnerability = "ContainerRegistryVulnerability",
    ServerVulnerability = "ServerVulnerability"
}

/** Known values of {@link AssessmentStatusCode} that the service accepts. */
export declare enum KnownAssessmentStatusCode {
    /** The resource is healthy */
    Healthy = "Healthy",
    /** The resource has a security issue that needs to be addressed */
    Unhealthy = "Unhealthy",
    /** Assessment for this resource did not happen */
    NotApplicable = "NotApplicable"
}

/** Known values of {@link AssessmentType} that the service accepts. */
export declare enum KnownAssessmentType {
    /** Azure Security Center managed assessments */
    BuiltIn = "BuiltIn",
    /** User defined policies that are automatically ingested from Azure Policy to Azure Security Center */
    CustomPolicy = "CustomPolicy",
    /** User assessments pushed directly by the user or other third party to Azure Security Center */
    CustomerManaged = "CustomerManaged",
    /** An assessment that was created by a verified 3rd party if the user connected it to ASC */
    VerifiedPartner = "VerifiedPartner"
}

/** Known values of {@link AuthenticationProvisioningState} that the service accepts. */
export declare enum KnownAuthenticationProvisioningState {
    /** Valid connector */
    Valid = "Valid",
    /** Invalid connector */
    Invalid = "Invalid",
    /** the connection has expired */
    Expired = "Expired",
    /** Incorrect policy of the connector */
    IncorrectPolicy = "IncorrectPolicy"
}

/** Known values of {@link AuthenticationType} that the service accepts. */
export declare enum KnownAuthenticationType {
    /** AWS cloud account connector user credentials authentication */
    AwsCreds = "awsCreds",
    /** AWS account connector assume role authentication */
    AwsAssumeRole = "awsAssumeRole",
    /** GCP account connector service to service authentication */
    GcpCredentials = "gcpCredentials"
}

/** Known values of {@link AutoProvision} that the service accepts. */
export declare enum KnownAutoProvision {
    /** Install missing security agent on VMs automatically */
    On = "On",
    /** Do not install security agent on the VMs automatically */
    Off = "Off"
}

/** Known values of {@link BundleType} that the service accepts. */
export declare enum KnownBundleType {
    AppServices = "AppServices",
    DNS = "DNS",
    KeyVaults = "KeyVaults",
    KubernetesService = "KubernetesService",
    ResourceManager = "ResourceManager",
    SqlServers = "SqlServers",
    StorageAccounts = "StorageAccounts",
    VirtualMachines = "VirtualMachines"
}

/** Known values of {@link Categories} that the service accepts. */
export declare enum KnownCategories {
    Compute = "Compute",
    Networking = "Networking",
    Data = "Data",
    IdentityAndAccess = "IdentityAndAccess",
    IoT = "IoT"
}

/** Known values of {@link CloudName} that the service accepts. */
export declare enum KnownCloudName {
    Azure = "Azure",
    AWS = "AWS",
    GCP = "GCP"
}

/** Known values of {@link ConfigurationStatus} that the service accepts. */
export declare enum KnownConfigurationStatus {
    Configured = "Configured",
    NotConfigured = "NotConfigured",
    InProgress = "InProgress",
    Failed = "Failed",
    NoStatus = "NoStatus"
}

/** Known values of {@link ConnectionType} that the service accepts. */
export declare enum KnownConnectionType {
    Internal = "Internal",
    External = "External"
}

/** Known values of {@link ControlType} that the service accepts. */
export declare enum KnownControlType {
    /** Azure Security Center managed assessments */
    BuiltIn = "BuiltIn",
    /** Non Azure Security Center managed assessments */
    Custom = "Custom"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    User = "User",
    Application = "Application",
    ManagedIdentity = "ManagedIdentity",
    Key = "Key"
}

/** Known values of {@link DataSource} that the service accepts. */
export declare enum KnownDataSource {
    /** Devices twin data */
    TwinData = "TwinData"
}

/** Known values of {@link Direction} that the service accepts. */
export declare enum KnownDirection {
    Inbound = "Inbound",
    Outbound = "Outbound"
}

/** Known values of {@link EndOfSupportStatus} that the service accepts. */
export declare enum KnownEndOfSupportStatus {
    None = "None",
    NoLongerSupported = "noLongerSupported",
    VersionNoLongerSupported = "versionNoLongerSupported",
    UpcomingNoLongerSupported = "upcomingNoLongerSupported",
    UpcomingVersionNoLongerSupported = "upcomingVersionNoLongerSupported"
}

/** Known values of {@link EnforcementMode} that the service accepts. */
export declare enum KnownEnforcementMode {
    Audit = "Audit",
    Enforce = "Enforce",
    None = "None"
}

/** Known values of {@link EnforcementSupport} that the service accepts. */
export declare enum KnownEnforcementSupport {
    Supported = "Supported",
    NotSupported = "NotSupported",
    Unknown = "Unknown"
}

/** Known values of {@link EventSource} that the service accepts. */
export declare enum KnownEventSource {
    Assessments = "Assessments",
    AssessmentsSnapshot = "AssessmentsSnapshot",
    SubAssessments = "SubAssessments",
    SubAssessmentsSnapshot = "SubAssessmentsSnapshot",
    Alerts = "Alerts",
    SecureScores = "SecureScores",
    SecureScoresSnapshot = "SecureScoresSnapshot",
    SecureScoreControls = "SecureScoreControls",
    SecureScoreControlsSnapshot = "SecureScoreControlsSnapshot",
    RegulatoryComplianceAssessment = "RegulatoryComplianceAssessment",
    RegulatoryComplianceAssessmentSnapshot = "RegulatoryComplianceAssessmentSnapshot"
}

/** Known values of {@link ExpandControlsEnum} that the service accepts. */
export declare enum KnownExpandControlsEnum {
    /** Add definition object for each control */
    Definition = "definition"
}

/** Known values of {@link ExpandEnum} that the service accepts. */
export declare enum KnownExpandEnum {
    /** All links associated with an assessment */
    Links = "links",
    /** Assessment metadata */
    Metadata = "metadata"
}

/** Known values of {@link ExportData} that the service accepts. */
export declare enum KnownExportData {
    /** Agent raw events */
    RawEvents = "RawEvents"
}

/** Known values of {@link ExternalSecuritySolutionKind} that the service accepts. */
export declare enum KnownExternalSecuritySolutionKind {
    CEF = "CEF",
    ATA = "ATA",
    AAD = "AAD"
}

/** Known values of {@link FileType} that the service accepts. */
export declare enum KnownFileType {
    Exe = "Exe",
    Dll = "Dll",
    Msi = "Msi",
    Script = "Script",
    Executable = "Executable",
    Unknown = "Unknown"
}

/** Known values of {@link HybridComputeProvisioningState} that the service accepts. */
export declare enum KnownHybridComputeProvisioningState {
    /** Valid service principal details. */
    Valid = "Valid",
    /** Invalid service principal details. */
    Invalid = "Invalid",
    /** the service principal details are expired */
    Expired = "Expired"
}

/** Known values of {@link ImplementationEffort} that the service accepts. */
export declare enum KnownImplementationEffort {
    Low = "Low",
    Moderate = "Moderate",
    High = "High"
}

/** Known values of {@link InformationProtectionPolicyName} that the service accepts. */
export declare enum KnownInformationProtectionPolicyName {
    Effective = "effective",
    Custom = "custom"
}

/** Known values of {@link Intent} that the service accepts. */
export declare enum KnownIntent {
    /** Unknown */
    Unknown = "Unknown",
    /** PreAttack could be either an attempt to access a certain resource regardless of a malicious intent, or a failed attempt to gain access to a target system to gather information prior to exploitation. This step is usually detected as an attempt, originating from outside the network, to scan the target system and find a way in.  Further details on the PreAttack stage can be read in [MITRE Pre-Att&ck matrix](https://attack.mitre.org/matrices/pre/). */
    PreAttack = "PreAttack",
    /** InitialAccess is the stage where an attacker manages to get foothold on the attacked resource. */
    InitialAccess = "InitialAccess",
    /** Persistence is any access, action, or configuration change to a system that gives a threat actor a persistent presence on that system. */
    Persistence = "Persistence",
    /** Privilege escalation is the result of actions that allow an adversary to obtain a higher level of permissions on a system or network. */
    PrivilegeEscalation = "PrivilegeEscalation",
    /** Defense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. */
    DefenseEvasion = "DefenseEvasion",
    /** Credential access represents techniques resulting in access to or control over system, domain, or service credentials that are used within an enterprise environment. */
    CredentialAccess = "CredentialAccess",
    /** Discovery consists of techniques that allow the adversary to gain knowledge about the system and internal network. */
    Discovery = "Discovery",
    /** Lateral movement consists of techniques that enable an adversary to access and control remote systems on a network and could, but does not necessarily, include execution of tools on remote systems. */
    LateralMovement = "LateralMovement",
    /** The execution tactic represents techniques that result in execution of adversary-controlled code on a local or remote system. */
    Execution = "Execution",
    /** Collection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. */
    Collection = "Collection",
    /** Exfiltration refers to techniques and attributes that result or aid in the adversary removing files and information from a target network. */
    Exfiltration = "Exfiltration",
    /** The command and control tactic represents how adversaries communicate with systems under their control within a target network. */
    CommandAndControl = "CommandAndControl",
    /** Impact events primarily try to directly reduce the availability or integrity of a system, service, or network; including manipulation of data to impact a business or operational process. */
    Impact = "Impact",
    /** Probing could be either an attempt to access a certain resource regardless of a malicious intent, or a failed attempt to gain access to a target system to gather information prior to exploitation. */
    Probing = "Probing",
    /** Exploitation is the stage where an attacker manages to get a foothold on the attacked resource. This stage is relevant for compute hosts and resources such as user accounts, certificates etc. */
    Exploitation = "Exploitation"
}

/** Known values of {@link Kind} that the service accepts. */
export declare enum KnownKind {
    /** Simulate alerts according to bundles */
    Bundles = "Bundles"
}

/** Known values of {@link OfferingType} that the service accepts. */
export declare enum KnownOfferingType {
    CspmMonitorAws = "CspmMonitorAws",
    DefenderForContainersAws = "DefenderForContainersAws",
    DefenderForServersAws = "DefenderForServersAws",
    InformationProtectionAws = "InformationProtectionAws"
}

/** Known values of {@link Operator} that the service accepts. */
export declare enum KnownOperator {
    /** Applies for decimal and non-decimal operands */
    Equals = "Equals",
    /** Applies only for decimal operands */
    GreaterThan = "GreaterThan",
    /** Applies only for decimal operands */
    GreaterThanOrEqualTo = "GreaterThanOrEqualTo",
    /** Applies only for decimal operands */
    LesserThan = "LesserThan",
    /** Applies only for decimal operands */
    LesserThanOrEqualTo = "LesserThanOrEqualTo",
    /** Applies  for decimal and non-decimal operands */
    NotEquals = "NotEquals",
    /** Applies only for non-decimal operands */
    Contains = "Contains",
    /** Applies only for non-decimal operands */
    StartsWith = "StartsWith",
    /** Applies only for non-decimal operands */
    EndsWith = "EndsWith"
}

/** Known values of {@link OrganizationMembershipType} that the service accepts. */
export declare enum KnownOrganizationMembershipType {
    Member = "Member",
    Organization = "Organization"
}

/** Known values of {@link PermissionProperty} that the service accepts. */
export declare enum KnownPermissionProperty {
    /** This permission provides read only access to AWS Security Hub resources. */
    AWSAWSSecurityHubReadOnlyAccess = "AWS::AWSSecurityHubReadOnlyAccess",
    /** This permission grants access to read security configuration metadata. */
    AWSSecurityAudit = "AWS::SecurityAudit",
    /** The permission provides for EC2 Automation service to execute activities defined within Automation documents. */
    AWSAmazonSSMAutomationRole = "AWS::AmazonSSMAutomationRole",
    /** This permission provides read only access to GCP Security Command Center. */
    GCPSecurityCenterAdminViewer = "GCP::Security Center Admin Viewer"
}

/** Known values of {@link PricingTier} that the service accepts. */
export declare enum KnownPricingTier {
    /** Get free Azure security center experience with basic security features */
    Free = "Free",
    /** Get the standard Azure security center experience with advanced security features */
    Standard = "Standard"
}

/** Known values of {@link PropertyType} that the service accepts. */
export declare enum KnownPropertyType {
    String = "String",
    Integer = "Integer",
    Number = "Number",
    Boolean = "Boolean"
}

/** Known values of {@link Protocol} that the service accepts. */
export declare enum KnownProtocol {
    TCP = "TCP",
    UDP = "UDP",
    All = "*"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    Succeeded = "Succeeded",
    Failed = "Failed",
    Updating = "Updating"
}

/** Known values of {@link RecommendationAction} that the service accepts. */
export declare enum KnownRecommendationAction {
    Recommended = "Recommended",
    Add = "Add",
    Remove = "Remove"
}

/** Known values of {@link RecommendationConfigStatus} that the service accepts. */
export declare enum KnownRecommendationConfigStatus {
    Disabled = "Disabled",
    Enabled = "Enabled"
}

/** Known values of {@link RecommendationStatus} that the service accepts. */
export declare enum KnownRecommendationStatus {
    Recommended = "Recommended",
    NotRecommended = "NotRecommended",
    NotAvailable = "NotAvailable",
    NoStatus = "NoStatus"
}

/** Known values of {@link RecommendationType} that the service accepts. */
export declare enum KnownRecommendationType {
    /** Authentication schema used for pull an edge module from an ACR repository does not use Service Principal Authentication. */
    IoTAcrauthentication = "IoT_ACRAuthentication",
    /** IoT agent message size capacity is currently underutilized, causing an increase in the number of sent messages. Adjust message intervals for better utilization. */
    IoTAgentSendsUnutilizedMessages = "IoT_AgentSendsUnutilizedMessages",
    /** Identified security related system configuration issues. */
    IoTBaseline = "IoT_Baseline",
    /** You can optimize Edge Hub memory usage by turning off protocol heads for any protocols not used by Edge modules in your solution. */
    IoTEdgeHubMemOptimize = "IoT_EdgeHubMemOptimize",
    /** Logging is disabled for this edge module. */
    IoTEdgeLoggingOptions = "IoT_EdgeLoggingOptions",
    /** A minority within a device security group has inconsistent Edge Module settings with the rest of their group. */
    IoTInconsistentModuleSettings = "IoT_InconsistentModuleSettings",
    /** Install the Azure Security of Things Agent. */
    IoTInstallAgent = "IoT_InstallAgent",
    /** IP Filter Configuration should have rules defined for allowed traffic and should deny all other traffic by default. */
    IoTIpfilterDenyAll = "IoT_IPFilter_DenyAll",
    /** An Allow IP Filter rules source IP range is too large. Overly permissive rules might expose your IoT hub to malicious intenders. */
    IoTIpfilterPermissiveRule = "IoT_IPFilter_PermissiveRule",
    /** A listening endpoint was found on the device. */
    IoTOpenPorts = "IoT_OpenPorts",
    /** An Allowed firewall policy was found (INPUT/OUTPUT). The policy should Deny all traffic by default and define rules to allow necessary communication to/from the device. */
    IoTPermissiveFirewallPolicy = "IoT_PermissiveFirewallPolicy",
    /** A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports. */
    IoTPermissiveInputFirewallRules = "IoT_PermissiveInputFirewallRules",
    /** A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports. */
    IoTPermissiveOutputFirewallRules = "IoT_PermissiveOutputFirewallRules",
    /** Edge module is configured to run in privileged mode, with extensive Linux capabilities or with host-level network access (send/receive data to host machine). */
    IoTPrivilegedDockerOptions = "IoT_PrivilegedDockerOptions",
    /** Same authentication credentials to the IoT Hub used by multiple devices. This could indicate an illegitimate device impersonating a legitimate device. It also exposes the risk of device impersonation by an attacker. */
    IoTSharedCredentials = "IoT_SharedCredentials",
    /** Insecure TLS configurations detected. Immediate upgrade recommended. */
    IoTVulnerableTLSCipherSuite = "IoT_VulnerableTLSCipherSuite"
}

/** Known values of {@link ReportedSeverity} that the service accepts. */
export declare enum KnownReportedSeverity {
    Informational = "Informational",
    Low = "Low",
    Medium = "Medium",
    High = "High"
}

/** Known values of {@link ResourceIdentifierType} that the service accepts. */
export declare enum KnownResourceIdentifierType {
    AzureResource = "AzureResource",
    LogAnalytics = "LogAnalytics"
}

/** Known values of {@link ResourceStatus} that the service accepts. */
export declare enum KnownResourceStatus {
    /** This assessment on the resource is healthy */
    Healthy = "Healthy",
    /** This assessment is not applicable to this resource */
    NotApplicable = "NotApplicable",
    /** This assessment is turned off by policy on this subscription */
    OffByPolicy = "OffByPolicy",
    /** This assessment on the resource is not healthy */
    NotHealthy = "NotHealthy"
}

/** Known values of {@link RuleSeverity} that the service accepts. */
export declare enum KnownRuleSeverity {
    /** High */
    High = "High",
    /** Medium */
    Medium = "Medium",
    /** Low */
    Low = "Low",
    /** Informational */
    Informational = "Informational",
    /** Obsolete */
    Obsolete = "Obsolete"
}

/** Known values of {@link RuleStatus} that the service accepts. */
export declare enum KnownRuleStatus {
    /** NonFinding */
    NonFinding = "NonFinding",
    /** Finding */
    Finding = "Finding",
    /** InternalError */
    InternalError = "InternalError"
}

/** Known values of {@link RuleType} that the service accepts. */
export declare enum KnownRuleType {
    /** Binary */
    Binary = "Binary",
    /** BaselineExpected */
    BaselineExpected = "BaselineExpected",
    /** PositiveList */
    PositiveList = "PositiveList",
    /** NegativeList */
    NegativeList = "NegativeList"
}

/** Known values of {@link ScanState} that the service accepts. */
export declare enum KnownScanState {
    /** Failed */
    Failed = "Failed",
    /** FailedToRun */
    FailedToRun = "FailedToRun",
    /** InProgress */
    InProgress = "InProgress",
    /** Passed */
    Passed = "Passed"
}

/** Known values of {@link ScanTriggerType} that the service accepts. */
export declare enum KnownScanTriggerType {
    /** OnDemand */
    OnDemand = "OnDemand",
    /** Recurring */
    Recurring = "Recurring"
}

/** Known values of {@link SecurityFamily} that the service accepts. */
export declare enum KnownSecurityFamily {
    Waf = "Waf",
    Ngfw = "Ngfw",
    SaasWaf = "SaasWaf",
    Va = "Va"
}

/** Known values of {@link SecuritySolutionStatus} that the service accepts. */
export declare enum KnownSecuritySolutionStatus {
    Enabled = "Enabled",
    Disabled = "Disabled"
}

/** Known values of {@link ServerVulnerabilityAssessmentPropertiesProvisioningState} that the service accepts. */
export declare enum KnownServerVulnerabilityAssessmentPropertiesProvisioningState {
    Succeeded = "Succeeded",
    Failed = "Failed",
    Canceled = "Canceled",
    Provisioning = "Provisioning",
    Deprovisioning = "Deprovisioning"
}

/** Known values of {@link SettingKind} that the service accepts. */
export declare enum KnownSettingKind {
    DataExportSettings = "DataExportSettings",
    AlertSuppressionSetting = "AlertSuppressionSetting",
    AlertSyncSettings = "AlertSyncSettings"
}

/** Known values of {@link SettingName} that the service accepts. */
export declare enum KnownSettingName {
    Mcas = "MCAS",
    Wdatp = "WDATP",
    WdatpExcludeLinuxPublicPreview = "WDATP_EXCLUDE_LINUX_PUBLIC_PREVIEW",
    Sentinel = "Sentinel"
}

/** Known values of {@link Severity} that the service accepts. */
export declare enum KnownSeverity {
    Low = "Low",
    Medium = "Medium",
    High = "High"
}

/** Known values of {@link SeverityEnum} that the service accepts. */
export declare enum KnownSeverityEnum {
    High = "High",
    Medium = "Medium",
    Low = "Low"
}

/** Known values of {@link Source} that the service accepts. */
export declare enum KnownSource {
    /** Resource is in Azure */
    Azure = "Azure",
    /** Resource in an on premise machine connected to Azure cloud */
    OnPremise = "OnPremise",
    /** SQL Resource in an on premise machine connected to Azure cloud */
    OnPremiseSql = "OnPremiseSql"
}

/** Known values of {@link SourceSystem} that the service accepts. */
export declare enum KnownSourceSystem {
    AzureAppLocker = "Azure_AppLocker",
    AzureAuditD = "Azure_AuditD",
    NonAzureAppLocker = "NonAzure_AppLocker",
    NonAzureAuditD = "NonAzure_AuditD",
    None = "None"
}

/** Known values of {@link State} that the service accepts. */
export declare enum KnownState {
    /** All supported regulatory compliance controls in the given standard have a passed state */
    Passed = "Passed",
    /** At least one supported regulatory compliance control in the given standard has a state of failed */
    Failed = "Failed",
    /** All supported regulatory compliance controls in the given standard have a state of skipped */
    Skipped = "Skipped",
    /** No supported regulatory compliance data for the given standard */
    Unsupported = "Unsupported"
}

/** Known values of {@link Status} that the service accepts. */
export declare enum KnownStatus {
    Revoked = "Revoked",
    Initiated = "Initiated"
}

/** Known values of {@link StatusReason} that the service accepts. */
export declare enum KnownStatusReason {
    Expired = "Expired",
    UserRequested = "UserRequested",
    NewerRequestInitiated = "NewerRequestInitiated"
}

/** Known values of {@link SubAssessmentStatusCode} that the service accepts. */
export declare enum KnownSubAssessmentStatusCode {
    /** The resource is healthy */
    Healthy = "Healthy",
    /** The resource has a security issue that needs to be addressed */
    Unhealthy = "Unhealthy",
    /** Assessment for this resource did not happen */
    NotApplicable = "NotApplicable"
}

/** Known values of {@link SupportedCloudEnum} that the service accepts. */
export declare enum KnownSupportedCloudEnum {
    AWS = "AWS",
    GCP = "GCP"
}

/** Known values of {@link Tactics} that the service accepts. */
export declare enum KnownTactics {
    Reconnaissance = "Reconnaissance",
    ResourceDevelopment = "Resource Development",
    InitialAccess = "Initial Access",
    Execution = "Execution",
    Persistence = "Persistence",
    PrivilegeEscalation = "Privilege Escalation",
    DefenseEvasion = "Defense Evasion",
    CredentialAccess = "Credential Access",
    Discovery = "Discovery",
    LateralMovement = "Lateral Movement",
    Collection = "Collection",
    CommandAndControl = "Command and Control",
    Exfiltration = "Exfiltration",
    Impact = "Impact"
}

/** Known values of {@link TaskUpdateActionType} that the service accepts. */
export declare enum KnownTaskUpdateActionType {
    Activate = "Activate",
    Dismiss = "Dismiss",
    Start = "Start",
    Resolve = "Resolve",
    Close = "Close"
}

/** Known values of {@link Techniques} that the service accepts. */
export declare enum KnownTechniques {
    AbuseElevationControlMechanism = "Abuse Elevation Control Mechanism",
    AccessTokenManipulation = "Access Token Manipulation",
    AccountDiscovery = "Account Discovery",
    AccountManipulation = "Account Manipulation",
    ActiveScanning = "Active Scanning",
    ApplicationLayerProtocol = "Application Layer Protocol",
    AudioCapture = "Audio Capture",
    BootOrLogonAutostartExecution = "Boot or Logon Autostart Execution",
    BootOrLogonInitializationScripts = "Boot or Logon Initialization Scripts",
    BruteForce = "Brute Force",
    CloudInfrastructureDiscovery = "Cloud Infrastructure Discovery",
    CloudServiceDashboard = "Cloud Service Dashboard",
    CloudServiceDiscovery = "Cloud Service Discovery",
    CommandAndScriptingInterpreter = "Command and Scripting Interpreter",
    CompromiseClientSoftwareBinary = "Compromise Client Software Binary",
    CompromiseInfrastructure = "Compromise Infrastructure",
    ContainerAndResourceDiscovery = "Container and Resource Discovery",
    CreateAccount = "Create Account",
    CreateOrModifySystemProcess = "Create or Modify System Process",
    CredentialsFromPasswordStores = "Credentials from Password Stores",
    DataDestruction = "Data Destruction",
    DataEncryptedForImpact = "Data Encrypted for Impact",
    DataFromCloudStorageObject = "Data from Cloud Storage Object",
    DataFromConfigurationRepository = "Data from Configuration Repository",
    DataFromInformationRepositories = "Data from Information Repositories",
    DataFromLocalSystem = "Data from Local System",
    DataManipulation = "Data Manipulation",
    DataStaged = "Data Staged",
    Defacement = "Defacement",
    DeobfuscateDecodeFilesOrInformation = "Deobfuscate/Decode Files or Information",
    DiskWipe = "Disk Wipe",
    DomainTrustDiscovery = "Domain Trust Discovery",
    DriveByCompromise = "Drive-by Compromise",
    DynamicResolution = "Dynamic Resolution",
    EndpointDenialOfService = "Endpoint Denial of Service",
    EventTriggeredExecution = "Event Triggered Execution",
    ExfiltrationOverAlternativeProtocol = "Exfiltration Over Alternative Protocol",
    ExploitPublicFacingApplication = "Exploit Public-Facing Application",
    ExploitationForClientExecution = "Exploitation for Client Execution",
    ExploitationForCredentialAccess = "Exploitation for Credential Access",
    ExploitationForDefenseEvasion = "Exploitation for Defense Evasion",
    ExploitationForPrivilegeEscalation = "Exploitation for Privilege Escalation",
    ExploitationOfRemoteServices = "Exploitation of Remote Services",
    ExternalRemoteServices = "External Remote Services",
    FallbackChannels = "Fallback Channels",
    FileAndDirectoryDiscovery = "File and Directory Discovery",
    GatherVictimNetworkInformation = "Gather Victim Network Information",
    HideArtifacts = "Hide Artifacts",
    HijackExecutionFlow = "Hijack Execution Flow",
    ImpairDefenses = "Impair Defenses",
    ImplantContainerImage = "Implant Container Image",
    IndicatorRemovalOnHost = "Indicator Removal on Host",
    IndirectCommandExecution = "Indirect Command Execution",
    IngressToolTransfer = "Ingress Tool Transfer",
    InputCapture = "Input Capture",
    InterProcessCommunication = "Inter-Process Communication",
    LateralToolTransfer = "Lateral Tool Transfer",
    ManInTheMiddle = "Man-in-the-Middle",
    Masquerading = "Masquerading",
    ModifyAuthenticationProcess = "Modify Authentication Process",
    ModifyRegistry = "Modify Registry",
    NetworkDenialOfService = "Network Denial of Service",
    NetworkServiceScanning = "Network Service Scanning",
    NetworkSniffing = "Network Sniffing",
    NonApplicationLayerProtocol = "Non-Application Layer Protocol",
    NonStandardPort = "Non-Standard Port",
    ObtainCapabilities = "Obtain Capabilities",
    ObfuscatedFilesOrInformation = "Obfuscated Files or Information",
    OfficeApplicationStartup = "Office Application Startup",
    OSCredentialDumping = "OS Credential Dumping",
    PermissionGroupsDiscovery = "Permission Groups Discovery",
    Phishing = "Phishing",
    PreOSBoot = "Pre-OS Boot",
    ProcessDiscovery = "Process Discovery",
    ProcessInjection = "Process Injection",
    ProtocolTunneling = "Protocol Tunneling",
    Proxy = "Proxy",
    QueryRegistry = "Query Registry",
    RemoteAccessSoftware = "Remote Access Software",
    RemoteServiceSessionHijacking = "Remote Service Session Hijacking",
    RemoteServices = "Remote Services",
    RemoteSystemDiscovery = "Remote System Discovery",
    ResourceHijacking = "Resource Hijacking",
    ScheduledTaskJob = "Scheduled Task/Job",
    ScreenCapture = "Screen Capture",
    SearchVictimOwnedWebsites = "Search Victim-Owned Websites",
    ServerSoftwareComponent = "Server Software Component",
    ServiceStop = "Service Stop",
    SignedBinaryProxyExecution = "Signed Binary Proxy Execution",
    SoftwareDeploymentTools = "Software Deployment Tools",
    SQLStoredProcedures = "SQL Stored Procedures",
    StealOrForgeKerberosTickets = "Steal or Forge Kerberos Tickets",
    SubvertTrustControls = "Subvert Trust Controls",
    SupplyChainCompromise = "Supply Chain Compromise",
    SystemInformationDiscovery = "System Information Discovery",
    TaintSharedContent = "Taint Shared Content",
    TrafficSignaling = "Traffic Signaling",
    TransferDataToCloudAccount = "Transfer Data to Cloud Account",
    TrustedRelationship = "Trusted Relationship",
    UnsecuredCredentials = "Unsecured Credentials",
    UserExecution = "User Execution",
    ValidAccounts = "Valid Accounts",
    WindowsManagementInstrumentation = "Windows Management Instrumentation",
    FileAndDirectoryPermissionsModification = "File and Directory Permissions Modification"
}

/** Known values of {@link Threats} that the service accepts. */
export declare enum KnownThreats {
    AccountBreach = "accountBreach",
    DataExfiltration = "dataExfiltration",
    DataSpillage = "dataSpillage",
    MaliciousInsider = "maliciousInsider",
    ElevationOfPrivilege = "elevationOfPrivilege",
    ThreatResistance = "threatResistance",
    MissingCoverage = "missingCoverage",
    DenialOfService = "denialOfService"
}

/** Known values of {@link TransportProtocol} that the service accepts. */
export declare enum KnownTransportProtocol {
    TCP = "TCP",
    UDP = "UDP"
}

/** Known values of {@link UnmaskedIpLoggingStatus} that the service accepts. */
export declare enum KnownUnmaskedIpLoggingStatus {
    /** Unmasked IP logging is disabled */
    Disabled = "Disabled",
    /** Unmasked IP logging is enabled */
    Enabled = "Enabled"
}

/** Known values of {@link UserImpact} that the service accepts. */
export declare enum KnownUserImpact {
    Low = "Low",
    Moderate = "Moderate",
    High = "High"
}

/** Known values of {@link ValueType} that the service accepts. */
export declare enum KnownValueType {
    /** An IP range in CIDR format (e.g. '192.168.0.1/8'). */
    IpCidr = "IpCidr",
    /** Any string value. */
    String = "String"
}

/** A List custom alert rule. */
export declare type ListCustomAlertRule = CustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "ListCustomAlertRule" | "AllowlistCustomAlertRule" | "DenylistCustomAlertRule" | "ConnectionToIpNotAllowed" | "ConnectionFromIpNotAllowed" | "LocalUserNotAllowed" | "ProcessNotAllowed";
    /**
     * The value type of the items in the list.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly valueType?: ValueType;
};

export declare type ListCustomAlertRuleUnion = ListCustomAlertRule | AllowlistCustomAlertRuleUnion | DenylistCustomAlertRule;

/** Login by a local user that isn't allowed. Allow list consists of login names to allow. */
export declare type LocalUserNotAllowed = AllowlistCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "LocalUserNotAllowed";
};

/** Describes an Azure resource with location */
declare interface Location_2 {
    /**
     * Location where the resource is stored
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly location?: string;
}
export { Location_2 as Location }

/** Interface representing a Locations. */
export declare interface Locations {
    /**
     * The location of the responsible ASC of the specific subscription (home region). For each
     * subscription there is only one responsible location. The location in the response should be used to
     * read or write other resources in ASC according to their ID.
     * @param options The options parameters.
     */
    list(options?: LocationsListOptionalParams): PagedAsyncIterableIterator<AscLocation>;
    /**
     * Details of a specific location
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    get(ascLocation: string, options?: LocationsGetOptionalParams): Promise<LocationsGetResponse>;
}

/** Optional parameters. */
export declare interface LocationsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type LocationsGetResponse = AscLocation;

/** Optional parameters. */
export declare interface LocationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type LocationsListNextResponse = AscLocationList;

/** Optional parameters. */
export declare interface LocationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type LocationsListResponse = AscLocationList;

/** Represents a Log Analytics workspace scope identifier. */
export declare type LogAnalyticsIdentifier = ResourceIdentifier & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "LogAnalytics";
    /**
     * The LogAnalytics workspace id that stores this alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly workspaceId?: string;
    /**
     * The azure subscription id for the LogAnalytics workspace storing this alert.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly workspaceSubscriptionId?: string;
    /**
     * The azure resource group for the LogAnalytics workspace storing this alert
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly workspaceResourceGroup?: string;
    /**
     * (optional) The LogAnalytics agent id reporting the event that this alert is based on.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly agentId?: string;
};

/** The resource of the configuration or data needed to onboard the machine to MDE */
export declare type MdeOnboardingData = Resource & {
    /** The onboarding package used to onboard Windows machines to MDE, coded in base64. This can also be used for onboarding using the dedicated VM Extension */
    onboardingPackageWindows?: Uint8Array;
    /** The onboarding package used to onboard Linux machines to MDE, coded in base64. This can also be used for onboarding using the dedicated VM Extension */
    onboardingPackageLinux?: Uint8Array;
};

/** List of all MDE onboarding data resources */
export declare interface MdeOnboardingDataList {
    /** List of the resources of the configuration or data needed to onboard the machine to MDE */
    value?: MdeOnboardingData[];
}

/** Interface representing a MdeOnboardings. */
export declare interface MdeOnboardings {
    /**
     * The configuration or data needed to onboard the machine to MDE
     * @param options The options parameters.
     */
    list(options?: MdeOnboardingsListOptionalParams): Promise<MdeOnboardingsListResponse>;
    /**
     * The default configuration or data needed to onboard the machine to MDE
     * @param options The options parameters.
     */
    get(options?: MdeOnboardingsGetOptionalParams): Promise<MdeOnboardingsGetResponse>;
}

/** Optional parameters. */
export declare interface MdeOnboardingsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type MdeOnboardingsGetResponse = MdeOnboardingData;

/** Optional parameters. */
export declare interface MdeOnboardingsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type MdeOnboardingsListResponse = MdeOnboardingDataList;

/** Number of cloud to device messages (MQTT protocol) is not in allowed range. */
export declare type MqttC2DMessagesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "MqttC2DMessagesNotInAllowedRange";
};

/** Number of rejected cloud to device messages (MQTT protocol) is not in allowed range. */
export declare type MqttC2DRejectedMessagesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "MqttC2DRejectedMessagesNotInAllowedRange";
};

/** Number of device to cloud messages (MQTT protocol) is not in allowed range. */
export declare type MqttD2CMessagesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "MqttD2CMessagesNotInAllowedRange";
};

/**
 * Defines values for OfferingType. \
 * {@link KnownOfferingType} can be used interchangeably with OfferingType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CspmMonitorAws** \
 * **DefenderForContainersAws** \
 * **DefenderForServersAws** \
 * **InformationProtectionAws**
 */
export declare type OfferingType = string;

/** Details of the On Premise resource that was assessed */
export declare type OnPremiseResourceDetails = ResourceDetails & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    source: "OnPremise" | "OnPremiseSql";
    /** Azure resource Id of the workspace the machine is attached to */
    workspaceId: string;
    /** The unique Id of the machine */
    vmuuid: string;
    /** The oms agent Id installed on the machine */
    sourceComputerId: string;
    /** The name of the machine */
    machineName: string;
};

export declare type OnPremiseResourceDetailsUnion = OnPremiseResourceDetails | OnPremiseSqlResourceDetails;

/** Details of the On Premise Sql resource that was assessed */
export declare type OnPremiseSqlResourceDetails = OnPremiseResourceDetails & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    source: "OnPremiseSql";
    /** The Sql server name installed on the machine */
    serverName: string;
    /** The Sql database name installed on the machine */
    databaseName: string;
};

/** Possible operation in the REST API of Microsoft.Security */
export declare interface Operation {
    /**
     * Name of the operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Where the operation is originated
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: string;
    /** Security operation display */
    display?: OperationDisplay;
}

/** Security operation display */
export declare interface OperationDisplay {
    /**
     * The resource provider for the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * The display name of the resource the operation applies to.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * The display name of the security operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * The description of the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** List of possible operations for Microsoft.Security resource provider */
export declare interface OperationList {
    /** List of Security operations */
    value?: Operation[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Exposes all available operations for discovery purposes.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationList;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationList;

/**
 * Defines values for Operator. \
 * {@link KnownOperator} can be used interchangeably with Operator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equals**: Applies for decimal and non-decimal operands \
 * **GreaterThan**: Applies only for decimal operands \
 * **GreaterThanOrEqualTo**: Applies only for decimal operands \
 * **LesserThan**: Applies only for decimal operands \
 * **LesserThanOrEqualTo**: Applies only for decimal operands \
 * **NotEquals**: Applies  for decimal and non-decimal operands \
 * **Contains**: Applies only for non-decimal operands \
 * **StartsWith**: Applies only for non-decimal operands \
 * **EndsWith**: Applies only for non-decimal operands
 */
export declare type Operator = string;

/**
 * Defines values for OrganizationMembershipType. \
 * {@link KnownOrganizationMembershipType} can be used interchangeably with OrganizationMembershipType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Member** \
 * **Organization**
 */
export declare type OrganizationMembershipType = string;

/** Represents a path that is recommended to be allowed and its properties */
export declare interface PathRecommendation {
    /** The full path of the file, or an identifier of the application */
    path?: string;
    /** The recommendation action of the machine or rule */
    action?: RecommendationAction;
    /** The type of IoT Security recommendation. */
    type?: RecommendationType;
    /** Represents the publisher information of a process/rule */
    publisherInfo?: PublisherInfo;
    /** Whether the application is commonly run on the machine */
    common?: boolean;
    userSids?: string[];
    usernames?: UserRecommendation[];
    /** The type of the file (for Linux files - Executable is used) */
    fileType?: FileType;
    /** The configuration status of the machines group or machine or rule */
    configurationStatus?: ConfigurationStatus;
}

/**
 * Defines values for PermissionProperty. \
 * {@link KnownPermissionProperty} can be used interchangeably with PermissionProperty,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AWS::AWSSecurityHubReadOnlyAccess**: This permission provides read only access to AWS Security Hub resources. \
 * **AWS::SecurityAudit**: This permission grants access to read security configuration metadata. \
 * **AWS::AmazonSSMAutomationRole**: The permission provides for EC2 Automation service to execute activities defined within Automation documents. \
 * **GCP::Security Center Admin Viewer**: This permission provides read only access to GCP Security Command Center.
 */
export declare type PermissionProperty = string;

/** Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. */
export declare type Pricing = Resource & {
    /** The pricing tier value. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. */
    pricingTier?: PricingTier;
    /** The sub-plan selected for a Standard pricing configuration, when more than one sub-plan is available. Each sub-plan enables a set of security features. When not specified, full plan is applied. */
    subPlan?: string;
    /**
     * The duration left for the subscriptions free trial period - in ISO 8601 format (e.g. P3Y6M4DT12H30M5S).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly freeTrialRemainingTime?: string;
};

/** List of pricing configurations response. */
export declare interface PricingList {
    /** List of pricing configurations */
    value: Pricing[];
}

/** Interface representing a Pricings. */
export declare interface Pricings {
    /**
     * Lists Security Center pricing configurations in the subscription.
     * @param options The options parameters.
     */
    list(options?: PricingsListOptionalParams): Promise<PricingsListResponse>;
    /**
     * Gets a provided Security Center pricing configuration in the subscription.
     * @param pricingName name of the pricing configuration
     * @param options The options parameters.
     */
    get(pricingName: string, options?: PricingsGetOptionalParams): Promise<PricingsGetResponse>;
    /**
     * Updates a provided Security Center pricing configuration in the subscription.
     * @param pricingName name of the pricing configuration
     * @param pricing Pricing object
     * @param options The options parameters.
     */
    update(pricingName: string, pricing: Pricing, options?: PricingsUpdateOptionalParams): Promise<PricingsUpdateResponse>;
}

/** Optional parameters. */
export declare interface PricingsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PricingsGetResponse = Pricing;

/** Optional parameters. */
export declare interface PricingsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PricingsListResponse = PricingList;

/** Optional parameters. */
export declare interface PricingsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type PricingsUpdateResponse = Pricing;

/**
 * Defines values for PricingTier. \
 * {@link KnownPricingTier} can be used interchangeably with PricingTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Free**: Get free Azure security center experience with basic security features \
 * **Standard**: Get the standard Azure security center experience with advanced security features
 */
export declare type PricingTier = string;

/** Execution of a process that isn't allowed. Allow list consists of process names to allow. */
export declare type ProcessNotAllowed = AllowlistCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "ProcessNotAllowed";
};

/**
 * Defines values for PropertyType. \
 * {@link KnownPropertyType} can be used interchangeably with PropertyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **String** \
 * **Integer** \
 * **Number** \
 * **Boolean**
 */
export declare type PropertyType = string;

/** The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux. */
export declare interface ProtectionMode {
    /** The application control policy enforcement/protection mode of the machine group */
    exe?: EnforcementMode;
    /** The application control policy enforcement/protection mode of the machine group */
    msi?: EnforcementMode;
    /** The application control policy enforcement/protection mode of the machine group */
    script?: EnforcementMode;
    /** The application control policy enforcement/protection mode of the machine group */
    executable?: EnforcementMode;
}

/**
 * Defines values for Protocol. \
 * {@link KnownProtocol} can be used interchangeably with Protocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TCP** \
 * **UDP** \
 * *****
 */
export declare type Protocol = string;

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Updating**
 */
export declare type ProvisioningState = string;

/** For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use. */
export declare interface ProxyServerProperties {
    /** Proxy server IP */
    ip?: string;
    /** Proxy server port */
    port?: string;
}

/** Represents the publisher information of a process/rule */
export declare interface PublisherInfo {
    /** The Subject field of the x.509 certificate used to sign the code, using the following fields -  O = Organization, L = Locality, S = State or Province, and C = Country */
    publisherName?: string;
    /** The product name taken from the file's version resource */
    productName?: string;
    /** The "OriginalName" field taken from the file's version resource */
    binaryName?: string;
    /** The binary file version taken from the file's version resource */
    version?: string;
}

/** The rule query details. */
export declare interface QueryCheck {
    /** The rule query. */
    query?: string;
    /** Expected result. */
    expectedResult?: string[][];
    /** Column names of expected result. */
    columnNames?: string[];
}

/** Number of device queue purges is not in allowed range. */
export declare type QueuePurgesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "QueuePurgesNotInAllowedRange";
};

/** Defines values for Rank. */
export declare type Rank = "None" | "Low" | "Medium" | "High" | "Critical";

/**
 * Defines values for RecommendationAction. \
 * {@link KnownRecommendationAction} can be used interchangeably with RecommendationAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Recommended** \
 * **Add** \
 * **Remove**
 */
export declare type RecommendationAction = string;

/**
 * Defines values for RecommendationConfigStatus. \
 * {@link KnownRecommendationConfigStatus} can be used interchangeably with RecommendationConfigStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export declare type RecommendationConfigStatus = string;

/** The type of IoT Security recommendation. */
export declare interface RecommendationConfigurationProperties {
    /** The type of IoT Security recommendation. */
    recommendationType: RecommendationType;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly name?: string;
    /** Recommendation status. When the recommendation status is disabled recommendations are not generated. */
    status: RecommendationConfigStatus;
}

/**
 * Defines values for RecommendationStatus. \
 * {@link KnownRecommendationStatus} can be used interchangeably with RecommendationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Recommended** \
 * **NotRecommended** \
 * **NotAvailable** \
 * **NoStatus**
 */
export declare type RecommendationStatus = string;

/**
 * Defines values for RecommendationType. \
 * {@link KnownRecommendationType} can be used interchangeably with RecommendationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IoT_ACRAuthentication**: Authentication schema used for pull an edge module from an ACR repository does not use Service Principal Authentication. \
 * **IoT_AgentSendsUnutilizedMessages**: IoT agent message size capacity is currently underutilized, causing an increase in the number of sent messages. Adjust message intervals for better utilization. \
 * **IoT_Baseline**: Identified security related system configuration issues. \
 * **IoT_EdgeHubMemOptimize**: You can optimize Edge Hub memory usage by turning off protocol heads for any protocols not used by Edge modules in your solution. \
 * **IoT_EdgeLoggingOptions**: Logging is disabled for this edge module. \
 * **IoT_InconsistentModuleSettings**: A minority within a device security group has inconsistent Edge Module settings with the rest of their group. \
 * **IoT_InstallAgent**: Install the Azure Security of Things Agent. \
 * **IoT_IPFilter_DenyAll**: IP Filter Configuration should have rules defined for allowed traffic and should deny all other traffic by default. \
 * **IoT_IPFilter_PermissiveRule**: An Allow IP Filter rules source IP range is too large. Overly permissive rules might expose your IoT hub to malicious intenders. \
 * **IoT_OpenPorts**: A listening endpoint was found on the device. \
 * **IoT_PermissiveFirewallPolicy**: An Allowed firewall policy was found (INPUT\/OUTPUT). The policy should Deny all traffic by default and define rules to allow necessary communication to\/from the device. \
 * **IoT_PermissiveInputFirewallRules**: A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports. \
 * **IoT_PermissiveOutputFirewallRules**: A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports. \
 * **IoT_PrivilegedDockerOptions**: Edge module is configured to run in privileged mode, with extensive Linux capabilities or with host-level network access (send\/receive data to host machine). \
 * **IoT_SharedCredentials**: Same authentication credentials to the IoT Hub used by multiple devices. This could indicate an illegitimate device impersonating a legitimate device. It also exposes the risk of device impersonation by an attacker. \
 * **IoT_VulnerableTLSCipherSuite**: Insecure TLS configurations detected. Immediate upgrade recommended.
 */
export declare type RecommendationType = string;

/** Regulatory compliance assessment details and state */
export declare type RegulatoryComplianceAssessment = Resource & {
    /**
     * The description of the regulatory compliance assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * The expected type of assessment contained in the AssessmentDetailsLink
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly assessmentType?: string;
    /**
     * Link to more detailed assessment results data. The response type will be according to the assessmentType field
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly assessmentDetailsLink?: string;
    /** Aggregative state based on the assessment's scanned resources states */
    state?: State;
    /**
     * The given assessment's related resources count with passed state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly passedResources?: number;
    /**
     * The given assessment's related resources count with failed state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly failedResources?: number;
    /**
     * The given assessment's related resources count with skipped state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly skippedResources?: number;
    /**
     * The given assessment's related resources count with unsupported state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unsupportedResources?: number;
};

/** List of regulatory compliance assessment response */
export declare interface RegulatoryComplianceAssessmentList {
    value: RegulatoryComplianceAssessment[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a RegulatoryComplianceAssessments. */
export declare interface RegulatoryComplianceAssessments {
    /**
     * Details and state of assessments mapped to selected regulatory compliance control
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param regulatoryComplianceControlName Name of the regulatory compliance control object
     * @param options The options parameters.
     */
    list(regulatoryComplianceStandardName: string, regulatoryComplianceControlName: string, options?: RegulatoryComplianceAssessmentsListOptionalParams): PagedAsyncIterableIterator<RegulatoryComplianceAssessment>;
    /**
     * Supported regulatory compliance details and state for selected assessment
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param regulatoryComplianceControlName Name of the regulatory compliance control object
     * @param regulatoryComplianceAssessmentName Name of the regulatory compliance assessment object
     * @param options The options parameters.
     */
    get(regulatoryComplianceStandardName: string, regulatoryComplianceControlName: string, regulatoryComplianceAssessmentName: string, options?: RegulatoryComplianceAssessmentsGetOptionalParams): Promise<RegulatoryComplianceAssessmentsGetResponse>;
}

/** Optional parameters. */
export declare interface RegulatoryComplianceAssessmentsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type RegulatoryComplianceAssessmentsGetResponse = RegulatoryComplianceAssessment;

/** Optional parameters. */
export declare interface RegulatoryComplianceAssessmentsListNextOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the listNext operation. */
export declare type RegulatoryComplianceAssessmentsListNextResponse = RegulatoryComplianceAssessmentList;

/** Optional parameters. */
export declare interface RegulatoryComplianceAssessmentsListOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type RegulatoryComplianceAssessmentsListResponse = RegulatoryComplianceAssessmentList;

/** Regulatory compliance control details and state */
export declare type RegulatoryComplianceControl = Resource & {
    /**
     * The description of the regulatory compliance control
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /** Aggregative state based on the control's supported assessments states */
    state?: State;
    /**
     * The number of supported regulatory compliance assessments of the given control with a passed state
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly passedAssessments?: number;
    /**
     * The number of supported regulatory compliance assessments of the given control with a failed state
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly failedAssessments?: number;
    /**
     * The number of supported regulatory compliance assessments of the given control with a skipped state
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly skippedAssessments?: number;
};

/** List of regulatory compliance controls response */
export declare interface RegulatoryComplianceControlList {
    /** List of regulatory compliance controls */
    value: RegulatoryComplianceControl[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a RegulatoryComplianceControls. */
export declare interface RegulatoryComplianceControls {
    /**
     * All supported regulatory compliance controls details and state for selected standard
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param options The options parameters.
     */
    list(regulatoryComplianceStandardName: string, options?: RegulatoryComplianceControlsListOptionalParams): PagedAsyncIterableIterator<RegulatoryComplianceControl>;
    /**
     * Selected regulatory compliance control details and state
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param regulatoryComplianceControlName Name of the regulatory compliance control object
     * @param options The options parameters.
     */
    get(regulatoryComplianceStandardName: string, regulatoryComplianceControlName: string, options?: RegulatoryComplianceControlsGetOptionalParams): Promise<RegulatoryComplianceControlsGetResponse>;
}

/** Optional parameters. */
export declare interface RegulatoryComplianceControlsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type RegulatoryComplianceControlsGetResponse = RegulatoryComplianceControl;

/** Optional parameters. */
export declare interface RegulatoryComplianceControlsListNextOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the listNext operation. */
export declare type RegulatoryComplianceControlsListNextResponse = RegulatoryComplianceControlList;

/** Optional parameters. */
export declare interface RegulatoryComplianceControlsListOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type RegulatoryComplianceControlsListResponse = RegulatoryComplianceControlList;

/** Regulatory compliance standard details and state */
export declare type RegulatoryComplianceStandard = Resource & {
    /** Aggregative state based on the standard's supported controls states */
    state?: State;
    /**
     * The number of supported regulatory compliance controls of the given standard with a passed state
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly passedControls?: number;
    /**
     * The number of supported regulatory compliance controls of the given standard with a failed state
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly failedControls?: number;
    /**
     * The number of supported regulatory compliance controls of the given standard with a skipped state
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly skippedControls?: number;
    /**
     * The number of regulatory compliance controls of the given standard which are unsupported by automated assessments
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unsupportedControls?: number;
};

/** List of regulatory compliance standards response */
export declare interface RegulatoryComplianceStandardList {
    value: RegulatoryComplianceStandard[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a RegulatoryComplianceStandards. */
export declare interface RegulatoryComplianceStandards {
    /**
     * Supported regulatory compliance standards details and state
     * @param options The options parameters.
     */
    list(options?: RegulatoryComplianceStandardsListOptionalParams): PagedAsyncIterableIterator<RegulatoryComplianceStandard>;
    /**
     * Supported regulatory compliance details state for selected standard
     * @param regulatoryComplianceStandardName Name of the regulatory compliance standard object
     * @param options The options parameters.
     */
    get(regulatoryComplianceStandardName: string, options?: RegulatoryComplianceStandardsGetOptionalParams): Promise<RegulatoryComplianceStandardsGetResponse>;
}

/** Optional parameters. */
export declare interface RegulatoryComplianceStandardsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type RegulatoryComplianceStandardsGetResponse = RegulatoryComplianceStandard;

/** Optional parameters. */
export declare interface RegulatoryComplianceStandardsListNextOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the listNext operation. */
export declare type RegulatoryComplianceStandardsListNextResponse = RegulatoryComplianceStandardList;

/** Optional parameters. */
export declare interface RegulatoryComplianceStandardsListOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type RegulatoryComplianceStandardsListResponse = RegulatoryComplianceStandardList;

/** Remediation details. */
export declare interface Remediation {
    /** Remediation description. */
    description?: string;
    /** Remediation script. */
    scripts?: string[];
    /** Is remediation automated. */
    automated?: boolean;
    /** Optional link to remediate in Azure Portal. */
    portalLink?: string;
}

/**
 * Defines values for ReportedSeverity. \
 * {@link KnownReportedSeverity} can be used interchangeably with ReportedSeverity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Informational** \
 * **Low** \
 * **Medium** \
 * **High**
 */
export declare type ReportedSeverity = string;

/** Describes an Azure resource. */
export declare interface Resource {
    /**
     * Resource Id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Resource name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Resource type
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Details of the resource that was assessed */
export declare interface ResourceDetails {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    source: "Azure" | "OnPremise" | "OnPremiseSql";
}

export declare type ResourceDetailsUnion = ResourceDetails | AzureResourceDetails | OnPremiseResourceDetailsUnion;

/** A resource identifier for an alert which can be used to direct the alert to the right product exposure group (tenant, workspace, subscription etc.). */
export declare interface ResourceIdentifier {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "AzureResource" | "LogAnalytics";
}

/**
 * Defines values for ResourceIdentifierType. \
 * {@link KnownResourceIdentifierType} can be used interchangeably with ResourceIdentifierType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureResource** \
 * **LogAnalytics**
 */
export declare type ResourceIdentifierType = string;

export declare type ResourceIdentifierUnion = ResourceIdentifier | AzureResourceIdentifier | LogAnalyticsIdentifier;

/**
 * Defines values for ResourceStatus. \
 * {@link KnownResourceStatus} can be used interchangeably with ResourceStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Healthy**: This assessment on the resource is healthy \
 * **NotApplicable**: This assessment is not applicable to this resource \
 * **OffByPolicy**: This assessment is turned off by policy on this subscription \
 * **NotHealthy**: This assessment on the resource is not healthy
 */
export declare type ResourceStatus = string;

/** Describes remote addresses that is recommended to communicate with the Azure resource on some (Protocol, Port, Direction). All other remote addresses are recommended to be blocked */
export declare interface Rule {
    /** The name of the rule */
    name?: string;
    /** The rule's direction */
    direction?: Direction;
    /** The rule's destination port */
    destinationPort?: number;
    /** The rule's transport protocols */
    protocols?: TransportProtocol[];
    /** The remote IP addresses that should be able to communicate with the Azure resource on the rule's destination port and protocol */
    ipAddresses?: string[];
}

/** Rule results. */
export declare type RuleResults = Resource & {
    /** Rule results properties. */
    properties?: RuleResultsProperties;
};

/** Rule results input. */
export declare interface RuleResultsInput {
    /** Take results from latest scan. */
    latestScan?: boolean;
    /**
     * Expected results to be inserted into the baseline.
     * Leave this field empty it LatestScan == true.
     */
    results?: string[][];
}

/** Rule results properties. */
export declare interface RuleResultsProperties {
    /** Expected results in the baseline. */
    results?: string[][];
}

/**
 * Defines values for RuleSeverity. \
 * {@link KnownRuleSeverity} can be used interchangeably with RuleSeverity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **High**: High \
 * **Medium**: Medium \
 * **Low**: Low \
 * **Informational**: Informational \
 * **Obsolete**: Obsolete
 */
export declare type RuleSeverity = string;

/** A list of rules results. */
export declare interface RulesResults {
    /** List of rule results. */
    value?: RuleResults[];
}

/** Rules results input. */
export declare interface RulesResultsInput {
    /** Take results from latest scan. */
    latestScan?: boolean;
    /**
     * Expected results to be inserted into the baseline.
     * Leave this field empty it LatestScan == true.
     */
    results?: {
        [propertyName: string]: string[][];
    };
}

/** Defines values for RuleState. */
export declare type RuleState = "Enabled" | "Disabled" | "Expired";

/**
 * Defines values for RuleStatus. \
 * {@link KnownRuleStatus} can be used interchangeably with RuleStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NonFinding**: NonFinding \
 * **Finding**: Finding \
 * **InternalError**: InternalError
 */
export declare type RuleStatus = string;

/**
 * Defines values for RuleType. \
 * {@link KnownRuleType} can be used interchangeably with RuleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Binary**: Binary \
 * **BaselineExpected**: BaselineExpected \
 * **PositiveList**: PositiveList \
 * **NegativeList**: NegativeList
 */
export declare type RuleType = string;

/** A vulnerability assessment scan record. */
export declare type Scan = Resource & {
    /** A vulnerability assessment scan record properties. */
    properties?: ScanProperties;
};

/** A vulnerability assessment scan record properties. */
export declare interface ScanProperties {
    /** The scan trigger type. */
    triggerType?: ScanTriggerType;
    /** The scan status. */
    state?: ScanState;
    /** The server name. */
    server?: string;
    /** The database name. */
    database?: string;
    /** The SQL version. */
    sqlVersion?: string;
    /** The scan start time (UTC). */
    startTime?: Date;
    /** Scan results are valid until end time (UTC). */
    endTime?: Date;
    /** The number of failed rules with high severity. */
    highSeverityFailedRulesCount?: number;
    /** The number of failed rules with medium severity. */
    mediumSeverityFailedRulesCount?: number;
    /** The number of failed rules with low severity. */
    lowSeverityFailedRulesCount?: number;
    /** The number of total passed rules. */
    totalPassedRulesCount?: number;
    /** The number of total failed rules. */
    totalFailedRulesCount?: number;
    /** The number of total rules assessed. */
    totalRulesCount?: number;
    /** Baseline created for this database, and has one or more rules. */
    isBaselineApplied?: boolean;
}

/** A vulnerability assessment scan result for a single rule. */
export declare type ScanResult = Resource & {
    /** A vulnerability assessment scan result properties for a single rule. */
    properties?: ScanResultProperties;
};

/** A vulnerability assessment scan result properties for a single rule. */
export declare interface ScanResultProperties {
    /** The rule Id. */
    ruleId?: string;
    /** The rule result status. */
    status?: RuleStatus;
    /** Indicated whether the results specified here are trimmed. */
    isTrimmed?: boolean;
    /** The results of the query that was run. */
    queryResults?: string[][];
    /** Remediation details. */
    remediation?: Remediation;
    /** The rule result adjusted with baseline. */
    baselineAdjustedResult?: BaselineAdjustedResult;
    /** vulnerability assessment rule metadata details. */
    ruleMetadata?: VaRule;
}

/** A list of vulnerability assessment scan results. */
export declare interface ScanResults {
    /** List of vulnerability assessment scan results. */
    value?: ScanResult[];
}

/** A list of vulnerability assessment scan records. */
export declare interface Scans {
    /** List of vulnerability assessment scan records. */
    value?: Scan[];
}

/**
 * Defines values for ScanState. \
 * {@link KnownScanState} can be used interchangeably with ScanState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Failed**: Failed \
 * **FailedToRun**: FailedToRun \
 * **InProgress**: InProgress \
 * **Passed**: Passed
 */
export declare type ScanState = string;

/**
 * Defines values for ScanTriggerType. \
 * {@link KnownScanTriggerType} can be used interchangeably with ScanTriggerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OnDemand**: OnDemand \
 * **Recurring**: Recurring
 */
export declare type ScanTriggerType = string;

/** A more specific scope used to identify the alerts to suppress. */
export declare interface ScopeElement {
    /** Describes unknown properties. The value of an unknown property can be of "any" type. */
    [property: string]: any;
    /** The alert entity type to suppress by. */
    field?: string;
}

/** Information about the security control. */
export declare type SecureScoreControlDefinitionItem = Resource & {
    /**
     * User friendly display name of the control
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
    /**
     * User friendly description of the control
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * Maximum control score (0..10)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly maxScore?: number;
    /**
     * Source object from which the control was created
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly source?: SecureScoreControlDefinitionSource;
    /**
     * Array of assessments metadata IDs that are included in this security control
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly assessmentDefinitions?: AzureResourceLink[];
};

/** List of security controls definition */
export declare interface SecureScoreControlDefinitionList {
    /**
     * Collection of security controls definition in this page
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: SecureScoreControlDefinitionItem[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a SecureScoreControlDefinitions. */
export declare interface SecureScoreControlDefinitions {
    /**
     * List the available security controls, their assessments, and the max score
     * @param options The options parameters.
     */
    list(options?: SecureScoreControlDefinitionsListOptionalParams): PagedAsyncIterableIterator<SecureScoreControlDefinitionItem>;
    /**
     * For a specified subscription, list the available security controls, their assessments, and the max
     * score
     * @param options The options parameters.
     */
    listBySubscription(options?: SecureScoreControlDefinitionsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<SecureScoreControlDefinitionItem>;
}

/** Optional parameters. */
export declare interface SecureScoreControlDefinitionsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type SecureScoreControlDefinitionsListBySubscriptionNextResponse = SecureScoreControlDefinitionList;

/** Optional parameters. */
export declare interface SecureScoreControlDefinitionsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type SecureScoreControlDefinitionsListBySubscriptionResponse = SecureScoreControlDefinitionList;

/** Optional parameters. */
export declare interface SecureScoreControlDefinitionsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type SecureScoreControlDefinitionsListNextResponse = SecureScoreControlDefinitionList;

/** Optional parameters. */
export declare interface SecureScoreControlDefinitionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SecureScoreControlDefinitionsListResponse = SecureScoreControlDefinitionList;

/** The type of the security control (For example, BuiltIn) */
export declare interface SecureScoreControlDefinitionSource {
    /** The type of security control (for example, BuiltIn) */
    sourceType?: ControlType;
}

/** Details of the security control, its score, and the health status of the relevant resources. */
export declare type SecureScoreControlDetails = Resource & {
    /**
     * User friendly display name of the control
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
    /**
     * Number of healthy resources in the control
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly healthyResourceCount?: number;
    /**
     * Number of unhealthy resources in the control
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unhealthyResourceCount?: number;
    /**
     * Number of not applicable resources in the control
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly notApplicableResourceCount?: number;
    /**
     * The relative weight for this specific control in each of your subscriptions. Used when calculating an aggregated score for this control across all of your subscriptions.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly weight?: number;
    /** Information about the security control. */
    definition?: SecureScoreControlDefinitionItem;
    /**
     * Maximum score available
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly max?: number;
    /**
     * Current score
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly current?: number;
    /**
     * Ratio of the current score divided by the maximum. Rounded to 4 digits after the decimal point
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly percentage?: number;
};

/** List of security controls */
export declare interface SecureScoreControlList {
    /**
     * Collection of security controls in this page
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: SecureScoreControlDetails[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a SecureScoreControls. */
export declare interface SecureScoreControls {
    /**
     * Get all security controls for a specific initiative within a scope
     * @param secureScoreName The initiative name. For the ASC Default initiative, use 'ascScore' as in the
     *                        sample request below.
     * @param options The options parameters.
     */
    listBySecureScore(secureScoreName: string, options?: SecureScoreControlsListBySecureScoreOptionalParams): PagedAsyncIterableIterator<SecureScoreControlDetails>;
    /**
     * Get all security controls within a scope
     * @param options The options parameters.
     */
    list(options?: SecureScoreControlsListOptionalParams): PagedAsyncIterableIterator<SecureScoreControlDetails>;
}

/** Calculation result data */
export declare interface SecureScoreControlScore {
    /**
     * Maximum control score (0..10)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly max?: number;
    /**
     * Actual score for the control = (achieved points / total points) * max score. if total points is zeroed, the return number is 0.00
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly current?: number;
    /**
     * Ratio of the current score divided by the maximum. Rounded to 4 digits after the decimal point
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly percentage?: number;
}

/** Optional parameters. */
export declare interface SecureScoreControlsListBySecureScoreNextOptionalParams extends coreClient.OperationOptions {
    /** OData expand. Optional. */
    expand?: ExpandControlsEnum;
}

/** Contains response data for the listBySecureScoreNext operation. */
export declare type SecureScoreControlsListBySecureScoreNextResponse = SecureScoreControlList;

/** Optional parameters. */
export declare interface SecureScoreControlsListBySecureScoreOptionalParams extends coreClient.OperationOptions {
    /** OData expand. Optional. */
    expand?: ExpandControlsEnum;
}

/** Contains response data for the listBySecureScore operation. */
export declare type SecureScoreControlsListBySecureScoreResponse = SecureScoreControlList;

/** Optional parameters. */
export declare interface SecureScoreControlsListNextOptionalParams extends coreClient.OperationOptions {
    /** OData expand. Optional. */
    expand?: ExpandControlsEnum;
}

/** Contains response data for the listNext operation. */
export declare type SecureScoreControlsListNextResponse = SecureScoreControlList;

/** Optional parameters. */
export declare interface SecureScoreControlsListOptionalParams extends coreClient.OperationOptions {
    /** OData expand. Optional. */
    expand?: ExpandControlsEnum;
}

/** Contains response data for the list operation. */
export declare type SecureScoreControlsListResponse = SecureScoreControlList;

/** Secure score item data model */
export declare type SecureScoreItem = Resource & {
    /**
     * The initiative’s name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
    /**
     * The relative weight for each subscription. Used when calculating an aggregated secure score for multiple subscriptions.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly weight?: number;
    /**
     * Maximum score available
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly max?: number;
    /**
     * Current score
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly current?: number;
    /**
     * Ratio of the current score divided by the maximum. Rounded to 4 digits after the decimal point
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly percentage?: number;
};

/** Interface representing a SecureScores. */
export declare interface SecureScores {
    /**
     * List secure scores for all your Security Center initiatives within your current scope.
     * @param options The options parameters.
     */
    list(options?: SecureScoresListOptionalParams): PagedAsyncIterableIterator<SecureScoreItem>;
    /**
     * Get secure score for a specific Security Center initiative within your current scope. For the ASC
     * Default initiative, use 'ascScore'.
     * @param secureScoreName The initiative name. For the ASC Default initiative, use 'ascScore' as in the
     *                        sample request below.
     * @param options The options parameters.
     */
    get(secureScoreName: string, options?: SecureScoresGetOptionalParams): Promise<SecureScoresGetResponse>;
}

/** Optional parameters. */
export declare interface SecureScoresGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SecureScoresGetResponse = SecureScoreItem;

/** List of secure scores */
export declare interface SecureScoresList {
    /**
     * Collection of secure scores in this page
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: SecureScoreItem[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface SecureScoresListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type SecureScoresListNextResponse = SecureScoresList;

/** Optional parameters. */
export declare interface SecureScoresListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SecureScoresListResponse = SecureScoresList;

/** Security assessment on a resource */
export declare type SecurityAssessment = Resource & {
    /** Details of the resource that was assessed */
    resourceDetails?: ResourceDetailsUnion;
    /**
     * User friendly display name of the assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
    /** Additional data regarding the assessment */
    additionalData?: {
        [propertyName: string]: string;
    };
    /**
     * Links relevant to the assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly links?: AssessmentLinks;
    /** Describes properties of an assessment metadata. */
    metadata?: SecurityAssessmentMetadataProperties;
    /** Data regarding 3rd party partner integration */
    partnersData?: SecurityAssessmentPartnerData;
    /** The result of the assessment */
    status?: AssessmentStatus;
};

/** Page of a security assessments list */
export declare interface SecurityAssessmentList {
    /**
     * Collection of security assessments in this page
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: SecurityAssessmentResponse[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Security assessment metadata */
export declare type SecurityAssessmentMetadata = Resource & {
    /** User friendly display name of the assessment */
    displayName?: string;
    /**
     * Azure resource ID of the policy definition that turns this assessment calculation on
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly policyDefinitionId?: string;
    /** Human readable description of the assessment */
    description?: string;
    /** Human readable description of what you should do to mitigate this security issue */
    remediationDescription?: string;
    categories?: Categories[];
    /** The severity level of the assessment */
    severity?: Severity;
    /** The user impact of the assessment */
    userImpact?: UserImpact;
    /** The implementation effort required to remediate this assessment */
    implementationEffort?: ImplementationEffort;
    threats?: Threats[];
    /** True if this assessment is in preview release status */
    preview?: boolean;
    /** BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition */
    assessmentType?: AssessmentType;
    /** Describes the partner that created the assessment */
    partnerData?: SecurityAssessmentMetadataPartnerData;
};

/** Describes the partner that created the assessment */
export declare interface SecurityAssessmentMetadataPartnerData {
    /** Name of the company of the partner */
    partnerName: string;
    /** Name of the product of the partner that created the assessment */
    productName?: string;
    /** Secret to authenticate the partner and verify it created the assessment - write only */
    secret: string;
}

/** Describes properties of an assessment metadata. */
export declare interface SecurityAssessmentMetadataProperties {
    /** User friendly display name of the assessment */
    displayName: string;
    /**
     * Azure resource ID of the policy definition that turns this assessment calculation on
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly policyDefinitionId?: string;
    /** Human readable description of the assessment */
    description?: string;
    /** Human readable description of what you should do to mitigate this security issue */
    remediationDescription?: string;
    categories?: Categories[];
    /** The severity level of the assessment */
    severity: Severity;
    /** The user impact of the assessment */
    userImpact?: UserImpact;
    /** The implementation effort required to remediate this assessment */
    implementationEffort?: ImplementationEffort;
    threats?: Threats[];
    /** True if this assessment is in preview release status */
    preview?: boolean;
    /** BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition */
    assessmentType: AssessmentType;
    /** Describes the partner that created the assessment */
    partnerData?: SecurityAssessmentMetadataPartnerData;
}

/** Describes properties of an assessment metadata response. */
export declare type SecurityAssessmentMetadataPropertiesResponse = SecurityAssessmentMetadataProperties & {
    publishDates?: SecurityAssessmentMetadataPropertiesResponsePublishDates;
    plannedDeprecationDate?: string;
    tactics?: Tactics[];
    techniques?: Techniques[];
};

export declare interface SecurityAssessmentMetadataPropertiesResponsePublishDates {
    ga?: string;
    public: string;
}

/** Security assessment metadata response */
export declare type SecurityAssessmentMetadataResponse = Resource & {
    /** User friendly display name of the assessment */
    displayName?: string;
    /**
     * Azure resource ID of the policy definition that turns this assessment calculation on
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly policyDefinitionId?: string;
    /** Human readable description of the assessment */
    description?: string;
    /** Human readable description of what you should do to mitigate this security issue */
    remediationDescription?: string;
    categories?: Categories[];
    /** The severity level of the assessment */
    severity?: Severity;
    /** The user impact of the assessment */
    userImpact?: UserImpact;
    /** The implementation effort required to remediate this assessment */
    implementationEffort?: ImplementationEffort;
    threats?: Threats[];
    /** True if this assessment is in preview release status */
    preview?: boolean;
    /** BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition */
    assessmentType?: AssessmentType;
    /** Describes the partner that created the assessment */
    partnerData?: SecurityAssessmentMetadataPartnerData;
    publishDates?: SecurityAssessmentMetadataPropertiesResponsePublishDates;
    plannedDeprecationDate?: string;
    tactics?: Tactics[];
    techniques?: Techniques[];
};

/** List of security assessment metadata */
export declare interface SecurityAssessmentMetadataResponseList {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly value?: SecurityAssessmentMetadataResponse[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Data regarding 3rd party partner integration */
export declare interface SecurityAssessmentPartnerData {
    /** Name of the company of the partner */
    partnerName: string;
    /** secret to authenticate the partner - write only */
    secret: string;
}

/** Describes properties of an assessment. */
export declare type SecurityAssessmentProperties = SecurityAssessmentPropertiesBase & {
    /** The result of the assessment */
    status: AssessmentStatus;
};

/** Describes properties of an assessment. */
export declare interface SecurityAssessmentPropertiesBase {
    /** Details of the resource that was assessed */
    resourceDetails: ResourceDetailsUnion;
    /**
     * User friendly display name of the assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
    /** Additional data regarding the assessment */
    additionalData?: {
        [propertyName: string]: string;
    };
    /**
     * Links relevant to the assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly links?: AssessmentLinks;
    /** Describes properties of an assessment metadata. */
    metadata?: SecurityAssessmentMetadataProperties;
    /** Data regarding 3rd party partner integration */
    partnersData?: SecurityAssessmentPartnerData;
}

/** Describes properties of an assessment. */
export declare type SecurityAssessmentPropertiesResponse = SecurityAssessmentPropertiesBase & {
    /** The result of the assessment */
    status: AssessmentStatusResponse;
};

/** Security assessment on a resource - response format */
export declare type SecurityAssessmentResponse = Resource & {
    /** Details of the resource that was assessed */
    resourceDetails?: ResourceDetailsUnion;
    /**
     * User friendly display name of the assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
    /** Additional data regarding the assessment */
    additionalData?: {
        [propertyName: string]: string;
    };
    /**
     * Links relevant to the assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly links?: AssessmentLinks;
    /** Describes properties of an assessment metadata. */
    metadata?: SecurityAssessmentMetadataProperties;
    /** Data regarding 3rd party partner integration */
    partnersData?: SecurityAssessmentPartnerData;
    /** The result of the assessment */
    status?: AssessmentStatusResponse;
};

export declare class SecurityCenter extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the SecurityCenter class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Azure subscription ID
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: SecurityCenterOptionalParams);
    mdeOnboardings: MdeOnboardings;
    customAssessmentAutomations: CustomAssessmentAutomations;
    customEntityStoreAssignments: CustomEntityStoreAssignments;
    complianceResults: ComplianceResults;
    pricings: Pricings;
    advancedThreatProtection: AdvancedThreatProtection;
    deviceSecurityGroups: DeviceSecurityGroups;
    iotSecuritySolution: IotSecuritySolution;
    iotSecuritySolutionAnalytics: IotSecuritySolutionAnalytics;
    iotSecuritySolutionsAnalyticsAggregatedAlert: IotSecuritySolutionsAnalyticsAggregatedAlert;
    iotSecuritySolutionsAnalyticsRecommendation: IotSecuritySolutionsAnalyticsRecommendation;
    locations: Locations;
    operations: Operations;
    tasks: Tasks;
    autoProvisioningSettings: AutoProvisioningSettings;
    compliances: Compliances;
    informationProtectionPolicies: InformationProtectionPolicies;
    securityContacts: SecurityContacts;
    workspaceSettings: WorkspaceSettings;
    regulatoryComplianceStandards: RegulatoryComplianceStandards;
    regulatoryComplianceControls: RegulatoryComplianceControls;
    regulatoryComplianceAssessments: RegulatoryComplianceAssessments;
    subAssessments: SubAssessments;
    automations: Automations;
    alertsSuppressionRules: AlertsSuppressionRules;
    serverVulnerabilityAssessmentOperations: ServerVulnerabilityAssessmentOperations;
    assessmentsMetadata: AssessmentsMetadata;
    assessments: Assessments;
    adaptiveApplicationControls: AdaptiveApplicationControls;
    adaptiveNetworkHardenings: AdaptiveNetworkHardenings;
    allowedConnections: AllowedConnections;
    topology: Topology;
    jitNetworkAccessPolicies: JitNetworkAccessPolicies;
    discoveredSecuritySolutions: DiscoveredSecuritySolutions;
    securitySolutionsReferenceDataOperations: SecuritySolutionsReferenceDataOperations;
    externalSecuritySolutions: ExternalSecuritySolutions;
    secureScores: SecureScores;
    secureScoreControls: SecureScoreControls;
    secureScoreControlDefinitions: SecureScoreControlDefinitions;
    securitySolutions: SecuritySolutions;
    connectors: Connectors;
    sqlVulnerabilityAssessmentScans: SqlVulnerabilityAssessmentScans;
    sqlVulnerabilityAssessmentScanResults: SqlVulnerabilityAssessmentScanResults;
    sqlVulnerabilityAssessmentBaselineRules: SqlVulnerabilityAssessmentBaselineRules;
    alerts: Alerts;
    settings: Settings;
    ingestionSettings: IngestionSettings;
    softwareInventories: SoftwareInventories;
    securityConnectors: SecurityConnectors;
}

/** Optional parameters. */
export declare interface SecurityCenterOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** The security connector resource. */
export declare type SecurityConnector = TrackedResource & {
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The multi cloud resource identifier (account id in case of AWS connector). */
    hierarchyIdentifier?: string;
    /** The multi cloud resource's cloud name. */
    cloudName?: CloudName;
    /** A collection of offerings for the security connector. */
    offerings?: CloudOfferingUnion[];
    /** The multi cloud account's organizational data */
    organizationalData?: SecurityConnectorPropertiesOrganizationalData;
};

/** The multi cloud account's organizational data */
export declare interface SecurityConnectorPropertiesOrganizationalData {
    /** The multi cloud account's membership type in the organization */
    organizationMembershipType?: OrganizationMembershipType;
    /** If the multi cloud account is not of membership type organization, this will be the ID of the account's parent */
    parentHierarchyId?: string;
    /** If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset */
    stacksetName?: string;
    /** If the multi cloud account is of membership type organization, list of accounts excluded from offering */
    excludedAccountIds?: string[];
}

/** Interface representing a SecurityConnectors. */
export declare interface SecurityConnectors {
    /**
     * Lists all the security connectors in the specified subscription. Use the 'nextLink' property in the
     * response to get the next page of security connectors for the specified subscription.
     * @param options The options parameters.
     */
    list(options?: SecurityConnectorsListOptionalParams): PagedAsyncIterableIterator<SecurityConnector>;
    /**
     * Lists all the security connectors in the specified resource group. Use the 'nextLink' property in
     * the response to get the next page of security connectors for the specified resource group.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: SecurityConnectorsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<SecurityConnector>;
    /**
     * Retrieves details of a specific security connector
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param securityConnectorName The security connector name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, securityConnectorName: string, options?: SecurityConnectorsGetOptionalParams): Promise<SecurityConnectorsGetResponse>;
    /**
     * Creates or updates a security connector. If a security connector is already created and a subsequent
     * request is issued for the same security connector id, then it will be updated.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param securityConnectorName The security connector name.
     * @param securityConnector The security connector resource
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, securityConnectorName: string, securityConnector: SecurityConnector, options?: SecurityConnectorsCreateOrUpdateOptionalParams): Promise<SecurityConnectorsCreateOrUpdateResponse>;
    /**
     * Updates a security connector
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param securityConnectorName The security connector name.
     * @param securityConnector The security connector resource
     * @param options The options parameters.
     */
    update(resourceGroupName: string, securityConnectorName: string, securityConnector: SecurityConnector, options?: SecurityConnectorsUpdateOptionalParams): Promise<SecurityConnectorsUpdateResponse>;
    /**
     * Deletes a security connector.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param securityConnectorName The security connector name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, securityConnectorName: string, options?: SecurityConnectorsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface SecurityConnectorsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type SecurityConnectorsCreateOrUpdateResponse = SecurityConnector;

/** Optional parameters. */
export declare interface SecurityConnectorsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface SecurityConnectorsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SecurityConnectorsGetResponse = SecurityConnector;

/** List of security connectors response. */
export declare interface SecurityConnectorsList {
    /** The list of security connectors under the given scope. */
    value: SecurityConnector[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface SecurityConnectorsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type SecurityConnectorsListByResourceGroupNextResponse = SecurityConnectorsList;

/** Optional parameters. */
export declare interface SecurityConnectorsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type SecurityConnectorsListByResourceGroupResponse = SecurityConnectorsList;

/** Optional parameters. */
export declare interface SecurityConnectorsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type SecurityConnectorsListNextResponse = SecurityConnectorsList;

/** Optional parameters. */
export declare interface SecurityConnectorsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SecurityConnectorsListResponse = SecurityConnectorsList;

/** Optional parameters. */
export declare interface SecurityConnectorsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type SecurityConnectorsUpdateResponse = SecurityConnector;

/** Contact details for security issues */
export declare type SecurityContact = Resource & {
    /** The email of this security contact */
    email?: string;
    /** The phone number of this security contact */
    phone?: string;
    /** Whether to send security alerts notifications to the security contact */
    alertNotifications?: AlertNotifications;
    /** Whether to send security alerts notifications to subscription admins */
    alertsToAdmins?: AlertsToAdmins;
};

/** List of security contacts response */
export declare interface SecurityContactList {
    /**
     * List of security contacts
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: SecurityContact[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a SecurityContacts. */
export declare interface SecurityContacts {
    /**
     * Security contact configurations for the subscription
     * @param options The options parameters.
     */
    list(options?: SecurityContactsListOptionalParams): PagedAsyncIterableIterator<SecurityContact>;
    /**
     * Security contact configurations for the subscription
     * @param securityContactName Name of the security contact object
     * @param options The options parameters.
     */
    get(securityContactName: string, options?: SecurityContactsGetOptionalParams): Promise<SecurityContactsGetResponse>;
    /**
     * Security contact configurations for the subscription
     * @param securityContactName Name of the security contact object
     * @param securityContact Security contact object
     * @param options The options parameters.
     */
    create(securityContactName: string, securityContact: SecurityContact, options?: SecurityContactsCreateOptionalParams): Promise<SecurityContactsCreateResponse>;
    /**
     * Security contact configurations for the subscription
     * @param securityContactName Name of the security contact object
     * @param options The options parameters.
     */
    delete(securityContactName: string, options?: SecurityContactsDeleteOptionalParams): Promise<void>;
    /**
     * Security contact configurations for the subscription
     * @param securityContactName Name of the security contact object
     * @param securityContact Security contact object
     * @param options The options parameters.
     */
    update(securityContactName: string, securityContact: SecurityContact, options?: SecurityContactsUpdateOptionalParams): Promise<SecurityContactsUpdateResponse>;
}

/** Optional parameters. */
export declare interface SecurityContactsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type SecurityContactsCreateResponse = SecurityContact;

/** Optional parameters. */
export declare interface SecurityContactsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface SecurityContactsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SecurityContactsGetResponse = SecurityContact;

/** Optional parameters. */
export declare interface SecurityContactsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type SecurityContactsListNextResponse = SecurityContactList;

/** Optional parameters. */
export declare interface SecurityContactsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SecurityContactsListResponse = SecurityContactList;

/** Optional parameters. */
export declare interface SecurityContactsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type SecurityContactsUpdateResponse = SecurityContact;

/**
 * Defines values for SecurityFamily. \
 * {@link KnownSecurityFamily} can be used interchangeably with SecurityFamily,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Waf** \
 * **Ngfw** \
 * **SaasWaf** \
 * **Va**
 */
export declare type SecurityFamily = string;

export declare type SecuritySolution = Resource & Location_2 & {
    /** The security family of the security solution */
    securityFamily?: SecurityFamily;
    /** The security family provisioning State */
    provisioningState?: ProvisioningState;
    /** The security solutions' template */
    template?: string;
    /** The security solutions' status */
    protectionStatus?: string;
};

export declare interface SecuritySolutionList {
    value?: SecuritySolution[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a SecuritySolutions. */
export declare interface SecuritySolutions {
    /**
     * Gets a list of Security Solutions for the subscription.
     * @param options The options parameters.
     */
    list(options?: SecuritySolutionsListOptionalParams): PagedAsyncIterableIterator<SecuritySolution>;
    /**
     * Gets a specific Security Solution.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param securitySolutionName Name of security solution.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ascLocation: string, securitySolutionName: string, options?: SecuritySolutionsGetOptionalParams): Promise<SecuritySolutionsGetResponse>;
}

/** Optional parameters. */
export declare interface SecuritySolutionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SecuritySolutionsGetResponse = SecuritySolution;

/** Optional parameters. */
export declare interface SecuritySolutionsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type SecuritySolutionsListNextResponse = SecuritySolutionList;

/** Optional parameters. */
export declare interface SecuritySolutionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SecuritySolutionsListResponse = SecuritySolutionList;

export declare type SecuritySolutionsReferenceData = Resource & Location_2 & {
    /** The security family of the security solution */
    securityFamily: SecurityFamily;
    /** The security solutions' vendor name */
    alertVendorName: string;
    /** The security solutions' package info url */
    packageInfoUrl: string;
    /** The security solutions' product name */
    productName: string;
    /** The security solutions' publisher */
    publisher: string;
    /** The security solutions' publisher display name */
    publisherDisplayName: string;
    /** The security solutions' template */
    template: string;
};

export declare interface SecuritySolutionsReferenceDataList {
    value?: SecuritySolutionsReferenceData[];
}

/** Optional parameters. */
export declare interface SecuritySolutionsReferenceDataListByHomeRegionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByHomeRegion operation. */
export declare type SecuritySolutionsReferenceDataListByHomeRegionResponse = SecuritySolutionsReferenceDataList;

/** Optional parameters. */
export declare interface SecuritySolutionsReferenceDataListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SecuritySolutionsReferenceDataListResponse = SecuritySolutionsReferenceDataList;

/** Interface representing a SecuritySolutionsReferenceDataOperations. */
export declare interface SecuritySolutionsReferenceDataOperations {
    /**
     * Gets a list of all supported Security Solutions for the subscription.
     * @param options The options parameters.
     */
    list(options?: SecuritySolutionsReferenceDataListOptionalParams): Promise<SecuritySolutionsReferenceDataListResponse>;
    /**
     * Gets list of all supported Security Solutions for subscription and location.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByHomeRegion(ascLocation: string, options?: SecuritySolutionsReferenceDataListByHomeRegionOptionalParams): Promise<SecuritySolutionsReferenceDataListByHomeRegionResponse>;
}

/**
 * Defines values for SecuritySolutionStatus. \
 * {@link KnownSecuritySolutionStatus} can be used interchangeably with SecuritySolutionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type SecuritySolutionStatus = string;

/** Security sub-assessment on a resource */
export declare type SecuritySubAssessment = Resource & {
    /**
     * Vulnerability ID
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly idPropertiesId?: string;
    /**
     * User friendly display name of the sub-assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
    /** Status of the sub-assessment */
    status?: SubAssessmentStatus;
    /**
     * Information on how to remediate this sub-assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly remediation?: string;
    /**
     * Description of the impact of this sub-assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly impact?: string;
    /**
     * Category of the sub-assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly category?: string;
    /**
     * Human readable description of the assessment status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * The date and time the sub-assessment was generated
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly timeGenerated?: Date;
    /** Details of the resource that was assessed */
    resourceDetails?: ResourceDetailsUnion;
    /** Details of the sub-assessment */
    additionalData?: AdditionalDataUnion;
};

/** List of security sub-assessments */
export declare interface SecuritySubAssessmentList {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly value?: SecuritySubAssessment[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Security task that we recommend to do in order to strengthen security */
export declare type SecurityTask = Resource & {
    /**
     * State of the task (Active, Resolved etc.)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly state?: string;
    /**
     * The time this task was discovered in UTC
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly creationTimeUtc?: Date;
    /** Changing set of properties, depending on the task type that is derived from the name field */
    securityTaskParameters?: SecurityTaskParameters;
    /**
     * The time this task's details were last changed in UTC
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastStateChangeTimeUtc?: Date;
    /**
     * Additional data on the state of the task
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly subState?: string;
};

/** List of security task recommendations */
export declare interface SecurityTaskList {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly value?: SecurityTask[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Changing set of properties, depending on the task type that is derived from the name field */
export declare interface SecurityTaskParameters {
    /** Describes unknown properties. The value of an unknown property can be of "any" type. */
    [property: string]: any;
    /**
     * Name of the task type
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
}

/** The sensitivity label. */
export declare interface SensitivityLabel {
    /** The name of the sensitivity label. */
    displayName?: string;
    /** The description of the sensitivity label. */
    description?: string;
    /** The rank of the sensitivity label. */
    rank?: Rank;
    /** The order of the sensitivity label. */
    order?: number;
    /** Indicates whether the label is enabled or not. */
    enabled?: boolean;
}

/** Describes the server vulnerability assessment details on a resource */
export declare type ServerVulnerabilityAssessment = Resource & {
    /**
     * The provisioningState of the vulnerability assessment capability on the VM
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ServerVulnerabilityAssessmentPropertiesProvisioningState;
};

/** Optional parameters. */
export declare interface ServerVulnerabilityAssessmentCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type ServerVulnerabilityAssessmentCreateOrUpdateResponse = ServerVulnerabilityAssessment;

/** Optional parameters. */
export declare interface ServerVulnerabilityAssessmentDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ServerVulnerabilityAssessmentGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ServerVulnerabilityAssessmentGetResponse = ServerVulnerabilityAssessment;

/** Optional parameters. */
export declare interface ServerVulnerabilityAssessmentListByExtendedResourceOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByExtendedResource operation. */
export declare type ServerVulnerabilityAssessmentListByExtendedResourceResponse = ServerVulnerabilityAssessmentsList;

/** Interface representing a ServerVulnerabilityAssessmentOperations. */
export declare interface ServerVulnerabilityAssessmentOperations {
    /**
     * Gets a list of server vulnerability assessment onboarding statuses on a given resource.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param options The options parameters.
     */
    listByExtendedResource(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, options?: ServerVulnerabilityAssessmentListByExtendedResourceOptionalParams): Promise<ServerVulnerabilityAssessmentListByExtendedResourceResponse>;
    /**
     * Gets a server vulnerability assessment onboarding statuses on a given resource.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, options?: ServerVulnerabilityAssessmentGetOptionalParams): Promise<ServerVulnerabilityAssessmentGetResponse>;
    /**
     * Creating a server vulnerability assessment on a resource, which will onboard a resource for having a
     * vulnerability assessment on it
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, options?: ServerVulnerabilityAssessmentCreateOrUpdateOptionalParams): Promise<ServerVulnerabilityAssessmentCreateOrUpdateResponse>;
    /**
     * Removing server vulnerability assessment from a resource.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, options?: ServerVulnerabilityAssessmentDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Removing server vulnerability assessment from a resource.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The Namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, options?: ServerVulnerabilityAssessmentDeleteOptionalParams): Promise<void>;
}

/**
 * Defines values for ServerVulnerabilityAssessmentPropertiesProvisioningState. \
 * {@link KnownServerVulnerabilityAssessmentPropertiesProvisioningState} can be used interchangeably with ServerVulnerabilityAssessmentPropertiesProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Provisioning** \
 * **Deprovisioning**
 */
export declare type ServerVulnerabilityAssessmentPropertiesProvisioningState = string;

/** List of server vulnerability assessments */
export declare interface ServerVulnerabilityAssessmentsList {
    value?: ServerVulnerabilityAssessment[];
}

/** Additional context fields for server vulnerability assessment */
export declare type ServerVulnerabilityProperties = AdditionalData & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    assessedResourceType: "ServerVulnerabilityAssessment";
    /**
     * Vulnerability Type. e.g: Vulnerability, Potential Vulnerability, Information Gathered
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Dictionary from cvss version to cvss details object
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly cvss?: {
        [propertyName: string]: Cvss;
    };
    /**
     * Indicates whether a patch is available or not
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly patchable?: boolean;
    /**
     * List of CVEs
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly cve?: Cve[];
    /**
     * Threat name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly threat?: string;
    /**
     * Published time
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly publishedTime?: Date;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly vendorReferences?: VendorReference[];
};

/** Details of the service principal. */
export declare interface ServicePrincipalProperties {
    /** Application ID of service principal. */
    applicationId?: string;
    /** A secret string that the application uses to prove its identity, also can be referred to as application password (write only). */
    secret?: string;
}

/** The kind of the security setting */
export declare type Setting = Resource & {
    /** the kind of the settings string */
    kind: SettingKind;
};

/**
 * Defines values for SettingKind. \
 * {@link KnownSettingKind} can be used interchangeably with SettingKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DataExportSettings** \
 * **AlertSuppressionSetting** \
 * **AlertSyncSettings**
 */
export declare type SettingKind = string;

/**
 * Defines values for SettingName. \
 * {@link KnownSettingName} can be used interchangeably with SettingName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MCAS** \
 * **WDATP** \
 * **WDATP_EXCLUDE_LINUX_PUBLIC_PREVIEW** \
 * **Sentinel**
 */
export declare type SettingName = string;

/** Interface representing a Settings. */
export declare interface Settings {
    /**
     * Settings about different configurations in security center
     * @param options The options parameters.
     */
    list(options?: SettingsListOptionalParams): PagedAsyncIterableIterator<SettingUnion>;
    /**
     * Settings of different configurations in security center
     * @param settingName The name of the setting
     * @param options The options parameters.
     */
    get(settingName: SettingName, options?: SettingsGetOptionalParams): Promise<SettingsGetResponse>;
    /**
     * updating settings about different configurations in security center
     * @param settingName The name of the setting
     * @param setting Setting object
     * @param options The options parameters.
     */
    update(settingName: SettingName, setting: SettingUnion, options?: SettingsUpdateOptionalParams): Promise<SettingsUpdateResponse>;
}

/** Optional parameters. */
export declare interface SettingsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SettingsGetResponse = SettingUnion;

/** Subscription settings list. */
export declare interface SettingsList {
    /** The settings list. */
    value?: SettingUnion[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface SettingsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type SettingsListNextResponse = SettingsList;

/** Optional parameters. */
export declare interface SettingsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SettingsListResponse = SettingsList;

/** Optional parameters. */
export declare interface SettingsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type SettingsUpdateResponse = SettingUnion;

export declare type SettingUnion = Setting | DataExportSettings | AlertSyncSettings;

/**
 * Defines values for Severity. \
 * {@link KnownSeverity} can be used interchangeably with Severity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Low** \
 * **Medium** \
 * **High**
 */
export declare type Severity = string;

/**
 * Defines values for SeverityEnum. \
 * {@link KnownSeverityEnum} can be used interchangeably with SeverityEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **High** \
 * **Medium** \
 * **Low**
 */
export declare type SeverityEnum = string;

/** Represents a software data */
export declare type Software = Resource & {
    /** Unique identifier for the virtual machine in the service. */
    deviceId?: string;
    /** Platform of the operating system running on the device. */
    osPlatform?: string;
    /** Name of the software vendor. */
    vendor?: string;
    /** Name of the software product. */
    softwareName?: string;
    /** Version number of the software product. */
    version?: string;
    /** End of support status. */
    endOfSupportStatus?: EndOfSupportStatus;
    /** The end of support date in case the product is upcoming end of support. */
    endOfSupportDate?: string;
    /** Number of weaknesses. */
    numberOfKnownVulnerabilities?: number;
    /** First time that the software was seen in the device. */
    firstSeenAt?: string;
};

/** Interface representing a SoftwareInventories. */
export declare interface SoftwareInventories {
    /**
     * Gets the software inventory of the virtual machine.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param options The options parameters.
     */
    listByExtendedResource(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, options?: SoftwareInventoriesListByExtendedResourceOptionalParams): PagedAsyncIterableIterator<Software>;
    /**
     * Gets the software inventory of all virtual machines in the subscriptions.
     * @param options The options parameters.
     */
    listBySubscription(options?: SoftwareInventoriesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Software>;
    /**
     * Gets a single software data of the virtual machine.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param resourceNamespace The namespace of the resource.
     * @param resourceType The type of the resource.
     * @param resourceName Name of the resource.
     * @param softwareName Name of the installed software.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceNamespace: string, resourceType: string, resourceName: string, softwareName: string, options?: SoftwareInventoriesGetOptionalParams): Promise<SoftwareInventoriesGetResponse>;
}

/** Optional parameters. */
export declare interface SoftwareInventoriesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SoftwareInventoriesGetResponse = Software;

/** Optional parameters. */
export declare interface SoftwareInventoriesListByExtendedResourceNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByExtendedResourceNext operation. */
export declare type SoftwareInventoriesListByExtendedResourceNextResponse = SoftwaresList;

/** Optional parameters. */
export declare interface SoftwareInventoriesListByExtendedResourceOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByExtendedResource operation. */
export declare type SoftwareInventoriesListByExtendedResourceResponse = SoftwaresList;

/** Optional parameters. */
export declare interface SoftwareInventoriesListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type SoftwareInventoriesListBySubscriptionNextResponse = SoftwaresList;

/** Optional parameters. */
export declare interface SoftwareInventoriesListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type SoftwareInventoriesListBySubscriptionResponse = SoftwaresList;

/** Represents the software inventory of the virtual machine. */
export declare interface SoftwaresList {
    value?: Software[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for Source. \
 * {@link KnownSource} can be used interchangeably with Source,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Azure**: Resource is in Azure \
 * **OnPremise**: Resource in an on premise machine connected to Azure cloud \
 * **OnPremiseSql**: SQL Resource in an on premise machine connected to Azure cloud
 */
export declare type Source = string;

/**
 * Defines values for SourceSystem. \
 * {@link KnownSourceSystem} can be used interchangeably with SourceSystem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Azure_AppLocker** \
 * **Azure_AuditD** \
 * **NonAzure_AppLocker** \
 * **NonAzure_AuditD** \
 * **None**
 */
export declare type SourceSystem = string;

/** Details of the resource that was assessed */
export declare type SqlServerVulnerabilityProperties = AdditionalData & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    assessedResourceType: "SqlServerVulnerability";
    /**
     * The resource type the sub assessment refers to in its resource details
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The T-SQL query that runs on your SQL database to perform the particular check
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly query?: string;
};

/** Interface representing a SqlVulnerabilityAssessmentBaselineRules. */
export declare interface SqlVulnerabilityAssessmentBaselineRules {
    /**
     * Creates a Baseline for a rule in a database. Will overwrite any previously existing results.
     * @param ruleId The rule Id.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    createOrUpdate(ruleId: string, workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentBaselineRulesCreateOrUpdateOptionalParams): Promise<SqlVulnerabilityAssessmentBaselineRulesCreateOrUpdateResponse>;
    /**
     * Gets the results for a given rule in the Baseline.
     * @param ruleId The rule Id.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    get(ruleId: string, workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentBaselineRulesGetOptionalParams): Promise<SqlVulnerabilityAssessmentBaselineRulesGetResponse>;
    /**
     * Deletes a rule from the Baseline of a given database.
     * @param ruleId The rule Id.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    delete(ruleId: string, workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentBaselineRulesDeleteOptionalParams): Promise<void>;
    /**
     * Gets the results for all rules in the Baseline.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    list(workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentBaselineRulesListOptionalParams): Promise<SqlVulnerabilityAssessmentBaselineRulesListResponse>;
    /**
     * Add a list of baseline rules. Will overwrite any previously existing results (for all rules).
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    add(workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentBaselineRulesAddOptionalParams): Promise<SqlVulnerabilityAssessmentBaselineRulesAddResponse>;
}

/** Optional parameters. */
export declare interface SqlVulnerabilityAssessmentBaselineRulesAddOptionalParams extends coreClient.OperationOptions {
    /** The baseline rules. */
    body?: RulesResultsInput;
}

/** Contains response data for the add operation. */
export declare type SqlVulnerabilityAssessmentBaselineRulesAddResponse = RulesResults;

/** Optional parameters. */
export declare interface SqlVulnerabilityAssessmentBaselineRulesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** The baseline results for this rule. */
    body?: RuleResultsInput;
}

/** Contains response data for the createOrUpdate operation. */
export declare type SqlVulnerabilityAssessmentBaselineRulesCreateOrUpdateResponse = RuleResults;

/** Optional parameters. */
export declare interface SqlVulnerabilityAssessmentBaselineRulesDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface SqlVulnerabilityAssessmentBaselineRulesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SqlVulnerabilityAssessmentBaselineRulesGetResponse = RuleResults;

/** Optional parameters. */
export declare interface SqlVulnerabilityAssessmentBaselineRulesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SqlVulnerabilityAssessmentBaselineRulesListResponse = RulesResults;

/** Interface representing a SqlVulnerabilityAssessmentScanResults. */
export declare interface SqlVulnerabilityAssessmentScanResults {
    /**
     * Gets the scan results of a single rule in a scan record.
     * @param scanId The scan Id. Type 'latest' to get the scan results for the latest scan.
     * @param scanResultId The rule Id of the results.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    get(scanId: string, scanResultId: string, workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentScanResultsGetOptionalParams): Promise<SqlVulnerabilityAssessmentScanResultsGetResponse>;
    /**
     * Gets a list of scan results for a single scan record.
     * @param scanId The scan Id. Type 'latest' to get the scan results for the latest scan.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    list(scanId: string, workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentScanResultsListOptionalParams): Promise<SqlVulnerabilityAssessmentScanResultsListResponse>;
}

/** Optional parameters. */
export declare interface SqlVulnerabilityAssessmentScanResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SqlVulnerabilityAssessmentScanResultsGetResponse = ScanResult;

/** Optional parameters. */
export declare interface SqlVulnerabilityAssessmentScanResultsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SqlVulnerabilityAssessmentScanResultsListResponse = ScanResults;

/** Interface representing a SqlVulnerabilityAssessmentScans. */
export declare interface SqlVulnerabilityAssessmentScans {
    /**
     * Gets the scan details of a single scan record.
     * @param scanId The scan Id. Type 'latest' to get the scan record for the latest scan.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    get(scanId: string, workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentScansGetOptionalParams): Promise<SqlVulnerabilityAssessmentScansGetResponse>;
    /**
     * Gets a list of scan records.
     * @param workspaceId The workspace Id.
     * @param resourceId The identifier of the resource.
     * @param options The options parameters.
     */
    list(workspaceId: string, resourceId: string, options?: SqlVulnerabilityAssessmentScansListOptionalParams): Promise<SqlVulnerabilityAssessmentScansListResponse>;
}

/** Optional parameters. */
export declare interface SqlVulnerabilityAssessmentScansGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SqlVulnerabilityAssessmentScansGetResponse = Scan;

/** Optional parameters. */
export declare interface SqlVulnerabilityAssessmentScansListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SqlVulnerabilityAssessmentScansListResponse = Scans;

/**
 * Defines values for State. \
 * {@link KnownState} can be used interchangeably with State,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Passed**: All supported regulatory compliance controls in the given standard have a passed state \
 * **Failed**: At least one supported regulatory compliance control in the given standard has a state of failed \
 * **Skipped**: All supported regulatory compliance controls in the given standard have a state of skipped \
 * **Unsupported**: No supported regulatory compliance data for the given standard
 */
export declare type State = string;

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Revoked** \
 * **Initiated**
 */
export declare type Status = string;

/**
 * Defines values for StatusReason. \
 * {@link KnownStatusReason} can be used interchangeably with StatusReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Expired** \
 * **UserRequested** \
 * **NewerRequestInitiated**
 */
export declare type StatusReason = string;

/** Interface representing a SubAssessments. */
export declare interface SubAssessments {
    /**
     * Get security sub-assessments on all your scanned resources inside a subscription scope
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param options The options parameters.
     */
    listAll(scope: string, options?: SubAssessmentsListAllOptionalParams): PagedAsyncIterableIterator<SecuritySubAssessment>;
    /**
     * Get security sub-assessments on all your scanned resources inside a scope
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param assessmentName The Assessment Key - Unique key for the assessment type
     * @param options The options parameters.
     */
    list(scope: string, assessmentName: string, options?: SubAssessmentsListOptionalParams): PagedAsyncIterableIterator<SecuritySubAssessment>;
    /**
     * Get a security sub-assessment on your scanned resource
     * @param scope Scope of the query, can be subscription
     *              (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
     *              (/providers/Microsoft.Management/managementGroups/mgName).
     * @param assessmentName The Assessment Key - Unique key for the assessment type
     * @param subAssessmentName The Sub-Assessment Key - Unique key for the sub-assessment type
     * @param options The options parameters.
     */
    get(scope: string, assessmentName: string, subAssessmentName: string, options?: SubAssessmentsGetOptionalParams): Promise<SubAssessmentsGetResponse>;
}

/** Optional parameters. */
export declare interface SubAssessmentsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SubAssessmentsGetResponse = SecuritySubAssessment;

/** Optional parameters. */
export declare interface SubAssessmentsListAllNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listAllNext operation. */
export declare type SubAssessmentsListAllNextResponse = SecuritySubAssessmentList;

/** Optional parameters. */
export declare interface SubAssessmentsListAllOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listAll operation. */
export declare type SubAssessmentsListAllResponse = SecuritySubAssessmentList;

/** Optional parameters. */
export declare interface SubAssessmentsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type SubAssessmentsListNextResponse = SecuritySubAssessmentList;

/** Optional parameters. */
export declare interface SubAssessmentsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SubAssessmentsListResponse = SecuritySubAssessmentList;

/** Status of the sub-assessment */
export declare interface SubAssessmentStatus {
    /**
     * Programmatic code for the status of the assessment
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: SubAssessmentStatusCode;
    /**
     * Programmatic code for the cause of the assessment status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly cause?: string;
    /**
     * Human readable description of the assessment status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * The sub-assessment severity level
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly severity?: Severity;
}

/**
 * Defines values for SubAssessmentStatusCode. \
 * {@link KnownSubAssessmentStatusCode} can be used interchangeably with SubAssessmentStatusCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Healthy**: The resource is healthy \
 * **Unhealthy**: The resource has a security issue that needs to be addressed \
 * **NotApplicable**: Assessment for this resource did not happen
 */
export declare type SubAssessmentStatusCode = string;

/**
 * Defines values for SupportedCloudEnum. \
 * {@link KnownSupportedCloudEnum} can be used interchangeably with SupportedCloudEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AWS** \
 * **GCP**
 */
export declare type SupportedCloudEnum = string;

export declare interface SuppressionAlertsScope {
    /** All the conditions inside need to be true in order to suppress the alert */
    allOf: ScopeElement[];
}

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/**
 * Defines values for Tactics. \
 * {@link KnownTactics} can be used interchangeably with Tactics,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Reconnaissance** \
 * **Resource Development** \
 * **Initial Access** \
 * **Execution** \
 * **Persistence** \
 * **Privilege Escalation** \
 * **Defense Evasion** \
 * **Credential Access** \
 * **Discovery** \
 * **Lateral Movement** \
 * **Collection** \
 * **Command and Control** \
 * **Exfiltration** \
 * **Impact**
 */
export declare type Tactics = string;

/** A list of key value pairs that describe the resource. */
export declare interface Tags {
    /** A list of key value pairs that describe the resource. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** A container holding only the Tags for a resource, allowing the user to update the tags. */
export declare interface TagsResource {
    /** Resource tags */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Interface representing a Tasks. */
export declare interface Tasks {
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param options The options parameters.
     */
    list(options?: TasksListOptionalParams): PagedAsyncIterableIterator<SecurityTask>;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByHomeRegion(ascLocation: string, options?: TasksListByHomeRegionOptionalParams): PagedAsyncIterableIterator<SecurityTask>;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, ascLocation: string, options?: TasksListByResourceGroupOptionalParams): PagedAsyncIterableIterator<SecurityTask>;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param taskName Name of the task object, will be a GUID
     * @param options The options parameters.
     */
    getSubscriptionLevelTask(ascLocation: string, taskName: string, options?: TasksGetSubscriptionLevelTaskOptionalParams): Promise<TasksGetSubscriptionLevelTaskResponse>;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param taskName Name of the task object, will be a GUID
     * @param taskUpdateActionType Type of the action to do on the task
     * @param options The options parameters.
     */
    updateSubscriptionLevelTaskState(ascLocation: string, taskName: string, taskUpdateActionType: TaskUpdateActionType, options?: TasksUpdateSubscriptionLevelTaskStateOptionalParams): Promise<void>;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param taskName Name of the task object, will be a GUID
     * @param options The options parameters.
     */
    getResourceGroupLevelTask(resourceGroupName: string, ascLocation: string, taskName: string, options?: TasksGetResourceGroupLevelTaskOptionalParams): Promise<TasksGetResourceGroupLevelTaskResponse>;
    /**
     * Recommended tasks that will help improve the security of the subscription proactively
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param taskName Name of the task object, will be a GUID
     * @param taskUpdateActionType Type of the action to do on the task
     * @param options The options parameters.
     */
    updateResourceGroupLevelTaskState(resourceGroupName: string, ascLocation: string, taskName: string, taskUpdateActionType: TaskUpdateActionType, options?: TasksUpdateResourceGroupLevelTaskStateOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface TasksGetResourceGroupLevelTaskOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getResourceGroupLevelTask operation. */
export declare type TasksGetResourceGroupLevelTaskResponse = SecurityTask;

/** Optional parameters. */
export declare interface TasksGetSubscriptionLevelTaskOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getSubscriptionLevelTask operation. */
export declare type TasksGetSubscriptionLevelTaskResponse = SecurityTask;

/** Optional parameters. */
export declare interface TasksListByHomeRegionNextOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the listByHomeRegionNext operation. */
export declare type TasksListByHomeRegionNextResponse = SecurityTaskList;

/** Optional parameters. */
export declare interface TasksListByHomeRegionOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the listByHomeRegion operation. */
export declare type TasksListByHomeRegionResponse = SecurityTaskList;

/** Optional parameters. */
export declare interface TasksListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type TasksListByResourceGroupNextResponse = SecurityTaskList;

/** Optional parameters. */
export declare interface TasksListByResourceGroupOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export declare type TasksListByResourceGroupResponse = SecurityTaskList;

/** Optional parameters. */
export declare interface TasksListNextOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the listNext operation. */
export declare type TasksListNextResponse = SecurityTaskList;

/** Optional parameters. */
export declare interface TasksListOptionalParams extends coreClient.OperationOptions {
    /** OData filter. Optional. */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type TasksListResponse = SecurityTaskList;

/** Optional parameters. */
export declare interface TasksUpdateResourceGroupLevelTaskStateOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface TasksUpdateSubscriptionLevelTaskStateOptionalParams extends coreClient.OperationOptions {
}

/**
 * Defines values for TaskUpdateActionType. \
 * {@link KnownTaskUpdateActionType} can be used interchangeably with TaskUpdateActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Activate** \
 * **Dismiss** \
 * **Start** \
 * **Resolve** \
 * **Close**
 */
export declare type TaskUpdateActionType = string;

/**
 * Defines values for Techniques. \
 * {@link KnownTechniques} can be used interchangeably with Techniques,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Abuse Elevation Control Mechanism** \
 * **Access Token Manipulation** \
 * **Account Discovery** \
 * **Account Manipulation** \
 * **Active Scanning** \
 * **Application Layer Protocol** \
 * **Audio Capture** \
 * **Boot or Logon Autostart Execution** \
 * **Boot or Logon Initialization Scripts** \
 * **Brute Force** \
 * **Cloud Infrastructure Discovery** \
 * **Cloud Service Dashboard** \
 * **Cloud Service Discovery** \
 * **Command and Scripting Interpreter** \
 * **Compromise Client Software Binary** \
 * **Compromise Infrastructure** \
 * **Container and Resource Discovery** \
 * **Create Account** \
 * **Create or Modify System Process** \
 * **Credentials from Password Stores** \
 * **Data Destruction** \
 * **Data Encrypted for Impact** \
 * **Data from Cloud Storage Object** \
 * **Data from Configuration Repository** \
 * **Data from Information Repositories** \
 * **Data from Local System** \
 * **Data Manipulation** \
 * **Data Staged** \
 * **Defacement** \
 * **Deobfuscate\/Decode Files or Information** \
 * **Disk Wipe** \
 * **Domain Trust Discovery** \
 * **Drive-by Compromise** \
 * **Dynamic Resolution** \
 * **Endpoint Denial of Service** \
 * **Event Triggered Execution** \
 * **Exfiltration Over Alternative Protocol** \
 * **Exploit Public-Facing Application** \
 * **Exploitation for Client Execution** \
 * **Exploitation for Credential Access** \
 * **Exploitation for Defense Evasion** \
 * **Exploitation for Privilege Escalation** \
 * **Exploitation of Remote Services** \
 * **External Remote Services** \
 * **Fallback Channels** \
 * **File and Directory Discovery** \
 * **Gather Victim Network Information** \
 * **Hide Artifacts** \
 * **Hijack Execution Flow** \
 * **Impair Defenses** \
 * **Implant Container Image** \
 * **Indicator Removal on Host** \
 * **Indirect Command Execution** \
 * **Ingress Tool Transfer** \
 * **Input Capture** \
 * **Inter-Process Communication** \
 * **Lateral Tool Transfer** \
 * **Man-in-the-Middle** \
 * **Masquerading** \
 * **Modify Authentication Process** \
 * **Modify Registry** \
 * **Network Denial of Service** \
 * **Network Service Scanning** \
 * **Network Sniffing** \
 * **Non-Application Layer Protocol** \
 * **Non-Standard Port** \
 * **Obtain Capabilities** \
 * **Obfuscated Files or Information** \
 * **Office Application Startup** \
 * **OS Credential Dumping** \
 * **Permission Groups Discovery** \
 * **Phishing** \
 * **Pre-OS Boot** \
 * **Process Discovery** \
 * **Process Injection** \
 * **Protocol Tunneling** \
 * **Proxy** \
 * **Query Registry** \
 * **Remote Access Software** \
 * **Remote Service Session Hijacking** \
 * **Remote Services** \
 * **Remote System Discovery** \
 * **Resource Hijacking** \
 * **Scheduled Task\/Job** \
 * **Screen Capture** \
 * **Search Victim-Owned Websites** \
 * **Server Software Component** \
 * **Service Stop** \
 * **Signed Binary Proxy Execution** \
 * **Software Deployment Tools** \
 * **SQL Stored Procedures** \
 * **Steal or Forge Kerberos Tickets** \
 * **Subvert Trust Controls** \
 * **Supply Chain Compromise** \
 * **System Information Discovery** \
 * **Taint Shared Content** \
 * **Traffic Signaling** \
 * **Transfer Data to Cloud Account** \
 * **Trusted Relationship** \
 * **Unsecured Credentials** \
 * **User Execution** \
 * **Valid Accounts** \
 * **Windows Management Instrumentation** \
 * **File and Directory Permissions Modification**
 */
export declare type Techniques = string;

/**
 * Defines values for Threats. \
 * {@link KnownThreats} can be used interchangeably with Threats,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **accountBreach** \
 * **dataExfiltration** \
 * **dataSpillage** \
 * **maliciousInsider** \
 * **elevationOfPrivilege** \
 * **threatResistance** \
 * **missingCoverage** \
 * **denialOfService**
 */
export declare type Threats = string;

/** A custom alert rule that checks if a value (depends on the custom alert type) is within the given range. */
export declare type ThresholdCustomAlertRule = CustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "ThresholdCustomAlertRule" | "TimeWindowCustomAlertRule" | "ActiveConnectionsNotInAllowedRange" | "AmqpC2DMessagesNotInAllowedRange" | "MqttC2DMessagesNotInAllowedRange" | "HttpC2DMessagesNotInAllowedRange" | "AmqpC2DRejectedMessagesNotInAllowedRange" | "MqttC2DRejectedMessagesNotInAllowedRange" | "HttpC2DRejectedMessagesNotInAllowedRange" | "AmqpD2CMessagesNotInAllowedRange" | "MqttD2CMessagesNotInAllowedRange" | "HttpD2CMessagesNotInAllowedRange" | "DirectMethodInvokesNotInAllowedRange" | "FailedLocalLoginsNotInAllowedRange" | "FileUploadsNotInAllowedRange" | "QueuePurgesNotInAllowedRange" | "TwinUpdatesNotInAllowedRange" | "UnauthorizedOperationsNotInAllowedRange";
    /** The minimum threshold. */
    minThreshold: number;
    /** The maximum threshold. */
    maxThreshold: number;
};

export declare type ThresholdCustomAlertRuleUnion = ThresholdCustomAlertRule | TimeWindowCustomAlertRuleUnion;

/** A custom alert rule that checks if the number of activities (depends on the custom alert type) in a time window is within the given range. */
export declare type TimeWindowCustomAlertRule = ThresholdCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "TimeWindowCustomAlertRule" | "ActiveConnectionsNotInAllowedRange" | "AmqpC2DMessagesNotInAllowedRange" | "MqttC2DMessagesNotInAllowedRange" | "HttpC2DMessagesNotInAllowedRange" | "AmqpC2DRejectedMessagesNotInAllowedRange" | "MqttC2DRejectedMessagesNotInAllowedRange" | "HttpC2DRejectedMessagesNotInAllowedRange" | "AmqpD2CMessagesNotInAllowedRange" | "MqttD2CMessagesNotInAllowedRange" | "HttpD2CMessagesNotInAllowedRange" | "DirectMethodInvokesNotInAllowedRange" | "FailedLocalLoginsNotInAllowedRange" | "FileUploadsNotInAllowedRange" | "QueuePurgesNotInAllowedRange" | "TwinUpdatesNotInAllowedRange" | "UnauthorizedOperationsNotInAllowedRange";
    /** The time window size in iso8601 format. */
    timeWindowSize: string;
};

export declare type TimeWindowCustomAlertRuleUnion = TimeWindowCustomAlertRule | ActiveConnectionsNotInAllowedRange | AmqpC2DMessagesNotInAllowedRange | MqttC2DMessagesNotInAllowedRange | HttpC2DMessagesNotInAllowedRange | AmqpC2DRejectedMessagesNotInAllowedRange | MqttC2DRejectedMessagesNotInAllowedRange | HttpC2DRejectedMessagesNotInAllowedRange | AmqpD2CMessagesNotInAllowedRange | MqttD2CMessagesNotInAllowedRange | HttpD2CMessagesNotInAllowedRange | DirectMethodInvokesNotInAllowedRange | FailedLocalLoginsNotInAllowedRange | FileUploadsNotInAllowedRange | QueuePurgesNotInAllowedRange | TwinUpdatesNotInAllowedRange | UnauthorizedOperationsNotInAllowedRange;

/** Interface representing a Topology. */
export declare interface Topology {
    /**
     * Gets a list that allows to build a topology view of a subscription.
     * @param options The options parameters.
     */
    list(options?: TopologyListOptionalParams): PagedAsyncIterableIterator<TopologyResource>;
    /**
     * Gets a list that allows to build a topology view of a subscription and location.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param options The options parameters.
     */
    listByHomeRegion(ascLocation: string, options?: TopologyListByHomeRegionOptionalParams): PagedAsyncIterableIterator<TopologyResource>;
    /**
     * Gets a specific topology component.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is
     *                          case insensitive.
     * @param ascLocation The location where ASC stores the data of the subscription. can be retrieved from
     *                    Get locations
     * @param topologyResourceName Name of a topology resources collection.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, ascLocation: string, topologyResourceName: string, options?: TopologyGetOptionalParams): Promise<TopologyGetResponse>;
}

/** Optional parameters. */
export declare interface TopologyGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type TopologyGetResponse = TopologyResource;

export declare interface TopologyList {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly value?: TopologyResource[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface TopologyListByHomeRegionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByHomeRegionNext operation. */
export declare type TopologyListByHomeRegionNextResponse = TopologyList;

/** Optional parameters. */
export declare interface TopologyListByHomeRegionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByHomeRegion operation. */
export declare type TopologyListByHomeRegionResponse = TopologyList;

/** Optional parameters. */
export declare interface TopologyListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type TopologyListNextResponse = TopologyList;

/** Optional parameters. */
export declare interface TopologyListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type TopologyListResponse = TopologyList;

export declare type TopologyResource = Resource & Location_2 & {
    /**
     * The UTC time on which the topology was calculated
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly calculatedDateTime?: Date;
    /**
     * Azure resources which are part of this topology resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly topologyResources?: TopologySingleResource[];
};

export declare interface TopologySingleResource {
    /**
     * Azure resource id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceId?: string;
    /**
     * The security severity of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly severity?: string;
    /**
     * Indicates if the resource has security recommendations
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recommendationsExist?: boolean;
    /**
     * Indicates the resource connectivity level to the Internet (InternetFacing, Internal ,etc.)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly networkZones?: string;
    /**
     * Score of the resource based on its security severity
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly topologyScore?: number;
    /**
     * The location of this resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly location?: string;
    /**
     * Azure resources connected to this resource which are in higher level in the topology view
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly parents?: TopologySingleResourceParent[];
    /**
     * Azure resources connected to this resource which are in lower level in the topology view
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly children?: TopologySingleResourceChild[];
}

export declare interface TopologySingleResourceChild {
    /**
     * Azure resource id which serves as child resource in topology view
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceId?: string;
}

export declare interface TopologySingleResourceParent {
    /**
     * Azure resource id which serves as parent resource in topology view
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceId?: string;
}

/** Describes an Azure tracked resource. */
export declare type TrackedResource = Resource & AzureTrackedResourceLocation & KindAutoGenerated & ETag & Tags & {};

/**
 * Defines values for TransportProtocol. \
 * {@link KnownTransportProtocol} can be used interchangeably with TransportProtocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TCP** \
 * **UDP**
 */
export declare type TransportProtocol = string;

/** Number of twin updates is not in allowed range. */
export declare type TwinUpdatesNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "TwinUpdatesNotInAllowedRange";
};

/** Number of unauthorized operations is not in allowed range. */
export declare type UnauthorizedOperationsNotInAllowedRange = TimeWindowCustomAlertRule & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    ruleType: "UnauthorizedOperationsNotInAllowedRange";
};

/**
 * Defines values for UnmaskedIpLoggingStatus. \
 * {@link KnownUnmaskedIpLoggingStatus} can be used interchangeably with UnmaskedIpLoggingStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled**: Unmasked IP logging is disabled \
 * **Enabled**: Unmasked IP logging is enabled
 */
export declare type UnmaskedIpLoggingStatus = string;

export declare type UpdateIotSecuritySolutionData = TagsResource & {
    /** Properties of the IoT Security solution's user defined resources. */
    userDefinedResources?: UserDefinedResourcesProperties;
    /** List of the configuration status for each recommendation type. */
    recommendationsConfiguration?: RecommendationConfigurationProperties[];
};

/** Properties of the IoT Security solution's user defined resources. */
export declare interface UserDefinedResourcesProperties {
    /** Azure Resource Graph query which represents the security solution's user defined resources. Required to start with "where type != "Microsoft.Devices/IotHubs"" */
    query: string | null;
    /** List of Azure subscription ids on which the user defined resources query should be executed. */
    querySubscriptions: string[] | null;
}

/**
 * Defines values for UserImpact. \
 * {@link KnownUserImpact} can be used interchangeably with UserImpact,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Low** \
 * **Moderate** \
 * **High**
 */
export declare type UserImpact = string;

/** Represents a user that is recommended to be allowed for a certain rule */
export declare interface UserRecommendation {
    /** Represents a user that is recommended to be allowed for a certain rule */
    username?: string;
    /** The recommendation action of the machine or rule */
    recommendationAction?: RecommendationAction;
}

/**
 * Defines values for ValueType. \
 * {@link KnownValueType} can be used interchangeably with ValueType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IpCidr**: An IP range in CIDR format (e.g. '192.168.0.1\/8'). \
 * **String**: Any string value.
 */
export declare type ValueType = string;

/** vulnerability assessment rule metadata details. */
export declare interface VaRule {
    /** The rule Id. */
    ruleId?: string;
    /** The rule severity. */
    severity?: RuleSeverity;
    /** The rule category. */
    category?: string;
    /** The rule type. */
    ruleType?: RuleType;
    /** The rule title. */
    title?: string;
    /** The rule description. */
    description?: string;
    /** The rule rationale. */
    rationale?: string;
    /** The rule query details. */
    queryCheck?: QueryCheck;
    /** The benchmark references. */
    benchmarkReferences?: BenchmarkReference[];
}

/** Vendor reference */
export declare interface VendorReference {
    /**
     * Link title
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly title?: string;
    /**
     * Link url
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly link?: string;
}

/** Represents a machine that is part of a machine group */
export declare interface VmRecommendation {
    /** The configuration status of the machines group or machine or rule */
    configurationStatus?: ConfigurationStatus;
    /** The recommendation action of the machine or rule */
    recommendationAction?: RecommendationAction;
    /** The full resource id of the machine */
    resourceId?: string;
    /** The machine supportability of Enforce feature */
    enforcementSupport?: EnforcementSupport;
}

/** Configures where to store the OMS agent data for workspaces under a scope */
export declare type WorkspaceSetting = Resource & {
    /** The full Azure ID of the workspace to save the data in */
    workspaceId?: string;
    /** All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope */
    scope?: string;
};

/** List of workspace settings response */
export declare interface WorkspaceSettingList {
    /** List of workspace settings */
    value: WorkspaceSetting[];
    /**
     * The URI to fetch the next page.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a WorkspaceSettings. */
export declare interface WorkspaceSettings {
    /**
     * Settings about where we should store your security data and logs. If the result is empty, it means
     * that no custom-workspace configuration was set
     * @param options The options parameters.
     */
    list(options?: WorkspaceSettingsListOptionalParams): PagedAsyncIterableIterator<WorkspaceSetting>;
    /**
     * Settings about where we should store your security data and logs. If the result is empty, it means
     * that no custom-workspace configuration was set
     * @param workspaceSettingName Name of the security setting
     * @param options The options parameters.
     */
    get(workspaceSettingName: string, options?: WorkspaceSettingsGetOptionalParams): Promise<WorkspaceSettingsGetResponse>;
    /**
     * creating settings about where we should store your security data and logs
     * @param workspaceSettingName Name of the security setting
     * @param workspaceSetting Security data setting object
     * @param options The options parameters.
     */
    create(workspaceSettingName: string, workspaceSetting: WorkspaceSetting, options?: WorkspaceSettingsCreateOptionalParams): Promise<WorkspaceSettingsCreateResponse>;
    /**
     * Settings about where we should store your security data and logs
     * @param workspaceSettingName Name of the security setting
     * @param workspaceSetting Security data setting object
     * @param options The options parameters.
     */
    update(workspaceSettingName: string, workspaceSetting: WorkspaceSetting, options?: WorkspaceSettingsUpdateOptionalParams): Promise<WorkspaceSettingsUpdateResponse>;
    /**
     * Deletes the custom workspace settings for this subscription. new VMs will report to the default
     * workspace
     * @param workspaceSettingName Name of the security setting
     * @param options The options parameters.
     */
    delete(workspaceSettingName: string, options?: WorkspaceSettingsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface WorkspaceSettingsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type WorkspaceSettingsCreateResponse = WorkspaceSetting;

/** Optional parameters. */
export declare interface WorkspaceSettingsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface WorkspaceSettingsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type WorkspaceSettingsGetResponse = WorkspaceSetting;

/** Optional parameters. */
export declare interface WorkspaceSettingsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type WorkspaceSettingsListNextResponse = WorkspaceSettingList;

/** Optional parameters. */
export declare interface WorkspaceSettingsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WorkspaceSettingsListResponse = WorkspaceSettingList;

/** Optional parameters. */
export declare interface WorkspaceSettingsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type WorkspaceSettingsUpdateResponse = WorkspaceSetting;

export { }
