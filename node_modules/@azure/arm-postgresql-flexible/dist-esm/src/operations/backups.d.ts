import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Backups } from "../operationsInterfaces";
import { PostgreSQLManagementFlexibleServerClient } from "../postgreSQLManagementFlexibleServerClient";
import { ServerBackup, BackupsListByServerOptionalParams, BackupsGetOptionalParams, BackupsGetResponse } from "../models";
/** Class containing Backups operations. */
export declare class BackupsImpl implements Backups {
    private readonly client;
    /**
     * Initialize a new instance of the class Backups class.
     * @param client Reference to the service client
     */
    constructor(client: PostgreSQLManagementFlexibleServerClient);
    /**
     * List all the backups for a given server.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param options The options parameters.
     */
    listByServer(resourceGroupName: string, serverName: string, options?: BackupsListByServerOptionalParams): PagedAsyncIterableIterator<ServerBackup>;
    private listByServerPagingPage;
    private listByServerPagingAll;
    /**
     * Get specific backup for a given server.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param backupName The name of the backup.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serverName: string, backupName: string, options?: BackupsGetOptionalParams): Promise<BackupsGetResponse>;
    /**
     * List all the backups for a given server.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param options The options parameters.
     */
    private _listByServer;
    /**
     * ListByServerNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param nextLink The nextLink from the previous successful call to the ListByServer method.
     * @param options The options parameters.
     */
    private _listByServerNext;
}
//# sourceMappingURL=backups.d.ts.map