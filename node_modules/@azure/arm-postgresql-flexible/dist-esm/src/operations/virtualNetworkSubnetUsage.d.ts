import { VirtualNetworkSubnetUsage } from "../operationsInterfaces";
import { PostgreSQLManagementFlexibleServerClient } from "../postgreSQLManagementFlexibleServerClient";
import { VirtualNetworkSubnetUsageParameter, VirtualNetworkSubnetUsageExecuteOptionalParams, VirtualNetworkSubnetUsageExecuteResponse } from "../models";
/** Class containing VirtualNetworkSubnetUsage operations. */
export declare class VirtualNetworkSubnetUsageImpl implements VirtualNetworkSubnetUsage {
    private readonly client;
    /**
     * Initialize a new instance of the class VirtualNetworkSubnetUsage class.
     * @param client Reference to the service client
     */
    constructor(client: PostgreSQLManagementFlexibleServerClient);
    /**
     * Get virtual network subnet usage for a given vNet resource id.
     * @param locationName The name of the location.
     * @param parameters The required parameters for creating or updating a server.
     * @param options The options parameters.
     */
    execute(locationName: string, parameters: VirtualNetworkSubnetUsageParameter, options?: VirtualNetworkSubnetUsageExecuteOptionalParams): Promise<VirtualNetworkSubnetUsageExecuteResponse>;
}
//# sourceMappingURL=virtualNetworkSubnetUsage.d.ts.map