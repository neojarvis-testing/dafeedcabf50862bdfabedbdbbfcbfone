import { CheckNameAvailabilityWithLocation } from "../operationsInterfaces";
import { PostgreSQLManagementFlexibleServerClient } from "../postgreSQLManagementFlexibleServerClient";
import { CheckNameAvailabilityRequest, CheckNameAvailabilityWithLocationExecuteOptionalParams, CheckNameAvailabilityWithLocationExecuteResponse } from "../models";
/** Class containing CheckNameAvailabilityWithLocation operations. */
export declare class CheckNameAvailabilityWithLocationImpl implements CheckNameAvailabilityWithLocation {
    private readonly client;
    /**
     * Initialize a new instance of the class CheckNameAvailabilityWithLocation class.
     * @param client Reference to the service client
     */
    constructor(client: PostgreSQLManagementFlexibleServerClient);
    /**
     * Check the availability of name for resource
     * @param locationName The name of the location.
     * @param nameAvailabilityRequest The required parameters for checking if resource name is available.
     * @param options The options parameters.
     */
    execute(locationName: string, nameAvailabilityRequest: CheckNameAvailabilityRequest, options?: CheckNameAvailabilityWithLocationExecuteOptionalParams): Promise<CheckNameAvailabilityWithLocationExecuteResponse>;
}
//# sourceMappingURL=checkNameAvailabilityWithLocation.d.ts.map