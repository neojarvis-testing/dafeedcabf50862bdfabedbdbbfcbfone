/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { EventHubManagementClient } from "@azure/arm-eventhub";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.
 *
 * @summary Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.
 * x-ms-original-file: specification/eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/examples/ConsumerGroup/EHConsumerGroupCreate.json
 */
function consumerGroupCreate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "5f750a97-50d9-4e36-8081-c9ee4c0210d4";
        const resourceGroupName = "ArunMonocle";
        const namespaceName = "sdk-Namespace-2661";
        const eventHubName = "sdk-EventHub-6681";
        const consumerGroupName = "sdk-ConsumerGroup-5563";
        const parameters = { userMetadata: "New consumergroup" };
        const credential = new DefaultAzureCredential();
        const client = new EventHubManagementClient(credential, subscriptionId);
        const result = yield client.consumerGroups.createOrUpdate(resourceGroupName, namespaceName, eventHubName, consumerGroupName, parameters);
        console.log(result);
    });
}
consumerGroupCreate().catch(console.error);
//# sourceMappingURL=consumerGroupsCreateOrUpdateSample.js.map