/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { EventHubManagementClient } from "@azure/arm-eventhub";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Gets an AuthorizationRule for a Namespace by rule name.
 *
 * @summary Gets an AuthorizationRule for a Namespace by rule name.
 * x-ms-original-file: specification/eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/examples/disasterRecoveryConfigs/EHAliasAuthorizationRuleGet.json
 */
function nameSpaceAuthorizationRuleGet() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "exampleSubscriptionId";
        const resourceGroupName = "exampleResourceGroup";
        const namespaceName = "sdk-Namespace-9080";
        const alias = "sdk-DisasterRecovery-4879";
        const authorizationRuleName = "sdk-Authrules-4879";
        const credential = new DefaultAzureCredential();
        const client = new EventHubManagementClient(credential, subscriptionId);
        const result = yield client.disasterRecoveryConfigs.getAuthorizationRule(resourceGroupName, namespaceName, alias, authorizationRuleName);
        console.log(result);
    });
}
nameSpaceAuthorizationRuleGet().catch(console.error);
//# sourceMappingURL=disasterRecoveryConfigsGetAuthorizationRuleSample.js.map