/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { EventHubManagementClient } from "@azure/arm-eventhub";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.
 *
 * @summary Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.
 * x-ms-original-file: specification/eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/examples/NameSpaces/EHNameSpaceCreate.json
 */
function namespaceCreate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "SampleSubscription";
        const resourceGroupName = "ResurceGroupSample";
        const namespaceName = "NamespaceSample";
        const parameters = {
            clusterArmId: "/subscriptions/SampleSubscription/resourceGroups/ResurceGroupSample/providers/Microsoft.EventHub/clusters/enc-test",
            encryption: {
                keySource: "Microsoft.KeyVault",
                keyVaultProperties: [
                    {
                        identity: {
                            userAssignedIdentity: "/subscriptions/SampleSubscription/resourceGroups/ResurceGroupSample/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ud1"
                        },
                        keyName: "Samplekey",
                        keyVaultUri: "https://aprao-keyvault-user.vault-int.azure-int.net/"
                    }
                ]
            },
            identity: {
                type: "SystemAssigned, UserAssigned",
                userAssignedIdentities: {
                    "/subscriptions/SampleSubscription/resourceGroups/ResurceGroupSample/providers/MicrosoftManagedIdentity/userAssignedIdentities/ud1": {},
                    "/subscriptions/SampleSubscription/resourceGroups/ResurceGroupSample/providers/MicrosoftManagedIdentity/userAssignedIdentities/ud2": {}
                }
            },
            location: "East US"
        };
        const credential = new DefaultAzureCredential();
        const client = new EventHubManagementClient(credential, subscriptionId);
        const result = yield client.namespaces.beginCreateOrUpdateAndWait(resourceGroupName, namespaceName, parameters);
        console.log(result);
    });
}
namespaceCreate().catch(console.error);
//# sourceMappingURL=namespacesCreateOrUpdateSample.js.map