import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Clusters, Configuration, Namespaces, PrivateEndpointConnections, PrivateLinkResources, Operations, EventHubs, DisasterRecoveryConfigs, ConsumerGroups, SchemaRegistry } from "./operationsInterfaces";
import { EventHubManagementClientOptionalParams } from "./models";
export declare class EventHubManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the EventHubManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Subscription credentials that uniquely identify a Microsoft Azure
     *                       subscription. The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: EventHubManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    clusters: Clusters;
    configuration: Configuration;
    namespaces: Namespaces;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    operations: Operations;
    eventHubs: EventHubs;
    disasterRecoveryConfigs: DisasterRecoveryConfigs;
    consumerGroups: ConsumerGroups;
    schemaRegistry: SchemaRegistry;
}
//# sourceMappingURL=eventHubManagementClient.d.ts.map