import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Clusters } from "../operationsInterfaces";
import { EventHubManagementClient } from "../eventHubManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Cluster, ClustersListBySubscriptionOptionalParams, ClustersListByResourceGroupOptionalParams, ClustersListAvailableClusterRegionOptionalParams, ClustersListAvailableClusterRegionResponse, ClustersGetOptionalParams, ClustersGetResponse, ClustersCreateOrUpdateOptionalParams, ClustersCreateOrUpdateResponse, ClustersUpdateOptionalParams, ClustersUpdateResponse, ClustersDeleteOptionalParams, ClustersListNamespacesOptionalParams, ClustersListNamespacesResponse } from "../models";
/** Class containing Clusters operations. */
export declare class ClustersImpl implements Clusters {
    private readonly client;
    /**
     * Initialize a new instance of the class Clusters class.
     * @param client Reference to the service client
     */
    constructor(client: EventHubManagementClient);
    /**
     * Lists the available Event Hubs Clusters within an ARM resource group
     * @param options The options parameters.
     */
    listBySubscription(options?: ClustersListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Cluster>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Lists the available Event Hubs Clusters within an ARM resource group
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ClustersListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Cluster>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List the quantity of available pre-provisioned Event Hubs Clusters, indexed by Azure region.
     * @param options The options parameters.
     */
    listAvailableClusterRegion(options?: ClustersListAvailableClusterRegionOptionalParams): Promise<ClustersListAvailableClusterRegionResponse>;
    /**
     * Lists the available Event Hubs Clusters within an ARM resource group
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Lists the available Event Hubs Clusters within an ARM resource group
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Gets the resource description of the specified Event Hubs Cluster.
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param clusterName The name of the Event Hubs Cluster.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, options?: ClustersGetOptionalParams): Promise<ClustersGetResponse>;
    /**
     * Creates or updates an instance of an Event Hubs Cluster.
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param clusterName The name of the Event Hubs Cluster.
     * @param parameters Parameters for creating a eventhub cluster resource.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, parameters: Cluster, options?: ClustersCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<ClustersCreateOrUpdateResponse>, ClustersCreateOrUpdateResponse>>;
    /**
     * Creates or updates an instance of an Event Hubs Cluster.
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param clusterName The name of the Event Hubs Cluster.
     * @param parameters Parameters for creating a eventhub cluster resource.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, parameters: Cluster, options?: ClustersCreateOrUpdateOptionalParams): Promise<ClustersCreateOrUpdateResponse>;
    /**
     * Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent.
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param clusterName The name of the Event Hubs Cluster.
     * @param parameters The properties of the Event Hubs Cluster which should be updated.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, parameters: Cluster, options?: ClustersUpdateOptionalParams): Promise<PollerLike<PollOperationState<ClustersUpdateResponse>, ClustersUpdateResponse>>;
    /**
     * Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent.
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param clusterName The name of the Event Hubs Cluster.
     * @param parameters The properties of the Event Hubs Cluster which should be updated.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, clusterName: string, parameters: Cluster, options?: ClustersUpdateOptionalParams): Promise<ClustersUpdateResponse>;
    /**
     * Deletes an existing Event Hubs Cluster. This operation is idempotent.
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param clusterName The name of the Event Hubs Cluster.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, options?: ClustersDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing Event Hubs Cluster. This operation is idempotent.
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param clusterName The name of the Event Hubs Cluster.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, options?: ClustersDeleteOptionalParams): Promise<void>;
    /**
     * List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster.
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param clusterName The name of the Event Hubs Cluster.
     * @param options The options parameters.
     */
    listNamespaces(resourceGroupName: string, clusterName: string, options?: ClustersListNamespacesOptionalParams): Promise<ClustersListNamespacesResponse>;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName Name of the resource group within the azure subscription.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=clusters.d.ts.map