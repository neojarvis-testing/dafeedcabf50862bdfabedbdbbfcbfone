import * as coreClient from "@azure/core-client";
/** The response of the List Available Clusters operation. */
export interface AvailableClustersList {
    /** The count of readily available and pre-provisioned Event Hubs Clusters per region. */
    value?: AvailableCluster[];
}
/** Pre-provisioned and readily available Event Hubs Cluster count per region. */
export interface AvailableCluster {
    /** Location fo the Available Cluster */
    location?: string;
}
/** Error response indicates Event Hub service is not able to process the incoming request. The reason is provided in the error message. */
export interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}
/** The error detail. */
export interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}
/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}
/** The response of the List Event Hubs Clusters operation. */
export interface ClusterListResult {
    /** The Event Hubs Clusters present in the List Event Hubs operation results. */
    value?: Cluster[];
    /** Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters. */
    nextLink?: string;
}
/** SKU parameters particular to a cluster instance. */
export interface ClusterSku {
    /** Name of this SKU. */
    name: ClusterSkuName;
    /** The quantity of Event Hubs Cluster Capacity Units contained in this cluster. */
    capacity?: number;
}
/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The type of identity that last modified the resource. */
    lastModifiedAt?: Date;
}
/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}
/** The response of the List Namespace IDs operation */
export interface EHNamespaceIdListResult {
    /** Result of the List Namespace IDs operation */
    value?: EHNamespaceIdContainer[];
}
/** The full ARM ID of an Event Hubs Namespace */
export interface EHNamespaceIdContainer {
    /** id parameter */
    id?: string;
}
/** Contains all settings for the cluster. */
export interface ClusterQuotaConfigurationProperties {
    /** All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster. */
    settings?: {
        [propertyName: string]: string;
    };
}
/** The response of the List Namespace operation */
export interface EHNamespaceListResult {
    /** Result of the List Namespace operation */
    value?: EHNamespace[];
    /** Link to the next set of results. Not empty if Value contains incomplete list of namespaces. */
    nextLink?: string;
}
/** SKU parameters supplied to the create namespace operation */
export interface Sku {
    /** Name of this SKU. */
    name: SkuName;
    /** The billing tier of this particular SKU. */
    tier?: SkuTier;
    /** The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units. */
    capacity?: number;
}
/** Properties to configure Identity for Bring your Own Keys */
export interface Identity {
    /**
     * ObjectId from the KeyVault
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * TenantId from the KeyVault
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** Type of managed service identity. */
    type?: ManagedServiceIdentityType;
    /** Properties for User Assigned Identities */
    userAssignedIdentities?: {
        [propertyName: string]: UserAssignedIdentity;
    };
}
/** Recognized Dictionary value. */
export interface UserAssignedIdentity {
    /**
     * Principal Id of user assigned identity
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * Client Id of user assigned identity
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
}
/** Properties to configure Encryption */
export interface Encryption {
    /** Properties of KeyVault */
    keyVaultProperties?: KeyVaultProperties[];
    /** Enumerates the possible value of keySource for Encryption */
    keySource?: "Microsoft.KeyVault";
    /** Enable Infrastructure Encryption (Double Encryption) */
    requireInfrastructureEncryption?: boolean;
}
/** Properties to configure keyVault Properties */
export interface KeyVaultProperties {
    /** Name of the Key from KeyVault */
    keyName?: string;
    /** Uri of KeyVault */
    keyVaultUri?: string;
    /** Key Version */
    keyVersion?: string;
    identity?: UserAssignedIdentityProperties;
}
export interface UserAssignedIdentityProperties {
    /** ARM ID of user Identity selected for encryption */
    userAssignedIdentity?: string;
}
/** PrivateEndpoint information. */
export interface PrivateEndpoint {
    /** The ARM identifier for Private Endpoint. */
    id?: string;
}
/** ConnectionState information. */
export interface ConnectionState {
    /** Status of the connection. */
    status?: PrivateLinkConnectionStatus;
    /** Description of the connection state. */
    description?: string;
}
/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface ProxyResource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The geo-location where the resource lives
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly location?: string;
}
/** Result of the list of all private endpoint connections operation. */
export interface PrivateEndpointConnectionListResult {
    /** A collection of private endpoint connection resources. */
    value?: PrivateEndpointConnection[];
    /** A link for the next page of private endpoint connection resources. */
    nextLink?: string;
}
/** Result of the List private link resources operation. */
export interface PrivateLinkResourcesListResult {
    /** A collection of private link resources */
    value?: PrivateLinkResource[];
    /** A link for the next page of private link resources. */
    nextLink?: string;
}
/** Information of the private link resource. */
export interface PrivateLinkResource {
    /** Fully qualified identifier of the resource. */
    id?: string;
    /** Name of the resource */
    name?: string;
    /** Type of the resource */
    type?: string;
    /** The private link resource group id. */
    groupId?: string;
    /** The private link resource required member names. */
    requiredMembers?: string[];
    /** The private link resource Private link DNS zone name. */
    requiredZoneNames?: string[];
}
/** Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results. */
export interface OperationListResult {
    /**
     * List of Event Hub operations supported by the Microsoft.EventHub resource provider.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
    /**
     * URL to get the next set of operation list results if there are any.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}
/** A Event Hub REST API operation */
export interface Operation {
    /**
     * Operation name: {provider}/{resource}/{operation}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** Indicates whether the operation is a data action */
    isDataAction?: boolean;
    /** Display of the operation */
    display?: OperationDisplay;
    /** Origin of the operation */
    origin?: string;
    /** Properties of the operation */
    properties?: Record<string, unknown>;
}
/** Operation display payload */
export interface OperationDisplay {
    /**
     * Resource provider of the operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * Resource of the operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * Localized friendly name for the operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * Localized friendly description for the operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}
/** The result of the List EventHubs operation. */
export interface EventHubListResult {
    /** Result of the List EventHubs operation. */
    value?: Eventhub[];
    /** Link to the next set of results. Not empty if Value contains incomplete list of EventHubs. */
    nextLink?: string;
}
/** Properties to configure capture description for eventhub */
export interface CaptureDescription {
    /** A value that indicates whether capture description is enabled. */
    enabled?: boolean;
    /** Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version */
    encoding?: EncodingCaptureDescription;
    /** The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds */
    intervalInSeconds?: number;
    /** The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes */
    sizeLimitInBytes?: number;
    /** Properties of Destination where capture will be stored. (Storage Account, Blob Names) */
    destination?: Destination;
    /** A value that indicates whether to Skip Empty Archives */
    skipEmptyArchives?: boolean;
}
/** Capture storage details for capture description */
export interface Destination {
    /** Name for capture destination */
    name?: string;
    /** Resource id of the storage account to be used to create the blobs */
    storageAccountResourceId?: string;
    /** Blob container Name */
    blobContainer?: string;
    /** Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order */
    archiveNameFormat?: string;
    /** Subscription Id of Azure Data Lake Store */
    dataLakeSubscriptionId?: string;
    /** The Azure Data Lake Store name for the captured events */
    dataLakeAccountName?: string;
    /** The destination folder path for the captured events */
    dataLakeFolderPath?: string;
}
/** Parameter supplied to check Namespace name availability operation */
export interface CheckNameAvailabilityParameter {
    /** Name to check the namespace name availability */
    name: string;
}
/** The Result of the CheckNameAvailability operation */
export interface CheckNameAvailabilityResult {
    /**
     * The detailed info regarding the reason associated with the Namespace.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /** Value indicating Namespace is availability, true if the Namespace is available; otherwise, false. */
    nameAvailable?: boolean;
    /** The reason for unavailability of a Namespace. */
    reason?: UnavailableReason;
}
/** The result of the List Alias(Disaster Recovery configuration) operation. */
export interface ArmDisasterRecoveryListResult {
    /** List of Alias(Disaster Recovery configurations) */
    value?: ArmDisasterRecovery[];
    /**
     * Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}
/** The response from the List namespace operation. */
export interface NWRuleSetVirtualNetworkRules {
    /** Subnet properties */
    subnet?: Subnet;
    /** Value that indicates whether to ignore missing Vnet Service Endpoint */
    ignoreMissingVnetServiceEndpoint?: boolean;
}
/** Properties supplied for Subnet */
export interface Subnet {
    /** Resource ID of Virtual Network Subnet */
    id?: string;
}
/** The response from the List namespace operation. */
export interface NWRuleSetIpRules {
    /** IP Mask */
    ipMask?: string;
    /** The IP Filter Action */
    action?: NetworkRuleIPAction;
}
/** The response of the List NetworkRuleSet operation */
export interface NetworkRuleSetListResult {
    /** Result of the List NetworkRuleSet operation */
    value?: NetworkRuleSet[];
    /** Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet. */
    nextLink?: string;
}
/** The response from the List namespace operation. */
export interface AuthorizationRuleListResult {
    /** Result of the List Authorization Rules operation. */
    value?: AuthorizationRule[];
    /** Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules */
    nextLink?: string;
}
/** Namespace/EventHub Connection String */
export interface AccessKeys {
    /**
     * Primary connection string of the created namespace AuthorizationRule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly primaryConnectionString?: string;
    /**
     * Secondary connection string of the created namespace AuthorizationRule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly secondaryConnectionString?: string;
    /**
     * Primary connection string of the alias if GEO DR is enabled
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly aliasPrimaryConnectionString?: string;
    /**
     * Secondary  connection string of the alias if GEO DR is enabled
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly aliasSecondaryConnectionString?: string;
    /**
     * A base64-encoded 256-bit primary key for signing and validating the SAS token.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly primaryKey?: string;
    /**
     * A base64-encoded 256-bit primary key for signing and validating the SAS token.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly secondaryKey?: string;
    /**
     * A string that describes the AuthorizationRule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly keyName?: string;
}
/** Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset. */
export interface RegenerateAccessKeyParameters {
    /** The access key to regenerate. */
    keyType: KeyType;
    /** Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType */
    key?: string;
}
/** The result to the List Consumer Group operation. */
export interface ConsumerGroupListResult {
    /** Result of the List Consumer Group operation. */
    value?: ConsumerGroup[];
    /** Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group */
    nextLink?: string;
}
/** The result of the List SchemaGroup operation. */
export interface SchemaGroupListResult {
    /** Result of the List SchemaGroups operation. */
    value?: SchemaGroup[];
    /** Link to the next set of results. Not empty if Value contains incomplete list of Schema Groups. */
    nextLink?: string;
}
/** Definition of resource. */
export interface TrackedResource extends Resource {
    /** Resource location. */
    location?: string;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}
/** Properties of the PrivateEndpointConnection. */
export interface PrivateEndpointConnection extends ProxyResource {
    /**
     * The system meta data relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The Private Endpoint resource for this Connection. */
    privateEndpoint?: PrivateEndpoint;
    /** Details about the state of the connection. */
    privateLinkServiceConnectionState?: ConnectionState;
    /** Provisioning state of the Private Endpoint Connection. */
    provisioningState?: EndPointProvisioningState;
}
/** Single item in List or Get Event Hub operation */
export interface Eventhub extends ProxyResource {
    /**
     * The system meta data relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Current number of shards on the Event Hub.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly partitionIds?: string[];
    /**
     * Exact time the Event Hub was created.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdAt?: Date;
    /**
     * The exact time the message was updated.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly updatedAt?: Date;
    /** Number of days to retain the events for this Event Hub, value should be 1 to 7 days */
    messageRetentionInDays?: number;
    /** Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions. */
    partitionCount?: number;
    /** Enumerates the possible values for the status of the Event Hub. */
    status?: EntityStatus;
    /** Properties of capture description */
    captureDescription?: CaptureDescription;
}
/** Single item in List or Get Alias(Disaster Recovery configuration) operation */
export interface ArmDisasterRecovery extends ProxyResource {
    /**
     * The system meta data relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningStateDR;
    /** ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing */
    partnerNamespace?: string;
    /** Alternate name specified when alias and namespace names are same. */
    alternateName?: string;
    /**
     * role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly role?: RoleDisasterRecovery;
    /**
     * Number of entities pending to be replicated.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly pendingReplicationOperationsCount?: number;
}
/** Description of topic resource. */
export interface NetworkRuleSet extends ProxyResource {
    /**
     * The system meta data relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** Value that indicates whether Trusted Service Access is Enabled or not. */
    trustedServiceAccessEnabled?: boolean;
    /** Default Action for Network Rule Set */
    defaultAction?: DefaultAction;
    /** List VirtualNetwork Rules */
    virtualNetworkRules?: NWRuleSetVirtualNetworkRules[];
    /** List of IpRules */
    ipRules?: NWRuleSetIpRules[];
    /** This determines if traffic is allowed over public network. By default it is enabled. */
    publicNetworkAccess?: PublicNetworkAccessFlag;
}
/** Single item in a List or Get AuthorizationRule operation */
export interface AuthorizationRule extends ProxyResource {
    /**
     * The system meta data relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The rights associated with the rule. */
    rights?: AccessRights[];
}
/** Single item in List or Get Consumer group operation */
export interface ConsumerGroup extends ProxyResource {
    /**
     * The system meta data relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Exact time the message was created.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdAt?: Date;
    /**
     * The exact time the message was updated.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly updatedAt?: Date;
    /** User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored. */
    userMetadata?: string;
}
/** Single item in List or Get Schema Group operation */
export interface SchemaGroup extends ProxyResource {
    /**
     * The system meta data relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Exact time the Schema Group was updated
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly updatedAtUtc?: Date;
    /**
     * Exact time the Schema Group was created.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdAtUtc?: Date;
    /**
     * The ETag value.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly eTag?: string;
    /** dictionary object for SchemaGroup group properties */
    groupProperties?: {
        [propertyName: string]: string;
    };
    schemaCompatibility?: SchemaCompatibility;
    schemaType?: SchemaType;
}
/** Single Event Hubs Cluster resource in List or Get operations. */
export interface Cluster extends TrackedResource {
    /** Properties of the cluster SKU. */
    sku?: ClusterSku;
    /**
     * The system meta data relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * The UTC time when the Event Hubs Cluster was created.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdAt?: string;
    /**
     * The UTC time when the Event Hubs Cluster was last updated.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly updatedAt?: string;
    /**
     * The metric ID of the cluster resource. Provided by the service and not modifiable by the user.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly metricId?: string;
    /**
     * Status of the Cluster resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: string;
}
/** Single Namespace item in List or Get Operation */
export interface EHNamespace extends TrackedResource {
    /** Properties of sku resource */
    sku?: Sku;
    /** Properties of BYOK Identity description */
    identity?: Identity;
    /**
     * The system meta data relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Provisioning state of the Namespace.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /**
     * Status of the Namespace.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: string;
    /**
     * The time the Namespace was created.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdAt?: Date;
    /**
     * The time the Namespace was updated.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly updatedAt?: Date;
    /**
     * Endpoint you can use to perform Service Bus operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly serviceBusEndpoint?: string;
    /** Cluster ARM ID of the Namespace. */
    clusterArmId?: string;
    /**
     * Identifier for Azure Insights metrics.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly metricId?: string;
    /** Value that indicates whether AutoInflate is enabled for eventhub namespace. */
    isAutoInflateEnabled?: boolean;
    /** Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true) */
    maximumThroughputUnits?: number;
    /** Value that indicates whether Kafka is enabled for eventhub namespace. */
    kafkaEnabled?: boolean;
    /** Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones. */
    zoneRedundant?: boolean;
    /** Properties of BYOK Encryption description */
    encryption?: Encryption;
    /** List of private endpoint connections. */
    privateEndpointConnections?: PrivateEndpointConnection[];
    /** This property disables SAS authentication for the Event Hubs namespace. */
    disableLocalAuth?: boolean;
    /** Alternate name specified when alias and namespace names are same. */
    alternateName?: string;
}
/** Known values of {@link ClusterSkuName} that the service accepts. */
export declare enum KnownClusterSkuName {
    /** Dedicated */
    Dedicated = "Dedicated"
}
/**
 * Defines values for ClusterSkuName. \
 * {@link KnownClusterSkuName} can be used interchangeably with ClusterSkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Dedicated**
 */
export declare type ClusterSkuName = string;
/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}
/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;
/** Known values of {@link SkuName} that the service accepts. */
export declare enum KnownSkuName {
    /** Basic */
    Basic = "Basic",
    /** Standard */
    Standard = "Standard",
    /** Premium */
    Premium = "Premium"
}
/**
 * Defines values for SkuName. \
 * {@link KnownSkuName} can be used interchangeably with SkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Basic** \
 * **Standard** \
 * **Premium**
 */
export declare type SkuName = string;
/** Known values of {@link SkuTier} that the service accepts. */
export declare enum KnownSkuTier {
    /** Basic */
    Basic = "Basic",
    /** Standard */
    Standard = "Standard",
    /** Premium */
    Premium = "Premium"
}
/**
 * Defines values for SkuTier. \
 * {@link KnownSkuTier} can be used interchangeably with SkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Basic** \
 * **Standard** \
 * **Premium**
 */
export declare type SkuTier = string;
/** Known values of {@link PrivateLinkConnectionStatus} that the service accepts. */
export declare enum KnownPrivateLinkConnectionStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected",
    /** Disconnected */
    Disconnected = "Disconnected"
}
/**
 * Defines values for PrivateLinkConnectionStatus. \
 * {@link KnownPrivateLinkConnectionStatus} can be used interchangeably with PrivateLinkConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export declare type PrivateLinkConnectionStatus = string;
/** Known values of {@link EndPointProvisioningState} that the service accepts. */
export declare enum KnownEndPointProvisioningState {
    /** Creating */
    Creating = "Creating",
    /** Updating */
    Updating = "Updating",
    /** Deleting */
    Deleting = "Deleting",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Canceled */
    Canceled = "Canceled",
    /** Failed */
    Failed = "Failed"
}
/**
 * Defines values for EndPointProvisioningState. \
 * {@link KnownEndPointProvisioningState} can be used interchangeably with EndPointProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Canceled** \
 * **Failed**
 */
export declare type EndPointProvisioningState = string;
/** Known values of {@link DefaultAction} that the service accepts. */
export declare enum KnownDefaultAction {
    /** Allow */
    Allow = "Allow",
    /** Deny */
    Deny = "Deny"
}
/**
 * Defines values for DefaultAction. \
 * {@link KnownDefaultAction} can be used interchangeably with DefaultAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow** \
 * **Deny**
 */
export declare type DefaultAction = string;
/** Known values of {@link NetworkRuleIPAction} that the service accepts. */
export declare enum KnownNetworkRuleIPAction {
    /** Allow */
    Allow = "Allow"
}
/**
 * Defines values for NetworkRuleIPAction. \
 * {@link KnownNetworkRuleIPAction} can be used interchangeably with NetworkRuleIPAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow**
 */
export declare type NetworkRuleIPAction = string;
/** Known values of {@link PublicNetworkAccessFlag} that the service accepts. */
export declare enum KnownPublicNetworkAccessFlag {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}
/**
 * Defines values for PublicNetworkAccessFlag. \
 * {@link KnownPublicNetworkAccessFlag} can be used interchangeably with PublicNetworkAccessFlag,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type PublicNetworkAccessFlag = string;
/** Known values of {@link AccessRights} that the service accepts. */
export declare enum KnownAccessRights {
    /** Manage */
    Manage = "Manage",
    /** Send */
    Send = "Send",
    /** Listen */
    Listen = "Listen"
}
/**
 * Defines values for AccessRights. \
 * {@link KnownAccessRights} can be used interchangeably with AccessRights,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Manage** \
 * **Send** \
 * **Listen**
 */
export declare type AccessRights = string;
/** Known values of {@link KeyType} that the service accepts. */
export declare enum KnownKeyType {
    /** PrimaryKey */
    PrimaryKey = "PrimaryKey",
    /** SecondaryKey */
    SecondaryKey = "SecondaryKey"
}
/**
 * Defines values for KeyType. \
 * {@link KnownKeyType} can be used interchangeably with KeyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PrimaryKey** \
 * **SecondaryKey**
 */
export declare type KeyType = string;
/** Known values of {@link SchemaCompatibility} that the service accepts. */
export declare enum KnownSchemaCompatibility {
    /** None */
    None = "None",
    /** Backward */
    Backward = "Backward",
    /** Forward */
    Forward = "Forward"
}
/**
 * Defines values for SchemaCompatibility. \
 * {@link KnownSchemaCompatibility} can be used interchangeably with SchemaCompatibility,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Backward** \
 * **Forward**
 */
export declare type SchemaCompatibility = string;
/** Known values of {@link SchemaType} that the service accepts. */
export declare enum KnownSchemaType {
    /** Unknown */
    Unknown = "Unknown",
    /** Avro */
    Avro = "Avro"
}
/**
 * Defines values for SchemaType. \
 * {@link KnownSchemaType} can be used interchangeably with SchemaType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Avro**
 */
export declare type SchemaType = string;
/** Defines values for ManagedServiceIdentityType. */
export declare type ManagedServiceIdentityType = "SystemAssigned" | "UserAssigned" | "SystemAssigned, UserAssigned" | "None";
/** Defines values for EntityStatus. */
export declare type EntityStatus = "Active" | "Disabled" | "Restoring" | "SendDisabled" | "ReceiveDisabled" | "Creating" | "Deleting" | "Renaming" | "Unknown";
/** Defines values for EncodingCaptureDescription. */
export declare type EncodingCaptureDescription = "Avro" | "AvroDeflate";
/** Defines values for UnavailableReason. */
export declare type UnavailableReason = "None" | "InvalidName" | "SubscriptionIsDisabled" | "NameInUse" | "NameInLockdown" | "TooManyNamespaceInCurrentSubscription";
/** Defines values for ProvisioningStateDR. */
export declare type ProvisioningStateDR = "Accepted" | "Succeeded" | "Failed";
/** Defines values for RoleDisasterRecovery. */
export declare type RoleDisasterRecovery = "Primary" | "PrimaryNotReplicating" | "Secondary";
/** Optional parameters. */
export interface ClustersListAvailableClusterRegionOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listAvailableClusterRegion operation. */
export declare type ClustersListAvailableClusterRegionResponse = AvailableClustersList;
/** Optional parameters. */
export interface ClustersListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listBySubscription operation. */
export declare type ClustersListBySubscriptionResponse = ClusterListResult;
/** Optional parameters. */
export interface ClustersListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listByResourceGroup operation. */
export declare type ClustersListByResourceGroupResponse = ClusterListResult;
/** Optional parameters. */
export interface ClustersGetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the get operation. */
export declare type ClustersGetResponse = Cluster;
/** Optional parameters. */
export interface ClustersCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}
/** Contains response data for the createOrUpdate operation. */
export declare type ClustersCreateOrUpdateResponse = Cluster;
/** Optional parameters. */
export interface ClustersUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}
/** Contains response data for the update operation. */
export declare type ClustersUpdateResponse = Cluster;
/** Optional parameters. */
export interface ClustersDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}
/** Optional parameters. */
export interface ClustersListNamespacesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listNamespaces operation. */
export declare type ClustersListNamespacesResponse = EHNamespaceIdListResult;
/** Optional parameters. */
export interface ClustersListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listBySubscriptionNext operation. */
export declare type ClustersListBySubscriptionNextResponse = ClusterListResult;
/** Optional parameters. */
export interface ClustersListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listByResourceGroupNext operation. */
export declare type ClustersListByResourceGroupNextResponse = ClusterListResult;
/** Optional parameters. */
export interface ConfigurationPatchOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the patch operation. */
export declare type ConfigurationPatchResponse = ClusterQuotaConfigurationProperties;
/** Optional parameters. */
export interface ConfigurationGetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the get operation. */
export declare type ConfigurationGetResponse = ClusterQuotaConfigurationProperties;
/** Optional parameters. */
export interface NamespacesListOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the list operation. */
export declare type NamespacesListResponse = EHNamespaceListResult;
/** Optional parameters. */
export interface NamespacesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listByResourceGroup operation. */
export declare type NamespacesListByResourceGroupResponse = EHNamespaceListResult;
/** Optional parameters. */
export interface NamespacesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}
/** Contains response data for the createOrUpdate operation. */
export declare type NamespacesCreateOrUpdateResponse = EHNamespace;
/** Optional parameters. */
export interface NamespacesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}
/** Optional parameters. */
export interface NamespacesGetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the get operation. */
export declare type NamespacesGetResponse = EHNamespace;
/** Optional parameters. */
export interface NamespacesUpdateOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the update operation. */
export declare type NamespacesUpdateResponse = EHNamespace;
/** Optional parameters. */
export interface NamespacesCreateOrUpdateNetworkRuleSetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the createOrUpdateNetworkRuleSet operation. */
export declare type NamespacesCreateOrUpdateNetworkRuleSetResponse = NetworkRuleSet;
/** Optional parameters. */
export interface NamespacesGetNetworkRuleSetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getNetworkRuleSet operation. */
export declare type NamespacesGetNetworkRuleSetResponse = NetworkRuleSet;
/** Optional parameters. */
export interface NamespacesListNetworkRuleSetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listNetworkRuleSet operation. */
export declare type NamespacesListNetworkRuleSetResponse = NetworkRuleSetListResult;
/** Optional parameters. */
export interface NamespacesListAuthorizationRulesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listAuthorizationRules operation. */
export declare type NamespacesListAuthorizationRulesResponse = AuthorizationRuleListResult;
/** Optional parameters. */
export interface NamespacesCreateOrUpdateAuthorizationRuleOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the createOrUpdateAuthorizationRule operation. */
export declare type NamespacesCreateOrUpdateAuthorizationRuleResponse = AuthorizationRule;
/** Optional parameters. */
export interface NamespacesDeleteAuthorizationRuleOptionalParams extends coreClient.OperationOptions {
}
/** Optional parameters. */
export interface NamespacesGetAuthorizationRuleOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAuthorizationRule operation. */
export declare type NamespacesGetAuthorizationRuleResponse = AuthorizationRule;
/** Optional parameters. */
export interface NamespacesListKeysOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listKeys operation. */
export declare type NamespacesListKeysResponse = AccessKeys;
/** Optional parameters. */
export interface NamespacesRegenerateKeysOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the regenerateKeys operation. */
export declare type NamespacesRegenerateKeysResponse = AccessKeys;
/** Optional parameters. */
export interface NamespacesCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the checkNameAvailability operation. */
export declare type NamespacesCheckNameAvailabilityResponse = CheckNameAvailabilityResult;
/** Optional parameters. */
export interface NamespacesListNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listNext operation. */
export declare type NamespacesListNextResponse = EHNamespaceListResult;
/** Optional parameters. */
export interface NamespacesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listByResourceGroupNext operation. */
export declare type NamespacesListByResourceGroupNextResponse = EHNamespaceListResult;
/** Optional parameters. */
export interface NamespacesListAuthorizationRulesNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listAuthorizationRulesNext operation. */
export declare type NamespacesListAuthorizationRulesNextResponse = AuthorizationRuleListResult;
/** Optional parameters. */
export interface PrivateEndpointConnectionsListOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the list operation. */
export declare type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;
/** Optional parameters. */
export interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the createOrUpdate operation. */
export declare type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;
/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}
/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;
/** Optional parameters. */
export interface PrivateEndpointConnectionsListNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listNext operation. */
export declare type PrivateEndpointConnectionsListNextResponse = PrivateEndpointConnectionListResult;
/** Optional parameters. */
export interface PrivateLinkResourcesGetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the get operation. */
export declare type PrivateLinkResourcesGetResponse = PrivateLinkResourcesListResult;
/** Optional parameters. */
export interface OperationsListOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;
/** Optional parameters. */
export interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationListResult;
/** Optional parameters. */
export interface EventHubsListByNamespaceOptionalParams extends coreClient.OperationOptions {
    /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
    skip?: number;
    /** May be used to limit the number of results to the most recent N usageDetails. */
    top?: number;
}
/** Contains response data for the listByNamespace operation. */
export declare type EventHubsListByNamespaceResponse = EventHubListResult;
/** Optional parameters. */
export interface EventHubsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the createOrUpdate operation. */
export declare type EventHubsCreateOrUpdateResponse = Eventhub;
/** Optional parameters. */
export interface EventHubsDeleteOptionalParams extends coreClient.OperationOptions {
}
/** Optional parameters. */
export interface EventHubsGetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the get operation. */
export declare type EventHubsGetResponse = Eventhub;
/** Optional parameters. */
export interface EventHubsListAuthorizationRulesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listAuthorizationRules operation. */
export declare type EventHubsListAuthorizationRulesResponse = AuthorizationRuleListResult;
/** Optional parameters. */
export interface EventHubsCreateOrUpdateAuthorizationRuleOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the createOrUpdateAuthorizationRule operation. */
export declare type EventHubsCreateOrUpdateAuthorizationRuleResponse = AuthorizationRule;
/** Optional parameters. */
export interface EventHubsGetAuthorizationRuleOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAuthorizationRule operation. */
export declare type EventHubsGetAuthorizationRuleResponse = AuthorizationRule;
/** Optional parameters. */
export interface EventHubsDeleteAuthorizationRuleOptionalParams extends coreClient.OperationOptions {
}
/** Optional parameters. */
export interface EventHubsListKeysOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listKeys operation. */
export declare type EventHubsListKeysResponse = AccessKeys;
/** Optional parameters. */
export interface EventHubsRegenerateKeysOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the regenerateKeys operation. */
export declare type EventHubsRegenerateKeysResponse = AccessKeys;
/** Optional parameters. */
export interface EventHubsListByNamespaceNextOptionalParams extends coreClient.OperationOptions {
    /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
    skip?: number;
    /** May be used to limit the number of results to the most recent N usageDetails. */
    top?: number;
}
/** Contains response data for the listByNamespaceNext operation. */
export declare type EventHubsListByNamespaceNextResponse = EventHubListResult;
/** Optional parameters. */
export interface EventHubsListAuthorizationRulesNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listAuthorizationRulesNext operation. */
export declare type EventHubsListAuthorizationRulesNextResponse = AuthorizationRuleListResult;
/** Optional parameters. */
export interface DisasterRecoveryConfigsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the checkNameAvailability operation. */
export declare type DisasterRecoveryConfigsCheckNameAvailabilityResponse = CheckNameAvailabilityResult;
/** Optional parameters. */
export interface DisasterRecoveryConfigsListOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the list operation. */
export declare type DisasterRecoveryConfigsListResponse = ArmDisasterRecoveryListResult;
/** Optional parameters. */
export interface DisasterRecoveryConfigsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the createOrUpdate operation. */
export declare type DisasterRecoveryConfigsCreateOrUpdateResponse = ArmDisasterRecovery;
/** Optional parameters. */
export interface DisasterRecoveryConfigsDeleteOptionalParams extends coreClient.OperationOptions {
}
/** Optional parameters. */
export interface DisasterRecoveryConfigsGetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the get operation. */
export declare type DisasterRecoveryConfigsGetResponse = ArmDisasterRecovery;
/** Optional parameters. */
export interface DisasterRecoveryConfigsBreakPairingOptionalParams extends coreClient.OperationOptions {
}
/** Optional parameters. */
export interface DisasterRecoveryConfigsFailOverOptionalParams extends coreClient.OperationOptions {
}
/** Optional parameters. */
export interface DisasterRecoveryConfigsListAuthorizationRulesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listAuthorizationRules operation. */
export declare type DisasterRecoveryConfigsListAuthorizationRulesResponse = AuthorizationRuleListResult;
/** Optional parameters. */
export interface DisasterRecoveryConfigsGetAuthorizationRuleOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAuthorizationRule operation. */
export declare type DisasterRecoveryConfigsGetAuthorizationRuleResponse = AuthorizationRule;
/** Optional parameters. */
export interface DisasterRecoveryConfigsListKeysOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listKeys operation. */
export declare type DisasterRecoveryConfigsListKeysResponse = AccessKeys;
/** Optional parameters. */
export interface DisasterRecoveryConfigsListNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listNext operation. */
export declare type DisasterRecoveryConfigsListNextResponse = ArmDisasterRecoveryListResult;
/** Optional parameters. */
export interface DisasterRecoveryConfigsListAuthorizationRulesNextOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the listAuthorizationRulesNext operation. */
export declare type DisasterRecoveryConfigsListAuthorizationRulesNextResponse = AuthorizationRuleListResult;
/** Optional parameters. */
export interface ConsumerGroupsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the createOrUpdate operation. */
export declare type ConsumerGroupsCreateOrUpdateResponse = ConsumerGroup;
/** Optional parameters. */
export interface ConsumerGroupsDeleteOptionalParams extends coreClient.OperationOptions {
}
/** Optional parameters. */
export interface ConsumerGroupsGetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the get operation. */
export declare type ConsumerGroupsGetResponse = ConsumerGroup;
/** Optional parameters. */
export interface ConsumerGroupsListByEventHubOptionalParams extends coreClient.OperationOptions {
    /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
    skip?: number;
    /** May be used to limit the number of results to the most recent N usageDetails. */
    top?: number;
}
/** Contains response data for the listByEventHub operation. */
export declare type ConsumerGroupsListByEventHubResponse = ConsumerGroupListResult;
/** Optional parameters. */
export interface ConsumerGroupsListByEventHubNextOptionalParams extends coreClient.OperationOptions {
    /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
    skip?: number;
    /** May be used to limit the number of results to the most recent N usageDetails. */
    top?: number;
}
/** Contains response data for the listByEventHubNext operation. */
export declare type ConsumerGroupsListByEventHubNextResponse = ConsumerGroupListResult;
/** Optional parameters. */
export interface SchemaRegistryListByNamespaceOptionalParams extends coreClient.OperationOptions {
    /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
    skip?: number;
    /** May be used to limit the number of results to the most recent N usageDetails. */
    top?: number;
}
/** Contains response data for the listByNamespace operation. */
export declare type SchemaRegistryListByNamespaceResponse = SchemaGroupListResult;
/** Optional parameters. */
export interface SchemaRegistryCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the createOrUpdate operation. */
export declare type SchemaRegistryCreateOrUpdateResponse = SchemaGroup;
/** Optional parameters. */
export interface SchemaRegistryDeleteOptionalParams extends coreClient.OperationOptions {
}
/** Optional parameters. */
export interface SchemaRegistryGetOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the get operation. */
export declare type SchemaRegistryGetResponse = SchemaGroup;
/** Optional parameters. */
export interface SchemaRegistryListByNamespaceNextOptionalParams extends coreClient.OperationOptions {
    /** Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls. */
    skip?: number;
    /** May be used to limit the number of results to the most recent N usageDetails. */
    top?: number;
}
/** Contains response data for the listByNamespaceNext operation. */
export declare type SchemaRegistryListByNamespaceNextResponse = SchemaGroupListResult;
/** Optional parameters. */
export interface EventHubManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}
//# sourceMappingURL=index.d.ts.map