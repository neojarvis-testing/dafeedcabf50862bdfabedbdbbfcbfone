/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ContainerRegistryManagementClient } from "@azure/arm-containerregistry";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates an agent pool for a container registry with the specified parameters.
 *
 * @summary Creates an agent pool for a container registry with the specified parameters.
 * x-ms-original-file: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2019-06-01-preview/examples/AgentPoolsCreate.json
 */
function agentPoolsCreate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONTAINERREGISTRY_SUBSCRIPTION_ID"] ||
            "4385cf00-2d3a-425a-832f-f4285b1c9dce";
        const resourceGroupName = process.env["CONTAINERREGISTRY_RESOURCE_GROUP"] || "myResourceGroup";
        const registryName = "myRegistry";
        const agentPoolName = "myAgentPool";
        const agentPool = {
            count: 1,
            location: "WESTUS",
            os: "Linux",
            tags: { key: "value" },
            tier: "S1"
        };
        const credential = new DefaultAzureCredential();
        const client = new ContainerRegistryManagementClient(credential, subscriptionId);
        const result = yield client.agentPools.beginCreateAndWait(resourceGroupName, registryName, agentPoolName, agentPool);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        agentPoolsCreate();
    });
}
main().catch(console.error);
//# sourceMappingURL=agentPoolsCreateSample.js.map