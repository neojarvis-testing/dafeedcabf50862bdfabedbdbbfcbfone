/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ContainerRegistryManagementClient } from "@azure/arm-containerregistry";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Deletes the specified private endpoint connection associated with the container registry.
 *
 * @summary Deletes the specified private endpoint connection associated with the container registry.
 * x-ms-original-file: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/stable/2022-12-01/examples/PrivateEndpointConnectionDelete.json
 */
function privateEndpointConnectionDelete() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONTAINERREGISTRY_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = process.env["CONTAINERREGISTRY_RESOURCE_GROUP"] || "myResourceGroup";
        const registryName = "myRegistry";
        const privateEndpointConnectionName = "myConnection";
        const credential = new DefaultAzureCredential();
        const client = new ContainerRegistryManagementClient(credential, subscriptionId);
        const result = yield client.privateEndpointConnections.beginDeleteAndWait(resourceGroupName, registryName, privateEndpointConnectionName);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        privateEndpointConnectionDelete();
    });
}
main().catch(console.error);
//# sourceMappingURL=privateEndpointConnectionsDeleteSample.js.map