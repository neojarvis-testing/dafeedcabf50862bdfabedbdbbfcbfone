import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Projects, Machines, Groups, Assessments, AssessedMachines, HyperVCollectors, ServerCollectors, VMwareCollectors, ImportCollectors, PrivateEndpointConnectionOperations, PrivateLinkResourceOperations, Operations } from "./operationsInterfaces";
import { AzureMigrateV2OptionalParams } from "./models";
export declare class AzureMigrateV2 extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the AzureMigrateV2 class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Azure Subscription Id in which project was created.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AzureMigrateV2OptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    projects: Projects;
    machines: Machines;
    groups: Groups;
    assessments: Assessments;
    assessedMachines: AssessedMachines;
    hyperVCollectors: HyperVCollectors;
    serverCollectors: ServerCollectors;
    vMwareCollectors: VMwareCollectors;
    importCollectors: ImportCollectors;
    privateEndpointConnectionOperations: PrivateEndpointConnectionOperations;
    privateLinkResourceOperations: PrivateLinkResourceOperations;
    operations: Operations;
}
//# sourceMappingURL=azureMigrateV2.d.ts.map