import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { VMwareCollectors } from "../operationsInterfaces";
import { AzureMigrateV2 } from "../azureMigrateV2";
import { VMwareCollector, VMwareCollectorsListByProjectOptionalParams, VMwareCollectorsGetOptionalParams, VMwareCollectorsGetResponse, VMwareCollectorsCreateOptionalParams, VMwareCollectorsCreateResponse, VMwareCollectorsDeleteOptionalParams, VMwareCollectorsDeleteResponse } from "../models";
/** Class containing VMwareCollectors operations. */
export declare class VMwareCollectorsImpl implements VMwareCollectors {
    private readonly client;
    /**
     * Initialize a new instance of the class VMwareCollectors class.
     * @param client Reference to the service client
     */
    constructor(client: AzureMigrateV2);
    /**
     * Get a list of VMware collector.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param options The options parameters.
     */
    listByProject(resourceGroupName: string, projectName: string, options?: VMwareCollectorsListByProjectOptionalParams): PagedAsyncIterableIterator<VMwareCollector>;
    private listByProjectPagingPage;
    private listByProjectPagingAll;
    /**
     * Get a list of VMware collector.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param options The options parameters.
     */
    private _listByProject;
    /**
     * Get a VMware collector.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param vmWareCollectorName Unique name of a VMware collector within a project.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, projectName: string, vmWareCollectorName: string, options?: VMwareCollectorsGetOptionalParams): Promise<VMwareCollectorsGetResponse>;
    /**
     * Create or Update VMware collector
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param vmWareCollectorName Unique name of a VMware collector within a project.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, projectName: string, vmWareCollectorName: string, options?: VMwareCollectorsCreateOptionalParams): Promise<VMwareCollectorsCreateResponse>;
    /**
     * Delete a VMware collector from the project.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param vmWareCollectorName Unique name of a VMware collector within a project.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, projectName: string, vmWareCollectorName: string, options?: VMwareCollectorsDeleteOptionalParams): Promise<VMwareCollectorsDeleteResponse>;
}
//# sourceMappingURL=vMwareCollectors.d.ts.map