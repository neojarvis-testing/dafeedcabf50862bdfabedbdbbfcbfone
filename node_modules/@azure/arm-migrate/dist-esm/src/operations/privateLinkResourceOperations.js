/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing PrivateLinkResourceOperations operations. */
export class PrivateLinkResourceOperationsImpl {
    /**
     * Initialize a new instance of the class PrivateLinkResourceOperations class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Get information related to a specific private Link Resource in the project. Returns a json object of
     * type 'privateLinkResources' as specified in the models section.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param privateLinkResourceName Unique name of a private link resource within a project.
     * @param options The options parameters.
     */
    get(resourceGroupName, projectName, privateLinkResourceName, options) {
        return this.client.sendOperationRequest({ resourceGroupName, projectName, privateLinkResourceName, options }, getOperationSpec);
    }
    /**
     * Get all private link resources created in the project. Returns a json array of objects of type
     * 'privateLinkResources' as specified in the Models section.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param options The options parameters.
     */
    listByProject(resourceGroupName, projectName, options) {
        return this.client.sendOperationRequest({ resourceGroupName, projectName, options }, listByProjectOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentprojects/{projectName}/privateLinkResources/{privateLinkResourceName}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.PrivateLinkResource,
            headersMapper: Mappers.PrivateLinkResourceGetHeaders
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.projectName,
        Parameters.privateLinkResourceName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const listByProjectOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentprojects/{projectName}/privateLinkResources",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.PrivateLinkResourceCollection,
            headersMapper: Mappers.PrivateLinkResourceListByProjectHeaders
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.projectName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
//# sourceMappingURL=privateLinkResourceOperations.js.map