import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ServerCollectors } from "../operationsInterfaces";
import { AzureMigrateV2 } from "../azureMigrateV2";
import { ServerCollector, ServerCollectorsListByProjectOptionalParams, ServerCollectorsGetOptionalParams, ServerCollectorsGetResponse, ServerCollectorsCreateOptionalParams, ServerCollectorsCreateResponse, ServerCollectorsDeleteOptionalParams, ServerCollectorsDeleteResponse } from "../models";
/** Class containing ServerCollectors operations. */
export declare class ServerCollectorsImpl implements ServerCollectors {
    private readonly client;
    /**
     * Initialize a new instance of the class ServerCollectors class.
     * @param client Reference to the service client
     */
    constructor(client: AzureMigrateV2);
    /**
     * Get a list of Server collector.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param options The options parameters.
     */
    listByProject(resourceGroupName: string, projectName: string, options?: ServerCollectorsListByProjectOptionalParams): PagedAsyncIterableIterator<ServerCollector>;
    private listByProjectPagingPage;
    private listByProjectPagingAll;
    /**
     * Get a list of Server collector.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param options The options parameters.
     */
    private _listByProject;
    /**
     * Get a Server collector.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param serverCollectorName Unique name of a Server collector within a project.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, projectName: string, serverCollectorName: string, options?: ServerCollectorsGetOptionalParams): Promise<ServerCollectorsGetResponse>;
    /**
     * Create or Update Server collector
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param serverCollectorName Unique name of a Server collector within a project.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, projectName: string, serverCollectorName: string, options?: ServerCollectorsCreateOptionalParams): Promise<ServerCollectorsCreateResponse>;
    /**
     * Delete a Server collector from the project.
     * @param resourceGroupName Name of the Azure Resource Group that project is part of.
     * @param projectName Name of the Azure Migrate project.
     * @param serverCollectorName Unique name of a Server collector within a project.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, projectName: string, serverCollectorName: string, options?: ServerCollectorsDeleteOptionalParams): Promise<ServerCollectorsDeleteResponse>;
}
//# sourceMappingURL=serverCollectors.d.ts.map