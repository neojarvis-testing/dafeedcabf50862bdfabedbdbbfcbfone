/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureMigrateV2 } from "@azure/arm-migrate";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Create a new group by sending a json object of type 'group' as given in Models section as part of the Request Body. The group name in a project is unique.

This operation is Idempotent.

 *
 * @summary Create a new group by sending a json object of type 'group' as given in Models section as part of the Request Body. The group name in a project is unique.

This operation is Idempotent.

 * x-ms-original-file: specification/migrate/resource-manager/Microsoft.Migrate/stable/2019-10-01/examples/Groups_Create.json
 */
function groupsCreate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["MIGRATE_SUBSCRIPTION_ID"] ||
            "6393a73f-8d55-47ef-b6dd-179b3e0c7910";
        const resourceGroupName = process.env["MIGRATE_RESOURCE_GROUP"] || "abgoyal-westEurope";
        const projectName = "abgoyalWEselfhostb72bproject";
        const groupName = "Group2";
        const group = {
            eTag: '"1e000c2c-0000-0d00-0000-5cdaa4190000"',
            properties: {}
        };
        const options = { group };
        const credential = new DefaultAzureCredential();
        const client = new AzureMigrateV2(credential, subscriptionId);
        const result = yield client.groups.create(resourceGroupName, projectName, groupName, options);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        groupsCreate();
    });
}
main().catch(console.error);
//# sourceMappingURL=groupsCreateSample.js.map