/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { DnsManagementClient } from "@azure/arm-dns";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetARecordset.json
 */
function getARecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "A";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getARecordset().catch(console.error);
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetAAAARecordset.json
 */
function getAaaaRecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "AAAA";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getAaaaRecordset().catch(console.error);
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetCaaRecordset.json
 */
function getCaaRecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "CAA";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getCaaRecordset().catch(console.error);
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetCNAMERecordset.json
 */
function getCnameRecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "CNAME";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getCnameRecordset().catch(console.error);
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetMXRecordset.json
 */
function getMxRecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "MX";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getMxRecordset().catch(console.error);
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetNSRecordset.json
 */
function getNsRecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "NS";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getNsRecordset().catch(console.error);
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetPTRRecordset.json
 */
function getPtrRecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "0.0.127.in-addr.arpa";
        const relativeRecordSetName = "1";
        const recordType = "PTR";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getPtrRecordset().catch(console.error);
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetSOARecordset.json
 */
function getSoaRecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "@";
        const recordType = "SOA";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getSoaRecordset().catch(console.error);
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetSRVRecordset.json
 */
function getSrvRecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "SRV";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getSrvRecordset().catch(console.error);
/**
 * This sample demonstrates how to Gets a record set.
 *
 * @summary Gets a record set.
 * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/GetTXTRecordset.json
 */
function getTxtRecordset() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "TXT";
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = yield client.recordSets.get(resourceGroupName, zoneName, relativeRecordSetName, recordType);
        console.log(result);
    });
}
getTxtRecordset().catch(console.error);
//# sourceMappingURL=recordSetsGetSample.js.map