/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ApiManagementClient } from "@azure/arm-apimanagement";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Updates an existing API Management service.
 *
 * @summary Updates an existing API Management service.
 * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2022-08-01/examples/ApiManagementUpdateServiceDisableTls10.json
 */
function apiManagementUpdateServiceDisableTls10() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["APIMANAGEMENT_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["APIMANAGEMENT_RESOURCE_GROUP"] || "rg1";
        const serviceName = "apimService1";
        const parameters = {
            customProperties: {
                microsoftWindowsAzureApiManagementGatewaySecurityProtocolsTls10: "false"
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = yield client.apiManagementService.beginUpdateAndWait(resourceGroupName, serviceName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Updates an existing API Management service.
 *
 * @summary Updates an existing API Management service.
 * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2022-08-01/examples/ApiManagementUpdateServicePublisherDetails.json
 */
function apiManagementUpdateServicePublisherDetails() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["APIMANAGEMENT_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["APIMANAGEMENT_RESOURCE_GROUP"] || "rg1";
        const serviceName = "apimService1";
        const parameters = {
            publisherEmail: "foobar@live.com",
            publisherName: "Contoso Vnext"
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = yield client.apiManagementService.beginUpdateAndWait(resourceGroupName, serviceName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Updates an existing API Management service.
 *
 * @summary Updates an existing API Management service.
 * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2022-08-01/examples/ApiManagementUpdateServiceToNewVnetAndAZs.json
 */
function apiManagementUpdateServiceToNewVnetAndAvailabilityZones() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["APIMANAGEMENT_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["APIMANAGEMENT_RESOURCE_GROUP"] || "rg1";
        const serviceName = "apimService1";
        const parameters = {
            additionalLocations: [
                {
                    location: "Australia East",
                    publicIpAddressId: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/apim-australia-east-publicip",
                    sku: { name: "Premium", capacity: 3 },
                    virtualNetworkConfiguration: {
                        subnetResourceId: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/apimaeavnet/subnets/default"
                    },
                    zones: ["1", "2", "3"]
                }
            ],
            publicIpAddressId: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/publicip-apim-japan-east",
            sku: { name: "Premium", capacity: 3 },
            virtualNetworkConfiguration: {
                subnetResourceId: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet-apim-japaneast/subnets/apim2"
            },
            virtualNetworkType: "External",
            zones: ["1", "2", "3"]
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = yield client.apiManagementService.beginUpdateAndWait(resourceGroupName, serviceName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        apiManagementUpdateServiceDisableTls10();
        apiManagementUpdateServicePublisherDetails();
        apiManagementUpdateServiceToNewVnetAndAvailabilityZones();
    });
}
main().catch(console.error);
//# sourceMappingURL=apiManagementServiceUpdateSample.js.map