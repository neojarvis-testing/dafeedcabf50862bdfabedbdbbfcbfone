import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Operations } from "../operationsInterfaces";
import { AppConfigurationManagementClient } from "../appConfigurationManagementClient";
import { OperationDefinition, OperationsListOptionalParams, CheckNameAvailabilityParameters, OperationsCheckNameAvailabilityOptionalParams, OperationsCheckNameAvailabilityResponse, OperationsRegionalCheckNameAvailabilityOptionalParams, OperationsRegionalCheckNameAvailabilityResponse } from "../models";
/** Class containing Operations operations. */
export declare class OperationsImpl implements Operations {
    private readonly client;
    /**
     * Initialize a new instance of the class Operations class.
     * @param client Reference to the service client
     */
    constructor(client: AppConfigurationManagementClient);
    /**
     * Lists the operations available from this provider.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<OperationDefinition>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Checks whether the configuration store name is available for use.
     * @param checkNameAvailabilityParameters The object containing information for the availability
     *                                        request.
     * @param options The options parameters.
     */
    checkNameAvailability(checkNameAvailabilityParameters: CheckNameAvailabilityParameters, options?: OperationsCheckNameAvailabilityOptionalParams): Promise<OperationsCheckNameAvailabilityResponse>;
    /**
     * Lists the operations available from this provider.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Checks whether the configuration store name is available for use.
     * @param location The location in which uniqueness will be verified.
     * @param checkNameAvailabilityParameters The object containing information for the availability
     *                                        request.
     * @param options The options parameters.
     */
    regionalCheckNameAvailability(location: string, checkNameAvailabilityParameters: CheckNameAvailabilityParameters, options?: OperationsRegionalCheckNameAvailabilityOptionalParams): Promise<OperationsRegionalCheckNameAvailabilityResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=operations.d.ts.map