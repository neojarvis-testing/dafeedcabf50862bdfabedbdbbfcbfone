/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const ServerForCreate = {
    type: {
        name: "Composite",
        className: "ServerForCreate",
        modelProperties: {
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ResourceIdentity"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "ServerPropertiesForCreate"
                }
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const ResourceIdentity = {
    type: {
        name: "Composite",
        className: "ResourceIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
export const Sku = {
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "String"
                }
            },
            capacity: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "capacity",
                type: {
                    name: "Number"
                }
            },
            size: {
                serializedName: "size",
                type: {
                    name: "String"
                }
            },
            family: {
                serializedName: "family",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerPropertiesForCreate = {
    type: {
        name: "Composite",
        className: "ServerPropertiesForCreate",
        uberParent: "ServerPropertiesForCreate",
        polymorphicDiscriminator: {
            serializedName: "createMode",
            clientName: "createMode"
        },
        modelProperties: {
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            sslEnforcement: {
                serializedName: "sslEnforcement",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            },
            minimalTlsVersion: {
                serializedName: "minimalTlsVersion",
                type: {
                    name: "String"
                }
            },
            infrastructureEncryption: {
                serializedName: "infrastructureEncryption",
                type: {
                    name: "String"
                }
            },
            publicNetworkAccess: {
                serializedName: "publicNetworkAccess",
                type: {
                    name: "String"
                }
            },
            storageProfile: {
                serializedName: "storageProfile",
                type: {
                    name: "Composite",
                    className: "StorageProfile"
                }
            },
            createMode: {
                serializedName: "createMode",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageProfile = {
    type: {
        name: "Composite",
        className: "StorageProfile",
        modelProperties: {
            backupRetentionDays: {
                serializedName: "backupRetentionDays",
                type: {
                    name: "Number"
                }
            },
            geoRedundantBackup: {
                serializedName: "geoRedundantBackup",
                type: {
                    name: "String"
                }
            },
            storageMB: {
                serializedName: "storageMB",
                type: {
                    name: "Number"
                }
            },
            storageAutogrow: {
                serializedName: "storageAutogrow",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerPrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "ServerPrivateEndpointConnection",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "ServerPrivateEndpointConnectionProperties"
                }
            }
        }
    }
};
export const ServerPrivateEndpointConnectionProperties = {
    type: {
        name: "Composite",
        className: "ServerPrivateEndpointConnectionProperties",
        modelProperties: {
            privateEndpoint: {
                serializedName: "privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpointProperty"
                }
            },
            privateLinkServiceConnectionState: {
                serializedName: "privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "ServerPrivateLinkServiceConnectionStateProperty"
                }
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateEndpointProperty = {
    type: {
        name: "Composite",
        className: "PrivateEndpointProperty",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerPrivateLinkServiceConnectionStateProperty = {
    type: {
        name: "Composite",
        className: "ServerPrivateLinkServiceConnectionStateProperty",
        modelProperties: {
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                required: true,
                type: {
                    name: "String"
                }
            },
            actionsRequired: {
                serializedName: "actionsRequired",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CloudError = {
    type: {
        name: "Composite",
        className: "CloudError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorResponse"
                }
            }
        }
    }
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorResponse"
                        }
                    }
                }
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo"
                        }
                    }
                }
            }
        }
    }
};
export const ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }
        }
    }
};
export const ServerUpdateParameters = {
    type: {
        name: "Composite",
        className: "ServerUpdateParameters",
        modelProperties: {
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ResourceIdentity"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            storageProfile: {
                serializedName: "properties.storageProfile",
                type: {
                    name: "Composite",
                    className: "StorageProfile"
                }
            },
            administratorLoginPassword: {
                serializedName: "properties.administratorLoginPassword",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            },
            sslEnforcement: {
                serializedName: "properties.sslEnforcement",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            },
            minimalTlsVersion: {
                serializedName: "properties.minimalTlsVersion",
                type: {
                    name: "String"
                }
            },
            publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String"
                }
            },
            replicationRole: {
                serializedName: "properties.replicationRole",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerListResult = {
    type: {
        name: "Composite",
        className: "ServerListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Server"
                        }
                    }
                }
            }
        }
    }
};
export const FirewallRuleListResult = {
    type: {
        name: "Composite",
        className: "FirewallRuleListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FirewallRule"
                        }
                    }
                }
            }
        }
    }
};
export const VirtualNetworkRuleListResult = {
    type: {
        name: "Composite",
        className: "VirtualNetworkRuleListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseListResult = {
    type: {
        name: "Composite",
        className: "DatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Database"
                        }
                    }
                }
            }
        }
    }
};
export const ConfigurationListResult = {
    type: {
        name: "Composite",
        className: "ConfigurationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Configuration"
                        }
                    }
                }
            }
        }
    }
};
export const LogFileListResult = {
    type: {
        name: "Composite",
        className: "LogFileListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LogFile"
                        }
                    }
                }
            }
        }
    }
};
export const ServerAdministratorResourceListResult = {
    type: {
        name: "Composite",
        className: "ServerAdministratorResourceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerAdministratorResource"
                        }
                    }
                }
            }
        }
    }
};
export const PerformanceTierListResult = {
    type: {
        name: "Composite",
        className: "PerformanceTierListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PerformanceTierProperties"
                        }
                    }
                }
            }
        }
    }
};
export const PerformanceTierProperties = {
    type: {
        name: "Composite",
        className: "PerformanceTierProperties",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            maxBackupRetentionDays: {
                serializedName: "maxBackupRetentionDays",
                type: {
                    name: "Number"
                }
            },
            minBackupRetentionDays: {
                serializedName: "minBackupRetentionDays",
                type: {
                    name: "Number"
                }
            },
            maxStorageMB: {
                serializedName: "maxStorageMB",
                type: {
                    name: "Number"
                }
            },
            minLargeStorageMB: {
                serializedName: "minLargeStorageMB",
                type: {
                    name: "Number"
                }
            },
            maxLargeStorageMB: {
                serializedName: "maxLargeStorageMB",
                type: {
                    name: "Number"
                }
            },
            minStorageMB: {
                serializedName: "minStorageMB",
                type: {
                    name: "Number"
                }
            },
            serviceLevelObjectives: {
                serializedName: "serviceLevelObjectives",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PerformanceTierServiceLevelObjectives"
                        }
                    }
                }
            }
        }
    }
};
export const PerformanceTierServiceLevelObjectives = {
    type: {
        name: "Composite",
        className: "PerformanceTierServiceLevelObjectives",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            edition: {
                serializedName: "edition",
                type: {
                    name: "String"
                }
            },
            vCore: {
                serializedName: "vCore",
                type: {
                    name: "Number"
                }
            },
            hardwareGeneration: {
                serializedName: "hardwareGeneration",
                type: {
                    name: "String"
                }
            },
            maxBackupRetentionDays: {
                serializedName: "maxBackupRetentionDays",
                type: {
                    name: "Number"
                }
            },
            minBackupRetentionDays: {
                serializedName: "minBackupRetentionDays",
                type: {
                    name: "Number"
                }
            },
            maxStorageMB: {
                serializedName: "maxStorageMB",
                type: {
                    name: "Number"
                }
            },
            minStorageMB: {
                serializedName: "minStorageMB",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const NameAvailabilityRequest = {
    type: {
        name: "Composite",
        className: "NameAvailabilityRequest",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const NameAvailability = {
    type: {
        name: "Composite",
        className: "NameAvailability",
        modelProperties: {
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            nameAvailable: {
                serializedName: "nameAvailable",
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            }
        }
    }
};
export const Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Dictionary", value: { type: { name: "any" } } }
                    }
                }
            }
        }
    }
};
export const OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerSecurityAlertPolicyListResult = {
    type: {
        name: "Composite",
        className: "ServerSecurityAlertPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerSecurityAlertPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const QueryTextsResultList = {
    type: {
        name: "Composite",
        className: "QueryTextsResultList",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "QueryText"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TopQueryStatisticsInput = {
    type: {
        name: "Composite",
        className: "TopQueryStatisticsInput",
        modelProperties: {
            numberOfTopQueries: {
                serializedName: "properties.numberOfTopQueries",
                required: true,
                type: {
                    name: "Number"
                }
            },
            aggregationFunction: {
                serializedName: "properties.aggregationFunction",
                required: true,
                type: {
                    name: "String"
                }
            },
            observedMetric: {
                serializedName: "properties.observedMetric",
                required: true,
                type: {
                    name: "String"
                }
            },
            observationStartTime: {
                serializedName: "properties.observationStartTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            observationEndTime: {
                serializedName: "properties.observationEndTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            aggregationWindow: {
                serializedName: "properties.aggregationWindow",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TopQueryStatisticsResultList = {
    type: {
        name: "Composite",
        className: "TopQueryStatisticsResultList",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "QueryStatistic"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WaitStatisticsInput = {
    type: {
        name: "Composite",
        className: "WaitStatisticsInput",
        modelProperties: {
            observationStartTime: {
                serializedName: "properties.observationStartTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            observationEndTime: {
                serializedName: "properties.observationEndTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            aggregationWindow: {
                serializedName: "properties.aggregationWindow",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WaitStatisticsResultList = {
    type: {
        name: "Composite",
        className: "WaitStatisticsResultList",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WaitStatistic"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const QueryPerformanceInsightResetDataResult = {
    type: {
        name: "Composite",
        className: "QueryPerformanceInsightResetDataResult",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AdvisorsResultList = {
    type: {
        name: "Composite",
        className: "AdvisorsResultList",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Advisor"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RecommendationActionsResultList = {
    type: {
        name: "Composite",
        className: "RecommendationActionsResultList",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RecommendationAction"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RecommendedActionSessionsOperationStatus = {
    type: {
        name: "Composite",
        className: "RecommendedActionSessionsOperationStatus",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkServiceConnectionStateProperty = {
    type: {
        name: "Composite",
        className: "PrivateLinkServiceConnectionStateProperty",
        modelProperties: {
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                required: true,
                type: {
                    name: "String"
                }
            },
            actionsRequired: {
                serializedName: "actionsRequired",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TagsObject = {
    type: {
        name: "Composite",
        className: "TagsObject",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const PrivateEndpointConnectionListResult = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkResourceListResult = {
    type: {
        name: "Composite",
        className: "PrivateLinkResourceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateLinkResource"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkResourceProperties = {
    type: {
        name: "Composite",
        className: "PrivateLinkResourceProperties",
        modelProperties: {
            groupId: {
                serializedName: "groupId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            requiredMembers: {
                serializedName: "requiredMembers",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const ServerKeyListResult = {
    type: {
        name: "Composite",
        className: "ServerKeyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerKey"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CloudErrorAutoGenerated = {
    type: {
        name: "Composite",
        className: "CloudErrorAutoGenerated",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorResponse"
                }
            }
        }
    }
};
export const ServerUpgradeParameters = {
    type: {
        name: "Composite",
        className: "ServerUpgradeParameters",
        modelProperties: {
            targetServerVersion: {
                serializedName: "properties.targetServerVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerPropertiesForDefaultCreate = {
    serializedName: "Default",
    type: {
        name: "Composite",
        className: "ServerPropertiesForDefaultCreate",
        uberParent: "ServerPropertiesForCreate",
        polymorphicDiscriminator: ServerPropertiesForCreate.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, ServerPropertiesForCreate.type.modelProperties), { administratorLogin: {
                serializedName: "administratorLogin",
                required: true,
                type: {
                    name: "String"
                }
            }, administratorLoginPassword: {
                serializedName: "administratorLoginPassword",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServerPropertiesForRestore = {
    serializedName: "PointInTimeRestore",
    type: {
        name: "Composite",
        className: "ServerPropertiesForRestore",
        uberParent: "ServerPropertiesForCreate",
        polymorphicDiscriminator: ServerPropertiesForCreate.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, ServerPropertiesForCreate.type.modelProperties), { sourceServerId: {
                serializedName: "sourceServerId",
                required: true,
                type: {
                    name: "String"
                }
            }, restorePointInTime: {
                serializedName: "restorePointInTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export const ServerPropertiesForGeoRestore = {
    serializedName: "GeoRestore",
    type: {
        name: "Composite",
        className: "ServerPropertiesForGeoRestore",
        uberParent: "ServerPropertiesForCreate",
        polymorphicDiscriminator: ServerPropertiesForCreate.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, ServerPropertiesForCreate.type.modelProperties), { sourceServerId: {
                serializedName: "sourceServerId",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServerPropertiesForReplica = {
    serializedName: "Replica",
    type: {
        name: "Composite",
        className: "ServerPropertiesForReplica",
        uberParent: "ServerPropertiesForCreate",
        polymorphicDiscriminator: ServerPropertiesForCreate.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, ServerPropertiesForCreate.type.modelProperties), { sourceServerId: {
                serializedName: "sourceServerId",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: Object.assign({}, Resource.type.modelProperties)
    }
};
export const Server = {
    type: {
        name: "Composite",
        className: "Server",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ResourceIdentity"
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, administratorLogin: {
                serializedName: "properties.administratorLogin",
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            }, sslEnforcement: {
                serializedName: "properties.sslEnforcement",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, minimalTlsVersion: {
                serializedName: "properties.minimalTlsVersion",
                type: {
                    name: "String"
                }
            }, byokEnforcement: {
                serializedName: "properties.byokEnforcement",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, infrastructureEncryption: {
                serializedName: "properties.infrastructureEncryption",
                type: {
                    name: "String"
                }
            }, userVisibleState: {
                serializedName: "properties.userVisibleState",
                type: {
                    name: "String"
                }
            }, fullyQualifiedDomainName: {
                serializedName: "properties.fullyQualifiedDomainName",
                type: {
                    name: "String"
                }
            }, earliestRestoreDate: {
                serializedName: "properties.earliestRestoreDate",
                type: {
                    name: "DateTime"
                }
            }, storageProfile: {
                serializedName: "properties.storageProfile",
                type: {
                    name: "Composite",
                    className: "StorageProfile"
                }
            }, replicationRole: {
                serializedName: "properties.replicationRole",
                type: {
                    name: "String"
                }
            }, masterServerId: {
                serializedName: "properties.masterServerId",
                type: {
                    name: "String"
                }
            }, replicaCapacity: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "properties.replicaCapacity",
                type: {
                    name: "Number"
                }
            }, publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String"
                }
            }, privateEndpointConnections: {
                serializedName: "properties.privateEndpointConnections",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerPrivateEndpointConnection"
                        }
                    }
                }
            } })
    }
};
export const FirewallRule = {
    type: {
        name: "Composite",
        className: "FirewallRule",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { startIpAddress: {
                constraints: {
                    Pattern: new RegExp("^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$")
                },
                serializedName: "properties.startIpAddress",
                required: true,
                type: {
                    name: "String"
                }
            }, endIpAddress: {
                constraints: {
                    Pattern: new RegExp("^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$")
                },
                serializedName: "properties.endIpAddress",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const VirtualNetworkRule = {
    type: {
        name: "Composite",
        className: "VirtualNetworkRule",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { virtualNetworkSubnetId: {
                serializedName: "properties.virtualNetworkSubnetId",
                type: {
                    name: "String"
                }
            }, ignoreMissingVnetServiceEndpoint: {
                serializedName: "properties.ignoreMissingVnetServiceEndpoint",
                type: {
                    name: "Boolean"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const Database = {
    type: {
        name: "Composite",
        className: "Database",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { charset: {
                serializedName: "properties.charset",
                type: {
                    name: "String"
                }
            }, collation: {
                serializedName: "properties.collation",
                type: {
                    name: "String"
                }
            } })
    }
};
export const Configuration = {
    type: {
        name: "Composite",
        className: "Configuration",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { value: {
                serializedName: "properties.value",
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, defaultValue: {
                serializedName: "properties.defaultValue",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, dataType: {
                serializedName: "properties.dataType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, allowedValues: {
                serializedName: "properties.allowedValues",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, source: {
                serializedName: "properties.source",
                type: {
                    name: "String"
                }
            } })
    }
};
export const LogFile = {
    type: {
        name: "Composite",
        className: "LogFile",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { sizeInKB: {
                serializedName: "properties.sizeInKB",
                type: {
                    name: "Number"
                }
            }, createdTime: {
                serializedName: "properties.createdTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, typePropertiesType: {
                serializedName: "properties.type",
                type: {
                    name: "String"
                }
            }, url: {
                serializedName: "properties.url",
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServerAdministratorResource = {
    type: {
        name: "Composite",
        className: "ServerAdministratorResource",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { administratorType: {
                defaultValue: "ActiveDirectory",
                isConstant: true,
                serializedName: "properties.administratorType",
                type: {
                    name: "String"
                }
            }, login: {
                serializedName: "properties.login",
                type: {
                    name: "String"
                }
            }, sid: {
                serializedName: "properties.sid",
                type: {
                    name: "Uuid"
                }
            }, tenantId: {
                serializedName: "properties.tenantId",
                type: {
                    name: "Uuid"
                }
            } })
    }
};
export const RecoverableServerResource = {
    type: {
        name: "Composite",
        className: "RecoverableServerResource",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { lastAvailableBackupDateTime: {
                serializedName: "properties.lastAvailableBackupDateTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serviceLevelObjective: {
                serializedName: "properties.serviceLevelObjective",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, edition: {
                serializedName: "properties.edition",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, vCore: {
                serializedName: "properties.vCore",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, hardwareGeneration: {
                serializedName: "properties.hardwareGeneration",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServerSecurityAlertPolicy = {
    type: {
        name: "Composite",
        className: "ServerSecurityAlertPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, disabledAlerts: {
                serializedName: "properties.disabledAlerts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAddresses: {
                serializedName: "properties.emailAddresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAccountAdmins: {
                serializedName: "properties.emailAccountAdmins",
                type: {
                    name: "Boolean"
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            } })
    }
};
export const QueryText = {
    type: {
        name: "Composite",
        className: "QueryText",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { queryId: {
                serializedName: "properties.queryId",
                type: {
                    name: "String"
                }
            }, queryText: {
                serializedName: "properties.queryText",
                type: {
                    name: "String"
                }
            } })
    }
};
export const QueryStatistic = {
    type: {
        name: "Composite",
        className: "QueryStatistic",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { queryId: {
                serializedName: "properties.queryId",
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, aggregationFunction: {
                serializedName: "properties.aggregationFunction",
                type: {
                    name: "String"
                }
            }, databaseNames: {
                serializedName: "properties.databaseNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, queryExecutionCount: {
                serializedName: "properties.queryExecutionCount",
                type: {
                    name: "Number"
                }
            }, metricName: {
                serializedName: "properties.metricName",
                type: {
                    name: "String"
                }
            }, metricDisplayName: {
                serializedName: "properties.metricDisplayName",
                type: {
                    name: "String"
                }
            }, metricValue: {
                serializedName: "properties.metricValue",
                type: {
                    name: "Number"
                }
            }, metricValueUnit: {
                serializedName: "properties.metricValueUnit",
                type: {
                    name: "String"
                }
            } })
    }
};
export const WaitStatistic = {
    type: {
        name: "Composite",
        className: "WaitStatistic",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { startTime: {
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, eventName: {
                serializedName: "properties.eventName",
                type: {
                    name: "String"
                }
            }, eventTypeName: {
                serializedName: "properties.eventTypeName",
                type: {
                    name: "String"
                }
            }, queryId: {
                serializedName: "properties.queryId",
                type: {
                    name: "Number"
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                type: {
                    name: "String"
                }
            }, userId: {
                serializedName: "properties.userId",
                type: {
                    name: "Number"
                }
            }, count: {
                serializedName: "properties.count",
                type: {
                    name: "Number"
                }
            }, totalTimeInMs: {
                serializedName: "properties.totalTimeInMs",
                type: {
                    name: "Number"
                }
            } })
    }
};
export const Advisor = {
    type: {
        name: "Composite",
        className: "Advisor",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            } })
    }
};
export const RecommendationAction = {
    type: {
        name: "Composite",
        className: "RecommendationAction",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { advisorName: {
                serializedName: "properties.advisorName",
                type: {
                    name: "String"
                }
            }, sessionId: {
                serializedName: "properties.sessionId",
                type: {
                    name: "String"
                }
            }, actionId: {
                serializedName: "properties.actionId",
                type: {
                    name: "Number"
                }
            }, createdTime: {
                serializedName: "properties.createdTime",
                type: {
                    name: "DateTime"
                }
            }, expirationTime: {
                serializedName: "properties.expirationTime",
                type: {
                    name: "DateTime"
                }
            }, reason: {
                serializedName: "properties.reason",
                type: {
                    name: "String"
                }
            }, recommendationType: {
                serializedName: "properties.recommendationType",
                type: {
                    name: "String"
                }
            }, details: {
                serializedName: "properties.details",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            } })
    }
};
export const PrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnection",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { privateEndpoint: {
                serializedName: "properties.privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpointProperty"
                }
            }, privateLinkServiceConnectionState: {
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkServiceConnectionStateProperty"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const PrivateLinkResource = {
    type: {
        name: "Composite",
        className: "PrivateLinkResource",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "PrivateLinkResourceProperties"
                }
            } })
    }
};
export const ServerKey = {
    type: {
        name: "Composite",
        className: "ServerKey",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverKeyType: {
                serializedName: "properties.serverKeyType",
                type: {
                    name: "String"
                }
            }, uri: {
                serializedName: "properties.uri",
                type: {
                    name: "String"
                }
            }, creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export let discriminators = {
    ServerPropertiesForCreate: ServerPropertiesForCreate,
    "ServerPropertiesForCreate.Default": ServerPropertiesForDefaultCreate,
    "ServerPropertiesForCreate.PointInTimeRestore": ServerPropertiesForRestore,
    "ServerPropertiesForCreate.GeoRestore": ServerPropertiesForGeoRestore,
    "ServerPropertiesForCreate.Replica": ServerPropertiesForReplica
};
//# sourceMappingURL=mappers.js.map