import { LocationBasedRecommendedActionSessionsOperationStatus } from "../operationsInterfaces";
import { MySQLManagementClient } from "../mySQLManagementClient";
import { LocationBasedRecommendedActionSessionsOperationStatusGetOptionalParams, LocationBasedRecommendedActionSessionsOperationStatusGetResponse } from "../models";
/** Class containing LocationBasedRecommendedActionSessionsOperationStatus operations. */
export declare class LocationBasedRecommendedActionSessionsOperationStatusImpl implements LocationBasedRecommendedActionSessionsOperationStatus {
    private readonly client;
    /**
     * Initialize a new instance of the class LocationBasedRecommendedActionSessionsOperationStatus class.
     * @param client Reference to the service client
     */
    constructor(client: MySQLManagementClient);
    /**
     * Recommendation action session operation status.
     * @param locationName The name of the location.
     * @param operationId The operation identifier.
     * @param options The options parameters.
     */
    get(locationName: string, operationId: string, options?: LocationBasedRecommendedActionSessionsOperationStatusGetOptionalParams): Promise<LocationBasedRecommendedActionSessionsOperationStatusGetResponse>;
}
//# sourceMappingURL=locationBasedRecommendedActionSessionsOperationStatus.d.ts.map