import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { LocationBasedRecommendedActionSessionsResult } from "../operationsInterfaces";
import { MySQLManagementClient } from "../mySQLManagementClient";
import { RecommendationAction, LocationBasedRecommendedActionSessionsResultListOptionalParams } from "../models";
/** Class containing LocationBasedRecommendedActionSessionsResult operations. */
export declare class LocationBasedRecommendedActionSessionsResultImpl implements LocationBasedRecommendedActionSessionsResult {
    private readonly client;
    /**
     * Initialize a new instance of the class LocationBasedRecommendedActionSessionsResult class.
     * @param client Reference to the service client
     */
    constructor(client: MySQLManagementClient);
    /**
     * Recommendation action session operation result.
     * @param locationName The name of the location.
     * @param operationId The operation identifier.
     * @param options The options parameters.
     */
    list(locationName: string, operationId: string, options?: LocationBasedRecommendedActionSessionsResultListOptionalParams): PagedAsyncIterableIterator<RecommendationAction>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Recommendation action session operation result.
     * @param locationName The name of the location.
     * @param operationId The operation identifier.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param locationName The name of the location.
     * @param operationId The operation identifier.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=locationBasedRecommendedActionSessionsResult.d.ts.map