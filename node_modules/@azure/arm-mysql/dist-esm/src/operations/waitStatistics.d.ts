import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { WaitStatistics } from "../operationsInterfaces";
import { MySQLManagementClient } from "../mySQLManagementClient";
import { WaitStatistic, WaitStatisticsInput, WaitStatisticsListByServerOptionalParams, WaitStatisticsGetOptionalParams, WaitStatisticsGetResponse } from "../models";
/** Class containing WaitStatistics operations. */
export declare class WaitStatisticsImpl implements WaitStatistics {
    private readonly client;
    /**
     * Initialize a new instance of the class WaitStatistics class.
     * @param client Reference to the service client
     */
    constructor(client: MySQLManagementClient);
    /**
     * Retrieve wait statistics for specified aggregation window.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param parameters The required parameters for retrieving wait statistics.
     * @param options The options parameters.
     */
    listByServer(resourceGroupName: string, serverName: string, parameters: WaitStatisticsInput, options?: WaitStatisticsListByServerOptionalParams): PagedAsyncIterableIterator<WaitStatistic>;
    private listByServerPagingPage;
    private listByServerPagingAll;
    /**
     * Retrieve wait statistics for specified identifier.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param waitStatisticsId The Wait Statistic identifier.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serverName: string, waitStatisticsId: string, options?: WaitStatisticsGetOptionalParams): Promise<WaitStatisticsGetResponse>;
    /**
     * Retrieve wait statistics for specified aggregation window.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param parameters The required parameters for retrieving wait statistics.
     * @param options The options parameters.
     */
    private _listByServer;
    /**
     * ListByServerNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param parameters The required parameters for retrieving wait statistics.
     * @param nextLink The nextLink from the previous successful call to the ListByServer method.
     * @param options The options parameters.
     */
    private _listByServerNext;
}
//# sourceMappingURL=waitStatistics.d.ts.map