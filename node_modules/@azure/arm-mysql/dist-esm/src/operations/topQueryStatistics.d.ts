import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { TopQueryStatistics } from "../operationsInterfaces";
import { MySQLManagementClient } from "../mySQLManagementClient";
import { QueryStatistic, TopQueryStatisticsInput, TopQueryStatisticsListByServerOptionalParams, TopQueryStatisticsGetOptionalParams, TopQueryStatisticsGetResponse } from "../models";
/** Class containing TopQueryStatistics operations. */
export declare class TopQueryStatisticsImpl implements TopQueryStatistics {
    private readonly client;
    /**
     * Initialize a new instance of the class TopQueryStatistics class.
     * @param client Reference to the service client
     */
    constructor(client: MySQLManagementClient);
    /**
     * Retrieve the Query-Store top queries for specified metric and aggregation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param parameters The required parameters for retrieving top query statistics.
     * @param options The options parameters.
     */
    listByServer(resourceGroupName: string, serverName: string, parameters: TopQueryStatisticsInput, options?: TopQueryStatisticsListByServerOptionalParams): PagedAsyncIterableIterator<QueryStatistic>;
    private listByServerPagingPage;
    private listByServerPagingAll;
    /**
     * Retrieve the query statistic for specified identifier.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param queryStatisticId The Query Statistic identifier.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serverName: string, queryStatisticId: string, options?: TopQueryStatisticsGetOptionalParams): Promise<TopQueryStatisticsGetResponse>;
    /**
     * Retrieve the Query-Store top queries for specified metric and aggregation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param parameters The required parameters for retrieving top query statistics.
     * @param options The options parameters.
     */
    private _listByServer;
    /**
     * ListByServerNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverName The name of the server.
     * @param parameters The required parameters for retrieving top query statistics.
     * @param nextLink The nextLink from the previous successful call to the ListByServer method.
     * @param options The options parameters.
     */
    private _listByServerNext;
}
//# sourceMappingURL=topQueryStatistics.d.ts.map