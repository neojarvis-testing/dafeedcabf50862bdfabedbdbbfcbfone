/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { ServerForCreate as ServerForCreateMapper, ServerUpdateParameters as ServerUpdateParametersMapper, FirewallRule as FirewallRuleMapper, VirtualNetworkRule as VirtualNetworkRuleMapper, Database as DatabaseMapper, Configuration as ConfigurationMapper, ConfigurationListResult as ConfigurationListResultMapper, ServerAdministratorResource as ServerAdministratorResourceMapper, NameAvailabilityRequest as NameAvailabilityRequestMapper, ServerSecurityAlertPolicy as ServerSecurityAlertPolicyMapper, PrivateEndpointConnection as PrivateEndpointConnectionMapper, TagsObject as TagsObjectMapper, ServerKey as ServerKeyMapper } from "../models/mappers";
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const parameters = {
    parameterPath: "parameters",
    mapper: ServerForCreateMapper
};
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2017-12-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const serverName = {
    parameterPath: "serverName",
    mapper: {
        serializedName: "serverName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters1 = {
    parameterPath: "parameters",
    mapper: ServerUpdateParametersMapper
};
export const parameters2 = {
    parameterPath: "parameters",
    mapper: FirewallRuleMapper
};
export const firewallRuleName = {
    parameterPath: "firewallRuleName",
    mapper: {
        serializedName: "firewallRuleName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const virtualNetworkRuleName = {
    parameterPath: "virtualNetworkRuleName",
    mapper: {
        serializedName: "virtualNetworkRuleName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters3 = {
    parameterPath: "parameters",
    mapper: VirtualNetworkRuleMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const parameters4 = {
    parameterPath: "parameters",
    mapper: DatabaseMapper
};
export const databaseName = {
    parameterPath: "databaseName",
    mapper: {
        serializedName: "databaseName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters5 = {
    parameterPath: "parameters",
    mapper: ConfigurationMapper
};
export const configurationName = {
    parameterPath: "configurationName",
    mapper: {
        serializedName: "configurationName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const value = {
    parameterPath: "value",
    mapper: ConfigurationListResultMapper
};
export const properties = {
    parameterPath: "properties",
    mapper: ServerAdministratorResourceMapper
};
export const locationName = {
    parameterPath: "locationName",
    mapper: {
        serializedName: "locationName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const nameAvailabilityRequest = {
    parameterPath: "nameAvailabilityRequest",
    mapper: NameAvailabilityRequestMapper
};
export const securityAlertPolicyName = {
    parameterPath: "securityAlertPolicyName",
    mapper: {
        serializedName: "securityAlertPolicyName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters6 = {
    parameterPath: "parameters",
    mapper: ServerSecurityAlertPolicyMapper
};
export const privateEndpointConnectionName = {
    parameterPath: "privateEndpointConnectionName",
    mapper: {
        serializedName: "privateEndpointConnectionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2018-06-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const parameters7 = {
    parameterPath: "parameters",
    mapper: PrivateEndpointConnectionMapper
};
export const parameters8 = {
    parameterPath: "parameters",
    mapper: TagsObjectMapper
};
export const groupName = {
    parameterPath: "groupName",
    mapper: {
        serializedName: "groupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion2 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-01-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const keyName = {
    parameterPath: "keyName",
    mapper: {
        serializedName: "keyName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters9 = {
    parameterPath: "parameters",
    mapper: ServerKeyMapper
};
//# sourceMappingURL=parameters.js.map