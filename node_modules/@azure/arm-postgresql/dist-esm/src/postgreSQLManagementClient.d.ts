import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Servers, Replicas, FirewallRules, VirtualNetworkRules, Databases, Configurations, ServerParameters, LogFiles, ServerAdministrators, RecoverableServers, ServerBasedPerformanceTier, LocationBasedPerformanceTier, CheckNameAvailability, Operations, ServerSecurityAlertPolicies, PrivateEndpointConnections, PrivateLinkResources, ServerKeys } from "./operationsInterfaces";
import { PostgreSQLManagementClientOptionalParams } from "./models";
export declare class PostgreSQLManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the PostgreSQLManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: PostgreSQLManagementClientOptionalParams);
    servers: Servers;
    replicas: Replicas;
    firewallRules: FirewallRules;
    virtualNetworkRules: VirtualNetworkRules;
    databases: Databases;
    configurations: Configurations;
    serverParameters: ServerParameters;
    logFiles: LogFiles;
    serverAdministrators: ServerAdministrators;
    recoverableServers: RecoverableServers;
    serverBasedPerformanceTier: ServerBasedPerformanceTier;
    locationBasedPerformanceTier: LocationBasedPerformanceTier;
    checkNameAvailability: CheckNameAvailability;
    operations: Operations;
    serverSecurityAlertPolicies: ServerSecurityAlertPolicies;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    serverKeys: ServerKeys;
}
//# sourceMappingURL=postgreSQLManagementClient.d.ts.map