/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { AzureTrafficCollector as AzureTrafficCollectorMapper, TagsObject as TagsObjectMapper, CollectorPolicy as CollectorPolicyMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-11-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const azureTrafficCollectorName = {
    parameterPath: "azureTrafficCollectorName",
    mapper: {
        serializedName: "azureTrafficCollectorName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const location = {
    parameterPath: "location",
    mapper: AzureTrafficCollectorMapper
};
export const tags = {
    parameterPath: ["options", "tags"],
    mapper: AzureTrafficCollectorMapper
};
export const virtualHub = {
    parameterPath: ["options", "virtualHub"],
    mapper: AzureTrafficCollectorMapper
};
export const parameters1 = {
    parameterPath: "parameters",
    mapper: TagsObjectMapper
};
export const collectorPolicyName = {
    parameterPath: "collectorPolicyName",
    mapper: {
        serializedName: "collectorPolicyName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const location1 = {
    parameterPath: "location",
    mapper: CollectorPolicyMapper
};
export const tags1 = {
    parameterPath: ["options", "tags"],
    mapper: CollectorPolicyMapper
};
export const ingestionPolicy = {
    parameterPath: ["options", "ingestionPolicy"],
    mapper: CollectorPolicyMapper
};
export const emissionPolicies = {
    parameterPath: ["options", "emissionPolicies"],
    mapper: CollectorPolicyMapper
};
//# sourceMappingURL=parameters.js.map