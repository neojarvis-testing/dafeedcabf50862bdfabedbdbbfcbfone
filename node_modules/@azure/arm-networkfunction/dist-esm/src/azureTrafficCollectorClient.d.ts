import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { NetworkFunction, AzureTrafficCollectorsBySubscription, AzureTrafficCollectorsByResourceGroup, AzureTrafficCollectors, CollectorPolicies } from "./operationsInterfaces";
import { AzureTrafficCollectorClientOptionalParams } from "./models";
export declare class AzureTrafficCollectorClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the AzureTrafficCollectorClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Azure Subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AzureTrafficCollectorClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    networkFunction: NetworkFunction;
    azureTrafficCollectorsBySubscription: AzureTrafficCollectorsBySubscription;
    azureTrafficCollectorsByResourceGroup: AzureTrafficCollectorsByResourceGroup;
    azureTrafficCollectors: AzureTrafficCollectors;
    collectorPolicies: CollectorPolicies;
}
//# sourceMappingURL=azureTrafficCollectorClient.d.ts.map