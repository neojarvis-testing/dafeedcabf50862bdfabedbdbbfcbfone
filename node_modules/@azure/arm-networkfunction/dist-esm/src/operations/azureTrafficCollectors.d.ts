import { AzureTrafficCollectors } from "../operationsInterfaces";
import { AzureTrafficCollectorClient } from "../azureTrafficCollectorClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { AzureTrafficCollectorsGetOptionalParams, AzureTrafficCollectorsGetResponse, AzureTrafficCollectorsCreateOrUpdateOptionalParams, AzureTrafficCollectorsCreateOrUpdateResponse, AzureTrafficCollectorsDeleteOptionalParams, TagsObject, AzureTrafficCollectorsUpdateTagsOptionalParams, AzureTrafficCollectorsUpdateTagsResponse } from "../models";
/** Class containing AzureTrafficCollectors operations. */
export declare class AzureTrafficCollectorsImpl implements AzureTrafficCollectors {
    private readonly client;
    /**
     * Initialize a new instance of the class AzureTrafficCollectors class.
     * @param client Reference to the service client
     */
    constructor(client: AzureTrafficCollectorClient);
    /**
     * Gets the specified Azure Traffic Collector in a specified resource group
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, azureTrafficCollectorName: string, options?: AzureTrafficCollectorsGetOptionalParams): Promise<AzureTrafficCollectorsGetResponse>;
    /**
     * Creates or updates a Azure Traffic Collector resource
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param location Resource location.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, azureTrafficCollectorName: string, location: string, options?: AzureTrafficCollectorsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<AzureTrafficCollectorsCreateOrUpdateResponse>, AzureTrafficCollectorsCreateOrUpdateResponse>>;
    /**
     * Creates or updates a Azure Traffic Collector resource
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param location Resource location.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, azureTrafficCollectorName: string, location: string, options?: AzureTrafficCollectorsCreateOrUpdateOptionalParams): Promise<AzureTrafficCollectorsCreateOrUpdateResponse>;
    /**
     * Deletes a specified Azure Traffic Collector resource.
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, azureTrafficCollectorName: string, options?: AzureTrafficCollectorsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a specified Azure Traffic Collector resource.
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, azureTrafficCollectorName: string, options?: AzureTrafficCollectorsDeleteOptionalParams): Promise<void>;
    /**
     * Updates the specified Azure Traffic Collector tags.
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param parameters Parameters supplied to update Azure Traffic Collector tags.
     * @param options The options parameters.
     */
    updateTags(resourceGroupName: string, azureTrafficCollectorName: string, parameters: TagsObject, options?: AzureTrafficCollectorsUpdateTagsOptionalParams): Promise<AzureTrafficCollectorsUpdateTagsResponse>;
}
//# sourceMappingURL=azureTrafficCollectors.d.ts.map