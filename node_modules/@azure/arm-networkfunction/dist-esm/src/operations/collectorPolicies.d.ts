import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { CollectorPolicies } from "../operationsInterfaces";
import { AzureTrafficCollectorClient } from "../azureTrafficCollectorClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { CollectorPolicy, CollectorPoliciesListOptionalParams, CollectorPoliciesGetOptionalParams, CollectorPoliciesGetResponse, CollectorPoliciesCreateOrUpdateOptionalParams, CollectorPoliciesCreateOrUpdateResponse, CollectorPoliciesDeleteOptionalParams, TagsObject, CollectorPoliciesUpdateTagsOptionalParams, CollectorPoliciesUpdateTagsResponse } from "../models";
/** Class containing CollectorPolicies operations. */
export declare class CollectorPoliciesImpl implements CollectorPolicies {
    private readonly client;
    /**
     * Initialize a new instance of the class CollectorPolicies class.
     * @param client Reference to the service client
     */
    constructor(client: AzureTrafficCollectorClient);
    /**
     * Return list of Collector policies in a Azure Traffic Collector
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param options The options parameters.
     */
    list(resourceGroupName: string, azureTrafficCollectorName: string, options?: CollectorPoliciesListOptionalParams): PagedAsyncIterableIterator<CollectorPolicy>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Return list of Collector policies in a Azure Traffic Collector
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets the collector policy in a specified Traffic Collector
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param collectorPolicyName Collector Policy Name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, azureTrafficCollectorName: string, collectorPolicyName: string, options?: CollectorPoliciesGetOptionalParams): Promise<CollectorPoliciesGetResponse>;
    /**
     * Creates or updates a Collector Policy resource
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param collectorPolicyName Collector Policy Name
     * @param location Resource location.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, azureTrafficCollectorName: string, collectorPolicyName: string, location: string, options?: CollectorPoliciesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<CollectorPoliciesCreateOrUpdateResponse>, CollectorPoliciesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a Collector Policy resource
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param collectorPolicyName Collector Policy Name
     * @param location Resource location.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, azureTrafficCollectorName: string, collectorPolicyName: string, location: string, options?: CollectorPoliciesCreateOrUpdateOptionalParams): Promise<CollectorPoliciesCreateOrUpdateResponse>;
    /**
     * Deletes a specified Collector Policy resource.
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param collectorPolicyName Collector Policy Name
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, azureTrafficCollectorName: string, collectorPolicyName: string, options?: CollectorPoliciesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a specified Collector Policy resource.
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param collectorPolicyName Collector Policy Name
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, azureTrafficCollectorName: string, collectorPolicyName: string, options?: CollectorPoliciesDeleteOptionalParams): Promise<void>;
    /**
     * Updates the specified Collector Policy tags.
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param collectorPolicyName Collector Policy Name
     * @param parameters Parameters supplied to update Collector Policy tags.
     * @param options The options parameters.
     */
    updateTags(resourceGroupName: string, azureTrafficCollectorName: string, collectorPolicyName: string, parameters: TagsObject, options?: CollectorPoliciesUpdateTagsOptionalParams): Promise<CollectorPoliciesUpdateTagsResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group.
     * @param azureTrafficCollectorName Azure Traffic Collector name
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=collectorPolicies.d.ts.map