/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link AuthType} that the service accepts. */
export var KnownAuthType;
(function (KnownAuthType) {
    /** Invalid */
    KnownAuthType["Invalid"] = "Invalid";
    /** ACS */
    KnownAuthType["ACS"] = "ACS";
    /** AAD */
    KnownAuthType["AAD"] = "AAD";
    /** AccessControlService */
    KnownAuthType["AccessControlService"] = "AccessControlService";
    /** AzureActiveDirectory */
    KnownAuthType["AzureActiveDirectory"] = "AzureActiveDirectory";
})(KnownAuthType || (KnownAuthType = {}));
/** Known values of {@link VaultSubResourceType} that the service accepts. */
export var KnownVaultSubResourceType;
(function (KnownVaultSubResourceType) {
    /** AzureBackup */
    KnownVaultSubResourceType["AzureBackup"] = "AzureBackup";
    /** AzureBackupSecondary */
    KnownVaultSubResourceType["AzureBackupSecondary"] = "AzureBackup_secondary";
    /** AzureSiteRecovery */
    KnownVaultSubResourceType["AzureSiteRecovery"] = "AzureSiteRecovery";
})(KnownVaultSubResourceType || (KnownVaultSubResourceType = {}));
/** Known values of {@link ResourceIdentityType} that the service accepts. */
export var KnownResourceIdentityType;
(function (KnownResourceIdentityType) {
    /** SystemAssigned */
    KnownResourceIdentityType["SystemAssigned"] = "SystemAssigned";
    /** None */
    KnownResourceIdentityType["None"] = "None";
    /** UserAssigned */
    KnownResourceIdentityType["UserAssigned"] = "UserAssigned";
    /** SystemAssignedUserAssigned */
    KnownResourceIdentityType["SystemAssignedUserAssigned"] = "SystemAssigned, UserAssigned";
})(KnownResourceIdentityType || (KnownResourceIdentityType = {}));
/** Known values of {@link VaultUpgradeState} that the service accepts. */
export var KnownVaultUpgradeState;
(function (KnownVaultUpgradeState) {
    /** Unknown */
    KnownVaultUpgradeState["Unknown"] = "Unknown";
    /** InProgress */
    KnownVaultUpgradeState["InProgress"] = "InProgress";
    /** Upgraded */
    KnownVaultUpgradeState["Upgraded"] = "Upgraded";
    /** Failed */
    KnownVaultUpgradeState["Failed"] = "Failed";
})(KnownVaultUpgradeState || (KnownVaultUpgradeState = {}));
/** Known values of {@link TriggerType} that the service accepts. */
export var KnownTriggerType;
(function (KnownTriggerType) {
    /** UserTriggered */
    KnownTriggerType["UserTriggered"] = "UserTriggered";
    /** ForcedUpgrade */
    KnownTriggerType["ForcedUpgrade"] = "ForcedUpgrade";
})(KnownTriggerType || (KnownTriggerType = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
export var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Succeeded */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** Deleting */
    KnownProvisioningState["Deleting"] = "Deleting";
    /** Failed */
    KnownProvisioningState["Failed"] = "Failed";
    /** Pending */
    KnownProvisioningState["Pending"] = "Pending";
})(KnownProvisioningState || (KnownProvisioningState = {}));
/** Known values of {@link PrivateEndpointConnectionStatus} that the service accepts. */
export var KnownPrivateEndpointConnectionStatus;
(function (KnownPrivateEndpointConnectionStatus) {
    /** Pending */
    KnownPrivateEndpointConnectionStatus["Pending"] = "Pending";
    /** Approved */
    KnownPrivateEndpointConnectionStatus["Approved"] = "Approved";
    /** Rejected */
    KnownPrivateEndpointConnectionStatus["Rejected"] = "Rejected";
    /** Disconnected */
    KnownPrivateEndpointConnectionStatus["Disconnected"] = "Disconnected";
})(KnownPrivateEndpointConnectionStatus || (KnownPrivateEndpointConnectionStatus = {}));
/** Known values of {@link VaultPrivateEndpointState} that the service accepts. */
export var KnownVaultPrivateEndpointState;
(function (KnownVaultPrivateEndpointState) {
    /** None */
    KnownVaultPrivateEndpointState["None"] = "None";
    /** Enabled */
    KnownVaultPrivateEndpointState["Enabled"] = "Enabled";
})(KnownVaultPrivateEndpointState || (KnownVaultPrivateEndpointState = {}));
/** Known values of {@link InfrastructureEncryptionState} that the service accepts. */
export var KnownInfrastructureEncryptionState;
(function (KnownInfrastructureEncryptionState) {
    /** Enabled */
    KnownInfrastructureEncryptionState["Enabled"] = "Enabled";
    /** Disabled */
    KnownInfrastructureEncryptionState["Disabled"] = "Disabled";
})(KnownInfrastructureEncryptionState || (KnownInfrastructureEncryptionState = {}));
/** Known values of {@link ResourceMoveState} that the service accepts. */
export var KnownResourceMoveState;
(function (KnownResourceMoveState) {
    /** Unknown */
    KnownResourceMoveState["Unknown"] = "Unknown";
    /** InProgress */
    KnownResourceMoveState["InProgress"] = "InProgress";
    /** PrepareFailed */
    KnownResourceMoveState["PrepareFailed"] = "PrepareFailed";
    /** CommitFailed */
    KnownResourceMoveState["CommitFailed"] = "CommitFailed";
    /** PrepareTimedout */
    KnownResourceMoveState["PrepareTimedout"] = "PrepareTimedout";
    /** CommitTimedout */
    KnownResourceMoveState["CommitTimedout"] = "CommitTimedout";
    /** MoveSucceeded */
    KnownResourceMoveState["MoveSucceeded"] = "MoveSucceeded";
    /** Failure */
    KnownResourceMoveState["Failure"] = "Failure";
    /** CriticalFailure */
    KnownResourceMoveState["CriticalFailure"] = "CriticalFailure";
    /** PartialSuccess */
    KnownResourceMoveState["PartialSuccess"] = "PartialSuccess";
})(KnownResourceMoveState || (KnownResourceMoveState = {}));
/** Known values of {@link BackupStorageVersion} that the service accepts. */
export var KnownBackupStorageVersion;
(function (KnownBackupStorageVersion) {
    /** V1 */
    KnownBackupStorageVersion["V1"] = "V1";
    /** V2 */
    KnownBackupStorageVersion["V2"] = "V2";
    /** Unassigned */
    KnownBackupStorageVersion["Unassigned"] = "Unassigned";
})(KnownBackupStorageVersion || (KnownBackupStorageVersion = {}));
/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export var KnownPublicNetworkAccess;
(function (KnownPublicNetworkAccess) {
    /** Enabled */
    KnownPublicNetworkAccess["Enabled"] = "Enabled";
    /** Disabled */
    KnownPublicNetworkAccess["Disabled"] = "Disabled";
})(KnownPublicNetworkAccess || (KnownPublicNetworkAccess = {}));
/** Known values of {@link AlertsState} that the service accepts. */
export var KnownAlertsState;
(function (KnownAlertsState) {
    /** Enabled */
    KnownAlertsState["Enabled"] = "Enabled";
    /** Disabled */
    KnownAlertsState["Disabled"] = "Disabled";
})(KnownAlertsState || (KnownAlertsState = {}));
/** Known values of {@link CrossSubscriptionRestoreState} that the service accepts. */
export var KnownCrossSubscriptionRestoreState;
(function (KnownCrossSubscriptionRestoreState) {
    /** Enabled */
    KnownCrossSubscriptionRestoreState["Enabled"] = "Enabled";
    /** Disabled */
    KnownCrossSubscriptionRestoreState["Disabled"] = "Disabled";
    /** PermanentlyDisabled */
    KnownCrossSubscriptionRestoreState["PermanentlyDisabled"] = "PermanentlyDisabled";
})(KnownCrossSubscriptionRestoreState || (KnownCrossSubscriptionRestoreState = {}));
/** Known values of {@link StandardTierStorageRedundancy} that the service accepts. */
export var KnownStandardTierStorageRedundancy;
(function (KnownStandardTierStorageRedundancy) {
    /** LocallyRedundant */
    KnownStandardTierStorageRedundancy["LocallyRedundant"] = "LocallyRedundant";
    /** GeoRedundant */
    KnownStandardTierStorageRedundancy["GeoRedundant"] = "GeoRedundant";
    /** ZoneRedundant */
    KnownStandardTierStorageRedundancy["ZoneRedundant"] = "ZoneRedundant";
})(KnownStandardTierStorageRedundancy || (KnownStandardTierStorageRedundancy = {}));
/** Known values of {@link CrossRegionRestore} that the service accepts. */
export var KnownCrossRegionRestore;
(function (KnownCrossRegionRestore) {
    /** Enabled */
    KnownCrossRegionRestore["Enabled"] = "Enabled";
    /** Disabled */
    KnownCrossRegionRestore["Disabled"] = "Disabled";
})(KnownCrossRegionRestore || (KnownCrossRegionRestore = {}));
/** Known values of {@link ImmutabilityState} that the service accepts. */
export var KnownImmutabilityState;
(function (KnownImmutabilityState) {
    /** Disabled */
    KnownImmutabilityState["Disabled"] = "Disabled";
    /** Unlocked */
    KnownImmutabilityState["Unlocked"] = "Unlocked";
    /** Locked */
    KnownImmutabilityState["Locked"] = "Locked";
})(KnownImmutabilityState || (KnownImmutabilityState = {}));
/** Known values of {@link SoftDeleteState} that the service accepts. */
export var KnownSoftDeleteState;
(function (KnownSoftDeleteState) {
    /** Invalid */
    KnownSoftDeleteState["Invalid"] = "Invalid";
    /** Enabled */
    KnownSoftDeleteState["Enabled"] = "Enabled";
    /** Disabled */
    KnownSoftDeleteState["Disabled"] = "Disabled";
    /** AlwaysON */
    KnownSoftDeleteState["AlwaysON"] = "AlwaysON";
})(KnownSoftDeleteState || (KnownSoftDeleteState = {}));
/** Known values of {@link MultiUserAuthorization} that the service accepts. */
export var KnownMultiUserAuthorization;
(function (KnownMultiUserAuthorization) {
    /** Invalid */
    KnownMultiUserAuthorization["Invalid"] = "Invalid";
    /** Enabled */
    KnownMultiUserAuthorization["Enabled"] = "Enabled";
    /** Disabled */
    KnownMultiUserAuthorization["Disabled"] = "Disabled";
})(KnownMultiUserAuthorization || (KnownMultiUserAuthorization = {}));
/** Known values of {@link SecureScoreLevel} that the service accepts. */
export var KnownSecureScoreLevel;
(function (KnownSecureScoreLevel) {
    /** None */
    KnownSecureScoreLevel["None"] = "None";
    /** Minimum */
    KnownSecureScoreLevel["Minimum"] = "Minimum";
    /** Adequate */
    KnownSecureScoreLevel["Adequate"] = "Adequate";
    /** Maximum */
    KnownSecureScoreLevel["Maximum"] = "Maximum";
})(KnownSecureScoreLevel || (KnownSecureScoreLevel = {}));
/** Known values of {@link SkuName} that the service accepts. */
export var KnownSkuName;
(function (KnownSkuName) {
    /** Standard */
    KnownSkuName["Standard"] = "Standard";
    /** RS0 */
    KnownSkuName["RS0"] = "RS0";
})(KnownSkuName || (KnownSkuName = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link UsagesUnit} that the service accepts. */
export var KnownUsagesUnit;
(function (KnownUsagesUnit) {
    /** Count */
    KnownUsagesUnit["Count"] = "Count";
    /** Bytes */
    KnownUsagesUnit["Bytes"] = "Bytes";
    /** Seconds */
    KnownUsagesUnit["Seconds"] = "Seconds";
    /** Percent */
    KnownUsagesUnit["Percent"] = "Percent";
    /** CountPerSecond */
    KnownUsagesUnit["CountPerSecond"] = "CountPerSecond";
    /** BytesPerSecond */
    KnownUsagesUnit["BytesPerSecond"] = "BytesPerSecond";
})(KnownUsagesUnit || (KnownUsagesUnit = {}));
//# sourceMappingURL=index.js.map