/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing RegisteredIdentities operations. */
export class RegisteredIdentitiesImpl {
    /**
     * Initialize a new instance of the class RegisteredIdentities class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Unregisters the given container from your Recovery Services vault.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the recovery services vault.
     * @param identityName Name of the protection container to unregister.
     * @param options The options parameters.
     */
    delete(resourceGroupName, vaultName, identityName, options) {
        return this.client.sendOperationRequest({ resourceGroupName, vaultName, identityName, options }, deleteOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const deleteOperationSpec = {
    path: "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/registeredIdentities/{identityName}",
    httpMethod: "DELETE",
    responses: { 204: {} },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.vaultName,
        Parameters.identityName
    ],
    serializer
};
//# sourceMappingURL=registeredIdentities.js.map