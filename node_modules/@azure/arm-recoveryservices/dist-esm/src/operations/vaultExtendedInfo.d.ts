import { VaultExtendedInfo } from "../operationsInterfaces";
import { RecoveryServicesClient } from "../recoveryServicesClient";
import { VaultExtendedInfoGetOptionalParams, VaultExtendedInfoGetResponse, VaultExtendedInfoResource, VaultExtendedInfoCreateOrUpdateOptionalParams, VaultExtendedInfoCreateOrUpdateResponse, VaultExtendedInfoUpdateOptionalParams, VaultExtendedInfoUpdateResponse } from "../models";
/** Class containing VaultExtendedInfo operations. */
export declare class VaultExtendedInfoImpl implements VaultExtendedInfo {
    private readonly client;
    /**
     * Initialize a new instance of the class VaultExtendedInfo class.
     * @param client Reference to the service client
     */
    constructor(client: RecoveryServicesClient);
    /**
     * Get the vault extended info.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the recovery services vault.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, options?: VaultExtendedInfoGetOptionalParams): Promise<VaultExtendedInfoGetResponse>;
    /**
     * Create vault extended info.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the recovery services vault.
     * @param resourceExtendedInfoDetails Details of ResourceExtendedInfo
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, vaultName: string, resourceExtendedInfoDetails: VaultExtendedInfoResource, options?: VaultExtendedInfoCreateOrUpdateOptionalParams): Promise<VaultExtendedInfoCreateOrUpdateResponse>;
    /**
     * Update vault extended info.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the recovery services vault.
     * @param resourceExtendedInfoDetails Details of ResourceExtendedInfo
     * @param options The options parameters.
     */
    update(resourceGroupName: string, vaultName: string, resourceExtendedInfoDetails: VaultExtendedInfoResource, options?: VaultExtendedInfoUpdateOptionalParams): Promise<VaultExtendedInfoUpdateResponse>;
}
//# sourceMappingURL=vaultExtendedInfo.d.ts.map