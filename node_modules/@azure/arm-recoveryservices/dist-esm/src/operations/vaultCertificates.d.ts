import { VaultCertificates } from "../operationsInterfaces";
import { RecoveryServicesClient } from "../recoveryServicesClient";
import { CertificateRequest, VaultCertificatesCreateOptionalParams, VaultCertificatesCreateResponse } from "../models";
/** Class containing VaultCertificates operations. */
export declare class VaultCertificatesImpl implements VaultCertificates {
    private readonly client;
    /**
     * Initialize a new instance of the class VaultCertificates class.
     * @param client Reference to the service client
     */
    constructor(client: RecoveryServicesClient);
    /**
     * Uploads a certificate for a resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the recovery services vault.
     * @param certificateName Certificate friendly name.
     * @param certificateRequest Input parameters for uploading the vault certificate.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, vaultName: string, certificateName: string, certificateRequest: CertificateRequest, options?: VaultCertificatesCreateOptionalParams): Promise<VaultCertificatesCreateResponse>;
}
//# sourceMappingURL=vaultCertificates.d.ts.map