{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/vaultCertificates.ts","../src/operations/registeredIdentities.ts","../src/operations/replicationUsages.ts","../src/operations/privateLinkResourcesOperations.ts","../src/operations/recoveryServices.ts","../src/lroImpl.ts","../src/operations/vaults.ts","../src/operations/operations.ts","../src/operations/vaultExtendedInfo.ts","../src/operations/usages.ts","../src/recoveryServicesClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type ResourceCertificateDetailsUnion =\n  | ResourceCertificateDetails\n  | ResourceCertificateAndAadDetails\n  | ResourceCertificateAndAcsDetails;\n\n/** Details of the certificate to be uploaded to the vault. */\nexport interface CertificateRequest {\n  /** Raw certificate data. */\n  properties?: RawCertificateData;\n}\n\n/** Raw certificate data. */\nexport interface RawCertificateData {\n  /** Specifies the authentication type. */\n  authType?: AuthType;\n  /** The base64 encoded certificate raw data string */\n  certificate?: Uint8Array;\n}\n\n/** Certificate corresponding to a vault that can be used by clients to register themselves with the vault. */\nexport interface VaultCertificateResponse {\n  /**\n   * Resource name associated with the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Resource Id represents the complete path to the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** Certificate details representing the Vault credentials. */\n  properties?: ResourceCertificateDetailsUnion;\n}\n\n/** Certificate details representing the Vault credentials. */\nexport interface ResourceCertificateDetails {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"AzureActiveDirectory\" | \"AccessControlService\";\n  /** The base64 encoded certificate raw data string. */\n  certificate?: Uint8Array;\n  /** Certificate friendly name. */\n  friendlyName?: string;\n  /** Certificate issuer. */\n  issuer?: string;\n  /** Resource ID of the vault. */\n  resourceId?: number;\n  /** Certificate Subject Name. */\n  subject?: string;\n  /** Certificate thumbprint. */\n  thumbprint?: string;\n  /** Certificate Validity start Date time. */\n  validFrom?: Date;\n  /** Certificate Validity End Date time. */\n  validTo?: Date;\n}\n\n/** Replication usages for vault. */\nexport interface ReplicationUsageList {\n  /** The list of replication usages for the given vault. */\n  value?: ReplicationUsage[];\n}\n\n/** Replication usages of a vault. */\nexport interface ReplicationUsage {\n  /** Summary of the replication monitoring data for this vault. */\n  monitoringSummary?: MonitoringSummary;\n  /** Summary of the replication jobs data for this vault. */\n  jobsSummary?: JobsSummary;\n  /** Number of replication protected items for this vault. */\n  protectedItemCount?: number;\n  /** Number of replication recovery plans for this vault. */\n  recoveryPlanCount?: number;\n  /** Number of servers registered to this vault. */\n  registeredServersCount?: number;\n  /** The authentication type of recovery service providers in the vault. */\n  recoveryServicesProviderAuthType?: number;\n}\n\n/** Summary of the replication monitoring data for this vault. */\nexport interface MonitoringSummary {\n  /** Count of unhealthy VMs. */\n  unHealthyVmCount?: number;\n  /** Count of unhealthy replication providers. */\n  unHealthyProviderCount?: number;\n  /** Count of all critical warnings. */\n  eventsCount?: number;\n  /** Count of all deprecated recovery service providers. */\n  deprecatedProviderCount?: number;\n  /** Count of all the supported recovery service providers. */\n  supportedProviderCount?: number;\n  /** Count of all the unsupported recovery service providers. */\n  unsupportedProviderCount?: number;\n}\n\n/** Summary of the replication job data for this vault. */\nexport interface JobsSummary {\n  /** Count of failed jobs. */\n  failedJobs?: number;\n  /** Count of suspended jobs. */\n  suspendedJobs?: number;\n  /** Count of in-progress jobs. */\n  inProgressJobs?: number;\n}\n\n/** Class which represent the stamps associated with the vault. */\nexport interface PrivateLinkResources {\n  /** A collection of private link resources */\n  value?: PrivateLinkResource[];\n  /** Link to the next chunk of the response */\n  nextLink?: string;\n}\n\n/** Information of the private link resource. */\nexport interface PrivateLinkResource {\n  /**\n   * Fully qualified identifier of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * e.g. Microsoft.RecoveryServices/vaults/privateLinkResources\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * e.g. f9ad6492-33d4-4690-9999-6bfd52a0d081 (Backup) or f9ad6492-33d4-4690-9999-6bfd52a0d082 (SiteRecovery)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * [backup-ecs1, backup-prot1, backup-prot1b, backup-prot1c, backup-id1]\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /**\n   * The private link resource Private link DNS zone name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredZoneNames?: string[];\n}\n\n/** An error response from Azure Backup. */\nexport interface CloudError {\n  /** The resource management error response. */\n  error?: ErrorModel;\n}\n\n/** The resource management error response. */\nexport interface ErrorModel {\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorModel[];\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Resource Name availability input parameters - Resource type and resource name */\nexport interface CheckNameAvailabilityParameters {\n  /** Describes the Resource type: Microsoft.RecoveryServices/Vaults */\n  type?: string;\n  /** Resource name for which availability needs to be checked */\n  name?: string;\n}\n\n/** Response for check name availability API. Resource provider will set availability as true | false. */\nexport interface CheckNameAvailabilityResult {\n  nameAvailable?: boolean;\n  reason?: string;\n  message?: string;\n}\n\n/** Capabilities information */\nexport interface CapabilitiesProperties {\n  dnsZones?: DNSZone[];\n}\n\n/** DNSZone information */\nexport interface DNSZone {\n  /** Subresource type for vault AzureBackup, AzureBackup_secondary or AzureSiteRecovery */\n  subResource?: VaultSubResourceType;\n}\n\n/** Base class for request and response capabilities information for Microsoft.RecoveryServices */\nexport interface ResourceCapabilitiesBase {\n  /** Describes the Resource type: Microsoft.RecoveryServices/Vaults */\n  type: string;\n}\n\n/** Capabilities properties in response */\nexport interface CapabilitiesResponseProperties {\n  dnsZones?: DNSZoneResponse[];\n}\n\n/** The response model for a list of Vaults. */\nexport interface VaultList {\n  value?: Vault[];\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly nextLink?: string;\n}\n\n/** Identity for the resource. */\nexport interface IdentityData {\n  /**\n   * The principal ID of resource identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities. */\n  type: ResourceIdentityType;\n  /** The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */\n  userAssignedIdentities?: { [propertyName: string]: UserIdentity };\n}\n\n/** A resource identity that is managed by the user of the service. */\nexport interface UserIdentity {\n  /**\n   * The principal ID of the user-assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client ID of the user-assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Properties of the vault. */\nexport interface VaultProperties {\n  /**\n   * Provisioning State.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Details for upgrading vault. */\n  upgradeDetails?: UpgradeDetails;\n  /**\n   * List of private endpoint connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnectionVaultProperties[];\n  /**\n   * Private endpoint state for backup.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointStateForBackup?: VaultPrivateEndpointState;\n  /**\n   * Private endpoint state for site recovery.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointStateForSiteRecovery?: VaultPrivateEndpointState;\n  /** Customer Managed Key details of the resource. */\n  encryption?: VaultPropertiesEncryption;\n  /** The details of the latest move operation performed on the Azure Resource */\n  moveDetails?: VaultPropertiesMoveDetails;\n  /**\n   * The State of the Resource after the move operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly moveState?: ResourceMoveState;\n  /**\n   * Backup storage version\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backupStorageVersion?: BackupStorageVersion;\n  /** property to enable or disable resource provider inbound network traffic from public clients */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** Monitoring Settings of the vault */\n  monitoringSettings?: MonitoringSettings;\n  /** Restore Settings of the vault */\n  restoreSettings?: RestoreSettings;\n  /** The redundancy Settings of a Vault */\n  redundancySettings?: VaultPropertiesRedundancySettings;\n  /** Security Settings of the vault */\n  securitySettings?: SecuritySettings;\n  /**\n   * Secure Score of Recovery Services Vault\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secureScore?: SecureScoreLevel;\n}\n\n/** Details for upgrading vault. */\nexport interface UpgradeDetails {\n  /**\n   * ID of the vault upgrade operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationId?: string;\n  /**\n   * UTC time at which the upgrade operation has started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTimeUtc?: Date;\n  /**\n   * UTC time at which the upgrade operation status was last updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUpdatedTimeUtc?: Date;\n  /**\n   * UTC time at which the upgrade operation has ended.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTimeUtc?: Date;\n  /**\n   * Status of the vault upgrade operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: VaultUpgradeState;\n  /**\n   * Message to the user containing information about the upgrade operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The way the vault upgrade was triggered.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly triggerType?: TriggerType;\n  /**\n   * Resource ID of the upgraded vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly upgradedResourceId?: string;\n  /**\n   * Resource ID of the vault before the upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly previousResourceId?: string;\n}\n\n/** Information to be stored in Vault properties as an element of privateEndpointConnections List. */\nexport interface PrivateEndpointConnectionVaultProperties {\n  /**\n   * Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Private Endpoint Connection Response Properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: PrivateEndpointConnection;\n  /**\n   * The name of the private Endpoint Connection\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The location of the private Endpoint connection\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n}\n\n/** Private Endpoint Connection Response Properties. */\nexport interface PrivateEndpointConnection {\n  /**\n   * Gets or sets provisioning state of the private endpoint connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The Private Endpoint network resource that is linked to the Private Endpoint connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpoint?: PrivateEndpoint;\n  /**\n   * Gets or sets private link service connection state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /** Group Ids for the Private Endpoint */\n  groupIds?: VaultSubResourceType[];\n}\n\n/** The Private Endpoint network resource that is linked to the Private Endpoint connection. */\nexport interface PrivateEndpoint {\n  /**\n   * Gets or sets id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** Gets or sets private link service connection state. */\nexport interface PrivateLinkServiceConnectionState {\n  /**\n   * Gets or sets the status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: PrivateEndpointConnectionStatus;\n  /**\n   * Gets or sets description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * Gets or sets actions required.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionsRequired?: string;\n}\n\n/** Customer Managed Key details of the resource. */\nexport interface VaultPropertiesEncryption {\n  /** The properties of the Key Vault which hosts CMK */\n  keyVaultProperties?: CmkKeyVaultProperties;\n  /** The details of the identity used for CMK */\n  kekIdentity?: CmkKekIdentity;\n  /** Enabling/Disabling the Double Encryption state */\n  infrastructureEncryption?: InfrastructureEncryptionState;\n}\n\n/** The properties of the Key Vault which hosts CMK */\nexport interface CmkKeyVaultProperties {\n  /** The key uri of the Customer Managed Key */\n  keyUri?: string;\n}\n\n/** The details of the identity used for CMK */\nexport interface CmkKekIdentity {\n  /** Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field */\n  useSystemAssignedIdentity?: boolean;\n  /** The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned */\n  userAssignedIdentity?: string;\n}\n\n/** The details of the latest move operation performed on the Azure Resource */\nexport interface VaultPropertiesMoveDetails {\n  /**\n   * OperationId of the Resource Move Operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationId?: string;\n  /**\n   * Start Time of the Resource Move Operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTimeUtc?: Date;\n  /**\n   * End Time of the Resource Move Operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly completionTimeUtc?: Date;\n  /**\n   * Source Resource of the Resource Move Operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourceResourceId?: string;\n  /**\n   * Target Resource of the Resource Move Operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetResourceId?: string;\n}\n\n/** Monitoring Settings of the vault */\nexport interface MonitoringSettings {\n  /** Settings for Azure Monitor based alerts */\n  azureMonitorAlertSettings?: AzureMonitorAlertSettings;\n  /** Settings for classic alerts */\n  classicAlertSettings?: ClassicAlertSettings;\n}\n\n/** Settings for Azure Monitor based alerts */\nexport interface AzureMonitorAlertSettings {\n  alertsForAllJobFailures?: AlertsState;\n}\n\n/** Settings for classic alerts */\nexport interface ClassicAlertSettings {\n  alertsForCriticalOperations?: AlertsState;\n}\n\n/** Restore Settings  of the vault */\nexport interface RestoreSettings {\n  /** Settings for CrossSubscriptionRestore */\n  crossSubscriptionRestoreSettings?: CrossSubscriptionRestoreSettings;\n}\n\n/** Settings for Cross Subscription Restore Settings */\nexport interface CrossSubscriptionRestoreSettings {\n  crossSubscriptionRestoreState?: CrossSubscriptionRestoreState;\n}\n\n/** The redundancy Settings of a Vault */\nexport interface VaultPropertiesRedundancySettings {\n  /**\n   * The storage redundancy setting of a vault\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly standardTierStorageRedundancy?: StandardTierStorageRedundancy;\n  /**\n   * Flag to show if Cross Region Restore is enabled on the Vault or not\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly crossRegionRestore?: CrossRegionRestore;\n}\n\n/** Security Settings of the vault */\nexport interface SecuritySettings {\n  /** Immutability Settings of a vault */\n  immutabilitySettings?: ImmutabilitySettings;\n  /** Soft delete Settings of a vault */\n  softDeleteSettings?: SoftDeleteSettings;\n  /**\n   * MUA Settings of a vault\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly multiUserAuthorization?: MultiUserAuthorization;\n}\n\n/** Immutability Settings of vault */\nexport interface ImmutabilitySettings {\n  state?: ImmutabilityState;\n}\n\n/** Soft delete Settings of vault */\nexport interface SoftDeleteSettings {\n  softDeleteState?: SoftDeleteState;\n  /** Soft delete retention period in days */\n  softDeleteRetentionPeriodInDays?: number;\n}\n\n/** Identifies the unique system identifier for each Azure resource. */\nexport interface Sku {\n  /** Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig */\n  name: SkuName;\n  /** The Sku tier. */\n  tier?: string;\n  /** The sku family */\n  family?: string;\n  /** The sku size */\n  size?: string;\n  /** The sku capacity */\n  capacity?: string;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The type of identity that last modified the resource. */\n  lastModifiedAt?: Date;\n}\n\n/** ARM Resource. */\nexport interface Resource {\n  /**\n   * Resource Id represents the complete path to the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name associated with the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Optional ETag. */\n  etag?: string;\n}\n\n/** Operations List response which contains list of available APIs. */\nexport interface ClientDiscoveryResponse {\n  /** List of available operations. */\n  value?: ClientDiscoveryValueForSingleApi[];\n  /** Link to the next chunk of the response */\n  nextLink?: string;\n}\n\n/** Available operation details. */\nexport interface ClientDiscoveryValueForSingleApi {\n  /** Name of the Operation. */\n  name?: string;\n  /** Contains the localized display information for this particular operation */\n  display?: ClientDiscoveryDisplay;\n  /** The intended executor of the operation;governs the display of the operation in the RBAC UX and the audit logs UX */\n  origin?: string;\n  /** ShoeBox properties for the given operation. */\n  properties?: ClientDiscoveryForProperties;\n}\n\n/** Localized display information of an operation. */\nexport interface ClientDiscoveryDisplay {\n  /** Name of the provider for display purposes */\n  provider?: string;\n  /** ResourceType for which this Operation can be performed. */\n  resource?: string;\n  /** Operations Name itself. */\n  operation?: string;\n  /** Description of the operation having details of what operation is about. */\n  description?: string;\n}\n\n/** Class to represent shoebox properties in json client discovery. */\nexport interface ClientDiscoveryForProperties {\n  /** Operation properties. */\n  serviceSpecification?: ClientDiscoveryForServiceSpecification;\n}\n\n/** Class to represent shoebox service specification in json client discovery. */\nexport interface ClientDiscoveryForServiceSpecification {\n  /** List of log specifications of this operation. */\n  logSpecifications?: ClientDiscoveryForLogSpecification[];\n}\n\n/** Class to represent shoebox log specification in json client discovery. */\nexport interface ClientDiscoveryForLogSpecification {\n  /** Name of the log. */\n  name?: string;\n  /** Localized display name */\n  displayName?: string;\n  /** Blobs created in customer storage account per hour */\n  blobDuration?: string;\n}\n\n/** Operation Resource */\nexport interface OperationResource {\n  /** End time of the operation */\n  endTime?: Date;\n  /** Required if status == failed or status == canceled. This is the OData v4 error format, used by the RPC and will go into the v2.2 Azure REST API guidelines. */\n  error?: ErrorModel;\n  /** It should match what is used to GET the operation result */\n  id?: string;\n  /** It must match the last segment of the \"id\" field, and will typically be a GUID / system generated value */\n  name?: string;\n  /** The status of the operation. (InProgress/Success/Failed/Cancelled) */\n  status?: string;\n  /** Start time of the operation */\n  startTime?: Date;\n}\n\n/** Usage for vault. */\nexport interface VaultUsageList {\n  /** The list of usages for the given vault. */\n  value?: VaultUsage[];\n}\n\n/** Usages of a vault. */\nexport interface VaultUsage {\n  /** Unit of the usage. */\n  unit?: UsagesUnit;\n  /** Quota period of usage. */\n  quotaPeriod?: string;\n  /** Next reset time of usage. */\n  nextResetTime?: Date;\n  /** Current value of usage. */\n  currentValue?: number;\n  /** Limit of usage. */\n  limit?: number;\n  /** Name of usage. */\n  name?: NameInfo;\n}\n\n/** The name of usage. */\nexport interface NameInfo {\n  /** Value of usage. */\n  value?: string;\n  /** Localized value of usage. */\n  localizedValue?: string;\n}\n\n/** Certificate details representing the Vault credentials for AAD. */\nexport interface ResourceCertificateAndAadDetails\n  extends ResourceCertificateDetails {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"AzureActiveDirectory\";\n  /** AAD tenant authority. */\n  aadAuthority: string;\n  /** AAD tenant Id. */\n  aadTenantId: string;\n  /** AAD service principal clientId. */\n  servicePrincipalClientId: string;\n  /** AAD service principal ObjectId. */\n  servicePrincipalObjectId: string;\n  /** Azure Management Endpoint Audience. */\n  azureManagementEndpointAudience: string;\n  /** Service Resource Id. */\n  serviceResourceId?: string;\n  /** AAD audience for the resource */\n  aadAudience?: string;\n}\n\n/** Certificate details representing the Vault credentials for ACS. */\nexport interface ResourceCertificateAndAcsDetails\n  extends ResourceCertificateDetails {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"AccessControlService\";\n  /** ACS namespace name - tenant for our service. */\n  globalAcsNamespace: string;\n  /** Acs mgmt host name to connect to. */\n  globalAcsHostName: string;\n  /** Global ACS namespace RP realm. */\n  globalAcsRPRealm: string;\n}\n\n/** DNSZone information for Microsoft.RecoveryServices */\nexport interface DNSZoneResponse extends DNSZone {\n  /** The private link resource Private link DNS zone names. */\n  requiredZoneNames?: string[];\n}\n\n/** Input to get capabilities information for Microsoft.RecoveryServices */\nexport interface ResourceCapabilities extends ResourceCapabilitiesBase {\n  /** Capabilities information */\n  properties?: CapabilitiesProperties;\n}\n\n/** Capabilities response for Microsoft.RecoveryServices */\nexport interface CapabilitiesResponse extends ResourceCapabilitiesBase {\n  /** Capabilities properties in response */\n  properties?: CapabilitiesResponseProperties;\n}\n\n/** Tracked resource with location. */\nexport interface TrackedResource extends Resource {\n  /** Resource location. */\n  location: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Tracked resource with location. */\nexport interface PatchTrackedResource extends Resource {\n  /** Resource location. */\n  location?: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Vault extended information. */\nexport interface VaultExtendedInfoResource extends Resource {\n  /** Integrity key. */\n  integrityKey?: string;\n  /** Encryption key. */\n  encryptionKey?: string;\n  /** Encryption key thumbprint. */\n  encryptionKeyThumbprint?: string;\n  /** Algorithm for Vault ExtendedInfo */\n  algorithm?: string;\n}\n\n/** Resource information, as returned by the resource provider. */\nexport interface Vault extends TrackedResource {\n  /** Identity for the resource. */\n  identity?: IdentityData;\n  /** Properties of the vault. */\n  properties?: VaultProperties;\n  /** Identifies the unique system identifier for each Azure resource. */\n  sku?: Sku;\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Patch Resource information, as returned by the resource provider. */\nexport interface PatchVault extends PatchTrackedResource {\n  /** Properties of the vault. */\n  properties?: VaultProperties;\n  /** Identifies the unique system identifier for each Azure resource. */\n  sku?: Sku;\n  /** Identity for the resource. */\n  identity?: IdentityData;\n}\n\n/** Known values of {@link AuthType} that the service accepts. */\nexport enum KnownAuthType {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** ACS */\n  ACS = \"ACS\",\n  /** AAD */\n  AAD = \"AAD\",\n  /** AccessControlService */\n  AccessControlService = \"AccessControlService\",\n  /** AzureActiveDirectory */\n  AzureActiveDirectory = \"AzureActiveDirectory\"\n}\n\n/**\n * Defines values for AuthType. \\\n * {@link KnownAuthType} can be used interchangeably with AuthType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **ACS** \\\n * **AAD** \\\n * **AccessControlService** \\\n * **AzureActiveDirectory**\n */\nexport type AuthType = string;\n\n/** Known values of {@link VaultSubResourceType} that the service accepts. */\nexport enum KnownVaultSubResourceType {\n  /** AzureBackup */\n  AzureBackup = \"AzureBackup\",\n  /** AzureBackupSecondary */\n  AzureBackupSecondary = \"AzureBackup_secondary\",\n  /** AzureSiteRecovery */\n  AzureSiteRecovery = \"AzureSiteRecovery\"\n}\n\n/**\n * Defines values for VaultSubResourceType. \\\n * {@link KnownVaultSubResourceType} can be used interchangeably with VaultSubResourceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureBackup** \\\n * **AzureBackup_secondary** \\\n * **AzureSiteRecovery**\n */\nexport type VaultSubResourceType = string;\n\n/** Known values of {@link ResourceIdentityType} that the service accepts. */\nexport enum KnownResourceIdentityType {\n  /** SystemAssigned */\n  SystemAssigned = \"SystemAssigned\",\n  /** None */\n  None = \"None\",\n  /** UserAssigned */\n  UserAssigned = \"UserAssigned\",\n  /** SystemAssignedUserAssigned */\n  SystemAssignedUserAssigned = \"SystemAssigned, UserAssigned\"\n}\n\n/**\n * Defines values for ResourceIdentityType. \\\n * {@link KnownResourceIdentityType} can be used interchangeably with ResourceIdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SystemAssigned** \\\n * **None** \\\n * **UserAssigned** \\\n * **SystemAssigned, UserAssigned**\n */\nexport type ResourceIdentityType = string;\n\n/** Known values of {@link VaultUpgradeState} that the service accepts. */\nexport enum KnownVaultUpgradeState {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Upgraded */\n  Upgraded = \"Upgraded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for VaultUpgradeState. \\\n * {@link KnownVaultUpgradeState} can be used interchangeably with VaultUpgradeState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **InProgress** \\\n * **Upgraded** \\\n * **Failed**\n */\nexport type VaultUpgradeState = string;\n\n/** Known values of {@link TriggerType} that the service accepts. */\nexport enum KnownTriggerType {\n  /** UserTriggered */\n  UserTriggered = \"UserTriggered\",\n  /** ForcedUpgrade */\n  ForcedUpgrade = \"ForcedUpgrade\"\n}\n\n/**\n * Defines values for TriggerType. \\\n * {@link KnownTriggerType} can be used interchangeably with TriggerType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **UserTriggered** \\\n * **ForcedUpgrade**\n */\nexport type TriggerType = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Pending */\n  Pending = \"Pending\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Deleting** \\\n * **Failed** \\\n * **Pending**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link PrivateEndpointConnectionStatus} that the service accepts. */\nexport enum KnownPrivateEndpointConnectionStatus {\n  /** Pending */\n  Pending = \"Pending\",\n  /** Approved */\n  Approved = \"Approved\",\n  /** Rejected */\n  Rejected = \"Rejected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\"\n}\n\n/**\n * Defines values for PrivateEndpointConnectionStatus. \\\n * {@link KnownPrivateEndpointConnectionStatus} can be used interchangeably with PrivateEndpointConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Approved** \\\n * **Rejected** \\\n * **Disconnected**\n */\nexport type PrivateEndpointConnectionStatus = string;\n\n/** Known values of {@link VaultPrivateEndpointState} that the service accepts. */\nexport enum KnownVaultPrivateEndpointState {\n  /** None */\n  None = \"None\",\n  /** Enabled */\n  Enabled = \"Enabled\"\n}\n\n/**\n * Defines values for VaultPrivateEndpointState. \\\n * {@link KnownVaultPrivateEndpointState} can be used interchangeably with VaultPrivateEndpointState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Enabled**\n */\nexport type VaultPrivateEndpointState = string;\n\n/** Known values of {@link InfrastructureEncryptionState} that the service accepts. */\nexport enum KnownInfrastructureEncryptionState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for InfrastructureEncryptionState. \\\n * {@link KnownInfrastructureEncryptionState} can be used interchangeably with InfrastructureEncryptionState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type InfrastructureEncryptionState = string;\n\n/** Known values of {@link ResourceMoveState} that the service accepts. */\nexport enum KnownResourceMoveState {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** PrepareFailed */\n  PrepareFailed = \"PrepareFailed\",\n  /** CommitFailed */\n  CommitFailed = \"CommitFailed\",\n  /** PrepareTimedout */\n  PrepareTimedout = \"PrepareTimedout\",\n  /** CommitTimedout */\n  CommitTimedout = \"CommitTimedout\",\n  /** MoveSucceeded */\n  MoveSucceeded = \"MoveSucceeded\",\n  /** Failure */\n  Failure = \"Failure\",\n  /** CriticalFailure */\n  CriticalFailure = \"CriticalFailure\",\n  /** PartialSuccess */\n  PartialSuccess = \"PartialSuccess\"\n}\n\n/**\n * Defines values for ResourceMoveState. \\\n * {@link KnownResourceMoveState} can be used interchangeably with ResourceMoveState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **InProgress** \\\n * **PrepareFailed** \\\n * **CommitFailed** \\\n * **PrepareTimedout** \\\n * **CommitTimedout** \\\n * **MoveSucceeded** \\\n * **Failure** \\\n * **CriticalFailure** \\\n * **PartialSuccess**\n */\nexport type ResourceMoveState = string;\n\n/** Known values of {@link BackupStorageVersion} that the service accepts. */\nexport enum KnownBackupStorageVersion {\n  /** V1 */\n  V1 = \"V1\",\n  /** V2 */\n  V2 = \"V2\",\n  /** Unassigned */\n  Unassigned = \"Unassigned\"\n}\n\n/**\n * Defines values for BackupStorageVersion. \\\n * {@link KnownBackupStorageVersion} can be used interchangeably with BackupStorageVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **V1** \\\n * **V2** \\\n * **Unassigned**\n */\nexport type BackupStorageVersion = string;\n\n/** Known values of {@link PublicNetworkAccess} that the service accepts. */\nexport enum KnownPublicNetworkAccess {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PublicNetworkAccess. \\\n * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type PublicNetworkAccess = string;\n\n/** Known values of {@link AlertsState} that the service accepts. */\nexport enum KnownAlertsState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for AlertsState. \\\n * {@link KnownAlertsState} can be used interchangeably with AlertsState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type AlertsState = string;\n\n/** Known values of {@link CrossSubscriptionRestoreState} that the service accepts. */\nexport enum KnownCrossSubscriptionRestoreState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** PermanentlyDisabled */\n  PermanentlyDisabled = \"PermanentlyDisabled\"\n}\n\n/**\n * Defines values for CrossSubscriptionRestoreState. \\\n * {@link KnownCrossSubscriptionRestoreState} can be used interchangeably with CrossSubscriptionRestoreState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled** \\\n * **PermanentlyDisabled**\n */\nexport type CrossSubscriptionRestoreState = string;\n\n/** Known values of {@link StandardTierStorageRedundancy} that the service accepts. */\nexport enum KnownStandardTierStorageRedundancy {\n  /** LocallyRedundant */\n  LocallyRedundant = \"LocallyRedundant\",\n  /** GeoRedundant */\n  GeoRedundant = \"GeoRedundant\",\n  /** ZoneRedundant */\n  ZoneRedundant = \"ZoneRedundant\"\n}\n\n/**\n * Defines values for StandardTierStorageRedundancy. \\\n * {@link KnownStandardTierStorageRedundancy} can be used interchangeably with StandardTierStorageRedundancy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **LocallyRedundant** \\\n * **GeoRedundant** \\\n * **ZoneRedundant**\n */\nexport type StandardTierStorageRedundancy = string;\n\n/** Known values of {@link CrossRegionRestore} that the service accepts. */\nexport enum KnownCrossRegionRestore {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for CrossRegionRestore. \\\n * {@link KnownCrossRegionRestore} can be used interchangeably with CrossRegionRestore,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type CrossRegionRestore = string;\n\n/** Known values of {@link ImmutabilityState} that the service accepts. */\nexport enum KnownImmutabilityState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Unlocked */\n  Unlocked = \"Unlocked\",\n  /** Locked */\n  Locked = \"Locked\"\n}\n\n/**\n * Defines values for ImmutabilityState. \\\n * {@link KnownImmutabilityState} can be used interchangeably with ImmutabilityState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Unlocked** \\\n * **Locked**\n */\nexport type ImmutabilityState = string;\n\n/** Known values of {@link SoftDeleteState} that the service accepts. */\nexport enum KnownSoftDeleteState {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** AlwaysON */\n  AlwaysON = \"AlwaysON\"\n}\n\n/**\n * Defines values for SoftDeleteState. \\\n * {@link KnownSoftDeleteState} can be used interchangeably with SoftDeleteState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **Enabled** \\\n * **Disabled** \\\n * **AlwaysON**\n */\nexport type SoftDeleteState = string;\n\n/** Known values of {@link MultiUserAuthorization} that the service accepts. */\nexport enum KnownMultiUserAuthorization {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for MultiUserAuthorization. \\\n * {@link KnownMultiUserAuthorization} can be used interchangeably with MultiUserAuthorization,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **Enabled** \\\n * **Disabled**\n */\nexport type MultiUserAuthorization = string;\n\n/** Known values of {@link SecureScoreLevel} that the service accepts. */\nexport enum KnownSecureScoreLevel {\n  /** None */\n  None = \"None\",\n  /** Minimum */\n  Minimum = \"Minimum\",\n  /** Adequate */\n  Adequate = \"Adequate\",\n  /** Maximum */\n  Maximum = \"Maximum\"\n}\n\n/**\n * Defines values for SecureScoreLevel. \\\n * {@link KnownSecureScoreLevel} can be used interchangeably with SecureScoreLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Minimum** \\\n * **Adequate** \\\n * **Maximum**\n */\nexport type SecureScoreLevel = string;\n\n/** Known values of {@link SkuName} that the service accepts. */\nexport enum KnownSkuName {\n  /** Standard */\n  Standard = \"Standard\",\n  /** RS0 */\n  RS0 = \"RS0\"\n}\n\n/**\n * Defines values for SkuName. \\\n * {@link KnownSkuName} can be used interchangeably with SkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **RS0**\n */\nexport type SkuName = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link UsagesUnit} that the service accepts. */\nexport enum KnownUsagesUnit {\n  /** Count */\n  Count = \"Count\",\n  /** Bytes */\n  Bytes = \"Bytes\",\n  /** Seconds */\n  Seconds = \"Seconds\",\n  /** Percent */\n  Percent = \"Percent\",\n  /** CountPerSecond */\n  CountPerSecond = \"CountPerSecond\",\n  /** BytesPerSecond */\n  BytesPerSecond = \"BytesPerSecond\"\n}\n\n/**\n * Defines values for UsagesUnit. \\\n * {@link KnownUsagesUnit} can be used interchangeably with UsagesUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count** \\\n * **Bytes** \\\n * **Seconds** \\\n * **Percent** \\\n * **CountPerSecond** \\\n * **BytesPerSecond**\n */\nexport type UsagesUnit = string;\n\n/** Optional parameters. */\nexport interface VaultCertificatesCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type VaultCertificatesCreateResponse = VaultCertificateResponse;\n\n/** Optional parameters. */\nexport interface RegisteredIdentitiesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ReplicationUsagesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ReplicationUsagesListResponse = ReplicationUsageList;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateLinkResourcesListResponse = PrivateLinkResources;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateLinkResourcesGetResponse = PrivateLinkResource;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PrivateLinkResourcesListNextResponse = PrivateLinkResources;\n\n/** Optional parameters. */\nexport interface RecoveryServicesCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type RecoveryServicesCheckNameAvailabilityResponse = CheckNameAvailabilityResult;\n\n/** Optional parameters. */\nexport interface RecoveryServicesCapabilitiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the capabilities operation. */\nexport type RecoveryServicesCapabilitiesResponse = CapabilitiesResponse;\n\n/** Optional parameters. */\nexport interface VaultsListBySubscriptionIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionId operation. */\nexport type VaultsListBySubscriptionIdResponse = VaultList;\n\n/** Optional parameters. */\nexport interface VaultsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VaultsListByResourceGroupResponse = VaultList;\n\n/** Optional parameters. */\nexport interface VaultsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VaultsGetResponse = Vault;\n\n/** Optional parameters. */\nexport interface VaultsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VaultsCreateOrUpdateResponse = Vault;\n\n/** Optional parameters. */\nexport interface VaultsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface VaultsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VaultsUpdateResponse = Vault;\n\n/** Optional parameters. */\nexport interface VaultsListBySubscriptionIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionIdNext operation. */\nexport type VaultsListBySubscriptionIdNextResponse = VaultList;\n\n/** Optional parameters. */\nexport interface VaultsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VaultsListByResourceGroupNextResponse = VaultList;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = ClientDiscoveryResponse;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = ClientDiscoveryResponse;\n\n/** Optional parameters. */\nexport interface VaultExtendedInfoGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VaultExtendedInfoGetResponse = VaultExtendedInfoResource;\n\n/** Optional parameters. */\nexport interface VaultExtendedInfoCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VaultExtendedInfoCreateOrUpdateResponse = VaultExtendedInfoResource;\n\n/** Optional parameters. */\nexport interface VaultExtendedInfoUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type VaultExtendedInfoUpdateResponse = VaultExtendedInfoResource;\n\n/** Optional parameters. */\nexport interface GetOperationStatusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOperationStatus operation. */\nexport type GetOperationStatusResponse = OperationResource;\n\n/** Optional parameters. */\nexport interface GetOperationResultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOperationResult operation. */\nexport type GetOperationResultResponse = Vault;\n\n/** Optional parameters. */\nexport interface UsagesListByVaultsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVaults operation. */\nexport type UsagesListByVaultsResponse = VaultUsageList;\n\n/** Optional parameters. */\nexport interface RecoveryServicesClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const CertificateRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateRequest\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RawCertificateData\"\n        }\n      }\n    }\n  }\n};\n\nexport const RawCertificateData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RawCertificateData\",\n    modelProperties: {\n      authType: {\n        serializedName: \"authType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"ByteArray\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultCertificateResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultCertificateResponse\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceCertificateDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceCertificateDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceCertificateDetails\",\n    uberParent: \"ResourceCertificateDetails\",\n    polymorphicDiscriminator: {\n      serializedName: \"authType\",\n      clientName: \"authType\"\n    },\n    modelProperties: {\n      authType: {\n        serializedName: \"authType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      friendlyName: {\n        serializedName: \"friendlyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      issuer: {\n        serializedName: \"issuer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      subject: {\n        serializedName: \"subject\",\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validFrom: {\n        serializedName: \"validFrom\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validTo: {\n        serializedName: \"validTo\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplicationUsageList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplicationUsageList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReplicationUsage\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ReplicationUsage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplicationUsage\",\n    modelProperties: {\n      monitoringSummary: {\n        serializedName: \"monitoringSummary\",\n        type: {\n          name: \"Composite\",\n          className: \"MonitoringSummary\"\n        }\n      },\n      jobsSummary: {\n        serializedName: \"jobsSummary\",\n        type: {\n          name: \"Composite\",\n          className: \"JobsSummary\"\n        }\n      },\n      protectedItemCount: {\n        serializedName: \"protectedItemCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      recoveryPlanCount: {\n        serializedName: \"recoveryPlanCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      registeredServersCount: {\n        serializedName: \"registeredServersCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      recoveryServicesProviderAuthType: {\n        serializedName: \"recoveryServicesProviderAuthType\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MonitoringSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MonitoringSummary\",\n    modelProperties: {\n      unHealthyVmCount: {\n        serializedName: \"unHealthyVmCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      unHealthyProviderCount: {\n        serializedName: \"unHealthyProviderCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      eventsCount: {\n        serializedName: \"eventsCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      deprecatedProviderCount: {\n        serializedName: \"deprecatedProviderCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      supportedProviderCount: {\n        serializedName: \"supportedProviderCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      unsupportedProviderCount: {\n        serializedName: \"unsupportedProviderCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobsSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobsSummary\",\n    modelProperties: {\n      failedJobs: {\n        serializedName: \"failedJobs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      suspendedJobs: {\n        serializedName: \"suspendedJobs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      inProgressJobs: {\n        serializedName: \"inProgressJobs\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResources: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResources\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"properties.groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"properties.requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"properties.requiredZoneNames\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorModel\"\n            }\n          }\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityParameters\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityResult\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapabilitiesProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapabilitiesProperties\",\n    modelProperties: {\n      dnsZones: {\n        serializedName: \"dnsZones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DNSZone\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DNSZone: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DNSZone\",\n    modelProperties: {\n      subResource: {\n        serializedName: \"subResource\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceCapabilitiesBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceCapabilitiesBase\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapabilitiesResponseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapabilitiesResponseProperties\",\n    modelProperties: {\n      dnsZones: {\n        serializedName: \"dnsZones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DNSZoneResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VaultList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Vault\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IdentityData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IdentityData\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"UserIdentity\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const UserIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      upgradeDetails: {\n        serializedName: \"upgradeDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"UpgradeDetails\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnectionVaultProperties\"\n            }\n          }\n        }\n      },\n      privateEndpointStateForBackup: {\n        serializedName: \"privateEndpointStateForBackup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointStateForSiteRecovery: {\n        serializedName: \"privateEndpointStateForSiteRecovery\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"VaultPropertiesEncryption\"\n        }\n      },\n      moveDetails: {\n        serializedName: \"moveDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"VaultPropertiesMoveDetails\"\n        }\n      },\n      moveState: {\n        serializedName: \"moveState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      backupStorageVersion: {\n        serializedName: \"backupStorageVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      monitoringSettings: {\n        serializedName: \"monitoringSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"MonitoringSettings\"\n        }\n      },\n      restoreSettings: {\n        serializedName: \"restoreSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"RestoreSettings\"\n        }\n      },\n      redundancySettings: {\n        serializedName: \"redundancySettings\",\n        type: {\n          name: \"Composite\",\n          className: \"VaultPropertiesRedundancySettings\"\n        }\n      },\n      securitySettings: {\n        serializedName: \"securitySettings\",\n        type: {\n          name: \"Composite\",\n          className: \"SecuritySettings\"\n        }\n      },\n      secureScore: {\n        serializedName: \"secureScore\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpgradeDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpgradeDetails\",\n    modelProperties: {\n      operationId: {\n        serializedName: \"operationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTimeUtc: {\n        serializedName: \"startTimeUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastUpdatedTimeUtc: {\n        serializedName: \"lastUpdatedTimeUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTimeUtc: {\n        serializedName: \"endTimeUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      triggerType: {\n        serializedName: \"triggerType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      upgradedResourceId: {\n        serializedName: \"upgradedResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      previousResourceId: {\n        serializedName: \"previousResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionVaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionVaultProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpointConnection\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpoint: {\n        serializedName: \"privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      groupIds: {\n        serializedName: \"groupIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultPropertiesEncryption: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultPropertiesEncryption\",\n    modelProperties: {\n      keyVaultProperties: {\n        serializedName: \"keyVaultProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"CmkKeyVaultProperties\"\n        }\n      },\n      kekIdentity: {\n        serializedName: \"kekIdentity\",\n        type: {\n          name: \"Composite\",\n          className: \"CmkKekIdentity\"\n        }\n      },\n      infrastructureEncryption: {\n        serializedName: \"infrastructureEncryption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CmkKeyVaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CmkKeyVaultProperties\",\n    modelProperties: {\n      keyUri: {\n        serializedName: \"keyUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CmkKekIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CmkKekIdentity\",\n    modelProperties: {\n      useSystemAssignedIdentity: {\n        serializedName: \"useSystemAssignedIdentity\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      userAssignedIdentity: {\n        serializedName: \"userAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultPropertiesMoveDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultPropertiesMoveDetails\",\n    modelProperties: {\n      operationId: {\n        serializedName: \"operationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTimeUtc: {\n        serializedName: \"startTimeUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      completionTimeUtc: {\n        serializedName: \"completionTimeUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceResourceId: {\n        serializedName: \"sourceResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      targetResourceId: {\n        serializedName: \"targetResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MonitoringSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MonitoringSettings\",\n    modelProperties: {\n      azureMonitorAlertSettings: {\n        serializedName: \"azureMonitorAlertSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureMonitorAlertSettings\"\n        }\n      },\n      classicAlertSettings: {\n        serializedName: \"classicAlertSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ClassicAlertSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureMonitorAlertSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureMonitorAlertSettings\",\n    modelProperties: {\n      alertsForAllJobFailures: {\n        serializedName: \"alertsForAllJobFailures\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClassicAlertSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClassicAlertSettings\",\n    modelProperties: {\n      alertsForCriticalOperations: {\n        serializedName: \"alertsForCriticalOperations\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestoreSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestoreSettings\",\n    modelProperties: {\n      crossSubscriptionRestoreSettings: {\n        serializedName: \"crossSubscriptionRestoreSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"CrossSubscriptionRestoreSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const CrossSubscriptionRestoreSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CrossSubscriptionRestoreSettings\",\n    modelProperties: {\n      crossSubscriptionRestoreState: {\n        serializedName: \"crossSubscriptionRestoreState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultPropertiesRedundancySettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultPropertiesRedundancySettings\",\n    modelProperties: {\n      standardTierStorageRedundancy: {\n        serializedName: \"standardTierStorageRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      crossRegionRestore: {\n        serializedName: \"crossRegionRestore\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecuritySettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecuritySettings\",\n    modelProperties: {\n      immutabilitySettings: {\n        serializedName: \"immutabilitySettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ImmutabilitySettings\"\n        }\n      },\n      softDeleteSettings: {\n        serializedName: \"softDeleteSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"SoftDeleteSettings\"\n        }\n      },\n      multiUserAuthorization: {\n        serializedName: \"multiUserAuthorization\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImmutabilitySettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImmutabilitySettings\",\n    modelProperties: {\n      state: {\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SoftDeleteSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SoftDeleteSettings\",\n    modelProperties: {\n      softDeleteState: {\n        serializedName: \"softDeleteState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      softDeleteRetentionPeriodInDays: {\n        serializedName: \"softDeleteRetentionPeriodInDays\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientDiscoveryResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClientDiscoveryResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClientDiscoveryValueForSingleApi\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientDiscoveryValueForSingleApi: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClientDiscoveryValueForSingleApi\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"ClientDiscoveryDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ClientDiscoveryForProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientDiscoveryDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClientDiscoveryDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientDiscoveryForProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClientDiscoveryForProperties\",\n    modelProperties: {\n      serviceSpecification: {\n        serializedName: \"serviceSpecification\",\n        type: {\n          name: \"Composite\",\n          className: \"ClientDiscoveryForServiceSpecification\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientDiscoveryForServiceSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClientDiscoveryForServiceSpecification\",\n    modelProperties: {\n      logSpecifications: {\n        serializedName: \"logSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClientDiscoveryForLogSpecification\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ClientDiscoveryForLogSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClientDiscoveryForLogSpecification\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobDuration: {\n        serializedName: \"blobDuration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationResource\",\n    modelProperties: {\n      endTime: {\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultUsageList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultUsageList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VaultUsage\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VaultUsage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultUsage\",\n    modelProperties: {\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quotaPeriod: {\n        serializedName: \"quotaPeriod\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nextResetTime: {\n        serializedName: \"nextResetTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"NameInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameInfo\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceCertificateAndAadDetails: coreClient.CompositeMapper = {\n  serializedName: \"AzureActiveDirectory\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceCertificateAndAadDetails\",\n    uberParent: \"ResourceCertificateDetails\",\n    polymorphicDiscriminator:\n      ResourceCertificateDetails.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ResourceCertificateDetails.type.modelProperties,\n      aadAuthority: {\n        serializedName: \"aadAuthority\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aadTenantId: {\n        serializedName: \"aadTenantId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      servicePrincipalClientId: {\n        serializedName: \"servicePrincipalClientId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      servicePrincipalObjectId: {\n        serializedName: \"servicePrincipalObjectId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      azureManagementEndpointAudience: {\n        serializedName: \"azureManagementEndpointAudience\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceResourceId: {\n        serializedName: \"serviceResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadAudience: {\n        serializedName: \"aadAudience\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceCertificateAndAcsDetails: coreClient.CompositeMapper = {\n  serializedName: \"AccessControlService\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceCertificateAndAcsDetails\",\n    uberParent: \"ResourceCertificateDetails\",\n    polymorphicDiscriminator:\n      ResourceCertificateDetails.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ResourceCertificateDetails.type.modelProperties,\n      globalAcsNamespace: {\n        serializedName: \"globalAcsNamespace\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      globalAcsHostName: {\n        serializedName: \"globalAcsHostName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      globalAcsRPRealm: {\n        serializedName: \"globalAcsRPRealm\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DNSZoneResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DNSZoneResponse\",\n    modelProperties: {\n      ...DNSZone.type.modelProperties,\n      requiredZoneNames: {\n        serializedName: \"requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceCapabilities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceCapabilities\",\n    modelProperties: {\n      ...ResourceCapabilitiesBase.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CapabilitiesProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapabilitiesResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapabilitiesResponse\",\n    modelProperties: {\n      ...ResourceCapabilitiesBase.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CapabilitiesResponseProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PatchTrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PatchTrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const VaultExtendedInfoResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultExtendedInfoResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      integrityKey: {\n        serializedName: \"properties.integrityKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionKey: {\n        serializedName: \"properties.encryptionKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionKeyThumbprint: {\n        serializedName: \"properties.encryptionKeyThumbprint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      algorithm: {\n        serializedName: \"properties.algorithm\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Vault: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Vault\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"IdentityData\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"VaultProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const PatchVault: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PatchVault\",\n    modelProperties: {\n      ...PatchTrackedResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"VaultProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"IdentityData\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  ResourceCertificateDetails: ResourceCertificateDetails,\n  \"ResourceCertificateDetails.AzureActiveDirectory\": ResourceCertificateAndAadDetails,\n  \"ResourceCertificateDetails.AccessControlService\": ResourceCertificateAndAcsDetails\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  CertificateRequest as CertificateRequestMapper,\n  CheckNameAvailabilityParameters as CheckNameAvailabilityParametersMapper,\n  ResourceCapabilities as ResourceCapabilitiesMapper,\n  Vault as VaultMapper,\n  PatchVault as PatchVaultMapper,\n  VaultExtendedInfoResource as VaultExtendedInfoResourceMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificateRequest: OperationParameter = {\n  parameterPath: \"certificateRequest\",\n  mapper: CertificateRequestMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2023-04-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const vaultName: OperationURLParameter = {\n  parameterPath: \"vaultName\",\n  mapper: {\n    serializedName: \"vaultName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificateName: OperationURLParameter = {\n  parameterPath: \"certificateName\",\n  mapper: {\n    serializedName: \"certificateName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const identityName: OperationURLParameter = {\n  parameterPath: \"identityName\",\n  mapper: {\n    serializedName: \"identityName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateLinkResourceName: OperationURLParameter = {\n  parameterPath: \"privateLinkResourceName\",\n  mapper: {\n    serializedName: \"privateLinkResourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const input: OperationParameter = {\n  parameterPath: \"input\",\n  mapper: CheckNameAvailabilityParametersMapper\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const input1: OperationParameter = {\n  parameterPath: \"input\",\n  mapper: ResourceCapabilitiesMapper\n};\n\nexport const vault: OperationParameter = {\n  parameterPath: \"vault\",\n  mapper: VaultMapper\n};\n\nexport const vault1: OperationParameter = {\n  parameterPath: \"vault\",\n  mapper: PatchVaultMapper\n};\n\nexport const resourceExtendedInfoDetails: OperationParameter = {\n  parameterPath: \"resourceExtendedInfoDetails\",\n  mapper: VaultExtendedInfoResourceMapper\n};\n\nexport const operationId: OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    serializedName: \"operationId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VaultCertificates } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RecoveryServicesClient } from \"../recoveryServicesClient\";\nimport {\n  CertificateRequest,\n  VaultCertificatesCreateOptionalParams,\n  VaultCertificatesCreateResponse\n} from \"../models\";\n\n/** Class containing VaultCertificates operations. */\nexport class VaultCertificatesImpl implements VaultCertificates {\n  private readonly client: RecoveryServicesClient;\n\n  /**\n   * Initialize a new instance of the class VaultCertificates class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RecoveryServicesClient) {\n    this.client = client;\n  }\n\n  /**\n   * Uploads a certificate for a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param certificateName Certificate friendly name.\n   * @param certificateRequest Input parameters for uploading the vault certificate.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    vaultName: string,\n    certificateName: string,\n    certificateRequest: CertificateRequest,\n    options?: VaultCertificatesCreateOptionalParams\n  ): Promise<VaultCertificatesCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        vaultName,\n        certificateName,\n        certificateRequest,\n        options\n      },\n      createOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/certificates/{certificateName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultCertificateResponse\n    }\n  },\n  requestBody: Parameters.certificateRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { RegisteredIdentities } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RecoveryServicesClient } from \"../recoveryServicesClient\";\nimport { RegisteredIdentitiesDeleteOptionalParams } from \"../models\";\n\n/** Class containing RegisteredIdentities operations. */\nexport class RegisteredIdentitiesImpl implements RegisteredIdentities {\n  private readonly client: RecoveryServicesClient;\n\n  /**\n   * Initialize a new instance of the class RegisteredIdentities class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RecoveryServicesClient) {\n    this.client = client;\n  }\n\n  /**\n   * Unregisters the given container from your Recovery Services vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param identityName Name of the protection container to unregister.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    vaultName: string,\n    identityName: string,\n    options?: RegisteredIdentitiesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, identityName, options },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/registeredIdentities/{identityName}\",\n  httpMethod: \"DELETE\",\n  responses: { 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.identityName\n  ],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ReplicationUsages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RecoveryServicesClient } from \"../recoveryServicesClient\";\nimport {\n  ReplicationUsage,\n  ReplicationUsagesListOptionalParams,\n  ReplicationUsagesListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ReplicationUsages operations. */\nexport class ReplicationUsagesImpl implements ReplicationUsages {\n  private readonly client: RecoveryServicesClient;\n\n  /**\n   * Initialize a new instance of the class ReplicationUsages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RecoveryServicesClient) {\n    this.client = client;\n  }\n\n  /**\n   * Fetches the replication usages of the vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: ReplicationUsagesListOptionalParams\n  ): PagedAsyncIterableIterator<ReplicationUsage> {\n    const iter = this.listPagingAll(resourceGroupName, vaultName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          vaultName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: ReplicationUsagesListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<ReplicationUsage[]> {\n    let result: ReplicationUsagesListResponse;\n    result = await this._list(resourceGroupName, vaultName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: ReplicationUsagesListOptionalParams\n  ): AsyncIterableIterator<ReplicationUsage> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      vaultName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Fetches the replication usages of the vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: ReplicationUsagesListOptionalParams\n  ): Promise<ReplicationUsagesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/replicationUsages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicationUsageList\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { PrivateLinkResourcesOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RecoveryServicesClient } from \"../recoveryServicesClient\";\nimport {\n  PrivateLinkResource,\n  PrivateLinkResourcesListNextOptionalParams,\n  PrivateLinkResourcesListOptionalParams,\n  PrivateLinkResourcesListResponse,\n  PrivateLinkResourcesGetOptionalParams,\n  PrivateLinkResourcesGetResponse,\n  PrivateLinkResourcesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateLinkResourcesOperations operations. */\nexport class PrivateLinkResourcesOperationsImpl\n  implements PrivateLinkResourcesOperations {\n  private readonly client: RecoveryServicesClient;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkResourcesOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RecoveryServicesClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the list of private link resources that need to be created for Backup and SiteRecovery\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): PagedAsyncIterableIterator<PrivateLinkResource> {\n    const iter = this.listPagingAll(resourceGroupName, vaultName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          vaultName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: PrivateLinkResourcesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<PrivateLinkResource[]> {\n    let result: PrivateLinkResourcesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, vaultName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        vaultName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): AsyncIterableIterator<PrivateLinkResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      vaultName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns the list of private link resources that need to be created for Backup and SiteRecovery\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): Promise<PrivateLinkResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Returns a specified private link resource that need to be created for Backup and SiteRecovery\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param privateLinkResourceName\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vaultName: string,\n    privateLinkResourceName: string,\n    options?: PrivateLinkResourcesGetOptionalParams\n  ): Promise<PrivateLinkResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, privateLinkResourceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    vaultName: string,\n    nextLink: string,\n    options?: PrivateLinkResourcesListNextOptionalParams\n  ): Promise<PrivateLinkResourcesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResources\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateLinkResources/{privateLinkResourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.privateLinkResourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResources\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { RecoveryServices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RecoveryServicesClient } from \"../recoveryServicesClient\";\nimport {\n  CheckNameAvailabilityParameters,\n  RecoveryServicesCheckNameAvailabilityOptionalParams,\n  RecoveryServicesCheckNameAvailabilityResponse,\n  ResourceCapabilities,\n  RecoveryServicesCapabilitiesOptionalParams,\n  RecoveryServicesCapabilitiesResponse\n} from \"../models\";\n\n/** Class containing RecoveryServices operations. */\nexport class RecoveryServicesImpl implements RecoveryServices {\n  private readonly client: RecoveryServicesClient;\n\n  /**\n   * Initialize a new instance of the class RecoveryServices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RecoveryServicesClient) {\n    this.client = client;\n  }\n\n  /**\n   * API to check for resource name availability.\n   * A name is available if no other resource exists that has the same SubscriptionId, Resource Name and\n   * Type\n   * or if one or more such resources exist, each of these must be GC'd and their time of deletion be\n   * more than 24 Hours Ago\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param location Location of the resource\n   * @param input Contains information about Resource type and Resource name\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    resourceGroupName: string,\n    location: string,\n    input: CheckNameAvailabilityParameters,\n    options?: RecoveryServicesCheckNameAvailabilityOptionalParams\n  ): Promise<RecoveryServicesCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, location, input, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * API to get details about capabilities provided by Microsoft.RecoveryServices RP\n   * @param location Location of the resource\n   * @param input Contains information about Resource type and properties to get capabilities\n   * @param options The options parameters.\n   */\n  capabilities(\n    location: string,\n    input: ResourceCapabilities,\n    options?: RecoveryServicesCapabilitiesOptionalParams\n  ): Promise<RecoveryServicesCapabilitiesResponse> {\n    return this.client.sendOperationRequest(\n      { location, input, options },\n      capabilitiesOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/locations/{location}/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst capabilitiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{location}/capabilities\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapabilitiesResponse\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.input1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport function createLroSpec<T>(inputs: {\n  sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>;\n  args: Record<string, unknown>;\n  spec: {\n    readonly requestBody?: unknown;\n    readonly path?: string;\n    readonly httpMethod: string;\n  } & Record<string, any>;\n}): LongRunningOperation<T> {\n  const { args, spec, sendOperationFn } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path!,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (\n      path: string,\n      options?: { abortSignal?: AbortSignalLike }\n    ) => {\n      const { requestBody, ...restSpec } = spec;\n      return sendOperationFn(args, {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options?.abortSignal\n      });\n    }\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Vaults } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RecoveryServicesClient } from \"../recoveryServicesClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  Vault,\n  VaultsListBySubscriptionIdNextOptionalParams,\n  VaultsListBySubscriptionIdOptionalParams,\n  VaultsListBySubscriptionIdResponse,\n  VaultsListByResourceGroupNextOptionalParams,\n  VaultsListByResourceGroupOptionalParams,\n  VaultsListByResourceGroupResponse,\n  VaultsGetOptionalParams,\n  VaultsGetResponse,\n  VaultsCreateOrUpdateOptionalParams,\n  VaultsCreateOrUpdateResponse,\n  VaultsDeleteOptionalParams,\n  PatchVault,\n  VaultsUpdateOptionalParams,\n  VaultsUpdateResponse,\n  VaultsListBySubscriptionIdNextResponse,\n  VaultsListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Vaults operations. */\nexport class VaultsImpl implements Vaults {\n  private readonly client: RecoveryServicesClient;\n\n  /**\n   * Initialize a new instance of the class Vaults class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RecoveryServicesClient) {\n    this.client = client;\n  }\n\n  /**\n   * Fetches all the resources of the specified type in the subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscriptionId(\n    options?: VaultsListBySubscriptionIdOptionalParams\n  ): PagedAsyncIterableIterator<Vault> {\n    const iter = this.listBySubscriptionIdPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionIdPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionIdPagingPage(\n    options?: VaultsListBySubscriptionIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Vault[]> {\n    let result: VaultsListBySubscriptionIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscriptionId(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionIdNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionIdPagingAll(\n    options?: VaultsListBySubscriptionIdOptionalParams\n  ): AsyncIterableIterator<Vault> {\n    for await (const page of this.listBySubscriptionIdPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Retrieve a list of Vaults.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: VaultsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Vault> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: VaultsListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Vault[]> {\n    let result: VaultsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: VaultsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Vault> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Fetches all the resources of the specified type in the subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionId(\n    options?: VaultsListBySubscriptionIdOptionalParams\n  ): Promise<VaultsListBySubscriptionIdResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionIdOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve a list of Vaults.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: VaultsListByResourceGroupOptionalParams\n  ): Promise<VaultsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Get the Vault details.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: VaultsGetOptionalParams\n  ): Promise<VaultsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a Recovery Services vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param vault Recovery Services Vault to be created.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vaultName: string,\n    vault: Vault,\n    options?: VaultsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VaultsCreateOrUpdateResponse>,\n      VaultsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VaultsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, vaultName, vault, options },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      VaultsCreateOrUpdateResponse,\n      OperationState<VaultsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a Recovery Services vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param vault Recovery Services Vault to be created.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vaultName: string,\n    vault: Vault,\n    options?: VaultsCreateOrUpdateOptionalParams\n  ): Promise<VaultsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vaultName,\n      vault,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: VaultsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Updates the vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param vault Recovery Services Vault to be created.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vaultName: string,\n    vault: PatchVault,\n    options?: VaultsUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<OperationState<VaultsUpdateResponse>, VaultsUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VaultsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, vaultName, vault, options },\n      spec: updateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      VaultsUpdateResponse,\n      OperationState<VaultsUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates the vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param vault Recovery Services Vault to be created.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vaultName: string,\n    vault: PatchVault,\n    options?: VaultsUpdateOptionalParams\n  ): Promise<VaultsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vaultName,\n      vault,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListBySubscriptionIdNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscriptionId method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionIdNext(\n    nextLink: string,\n    options?: VaultsListBySubscriptionIdNextOptionalParams\n  ): Promise<VaultsListBySubscriptionIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: VaultsListByResourceGroupNextOptionalParams\n  ): Promise<VaultsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/vaults\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Vault\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Vault\n    },\n    201: {\n      bodyMapper: Mappers.Vault\n    },\n    202: {\n      bodyMapper: Mappers.Vault\n    },\n    204: {\n      bodyMapper: Mappers.Vault\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vault,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Vault\n    },\n    201: {\n      bodyMapper: Mappers.Vault\n    },\n    202: {\n      bodyMapper: Mappers.Vault\n    },\n    204: {\n      bodyMapper: Mappers.Vault\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vault1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySubscriptionIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RecoveryServicesClient } from \"../recoveryServicesClient\";\nimport {\n  ClientDiscoveryValueForSingleApi,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: RecoveryServicesClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RecoveryServicesClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the list of available operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<ClientDiscoveryValueForSingleApi> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ClientDiscoveryValueForSingleApi[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<ClientDiscoveryValueForSingleApi> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns the list of available operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.RecoveryServices/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClientDiscoveryResponse\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClientDiscoveryResponse\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VaultExtendedInfo } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RecoveryServicesClient } from \"../recoveryServicesClient\";\nimport {\n  VaultExtendedInfoGetOptionalParams,\n  VaultExtendedInfoGetResponse,\n  VaultExtendedInfoResource,\n  VaultExtendedInfoCreateOrUpdateOptionalParams,\n  VaultExtendedInfoCreateOrUpdateResponse,\n  VaultExtendedInfoUpdateOptionalParams,\n  VaultExtendedInfoUpdateResponse\n} from \"../models\";\n\n/** Class containing VaultExtendedInfo operations. */\nexport class VaultExtendedInfoImpl implements VaultExtendedInfo {\n  private readonly client: RecoveryServicesClient;\n\n  /**\n   * Initialize a new instance of the class VaultExtendedInfo class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RecoveryServicesClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the vault extended info.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: VaultExtendedInfoGetOptionalParams\n  ): Promise<VaultExtendedInfoGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create vault extended info.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param resourceExtendedInfoDetails Details of ResourceExtendedInfo\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    vaultName: string,\n    resourceExtendedInfoDetails: VaultExtendedInfoResource,\n    options?: VaultExtendedInfoCreateOrUpdateOptionalParams\n  ): Promise<VaultExtendedInfoCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, resourceExtendedInfoDetails, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Update vault extended info.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param resourceExtendedInfoDetails Details of ResourceExtendedInfo\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    vaultName: string,\n    resourceExtendedInfoDetails: VaultExtendedInfoResource,\n    options?: VaultExtendedInfoUpdateOptionalParams\n  ): Promise<VaultExtendedInfoUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, resourceExtendedInfoDetails, options },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/extendedInformation/vaultExtendedInfo\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultExtendedInfoResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/extendedInformation/vaultExtendedInfo\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultExtendedInfoResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.resourceExtendedInfoDetails,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/extendedInformation/vaultExtendedInfo\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultExtendedInfoResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.resourceExtendedInfoDetails,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Usages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RecoveryServicesClient } from \"../recoveryServicesClient\";\nimport {\n  VaultUsage,\n  UsagesListByVaultsOptionalParams,\n  UsagesListByVaultsResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Usages operations. */\nexport class UsagesImpl implements Usages {\n  private readonly client: RecoveryServicesClient;\n\n  /**\n   * Initialize a new instance of the class Usages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RecoveryServicesClient) {\n    this.client = client;\n  }\n\n  /**\n   * Fetches the usages of the vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param options The options parameters.\n   */\n  public listByVaults(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: UsagesListByVaultsOptionalParams\n  ): PagedAsyncIterableIterator<VaultUsage> {\n    const iter = this.listByVaultsPagingAll(\n      resourceGroupName,\n      vaultName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByVaultsPagingPage(\n          resourceGroupName,\n          vaultName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByVaultsPagingPage(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: UsagesListByVaultsOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<VaultUsage[]> {\n    let result: UsagesListByVaultsResponse;\n    result = await this._listByVaults(resourceGroupName, vaultName, options);\n    yield result.value || [];\n  }\n\n  private async *listByVaultsPagingAll(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: UsagesListByVaultsOptionalParams\n  ): AsyncIterableIterator<VaultUsage> {\n    for await (const page of this.listByVaultsPagingPage(\n      resourceGroupName,\n      vaultName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Fetches the usages of the vault.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param options The options parameters.\n   */\n  private _listByVaults(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: UsagesListByVaultsOptionalParams\n  ): Promise<UsagesListByVaultsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      listByVaultsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByVaultsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultUsageList\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  VaultCertificatesImpl,\n  RegisteredIdentitiesImpl,\n  ReplicationUsagesImpl,\n  PrivateLinkResourcesOperationsImpl,\n  RecoveryServicesImpl,\n  VaultsImpl,\n  OperationsImpl,\n  VaultExtendedInfoImpl,\n  UsagesImpl\n} from \"./operations\";\nimport {\n  VaultCertificates,\n  RegisteredIdentities,\n  ReplicationUsages,\n  PrivateLinkResourcesOperations,\n  RecoveryServices,\n  Vaults,\n  Operations,\n  VaultExtendedInfo,\n  Usages\n} from \"./operationsInterfaces\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  RecoveryServicesClientOptionalParams,\n  GetOperationStatusOptionalParams,\n  GetOperationStatusResponse,\n  GetOperationResultOptionalParams,\n  GetOperationResultResponse\n} from \"./models\";\n\nexport class RecoveryServicesClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the RecoveryServicesClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: RecoveryServicesClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: RecoveryServicesClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-recoveryservices/5.4.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2023-04-01\";\n    this.vaultCertificates = new VaultCertificatesImpl(this);\n    this.registeredIdentities = new RegisteredIdentitiesImpl(this);\n    this.replicationUsages = new ReplicationUsagesImpl(this);\n    this.privateLinkResourcesOperations = new PrivateLinkResourcesOperationsImpl(\n      this\n    );\n    this.recoveryServices = new RecoveryServicesImpl(this);\n    this.vaults = new VaultsImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.vaultExtendedInfo = new VaultExtendedInfoImpl(this);\n    this.usages = new UsagesImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  /**\n   * Gets the operation status for a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param operationId\n   * @param options The options parameters.\n   */\n  getOperationStatus(\n    resourceGroupName: string,\n    vaultName: string,\n    operationId: string,\n    options?: GetOperationStatusOptionalParams\n  ): Promise<GetOperationStatusResponse> {\n    return this.sendOperationRequest(\n      { resourceGroupName, vaultName, operationId, options },\n      getOperationStatusOperationSpec\n    );\n  }\n\n  /**\n   * Gets the operation result for a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vaultName The name of the recovery services vault.\n   * @param operationId\n   * @param options The options parameters.\n   */\n  getOperationResult(\n    resourceGroupName: string,\n    vaultName: string,\n    operationId: string,\n    options?: GetOperationResultOptionalParams\n  ): Promise<GetOperationResultResponse> {\n    return this.sendOperationRequest(\n      { resourceGroupName, vaultName, operationId, options },\n      getOperationResultOperationSpec\n    );\n  }\n\n  vaultCertificates: VaultCertificates;\n  registeredIdentities: RegisteredIdentities;\n  replicationUsages: ReplicationUsages;\n  privateLinkResourcesOperations: PrivateLinkResourcesOperations;\n  recoveryServices: RecoveryServices;\n  vaults: Vaults;\n  operations: Operations;\n  vaultExtendedInfo: VaultExtendedInfo;\n  usages: Usages;\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationStatusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/operationStatus/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.operationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationResultOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/operationResults/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Vault\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.operationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"],"names":["KnownAuthType","KnownVaultSubResourceType","KnownResourceIdentityType","KnownVaultUpgradeState","KnownTriggerType","KnownProvisioningState","KnownPrivateEndpointConnectionStatus","KnownVaultPrivateEndpointState","KnownInfrastructureEncryptionState","KnownResourceMoveState","KnownBackupStorageVersion","KnownPublicNetworkAccess","KnownAlertsState","KnownCrossSubscriptionRestoreState","KnownStandardTierStorageRedundancy","KnownCrossRegionRestore","KnownImmutabilityState","KnownSoftDeleteState","KnownMultiUserAuthorization","KnownSecureScoreLevel","KnownSkuName","KnownCreatedByType","KnownUsagesUnit","CertificateRequestMapper","CheckNameAvailabilityParametersMapper","ResourceCapabilitiesMapper","VaultMapper","PatchVaultMapper","VaultExtendedInfoResourceMapper","serializer","coreClient","Mappers.VaultCertificateResponse","Parameters.certificateRequest","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.vaultName","Parameters.certificateName","Parameters.contentType","Parameters.accept","deleteOperationSpec","Parameters.identityName","__await","__asyncValues","__asyncDelegator","listOperationSpec","Mappers.ReplicationUsageList","getOperationSpec","listNextOperationSpec","Mappers.PrivateLinkResources","Mappers.CloudError","Mappers.PrivateLinkResource","Parameters.privateLinkResourceName","Parameters.nextLink","Mappers.CheckNameAvailabilityResult","Parameters.input","Parameters.location","Mappers.CapabilitiesResponse","Parameters.input1","__rest","__awaiter","createOrUpdateOperationSpec","createHttpPoller","updateOperationSpec","Mappers.VaultList","Mappers.Vault","Parameters.vault","Parameters.vault1","Mappers.ClientDiscoveryResponse","Mappers.VaultExtendedInfoResource","Parameters.resourceExtendedInfoDetails","Mappers.VaultUsageList","coreRestPipeline","Mappers.OperationResource","Parameters.operationId"],"mappings":"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"}