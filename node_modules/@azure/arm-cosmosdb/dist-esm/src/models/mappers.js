/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const ManagedServiceIdentity = {
    type: {
        name: "Composite",
        className: "ManagedServiceIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned",
                        "None"
                    ]
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties"
                        }
                    }
                }
            }
        }
    }
};
export const Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties = {
    type: {
        name: "Composite",
        className: "Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const IpAddressOrRange = {
    type: {
        name: "Composite",
        className: "IpAddressOrRange",
        modelProperties: {
            ipAddressOrRange: {
                serializedName: "ipAddressOrRange",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ConsistencyPolicy = {
    type: {
        name: "Composite",
        className: "ConsistencyPolicy",
        modelProperties: {
            defaultConsistencyLevel: {
                serializedName: "defaultConsistencyLevel",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Eventual",
                        "Session",
                        "BoundedStaleness",
                        "Strong",
                        "ConsistentPrefix"
                    ]
                }
            },
            maxStalenessPrefix: {
                constraints: {
                    InclusiveMaximum: 2147483647,
                    InclusiveMinimum: 1
                },
                serializedName: "maxStalenessPrefix",
                type: {
                    name: "Number"
                }
            },
            maxIntervalInSeconds: {
                constraints: {
                    InclusiveMaximum: 86400,
                    InclusiveMinimum: 5
                },
                serializedName: "maxIntervalInSeconds",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const Capability = {
    type: {
        name: "Composite",
        className: "Capability",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Location = {
    type: {
        name: "Composite",
        className: "Location",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            locationName: {
                serializedName: "locationName",
                type: {
                    name: "String"
                }
            },
            documentEndpoint: {
                serializedName: "documentEndpoint",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            failoverPriority: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "failoverPriority",
                type: {
                    name: "Number"
                }
            },
            isZoneRedundant: {
                serializedName: "isZoneRedundant",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const FailoverPolicy = {
    type: {
        name: "Composite",
        className: "FailoverPolicy",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            locationName: {
                serializedName: "locationName",
                type: {
                    name: "String"
                }
            },
            failoverPriority: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "failoverPriority",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const VirtualNetworkRule = {
    type: {
        name: "Composite",
        className: "VirtualNetworkRule",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            ignoreMissingVNetServiceEndpoint: {
                serializedName: "ignoreMissingVNetServiceEndpoint",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const PrivateEndpointProperty = {
    type: {
        name: "Composite",
        className: "PrivateEndpointProperty",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkServiceConnectionStateProperty = {
    type: {
        name: "Composite",
        className: "PrivateLinkServiceConnectionStateProperty",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            actionsRequired: {
                serializedName: "actionsRequired",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiProperties = {
    type: {
        name: "Composite",
        className: "ApiProperties",
        modelProperties: {
            serverVersion: {
                serializedName: "serverVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AnalyticalStorageConfiguration = {
    type: {
        name: "Composite",
        className: "AnalyticalStorageConfiguration",
        modelProperties: {
            schemaType: {
                serializedName: "schemaType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseRestoreResource = {
    type: {
        name: "Composite",
        className: "DatabaseRestoreResource",
        modelProperties: {
            databaseName: {
                serializedName: "databaseName",
                type: {
                    name: "String"
                }
            },
            collectionNames: {
                serializedName: "collectionNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const GremlinDatabaseRestoreResource = {
    type: {
        name: "Composite",
        className: "GremlinDatabaseRestoreResource",
        modelProperties: {
            databaseName: {
                serializedName: "databaseName",
                type: {
                    name: "String"
                }
            },
            graphNames: {
                serializedName: "graphNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const RestoreParametersBase = {
    type: {
        name: "Composite",
        className: "RestoreParametersBase",
        modelProperties: {
            restoreSource: {
                serializedName: "restoreSource",
                type: {
                    name: "String"
                }
            },
            restoreTimestampInUtc: {
                serializedName: "restoreTimestampInUtc",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const BackupPolicy = {
    type: {
        name: "Composite",
        className: "BackupPolicy",
        uberParent: "BackupPolicy",
        polymorphicDiscriminator: {
            serializedName: "type",
            clientName: "type"
        },
        modelProperties: {
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            migrationState: {
                serializedName: "migrationState",
                type: {
                    name: "Composite",
                    className: "BackupPolicyMigrationState"
                }
            }
        }
    }
};
export const BackupPolicyMigrationState = {
    type: {
        name: "Composite",
        className: "BackupPolicyMigrationState",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            targetType: {
                serializedName: "targetType",
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const CorsPolicy = {
    type: {
        name: "Composite",
        className: "CorsPolicy",
        modelProperties: {
            allowedOrigins: {
                serializedName: "allowedOrigins",
                required: true,
                type: {
                    name: "String"
                }
            },
            allowedMethods: {
                serializedName: "allowedMethods",
                type: {
                    name: "String"
                }
            },
            allowedHeaders: {
                serializedName: "allowedHeaders",
                type: {
                    name: "String"
                }
            },
            exposedHeaders: {
                serializedName: "exposedHeaders",
                type: {
                    name: "String"
                }
            },
            maxAgeInSeconds: {
                constraints: {
                    InclusiveMaximum: 2147483647,
                    InclusiveMinimum: 1
                },
                serializedName: "maxAgeInSeconds",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const Capacity = {
    type: {
        name: "Composite",
        className: "Capacity",
        modelProperties: {
            totalThroughputLimit: {
                constraints: {
                    InclusiveMinimum: -1
                },
                serializedName: "totalThroughputLimit",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const DatabaseAccountKeysMetadata = {
    type: {
        name: "Composite",
        className: "DatabaseAccountKeysMetadata",
        modelProperties: {
            primaryMasterKey: {
                serializedName: "primaryMasterKey",
                type: {
                    name: "Composite",
                    className: "AccountKeyMetadata"
                }
            },
            secondaryMasterKey: {
                serializedName: "secondaryMasterKey",
                type: {
                    name: "Composite",
                    className: "AccountKeyMetadata"
                }
            },
            primaryReadonlyMasterKey: {
                serializedName: "primaryReadonlyMasterKey",
                type: {
                    name: "Composite",
                    className: "AccountKeyMetadata"
                }
            },
            secondaryReadonlyMasterKey: {
                serializedName: "secondaryReadonlyMasterKey",
                type: {
                    name: "Composite",
                    className: "AccountKeyMetadata"
                }
            }
        }
    }
};
export const AccountKeyMetadata = {
    type: {
        name: "Composite",
        className: "AccountKeyMetadata",
        modelProperties: {
            generationTime: {
                serializedName: "generationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const ARMResourceProperties = {
    type: {
        name: "Composite",
        className: "ARMResourceProperties",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const DatabaseAccountUpdateParameters = {
    type: {
        name: "Composite",
        className: "DatabaseAccountUpdateParameters",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedServiceIdentity"
                }
            },
            consistencyPolicy: {
                serializedName: "properties.consistencyPolicy",
                type: {
                    name: "Composite",
                    className: "ConsistencyPolicy"
                }
            },
            locations: {
                serializedName: "properties.locations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Location"
                        }
                    }
                }
            },
            ipRules: {
                serializedName: "properties.ipRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IpAddressOrRange"
                        }
                    }
                }
            },
            isVirtualNetworkFilterEnabled: {
                serializedName: "properties.isVirtualNetworkFilterEnabled",
                type: {
                    name: "Boolean"
                }
            },
            enableAutomaticFailover: {
                serializedName: "properties.enableAutomaticFailover",
                type: {
                    name: "Boolean"
                }
            },
            capabilities: {
                serializedName: "properties.capabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Capability"
                        }
                    }
                }
            },
            virtualNetworkRules: {
                serializedName: "properties.virtualNetworkRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule"
                        }
                    }
                }
            },
            enableMultipleWriteLocations: {
                serializedName: "properties.enableMultipleWriteLocations",
                type: {
                    name: "Boolean"
                }
            },
            enableCassandraConnector: {
                serializedName: "properties.enableCassandraConnector",
                type: {
                    name: "Boolean"
                }
            },
            connectorOffer: {
                serializedName: "properties.connectorOffer",
                type: {
                    name: "String"
                }
            },
            disableKeyBasedMetadataWriteAccess: {
                serializedName: "properties.disableKeyBasedMetadataWriteAccess",
                type: {
                    name: "Boolean"
                }
            },
            keyVaultKeyUri: {
                serializedName: "properties.keyVaultKeyUri",
                type: {
                    name: "String"
                }
            },
            defaultIdentity: {
                serializedName: "properties.defaultIdentity",
                type: {
                    name: "String"
                }
            },
            publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String"
                }
            },
            enableFreeTier: {
                serializedName: "properties.enableFreeTier",
                type: {
                    name: "Boolean"
                }
            },
            apiProperties: {
                serializedName: "properties.apiProperties",
                type: {
                    name: "Composite",
                    className: "ApiProperties"
                }
            },
            enableAnalyticalStorage: {
                serializedName: "properties.enableAnalyticalStorage",
                type: {
                    name: "Boolean"
                }
            },
            analyticalStorageConfiguration: {
                serializedName: "properties.analyticalStorageConfiguration",
                type: {
                    name: "Composite",
                    className: "AnalyticalStorageConfiguration"
                }
            },
            backupPolicy: {
                serializedName: "properties.backupPolicy",
                type: {
                    name: "Composite",
                    className: "BackupPolicy"
                }
            },
            cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CorsPolicy"
                        }
                    }
                }
            },
            networkAclBypass: {
                serializedName: "properties.networkAclBypass",
                type: {
                    name: "Enum",
                    allowedValues: ["None", "AzureServices"]
                }
            },
            networkAclBypassResourceIds: {
                serializedName: "properties.networkAclBypassResourceIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            disableLocalAuth: {
                serializedName: "properties.disableLocalAuth",
                type: {
                    name: "Boolean"
                }
            },
            capacity: {
                serializedName: "properties.capacity",
                type: {
                    name: "Composite",
                    className: "Capacity"
                }
            },
            keysMetadata: {
                serializedName: "properties.keysMetadata",
                type: {
                    name: "Composite",
                    className: "DatabaseAccountKeysMetadata"
                }
            },
            enablePartitionMerge: {
                serializedName: "properties.enablePartitionMerge",
                type: {
                    name: "Boolean"
                }
            },
            minimalTlsVersion: {
                serializedName: "properties.minimalTlsVersion",
                type: {
                    name: "String"
                }
            },
            enableBurstCapacity: {
                serializedName: "properties.enableBurstCapacity",
                type: {
                    name: "Boolean"
                }
            },
            customerManagedKeyStatus: {
                serializedName: "properties.customerManagedKeyStatus",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const FailoverPolicies = {
    type: {
        name: "Composite",
        className: "FailoverPolicies",
        modelProperties: {
            failoverPolicies: {
                serializedName: "failoverPolicies",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FailoverPolicy"
                        }
                    }
                }
            }
        }
    }
};
export const DatabaseAccountsListResult = {
    type: {
        name: "Composite",
        className: "DatabaseAccountsListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseAccountGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const DatabaseAccountListReadOnlyKeysResult = {
    type: {
        name: "Composite",
        className: "DatabaseAccountListReadOnlyKeysResult",
        modelProperties: {
            primaryReadonlyMasterKey: {
                serializedName: "primaryReadonlyMasterKey",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            secondaryReadonlyMasterKey: {
                serializedName: "secondaryReadonlyMasterKey",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseAccountListConnectionStringsResult = {
    type: {
        name: "Composite",
        className: "DatabaseAccountListConnectionStringsResult",
        modelProperties: {
            connectionStrings: {
                serializedName: "connectionStrings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseAccountConnectionString"
                        }
                    }
                }
            }
        }
    }
};
export const DatabaseAccountConnectionString = {
    type: {
        name: "Composite",
        className: "DatabaseAccountConnectionString",
        modelProperties: {
            connectionString: {
                serializedName: "connectionString",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            keyKind: {
                serializedName: "keyKind",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RegionForOnlineOffline = {
    type: {
        name: "Composite",
        className: "RegionForOnlineOffline",
        modelProperties: {
            region: {
                serializedName: "region",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseAccountRegenerateKeyParameters = {
    type: {
        name: "Composite",
        className: "DatabaseAccountRegenerateKeyParameters",
        modelProperties: {
            keyKind: {
                serializedName: "keyKind",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            }
        }
    }
};
export const OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "Provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "Resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "Operation",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "Description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MetricListResult = {
    type: {
        name: "Composite",
        className: "MetricListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Metric"
                        }
                    }
                }
            }
        }
    }
};
export const Metric = {
    type: {
        name: "Composite",
        className: "Metric",
        modelProperties: {
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            timeGrain: {
                serializedName: "timeGrain",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "MetricName"
                }
            },
            metricValues: {
                serializedName: "metricValues",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricValue"
                        }
                    }
                }
            }
        }
    }
};
export const MetricName = {
    type: {
        name: "Composite",
        className: "MetricName",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MetricValue = {
    type: {
        name: "Composite",
        className: "MetricValue",
        modelProperties: {
            count: {
                serializedName: "_count",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            average: {
                serializedName: "average",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            maximum: {
                serializedName: "maximum",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            minimum: {
                serializedName: "minimum",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            timestamp: {
                serializedName: "timestamp",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            total: {
                serializedName: "total",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const PercentileMetricListResult = {
    type: {
        name: "Composite",
        className: "PercentileMetricListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PercentileMetric"
                        }
                    }
                }
            }
        }
    }
};
export const PercentileMetric = {
    type: {
        name: "Composite",
        className: "PercentileMetric",
        modelProperties: {
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            timeGrain: {
                serializedName: "timeGrain",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "MetricName"
                }
            },
            metricValues: {
                serializedName: "metricValues",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PercentileMetricValue"
                        }
                    }
                }
            }
        }
    }
};
export const PartitionMetricListResult = {
    type: {
        name: "Composite",
        className: "PartitionMetricListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PartitionMetric"
                        }
                    }
                }
            }
        }
    }
};
export const UsagesResult = {
    type: {
        name: "Composite",
        className: "UsagesResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            }
        }
    }
};
export const Usage = {
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "MetricName"
                }
            },
            quotaPeriod: {
                serializedName: "quotaPeriod",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            currentValue: {
                serializedName: "currentValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const PartitionUsagesResult = {
    type: {
        name: "Composite",
        className: "PartitionUsagesResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PartitionUsage"
                        }
                    }
                }
            }
        }
    }
};
export const MetricDefinitionsListResult = {
    type: {
        name: "Composite",
        className: "MetricDefinitionsListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricDefinition"
                        }
                    }
                }
            }
        }
    }
};
export const MetricDefinition = {
    type: {
        name: "Composite",
        className: "MetricDefinition",
        modelProperties: {
            metricAvailabilities: {
                serializedName: "metricAvailabilities",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricAvailability"
                        }
                    }
                }
            },
            primaryAggregationType: {
                serializedName: "primaryAggregationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "MetricName"
                }
            }
        }
    }
};
export const MetricAvailability = {
    type: {
        name: "Composite",
        className: "MetricAvailability",
        modelProperties: {
            timeGrain: {
                serializedName: "timeGrain",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            retention: {
                serializedName: "retention",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlDatabaseListResult = {
    type: {
        name: "Composite",
        className: "SqlDatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlDatabaseGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const SqlDatabaseResource = {
    type: {
        name: "Composite",
        className: "SqlDatabaseResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            restoreParameters: {
                serializedName: "restoreParameters",
                type: {
                    name: "Composite",
                    className: "ResourceRestoreParameters"
                }
            },
            createMode: {
                defaultValue: "Default",
                serializedName: "createMode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ExtendedResourceProperties = {
    type: {
        name: "Composite",
        className: "ExtendedResourceProperties",
        modelProperties: {
            rid: {
                serializedName: "_rid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ts: {
                serializedName: "_ts",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            etag: {
                serializedName: "_etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OptionsResource = {
    type: {
        name: "Composite",
        className: "OptionsResource",
        modelProperties: {
            throughput: {
                serializedName: "throughput",
                type: {
                    name: "Number"
                }
            },
            autoscaleSettings: {
                serializedName: "autoscaleSettings",
                type: {
                    name: "Composite",
                    className: "AutoscaleSettings"
                }
            }
        }
    }
};
export const AutoscaleSettings = {
    type: {
        name: "Composite",
        className: "AutoscaleSettings",
        modelProperties: {
            maxThroughput: {
                serializedName: "maxThroughput",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const CreateUpdateOptions = {
    type: {
        name: "Composite",
        className: "CreateUpdateOptions",
        modelProperties: {
            throughput: {
                serializedName: "throughput",
                type: {
                    name: "Number"
                }
            },
            autoscaleSettings: {
                serializedName: "autoscaleSettings",
                type: {
                    name: "Composite",
                    className: "AutoscaleSettings"
                }
            }
        }
    }
};
export const ThroughputSettingsResource = {
    type: {
        name: "Composite",
        className: "ThroughputSettingsResource",
        modelProperties: {
            throughput: {
                serializedName: "throughput",
                type: {
                    name: "Number"
                }
            },
            autoscaleSettings: {
                serializedName: "autoscaleSettings",
                type: {
                    name: "Composite",
                    className: "AutoscaleSettingsResource"
                }
            },
            minimumThroughput: {
                serializedName: "minimumThroughput",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            offerReplacePending: {
                serializedName: "offerReplacePending",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            instantMaximumThroughput: {
                serializedName: "instantMaximumThroughput",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            softAllowedMaximumThroughput: {
                serializedName: "softAllowedMaximumThroughput",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AutoscaleSettingsResource = {
    type: {
        name: "Composite",
        className: "AutoscaleSettingsResource",
        modelProperties: {
            maxThroughput: {
                serializedName: "maxThroughput",
                required: true,
                type: {
                    name: "Number"
                }
            },
            autoUpgradePolicy: {
                serializedName: "autoUpgradePolicy",
                type: {
                    name: "Composite",
                    className: "AutoUpgradePolicyResource"
                }
            },
            targetMaxThroughput: {
                serializedName: "targetMaxThroughput",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const AutoUpgradePolicyResource = {
    type: {
        name: "Composite",
        className: "AutoUpgradePolicyResource",
        modelProperties: {
            throughputPolicy: {
                serializedName: "throughputPolicy",
                type: {
                    name: "Composite",
                    className: "ThroughputPolicyResource"
                }
            }
        }
    }
};
export const ThroughputPolicyResource = {
    type: {
        name: "Composite",
        className: "ThroughputPolicyResource",
        modelProperties: {
            isEnabled: {
                serializedName: "isEnabled",
                type: {
                    name: "Boolean"
                }
            },
            incrementPercent: {
                serializedName: "incrementPercent",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const CloudError = {
    type: {
        name: "Composite",
        className: "CloudError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorResponse"
                }
            }
        }
    }
};
export const SqlContainerListResult = {
    type: {
        name: "Composite",
        className: "SqlContainerListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlContainerGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const SqlContainerResource = {
    type: {
        name: "Composite",
        className: "SqlContainerResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            indexingPolicy: {
                serializedName: "indexingPolicy",
                type: {
                    name: "Composite",
                    className: "IndexingPolicy"
                }
            },
            partitionKey: {
                serializedName: "partitionKey",
                type: {
                    name: "Composite",
                    className: "ContainerPartitionKey"
                }
            },
            defaultTtl: {
                serializedName: "defaultTtl",
                type: {
                    name: "Number"
                }
            },
            uniqueKeyPolicy: {
                serializedName: "uniqueKeyPolicy",
                type: {
                    name: "Composite",
                    className: "UniqueKeyPolicy"
                }
            },
            conflictResolutionPolicy: {
                serializedName: "conflictResolutionPolicy",
                type: {
                    name: "Composite",
                    className: "ConflictResolutionPolicy"
                }
            },
            clientEncryptionPolicy: {
                serializedName: "clientEncryptionPolicy",
                type: {
                    name: "Composite",
                    className: "ClientEncryptionPolicy"
                }
            },
            analyticalStorageTtl: {
                serializedName: "analyticalStorageTtl",
                type: {
                    name: "Number"
                }
            },
            restoreParameters: {
                serializedName: "restoreParameters",
                type: {
                    name: "Composite",
                    className: "ResourceRestoreParameters"
                }
            },
            createMode: {
                defaultValue: "Default",
                serializedName: "createMode",
                type: {
                    name: "String"
                }
            },
            computedProperties: {
                serializedName: "computedProperties",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ComputedProperty"
                        }
                    }
                }
            }
        }
    }
};
export const IndexingPolicy = {
    type: {
        name: "Composite",
        className: "IndexingPolicy",
        modelProperties: {
            automatic: {
                serializedName: "automatic",
                type: {
                    name: "Boolean"
                }
            },
            indexingMode: {
                defaultValue: "consistent",
                serializedName: "indexingMode",
                type: {
                    name: "String"
                }
            },
            includedPaths: {
                serializedName: "includedPaths",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IncludedPath"
                        }
                    }
                }
            },
            excludedPaths: {
                serializedName: "excludedPaths",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExcludedPath"
                        }
                    }
                }
            },
            compositeIndexes: {
                serializedName: "compositeIndexes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "Composite",
                                    className: "CompositePath"
                                }
                            }
                        }
                    }
                }
            },
            spatialIndexes: {
                serializedName: "spatialIndexes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SpatialSpec"
                        }
                    }
                }
            }
        }
    }
};
export const IncludedPath = {
    type: {
        name: "Composite",
        className: "IncludedPath",
        modelProperties: {
            path: {
                serializedName: "path",
                type: {
                    name: "String"
                }
            },
            indexes: {
                serializedName: "indexes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Indexes"
                        }
                    }
                }
            }
        }
    }
};
export const Indexes = {
    type: {
        name: "Composite",
        className: "Indexes",
        modelProperties: {
            dataType: {
                defaultValue: "String",
                serializedName: "dataType",
                type: {
                    name: "String"
                }
            },
            precision: {
                serializedName: "precision",
                type: {
                    name: "Number"
                }
            },
            kind: {
                defaultValue: "Hash",
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ExcludedPath = {
    type: {
        name: "Composite",
        className: "ExcludedPath",
        modelProperties: {
            path: {
                serializedName: "path",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CompositePath = {
    type: {
        name: "Composite",
        className: "CompositePath",
        modelProperties: {
            path: {
                serializedName: "path",
                type: {
                    name: "String"
                }
            },
            order: {
                serializedName: "order",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SpatialSpec = {
    type: {
        name: "Composite",
        className: "SpatialSpec",
        modelProperties: {
            path: {
                serializedName: "path",
                type: {
                    name: "String"
                }
            },
            types: {
                serializedName: "types",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const ContainerPartitionKey = {
    type: {
        name: "Composite",
        className: "ContainerPartitionKey",
        modelProperties: {
            paths: {
                serializedName: "paths",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            kind: {
                defaultValue: "Hash",
                serializedName: "kind",
                type: {
                    name: "String"
                }
            },
            version: {
                constraints: {
                    InclusiveMaximum: 2,
                    InclusiveMinimum: 1
                },
                serializedName: "version",
                type: {
                    name: "Number"
                }
            },
            systemKey: {
                serializedName: "systemKey",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const UniqueKeyPolicy = {
    type: {
        name: "Composite",
        className: "UniqueKeyPolicy",
        modelProperties: {
            uniqueKeys: {
                serializedName: "uniqueKeys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UniqueKey"
                        }
                    }
                }
            }
        }
    }
};
export const UniqueKey = {
    type: {
        name: "Composite",
        className: "UniqueKey",
        modelProperties: {
            paths: {
                serializedName: "paths",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const ConflictResolutionPolicy = {
    type: {
        name: "Composite",
        className: "ConflictResolutionPolicy",
        modelProperties: {
            mode: {
                defaultValue: "LastWriterWins",
                serializedName: "mode",
                type: {
                    name: "String"
                }
            },
            conflictResolutionPath: {
                serializedName: "conflictResolutionPath",
                type: {
                    name: "String"
                }
            },
            conflictResolutionProcedure: {
                serializedName: "conflictResolutionProcedure",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ClientEncryptionPolicy = {
    type: {
        name: "Composite",
        className: "ClientEncryptionPolicy",
        modelProperties: {
            includedPaths: {
                serializedName: "includedPaths",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ClientEncryptionIncludedPath"
                        }
                    }
                }
            },
            policyFormatVersion: {
                constraints: {
                    InclusiveMaximum: 2,
                    InclusiveMinimum: 1
                },
                serializedName: "policyFormatVersion",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ClientEncryptionIncludedPath = {
    type: {
        name: "Composite",
        className: "ClientEncryptionIncludedPath",
        modelProperties: {
            path: {
                serializedName: "path",
                required: true,
                type: {
                    name: "String"
                }
            },
            clientEncryptionKeyId: {
                serializedName: "clientEncryptionKeyId",
                required: true,
                type: {
                    name: "String"
                }
            },
            encryptionType: {
                serializedName: "encryptionType",
                required: true,
                type: {
                    name: "String"
                }
            },
            encryptionAlgorithm: {
                serializedName: "encryptionAlgorithm",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ComputedProperty = {
    type: {
        name: "Composite",
        className: "ComputedProperty",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            query: {
                serializedName: "query",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ClientEncryptionKeysListResult = {
    type: {
        name: "Composite",
        className: "ClientEncryptionKeysListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ClientEncryptionKeyGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const ClientEncryptionKeyResource = {
    type: {
        name: "Composite",
        className: "ClientEncryptionKeyResource",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            encryptionAlgorithm: {
                serializedName: "encryptionAlgorithm",
                type: {
                    name: "String"
                }
            },
            wrappedDataEncryptionKey: {
                serializedName: "wrappedDataEncryptionKey",
                type: {
                    name: "ByteArray"
                }
            },
            keyWrapMetadata: {
                serializedName: "keyWrapMetadata",
                type: {
                    name: "Composite",
                    className: "KeyWrapMetadata"
                }
            }
        }
    }
};
export const KeyWrapMetadata = {
    type: {
        name: "Composite",
        className: "KeyWrapMetadata",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            algorithm: {
                serializedName: "algorithm",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ARMProxyResource = {
    type: {
        name: "Composite",
        className: "ARMProxyResource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ClientEncryptionKeyCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "ClientEncryptionKeyCreateUpdateParameters",
        modelProperties: {
            resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "ClientEncryptionKeyResource"
                }
            }
        }
    }
};
export const SqlStoredProcedureListResult = {
    type: {
        name: "Composite",
        className: "SqlStoredProcedureListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlStoredProcedureGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const SqlStoredProcedureResource = {
    type: {
        name: "Composite",
        className: "SqlStoredProcedureResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            body: {
                serializedName: "body",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlUserDefinedFunctionListResult = {
    type: {
        name: "Composite",
        className: "SqlUserDefinedFunctionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlUserDefinedFunctionGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const SqlUserDefinedFunctionResource = {
    type: {
        name: "Composite",
        className: "SqlUserDefinedFunctionResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            body: {
                serializedName: "body",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlTriggerListResult = {
    type: {
        name: "Composite",
        className: "SqlTriggerListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlTriggerGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const SqlTriggerResource = {
    type: {
        name: "Composite",
        className: "SqlTriggerResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            body: {
                serializedName: "body",
                type: {
                    name: "String"
                }
            },
            triggerType: {
                serializedName: "triggerType",
                type: {
                    name: "String"
                }
            },
            triggerOperation: {
                serializedName: "triggerOperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBDatabaseListResult = {
    type: {
        name: "Composite",
        className: "MongoDBDatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MongoDBDatabaseGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const MongoDBDatabaseResource = {
    type: {
        name: "Composite",
        className: "MongoDBDatabaseResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            restoreParameters: {
                serializedName: "restoreParameters",
                type: {
                    name: "Composite",
                    className: "ResourceRestoreParameters"
                }
            },
            createMode: {
                defaultValue: "Default",
                serializedName: "createMode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBCollectionListResult = {
    type: {
        name: "Composite",
        className: "MongoDBCollectionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MongoDBCollectionGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const MongoDBCollectionResource = {
    type: {
        name: "Composite",
        className: "MongoDBCollectionResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            shardKey: {
                serializedName: "shardKey",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            indexes: {
                serializedName: "indexes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MongoIndex"
                        }
                    }
                }
            },
            analyticalStorageTtl: {
                serializedName: "analyticalStorageTtl",
                type: {
                    name: "Number"
                }
            },
            restoreParameters: {
                serializedName: "restoreParameters",
                type: {
                    name: "Composite",
                    className: "ResourceRestoreParameters"
                }
            },
            createMode: {
                defaultValue: "Default",
                serializedName: "createMode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoIndex = {
    type: {
        name: "Composite",
        className: "MongoIndex",
        modelProperties: {
            key: {
                serializedName: "key",
                type: {
                    name: "Composite",
                    className: "MongoIndexKeys"
                }
            },
            options: {
                serializedName: "options",
                type: {
                    name: "Composite",
                    className: "MongoIndexOptions"
                }
            }
        }
    }
};
export const MongoIndexKeys = {
    type: {
        name: "Composite",
        className: "MongoIndexKeys",
        modelProperties: {
            keys: {
                serializedName: "keys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const MongoIndexOptions = {
    type: {
        name: "Composite",
        className: "MongoIndexOptions",
        modelProperties: {
            expireAfterSeconds: {
                serializedName: "expireAfterSeconds",
                type: {
                    name: "Number"
                }
            },
            unique: {
                serializedName: "unique",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const TableListResult = {
    type: {
        name: "Composite",
        className: "TableListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TableGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const TableResource = {
    type: {
        name: "Composite",
        className: "TableResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            restoreParameters: {
                serializedName: "restoreParameters",
                type: {
                    name: "Composite",
                    className: "ResourceRestoreParameters"
                }
            },
            createMode: {
                defaultValue: "Default",
                serializedName: "createMode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraKeyspaceListResult = {
    type: {
        name: "Composite",
        className: "CassandraKeyspaceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CassandraKeyspaceGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const CassandraKeyspaceResource = {
    type: {
        name: "Composite",
        className: "CassandraKeyspaceResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraTableListResult = {
    type: {
        name: "Composite",
        className: "CassandraTableListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CassandraTableGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const CassandraTableResource = {
    type: {
        name: "Composite",
        className: "CassandraTableResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            defaultTtl: {
                serializedName: "defaultTtl",
                type: {
                    name: "Number"
                }
            },
            schema: {
                serializedName: "schema",
                type: {
                    name: "Composite",
                    className: "CassandraSchema"
                }
            },
            analyticalStorageTtl: {
                serializedName: "analyticalStorageTtl",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const CassandraSchema = {
    type: {
        name: "Composite",
        className: "CassandraSchema",
        modelProperties: {
            columns: {
                serializedName: "columns",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Column"
                        }
                    }
                }
            },
            partitionKeys: {
                serializedName: "partitionKeys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CassandraPartitionKey"
                        }
                    }
                }
            },
            clusterKeys: {
                serializedName: "clusterKeys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ClusterKey"
                        }
                    }
                }
            }
        }
    }
};
export const Column = {
    type: {
        name: "Composite",
        className: "Column",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraPartitionKey = {
    type: {
        name: "Composite",
        className: "CassandraPartitionKey",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ClusterKey = {
    type: {
        name: "Composite",
        className: "ClusterKey",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            orderBy: {
                serializedName: "orderBy",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinDatabaseListResult = {
    type: {
        name: "Composite",
        className: "GremlinDatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GremlinDatabaseGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const GremlinDatabaseResource = {
    type: {
        name: "Composite",
        className: "GremlinDatabaseResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            restoreParameters: {
                serializedName: "restoreParameters",
                type: {
                    name: "Composite",
                    className: "ResourceRestoreParameters"
                }
            },
            createMode: {
                defaultValue: "Default",
                serializedName: "createMode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinGraphListResult = {
    type: {
        name: "Composite",
        className: "GremlinGraphListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GremlinGraphGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const GremlinGraphResource = {
    type: {
        name: "Composite",
        className: "GremlinGraphResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            indexingPolicy: {
                serializedName: "indexingPolicy",
                type: {
                    name: "Composite",
                    className: "IndexingPolicy"
                }
            },
            partitionKey: {
                serializedName: "partitionKey",
                type: {
                    name: "Composite",
                    className: "ContainerPartitionKey"
                }
            },
            defaultTtl: {
                serializedName: "defaultTtl",
                type: {
                    name: "Number"
                }
            },
            uniqueKeyPolicy: {
                serializedName: "uniqueKeyPolicy",
                type: {
                    name: "Composite",
                    className: "UniqueKeyPolicy"
                }
            },
            conflictResolutionPolicy: {
                serializedName: "conflictResolutionPolicy",
                type: {
                    name: "Composite",
                    className: "ConflictResolutionPolicy"
                }
            },
            analyticalStorageTtl: {
                serializedName: "analyticalStorageTtl",
                type: {
                    name: "Number"
                }
            },
            restoreParameters: {
                serializedName: "restoreParameters",
                type: {
                    name: "Composite",
                    className: "ResourceRestoreParameters"
                }
            },
            createMode: {
                defaultValue: "Default",
                serializedName: "createMode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LocationListResult = {
    type: {
        name: "Composite",
        className: "LocationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LocationGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const LocationProperties = {
    type: {
        name: "Composite",
        className: "LocationProperties",
        modelProperties: {
            supportsAvailabilityZone: {
                serializedName: "supportsAvailabilityZone",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            isResidencyRestricted: {
                serializedName: "isResidencyRestricted",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            backupStorageRedundancies: {
                serializedName: "backupStorageRedundancies",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            isSubscriptionRegionAccessAllowedForRegular: {
                serializedName: "isSubscriptionRegionAccessAllowedForRegular",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            isSubscriptionRegionAccessAllowedForAz: {
                serializedName: "isSubscriptionRegionAccessAllowedForAz",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ListClusters = {
    type: {
        name: "Composite",
        className: "ListClusters",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ClusterResource"
                        }
                    }
                }
            }
        }
    }
};
export const ClusterResourceProperties = {
    type: {
        name: "Composite",
        className: "ClusterResourceProperties",
        modelProperties: {
            provisioningState: {
                serializedName: "provisioningState",
                type: {
                    name: "String"
                }
            },
            restoreFromBackupId: {
                serializedName: "restoreFromBackupId",
                type: {
                    name: "String"
                }
            },
            delegatedManagementSubnetId: {
                serializedName: "delegatedManagementSubnetId",
                type: {
                    name: "String"
                }
            },
            cassandraVersion: {
                serializedName: "cassandraVersion",
                type: {
                    name: "String"
                }
            },
            clusterNameOverride: {
                serializedName: "clusterNameOverride",
                type: {
                    name: "String"
                }
            },
            authenticationMethod: {
                serializedName: "authenticationMethod",
                type: {
                    name: "String"
                }
            },
            initialCassandraAdminPassword: {
                serializedName: "initialCassandraAdminPassword",
                type: {
                    name: "String"
                }
            },
            prometheusEndpoint: {
                serializedName: "prometheusEndpoint",
                type: {
                    name: "Composite",
                    className: "SeedNode"
                }
            },
            repairEnabled: {
                serializedName: "repairEnabled",
                type: {
                    name: "Boolean"
                }
            },
            clientCertificates: {
                serializedName: "clientCertificates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Certificate"
                        }
                    }
                }
            },
            externalGossipCertificates: {
                serializedName: "externalGossipCertificates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Certificate"
                        }
                    }
                }
            },
            gossipCertificates: {
                serializedName: "gossipCertificates",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Certificate"
                        }
                    }
                }
            },
            externalSeedNodes: {
                serializedName: "externalSeedNodes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SeedNode"
                        }
                    }
                }
            },
            seedNodes: {
                serializedName: "seedNodes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SeedNode"
                        }
                    }
                }
            },
            hoursBetweenBackups: {
                serializedName: "hoursBetweenBackups",
                type: {
                    name: "Number"
                }
            },
            deallocated: {
                serializedName: "deallocated",
                type: {
                    name: "Boolean"
                }
            },
            cassandraAuditLoggingEnabled: {
                serializedName: "cassandraAuditLoggingEnabled",
                type: {
                    name: "Boolean"
                }
            },
            provisionError: {
                serializedName: "provisionError",
                type: {
                    name: "Composite",
                    className: "CassandraError"
                }
            }
        }
    }
};
export const SeedNode = {
    type: {
        name: "Composite",
        className: "SeedNode",
        modelProperties: {
            ipAddress: {
                serializedName: "ipAddress",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Certificate = {
    type: {
        name: "Composite",
        className: "Certificate",
        modelProperties: {
            pem: {
                serializedName: "pem",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraError = {
    type: {
        name: "Composite",
        className: "CassandraError",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            additionalErrorInfo: {
                serializedName: "additionalErrorInfo",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedCassandraARMResourceProperties = {
    type: {
        name: "Composite",
        className: "ManagedCassandraARMResourceProperties",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedCassandraManagedServiceIdentity"
                }
            }
        }
    }
};
export const ManagedCassandraManagedServiceIdentity = {
    type: {
        name: "Composite",
        className: "ManagedCassandraManagedServiceIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CommandPostBody = {
    type: {
        name: "Composite",
        className: "CommandPostBody",
        modelProperties: {
            command: {
                serializedName: "command",
                required: true,
                type: {
                    name: "String"
                }
            },
            arguments: {
                serializedName: "arguments",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            host: {
                serializedName: "host",
                required: true,
                type: {
                    name: "String"
                }
            },
            cassandraStopStart: {
                serializedName: "cassandra-stop-start",
                type: {
                    name: "Boolean"
                }
            },
            readwrite: {
                serializedName: "readwrite",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const CommandOutput = {
    type: {
        name: "Composite",
        className: "CommandOutput",
        modelProperties: {
            commandOutput: {
                serializedName: "commandOutput",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ListDataCenters = {
    type: {
        name: "Composite",
        className: "ListDataCenters",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataCenterResource"
                        }
                    }
                }
            }
        }
    }
};
export const DataCenterResourceProperties = {
    type: {
        name: "Composite",
        className: "DataCenterResourceProperties",
        modelProperties: {
            provisioningState: {
                serializedName: "provisioningState",
                type: {
                    name: "String"
                }
            },
            dataCenterLocation: {
                serializedName: "dataCenterLocation",
                type: {
                    name: "String"
                }
            },
            delegatedSubnetId: {
                serializedName: "delegatedSubnetId",
                type: {
                    name: "String"
                }
            },
            nodeCount: {
                serializedName: "nodeCount",
                type: {
                    name: "Number"
                }
            },
            seedNodes: {
                serializedName: "seedNodes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SeedNode"
                        }
                    }
                }
            },
            base64EncodedCassandraYamlFragment: {
                serializedName: "base64EncodedCassandraYamlFragment",
                type: {
                    name: "String"
                }
            },
            managedDiskCustomerKeyUri: {
                serializedName: "managedDiskCustomerKeyUri",
                type: {
                    name: "String"
                }
            },
            backupStorageCustomerKeyUri: {
                serializedName: "backupStorageCustomerKeyUri",
                type: {
                    name: "String"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "String"
                }
            },
            diskSku: {
                serializedName: "diskSku",
                type: {
                    name: "String"
                }
            },
            diskCapacity: {
                serializedName: "diskCapacity",
                type: {
                    name: "Number"
                }
            },
            availabilityZone: {
                serializedName: "availabilityZone",
                type: {
                    name: "Boolean"
                }
            },
            authenticationMethodLdapProperties: {
                serializedName: "authenticationMethodLdapProperties",
                type: {
                    name: "Composite",
                    className: "AuthenticationMethodLdapProperties"
                }
            },
            deallocated: {
                serializedName: "deallocated",
                type: {
                    name: "Boolean"
                }
            },
            provisionError: {
                serializedName: "provisionError",
                type: {
                    name: "Composite",
                    className: "CassandraError"
                }
            }
        }
    }
};
export const AuthenticationMethodLdapProperties = {
    type: {
        name: "Composite",
        className: "AuthenticationMethodLdapProperties",
        modelProperties: {
            serverHostname: {
                serializedName: "serverHostname",
                type: {
                    name: "String"
                }
            },
            serverPort: {
                serializedName: "serverPort",
                type: {
                    name: "Number"
                }
            },
            serviceUserDistinguishedName: {
                serializedName: "serviceUserDistinguishedName",
                type: {
                    name: "String"
                }
            },
            serviceUserPassword: {
                serializedName: "serviceUserPassword",
                type: {
                    name: "String"
                }
            },
            searchBaseDistinguishedName: {
                serializedName: "searchBaseDistinguishedName",
                type: {
                    name: "String"
                }
            },
            searchFilterTemplate: {
                serializedName: "searchFilterTemplate",
                type: {
                    name: "String"
                }
            },
            serverCertificates: {
                serializedName: "serverCertificates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Certificate"
                        }
                    }
                }
            },
            connectionTimeoutInMs: {
                serializedName: "connectionTimeoutInMs",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const CassandraClusterPublicStatus = {
    type: {
        name: "Composite",
        className: "CassandraClusterPublicStatus",
        modelProperties: {
            eTag: {
                serializedName: "eTag",
                type: {
                    name: "String"
                }
            },
            reaperStatus: {
                serializedName: "reaperStatus",
                type: {
                    name: "Composite",
                    className: "ManagedCassandraReaperStatus"
                }
            },
            connectionErrors: {
                serializedName: "connectionErrors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ConnectionError"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CassandraError"
                        }
                    }
                }
            },
            dataCenters: {
                serializedName: "dataCenters",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CassandraClusterPublicStatusDataCentersItem"
                        }
                    }
                }
            }
        }
    }
};
export const ManagedCassandraReaperStatus = {
    type: {
        name: "Composite",
        className: "ManagedCassandraReaperStatus",
        modelProperties: {
            healthy: {
                serializedName: "healthy",
                type: {
                    name: "Boolean"
                }
            },
            repairRunIds: {
                serializedName: "repairRunIds",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            repairSchedules: {
                serializedName: "repairSchedules",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const ConnectionError = {
    type: {
        name: "Composite",
        className: "ConnectionError",
        modelProperties: {
            connectionState: {
                serializedName: "connectionState",
                type: {
                    name: "String"
                }
            },
            iPFrom: {
                serializedName: "iPFrom",
                type: {
                    name: "String"
                }
            },
            iPTo: {
                serializedName: "iPTo",
                type: {
                    name: "String"
                }
            },
            port: {
                serializedName: "port",
                type: {
                    name: "Number"
                }
            },
            exception: {
                serializedName: "exception",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraClusterPublicStatusDataCentersItem = {
    type: {
        name: "Composite",
        className: "CassandraClusterPublicStatusDataCentersItem",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            seedNodes: {
                serializedName: "seedNodes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            nodes: {
                serializedName: "nodes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems"
                        }
                    }
                }
            }
        }
    }
};
export const ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems = {
    type: {
        name: "Composite",
        className: "ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems",
        modelProperties: {
            address: {
                serializedName: "address",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            cassandraProcessStatus: {
                serializedName: "cassandraProcessStatus",
                type: {
                    name: "String"
                }
            },
            load: {
                serializedName: "load",
                type: {
                    name: "String"
                }
            },
            tokens: {
                serializedName: "tokens",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            size: {
                serializedName: "size",
                type: {
                    name: "Number"
                }
            },
            hostID: {
                serializedName: "hostID",
                type: {
                    name: "String"
                }
            },
            rack: {
                serializedName: "rack",
                type: {
                    name: "String"
                }
            },
            timestamp: {
                serializedName: "timestamp",
                type: {
                    name: "String"
                }
            },
            diskUsedKB: {
                serializedName: "diskUsedKB",
                type: {
                    name: "Number"
                }
            },
            diskFreeKB: {
                serializedName: "diskFreeKB",
                type: {
                    name: "Number"
                }
            },
            memoryUsedKB: {
                serializedName: "memoryUsedKB",
                type: {
                    name: "Number"
                }
            },
            memoryBuffersAndCachedKB: {
                serializedName: "memoryBuffersAndCachedKB",
                type: {
                    name: "Number"
                }
            },
            memoryFreeKB: {
                serializedName: "memoryFreeKB",
                type: {
                    name: "Number"
                }
            },
            memoryTotalKB: {
                serializedName: "memoryTotalKB",
                type: {
                    name: "Number"
                }
            },
            cpuUsage: {
                serializedName: "cpuUsage",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const Privilege = {
    type: {
        name: "Composite",
        className: "Privilege",
        modelProperties: {
            resource: {
                serializedName: "resource",
                type: {
                    name: "Composite",
                    className: "PrivilegeResource"
                }
            },
            actions: {
                serializedName: "actions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const PrivilegeResource = {
    type: {
        name: "Composite",
        className: "PrivilegeResource",
        modelProperties: {
            db: {
                serializedName: "db",
                type: {
                    name: "String"
                }
            },
            collection: {
                serializedName: "collection",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Role = {
    type: {
        name: "Composite",
        className: "Role",
        modelProperties: {
            db: {
                serializedName: "db",
                type: {
                    name: "String"
                }
            },
            role: {
                serializedName: "role",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoRoleDefinitionCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "MongoRoleDefinitionCreateUpdateParameters",
        modelProperties: {
            roleName: {
                serializedName: "properties.roleName",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "properties.type",
                type: {
                    name: "Enum",
                    allowedValues: ["BuiltInRole", "CustomRole"]
                }
            },
            databaseName: {
                serializedName: "properties.databaseName",
                type: {
                    name: "String"
                }
            },
            privileges: {
                serializedName: "properties.privileges",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Privilege"
                        }
                    }
                }
            },
            roles: {
                serializedName: "properties.roles",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Role"
                        }
                    }
                }
            }
        }
    }
};
export const MongoRoleDefinitionListResult = {
    type: {
        name: "Composite",
        className: "MongoRoleDefinitionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MongoRoleDefinitionGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const MongoUserDefinitionCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "MongoUserDefinitionCreateUpdateParameters",
        modelProperties: {
            userName: {
                serializedName: "properties.userName",
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "properties.password",
                type: {
                    name: "String"
                }
            },
            databaseName: {
                serializedName: "properties.databaseName",
                type: {
                    name: "String"
                }
            },
            customData: {
                serializedName: "properties.customData",
                type: {
                    name: "String"
                }
            },
            roles: {
                serializedName: "properties.roles",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Role"
                        }
                    }
                }
            },
            mechanisms: {
                serializedName: "properties.mechanisms",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoUserDefinitionListResult = {
    type: {
        name: "Composite",
        className: "MongoUserDefinitionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MongoUserDefinitionGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const NotebookWorkspaceListResult = {
    type: {
        name: "Composite",
        className: "NotebookWorkspaceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NotebookWorkspace"
                        }
                    }
                }
            }
        }
    }
};
export const NotebookWorkspaceConnectionInfoResult = {
    type: {
        name: "Composite",
        className: "NotebookWorkspaceConnectionInfoResult",
        modelProperties: {
            authToken: {
                serializedName: "authToken",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            notebookServerEndpoint: {
                serializedName: "notebookServerEndpoint",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateEndpointConnectionListResult = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection"
                        }
                    }
                }
            }
        }
    }
};
export const PrivateLinkResourceListResult = {
    type: {
        name: "Composite",
        className: "PrivateLinkResourceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateLinkResource"
                        }
                    }
                }
            }
        }
    }
};
export const Permission = {
    type: {
        name: "Composite",
        className: "Permission",
        modelProperties: {
            dataActions: {
                serializedName: "dataActions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            notDataActions: {
                serializedName: "notDataActions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const SqlRoleDefinitionCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "SqlRoleDefinitionCreateUpdateParameters",
        modelProperties: {
            roleName: {
                serializedName: "properties.roleName",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "properties.type",
                type: {
                    name: "Enum",
                    allowedValues: ["BuiltInRole", "CustomRole"]
                }
            },
            assignableScopes: {
                serializedName: "properties.assignableScopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            permissions: {
                serializedName: "properties.permissions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Permission"
                        }
                    }
                }
            }
        }
    }
};
export const SqlRoleDefinitionListResult = {
    type: {
        name: "Composite",
        className: "SqlRoleDefinitionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlRoleDefinitionGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const SqlRoleAssignmentCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "SqlRoleAssignmentCreateUpdateParameters",
        modelProperties: {
            roleDefinitionId: {
                serializedName: "properties.roleDefinitionId",
                type: {
                    name: "String"
                }
            },
            scope: {
                serializedName: "properties.scope",
                type: {
                    name: "String"
                }
            },
            principalId: {
                serializedName: "properties.principalId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlRoleAssignmentListResult = {
    type: {
        name: "Composite",
        className: "SqlRoleAssignmentListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlRoleAssignmentGetResults"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableDatabaseAccountsListResult = {
    type: {
        name: "Composite",
        className: "RestorableDatabaseAccountsListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableDatabaseAccountGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableDatabaseAccountGetResult = {
    type: {
        name: "Composite",
        className: "RestorableDatabaseAccountGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            accountName: {
                serializedName: "properties.accountName",
                type: {
                    name: "String"
                }
            },
            creationTime: {
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            },
            deletionTime: {
                serializedName: "properties.deletionTime",
                type: {
                    name: "DateTime"
                }
            },
            oldestRestorableTime: {
                serializedName: "properties.oldestRestorableTime",
                type: {
                    name: "DateTime"
                }
            },
            apiType: {
                serializedName: "properties.apiType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            restorableLocations: {
                serializedName: "properties.restorableLocations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableLocationResource"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableLocationResource = {
    type: {
        name: "Composite",
        className: "RestorableLocationResource",
        modelProperties: {
            locationName: {
                serializedName: "locationName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            regionalDatabaseAccountInstanceId: {
                serializedName: "regionalDatabaseAccountInstanceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            creationTime: {
                serializedName: "creationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            deletionTime: {
                serializedName: "deletionTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const ContinuousBackupRestoreLocation = {
    type: {
        name: "Composite",
        className: "ContinuousBackupRestoreLocation",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const BackupInformation = {
    type: {
        name: "Composite",
        className: "BackupInformation",
        modelProperties: {
            continuousBackupInformation: {
                serializedName: "continuousBackupInformation",
                type: {
                    name: "Composite",
                    className: "ContinuousBackupInformation"
                }
            }
        }
    }
};
export const ContinuousBackupInformation = {
    type: {
        name: "Composite",
        className: "ContinuousBackupInformation",
        modelProperties: {
            latestRestorableTimestamp: {
                serializedName: "latestRestorableTimestamp",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RestorableSqlDatabasesListResult = {
    type: {
        name: "Composite",
        className: "RestorableSqlDatabasesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableSqlDatabaseGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableSqlDatabaseGetResult = {
    type: {
        name: "Composite",
        className: "RestorableSqlDatabaseGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "RestorableSqlDatabasePropertiesResource"
                }
            }
        }
    }
};
export const RestorableSqlDatabasePropertiesResource = {
    type: {
        name: "Composite",
        className: "RestorableSqlDatabasePropertiesResource",
        modelProperties: {
            rid: {
                serializedName: "_rid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operationType: {
                serializedName: "operationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndelete: {
                serializedName: "canUndelete",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndeleteReason: {
                serializedName: "canUndeleteReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            eventTimestamp: {
                serializedName: "eventTimestamp",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerId: {
                serializedName: "ownerId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerResourceId: {
                serializedName: "ownerResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            database: {
                serializedName: "database",
                type: {
                    name: "Composite",
                    className: "RestorableSqlDatabasePropertiesResourceDatabase"
                }
            }
        }
    }
};
export const RestorableSqlContainersListResult = {
    type: {
        name: "Composite",
        className: "RestorableSqlContainersListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableSqlContainerGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableSqlContainerGetResult = {
    type: {
        name: "Composite",
        className: "RestorableSqlContainerGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "RestorableSqlContainerPropertiesResource"
                }
            }
        }
    }
};
export const RestorableSqlContainerPropertiesResource = {
    type: {
        name: "Composite",
        className: "RestorableSqlContainerPropertiesResource",
        modelProperties: {
            rid: {
                serializedName: "_rid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operationType: {
                serializedName: "operationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndelete: {
                serializedName: "canUndelete",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndeleteReason: {
                serializedName: "canUndeleteReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            eventTimestamp: {
                serializedName: "eventTimestamp",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerId: {
                serializedName: "ownerId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerResourceId: {
                serializedName: "ownerResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            container: {
                serializedName: "container",
                type: {
                    name: "Composite",
                    className: "RestorableSqlContainerPropertiesResourceContainer"
                }
            }
        }
    }
};
export const RestorableSqlResourcesListResult = {
    type: {
        name: "Composite",
        className: "RestorableSqlResourcesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableSqlResourcesGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableSqlResourcesGetResult = {
    type: {
        name: "Composite",
        className: "RestorableSqlResourcesGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            databaseName: {
                serializedName: "databaseName",
                type: {
                    name: "String"
                }
            },
            collectionNames: {
                serializedName: "collectionNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableMongodbDatabasesListResult = {
    type: {
        name: "Composite",
        className: "RestorableMongodbDatabasesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableMongodbDatabaseGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableMongodbDatabaseGetResult = {
    type: {
        name: "Composite",
        className: "RestorableMongodbDatabaseGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "RestorableMongodbDatabasePropertiesResource"
                }
            }
        }
    }
};
export const RestorableMongodbDatabasePropertiesResource = {
    type: {
        name: "Composite",
        className: "RestorableMongodbDatabasePropertiesResource",
        modelProperties: {
            rid: {
                serializedName: "_rid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operationType: {
                serializedName: "operationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndelete: {
                serializedName: "canUndelete",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndeleteReason: {
                serializedName: "canUndeleteReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            eventTimestamp: {
                serializedName: "eventTimestamp",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerId: {
                serializedName: "ownerId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerResourceId: {
                serializedName: "ownerResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RestorableMongodbCollectionsListResult = {
    type: {
        name: "Composite",
        className: "RestorableMongodbCollectionsListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableMongodbCollectionGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableMongodbCollectionGetResult = {
    type: {
        name: "Composite",
        className: "RestorableMongodbCollectionGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "RestorableMongodbCollectionPropertiesResource"
                }
            }
        }
    }
};
export const RestorableMongodbCollectionPropertiesResource = {
    type: {
        name: "Composite",
        className: "RestorableMongodbCollectionPropertiesResource",
        modelProperties: {
            rid: {
                serializedName: "_rid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operationType: {
                serializedName: "operationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndelete: {
                serializedName: "canUndelete",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndeleteReason: {
                serializedName: "canUndeleteReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            eventTimestamp: {
                serializedName: "eventTimestamp",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerId: {
                serializedName: "ownerId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerResourceId: {
                serializedName: "ownerResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RestorableMongodbResourcesListResult = {
    type: {
        name: "Composite",
        className: "RestorableMongodbResourcesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableMongodbResourcesGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableMongodbResourcesGetResult = {
    type: {
        name: "Composite",
        className: "RestorableMongodbResourcesGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            databaseName: {
                serializedName: "databaseName",
                type: {
                    name: "String"
                }
            },
            collectionNames: {
                serializedName: "collectionNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableGremlinDatabasesListResult = {
    type: {
        name: "Composite",
        className: "RestorableGremlinDatabasesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableGremlinDatabaseGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableGremlinDatabaseGetResult = {
    type: {
        name: "Composite",
        className: "RestorableGremlinDatabaseGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "RestorableGremlinDatabasePropertiesResource"
                }
            }
        }
    }
};
export const RestorableGremlinDatabasePropertiesResource = {
    type: {
        name: "Composite",
        className: "RestorableGremlinDatabasePropertiesResource",
        modelProperties: {
            rid: {
                serializedName: "_rid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operationType: {
                serializedName: "operationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndelete: {
                serializedName: "canUndelete",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndeleteReason: {
                serializedName: "canUndeleteReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            eventTimestamp: {
                serializedName: "eventTimestamp",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerId: {
                serializedName: "ownerId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerResourceId: {
                serializedName: "ownerResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RestorableGremlinGraphsListResult = {
    type: {
        name: "Composite",
        className: "RestorableGremlinGraphsListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableGremlinGraphGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableGremlinGraphGetResult = {
    type: {
        name: "Composite",
        className: "RestorableGremlinGraphGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "RestorableGremlinGraphPropertiesResource"
                }
            }
        }
    }
};
export const RestorableGremlinGraphPropertiesResource = {
    type: {
        name: "Composite",
        className: "RestorableGremlinGraphPropertiesResource",
        modelProperties: {
            rid: {
                serializedName: "_rid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operationType: {
                serializedName: "operationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndelete: {
                serializedName: "canUndelete",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndeleteReason: {
                serializedName: "canUndeleteReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            eventTimestamp: {
                serializedName: "eventTimestamp",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerId: {
                serializedName: "ownerId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerResourceId: {
                serializedName: "ownerResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RestorableGremlinResourcesListResult = {
    type: {
        name: "Composite",
        className: "RestorableGremlinResourcesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableGremlinResourcesGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableGremlinResourcesGetResult = {
    type: {
        name: "Composite",
        className: "RestorableGremlinResourcesGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            databaseName: {
                serializedName: "databaseName",
                type: {
                    name: "String"
                }
            },
            graphNames: {
                serializedName: "graphNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableTablesListResult = {
    type: {
        name: "Composite",
        className: "RestorableTablesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableTableGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableTableGetResult = {
    type: {
        name: "Composite",
        className: "RestorableTableGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "RestorableTablePropertiesResource"
                }
            }
        }
    }
};
export const RestorableTablePropertiesResource = {
    type: {
        name: "Composite",
        className: "RestorableTablePropertiesResource",
        modelProperties: {
            rid: {
                serializedName: "_rid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operationType: {
                serializedName: "operationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndelete: {
                serializedName: "canUndelete",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            canUndeleteReason: {
                serializedName: "canUndeleteReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            eventTimestamp: {
                serializedName: "eventTimestamp",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerId: {
                serializedName: "ownerId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ownerResourceId: {
                serializedName: "ownerResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RestorableTableResourcesListResult = {
    type: {
        name: "Composite",
        className: "RestorableTableResourcesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableTableResourcesGetResult"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableTableResourcesGetResult = {
    type: {
        name: "Composite",
        className: "RestorableTableResourcesGetResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceResourceListResult = {
    type: {
        name: "Composite",
        className: "ServiceResourceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServiceResource"
                        }
                    }
                }
            }
        }
    }
};
export const ServiceResourceProperties = {
    serializedName: "ServiceResourceProperties",
    type: {
        name: "Composite",
        className: "ServiceResourceProperties",
        uberParent: "ServiceResourceProperties",
        additionalProperties: { type: { name: "Object" } },
        polymorphicDiscriminator: {
            serializedName: "serviceType",
            clientName: "serviceType"
        },
        modelProperties: {
            creationTime: {
                serializedName: "creationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            instanceSize: {
                serializedName: "instanceSize",
                type: {
                    name: "String"
                }
            },
            instanceCount: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "instanceCount",
                type: {
                    name: "Number"
                }
            },
            serviceType: {
                serializedName: "serviceType",
                required: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceResourceCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "ServiceResourceCreateUpdateParameters",
        modelProperties: {
            instanceSize: {
                serializedName: "properties.instanceSize",
                type: {
                    name: "String"
                }
            },
            instanceCount: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "properties.instanceCount",
                type: {
                    name: "Number"
                }
            },
            serviceType: {
                serializedName: "properties.serviceType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PeriodicModeProperties = {
    type: {
        name: "Composite",
        className: "PeriodicModeProperties",
        modelProperties: {
            backupIntervalInMinutes: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "backupIntervalInMinutes",
                type: {
                    name: "Number"
                }
            },
            backupRetentionIntervalInHours: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "backupRetentionIntervalInHours",
                type: {
                    name: "Number"
                }
            },
            backupStorageRedundancy: {
                serializedName: "backupStorageRedundancy",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ContinuousModeProperties = {
    type: {
        name: "Composite",
        className: "ContinuousModeProperties",
        modelProperties: {
            tier: {
                serializedName: "tier",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DataTransferServiceResource = {
    type: {
        name: "Composite",
        className: "DataTransferServiceResource",
        modelProperties: {
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "DataTransferServiceResourceProperties"
                }
            }
        }
    }
};
export const RegionalServiceResource = {
    type: {
        name: "Composite",
        className: "RegionalServiceResource",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlDedicatedGatewayServiceResource = {
    type: {
        name: "Composite",
        className: "SqlDedicatedGatewayServiceResource",
        modelProperties: {
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "SqlDedicatedGatewayServiceResourceProperties"
                }
            }
        }
    }
};
export const GraphAPIComputeServiceResource = {
    type: {
        name: "Composite",
        className: "GraphAPIComputeServiceResource",
        modelProperties: {
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "GraphAPIComputeServiceResourceProperties"
                }
            }
        }
    }
};
export const MaterializedViewsBuilderServiceResource = {
    type: {
        name: "Composite",
        className: "MaterializedViewsBuilderServiceResource",
        modelProperties: {
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "MaterializedViewsBuilderServiceResourceProperties"
                }
            }
        }
    }
};
export const ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: Object.assign({}, Resource.type.modelProperties)
    }
};
export const RestoreParameters = {
    type: {
        name: "Composite",
        className: "RestoreParameters",
        modelProperties: Object.assign(Object.assign({}, RestoreParametersBase.type.modelProperties), { restoreMode: {
                serializedName: "restoreMode",
                type: {
                    name: "String"
                }
            }, databasesToRestore: {
                serializedName: "databasesToRestore",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseRestoreResource"
                        }
                    }
                }
            }, gremlinDatabasesToRestore: {
                serializedName: "gremlinDatabasesToRestore",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GremlinDatabaseRestoreResource"
                        }
                    }
                }
            }, tablesToRestore: {
                serializedName: "tablesToRestore",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export const ResourceRestoreParameters = {
    type: {
        name: "Composite",
        className: "ResourceRestoreParameters",
        modelProperties: Object.assign({}, RestoreParametersBase.type.modelProperties)
    }
};
export const PeriodicModeBackupPolicy = {
    serializedName: "Periodic",
    type: {
        name: "Composite",
        className: "PeriodicModeBackupPolicy",
        uberParent: "BackupPolicy",
        polymorphicDiscriminator: BackupPolicy.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, BackupPolicy.type.modelProperties), { periodicModeProperties: {
                serializedName: "periodicModeProperties",
                type: {
                    name: "Composite",
                    className: "PeriodicModeProperties"
                }
            } })
    }
};
export const ContinuousModeBackupPolicy = {
    serializedName: "Continuous",
    type: {
        name: "Composite",
        className: "ContinuousModeBackupPolicy",
        uberParent: "BackupPolicy",
        polymorphicDiscriminator: BackupPolicy.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, BackupPolicy.type.modelProperties), { continuousModeProperties: {
                serializedName: "continuousModeProperties",
                type: {
                    name: "Composite",
                    className: "ContinuousModeProperties"
                }
            } })
    }
};
export const DatabaseAccountGetResults = {
    type: {
        name: "Composite",
        className: "DatabaseAccountGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { kind: {
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedServiceIdentity"
                }
            }, systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, documentEndpoint: {
                serializedName: "properties.documentEndpoint",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseAccountOfferType: {
                defaultValue: "Standard",
                isConstant: true,
                serializedName: "properties.databaseAccountOfferType",
                type: {
                    name: "String"
                }
            }, ipRules: {
                serializedName: "properties.ipRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IpAddressOrRange"
                        }
                    }
                }
            }, isVirtualNetworkFilterEnabled: {
                serializedName: "properties.isVirtualNetworkFilterEnabled",
                type: {
                    name: "Boolean"
                }
            }, enableAutomaticFailover: {
                serializedName: "properties.enableAutomaticFailover",
                type: {
                    name: "Boolean"
                }
            }, consistencyPolicy: {
                serializedName: "properties.consistencyPolicy",
                type: {
                    name: "Composite",
                    className: "ConsistencyPolicy"
                }
            }, capabilities: {
                serializedName: "properties.capabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Capability"
                        }
                    }
                }
            }, writeLocations: {
                serializedName: "properties.writeLocations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Location"
                        }
                    }
                }
            }, readLocations: {
                serializedName: "properties.readLocations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Location"
                        }
                    }
                }
            }, locations: {
                serializedName: "properties.locations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Location"
                        }
                    }
                }
            }, failoverPolicies: {
                serializedName: "properties.failoverPolicies",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FailoverPolicy"
                        }
                    }
                }
            }, virtualNetworkRules: {
                serializedName: "properties.virtualNetworkRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule"
                        }
                    }
                }
            }, privateEndpointConnections: {
                serializedName: "properties.privateEndpointConnections",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection"
                        }
                    }
                }
            }, enableMultipleWriteLocations: {
                serializedName: "properties.enableMultipleWriteLocations",
                type: {
                    name: "Boolean"
                }
            }, enableCassandraConnector: {
                serializedName: "properties.enableCassandraConnector",
                type: {
                    name: "Boolean"
                }
            }, connectorOffer: {
                serializedName: "properties.connectorOffer",
                type: {
                    name: "String"
                }
            }, disableKeyBasedMetadataWriteAccess: {
                serializedName: "properties.disableKeyBasedMetadataWriteAccess",
                type: {
                    name: "Boolean"
                }
            }, keyVaultKeyUri: {
                serializedName: "properties.keyVaultKeyUri",
                type: {
                    name: "String"
                }
            }, defaultIdentity: {
                serializedName: "properties.defaultIdentity",
                type: {
                    name: "String"
                }
            }, publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String"
                }
            }, enableFreeTier: {
                serializedName: "properties.enableFreeTier",
                type: {
                    name: "Boolean"
                }
            }, apiProperties: {
                serializedName: "properties.apiProperties",
                type: {
                    name: "Composite",
                    className: "ApiProperties"
                }
            }, enableAnalyticalStorage: {
                serializedName: "properties.enableAnalyticalStorage",
                type: {
                    name: "Boolean"
                }
            }, analyticalStorageConfiguration: {
                serializedName: "properties.analyticalStorageConfiguration",
                type: {
                    name: "Composite",
                    className: "AnalyticalStorageConfiguration"
                }
            }, instanceId: {
                serializedName: "properties.instanceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, createMode: {
                defaultValue: "Default",
                serializedName: "properties.createMode",
                type: {
                    name: "String"
                }
            }, restoreParameters: {
                serializedName: "properties.restoreParameters",
                type: {
                    name: "Composite",
                    className: "RestoreParameters"
                }
            }, backupPolicy: {
                serializedName: "properties.backupPolicy",
                type: {
                    name: "Composite",
                    className: "BackupPolicy"
                }
            }, cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CorsPolicy"
                        }
                    }
                }
            }, networkAclBypass: {
                serializedName: "properties.networkAclBypass",
                type: {
                    name: "Enum",
                    allowedValues: ["None", "AzureServices"]
                }
            }, networkAclBypassResourceIds: {
                serializedName: "properties.networkAclBypassResourceIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, disableLocalAuth: {
                serializedName: "properties.disableLocalAuth",
                type: {
                    name: "Boolean"
                }
            }, capacity: {
                serializedName: "properties.capacity",
                type: {
                    name: "Composite",
                    className: "Capacity"
                }
            }, keysMetadata: {
                serializedName: "properties.keysMetadata",
                type: {
                    name: "Composite",
                    className: "DatabaseAccountKeysMetadata"
                }
            }, enablePartitionMerge: {
                serializedName: "properties.enablePartitionMerge",
                type: {
                    name: "Boolean"
                }
            }, minimalTlsVersion: {
                serializedName: "properties.minimalTlsVersion",
                type: {
                    name: "String"
                }
            }, enableBurstCapacity: {
                serializedName: "properties.enableBurstCapacity",
                type: {
                    name: "Boolean"
                }
            }, customerManagedKeyStatus: {
                serializedName: "properties.customerManagedKeyStatus",
                type: {
                    name: "String"
                }
            } })
    }
};
export const DatabaseAccountCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "DatabaseAccountCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { kind: {
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedServiceIdentity"
                }
            }, consistencyPolicy: {
                serializedName: "properties.consistencyPolicy",
                type: {
                    name: "Composite",
                    className: "ConsistencyPolicy"
                }
            }, locations: {
                serializedName: "properties.locations",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Location"
                        }
                    }
                }
            }, databaseAccountOfferType: {
                defaultValue: "Standard",
                isConstant: true,
                serializedName: "properties.databaseAccountOfferType",
                type: {
                    name: "String"
                }
            }, ipRules: {
                serializedName: "properties.ipRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IpAddressOrRange"
                        }
                    }
                }
            }, isVirtualNetworkFilterEnabled: {
                serializedName: "properties.isVirtualNetworkFilterEnabled",
                type: {
                    name: "Boolean"
                }
            }, enableAutomaticFailover: {
                serializedName: "properties.enableAutomaticFailover",
                type: {
                    name: "Boolean"
                }
            }, capabilities: {
                serializedName: "properties.capabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Capability"
                        }
                    }
                }
            }, virtualNetworkRules: {
                serializedName: "properties.virtualNetworkRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule"
                        }
                    }
                }
            }, enableMultipleWriteLocations: {
                serializedName: "properties.enableMultipleWriteLocations",
                type: {
                    name: "Boolean"
                }
            }, enableCassandraConnector: {
                serializedName: "properties.enableCassandraConnector",
                type: {
                    name: "Boolean"
                }
            }, connectorOffer: {
                serializedName: "properties.connectorOffer",
                type: {
                    name: "String"
                }
            }, disableKeyBasedMetadataWriteAccess: {
                serializedName: "properties.disableKeyBasedMetadataWriteAccess",
                type: {
                    name: "Boolean"
                }
            }, keyVaultKeyUri: {
                serializedName: "properties.keyVaultKeyUri",
                type: {
                    name: "String"
                }
            }, defaultIdentity: {
                serializedName: "properties.defaultIdentity",
                type: {
                    name: "String"
                }
            }, publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String"
                }
            }, enableFreeTier: {
                serializedName: "properties.enableFreeTier",
                type: {
                    name: "Boolean"
                }
            }, apiProperties: {
                serializedName: "properties.apiProperties",
                type: {
                    name: "Composite",
                    className: "ApiProperties"
                }
            }, enableAnalyticalStorage: {
                serializedName: "properties.enableAnalyticalStorage",
                type: {
                    name: "Boolean"
                }
            }, analyticalStorageConfiguration: {
                serializedName: "properties.analyticalStorageConfiguration",
                type: {
                    name: "Composite",
                    className: "AnalyticalStorageConfiguration"
                }
            }, createMode: {
                defaultValue: "Default",
                serializedName: "properties.createMode",
                type: {
                    name: "String"
                }
            }, backupPolicy: {
                serializedName: "properties.backupPolicy",
                type: {
                    name: "Composite",
                    className: "BackupPolicy"
                }
            }, cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CorsPolicy"
                        }
                    }
                }
            }, networkAclBypass: {
                serializedName: "properties.networkAclBypass",
                type: {
                    name: "Enum",
                    allowedValues: ["None", "AzureServices"]
                }
            }, networkAclBypassResourceIds: {
                serializedName: "properties.networkAclBypassResourceIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, disableLocalAuth: {
                serializedName: "properties.disableLocalAuth",
                type: {
                    name: "Boolean"
                }
            }, restoreParameters: {
                serializedName: "properties.restoreParameters",
                type: {
                    name: "Composite",
                    className: "RestoreParameters"
                }
            }, capacity: {
                serializedName: "properties.capacity",
                type: {
                    name: "Composite",
                    className: "Capacity"
                }
            }, keysMetadata: {
                serializedName: "properties.keysMetadata",
                type: {
                    name: "Composite",
                    className: "DatabaseAccountKeysMetadata"
                }
            }, enablePartitionMerge: {
                serializedName: "properties.enablePartitionMerge",
                type: {
                    name: "Boolean"
                }
            }, minimalTlsVersion: {
                serializedName: "properties.minimalTlsVersion",
                type: {
                    name: "String"
                }
            }, enableBurstCapacity: {
                serializedName: "properties.enableBurstCapacity",
                type: {
                    name: "Boolean"
                }
            }, customerManagedKeyStatus: {
                serializedName: "properties.customerManagedKeyStatus",
                type: {
                    name: "String"
                }
            } })
    }
};
export const SqlDatabaseGetResults = {
    type: {
        name: "Composite",
        className: "SqlDatabaseGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlDatabaseGetPropertiesResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "SqlDatabaseGetPropertiesOptions"
                }
            } })
    }
};
export const SqlDatabaseCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "SqlDatabaseCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlDatabaseResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const ThroughputSettingsGetResults = {
    type: {
        name: "Composite",
        className: "ThroughputSettingsGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "ThroughputSettingsGetPropertiesResource"
                }
            } })
    }
};
export const ThroughputSettingsUpdateParameters = {
    type: {
        name: "Composite",
        className: "ThroughputSettingsUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "ThroughputSettingsResource"
                }
            } })
    }
};
export const SqlContainerGetResults = {
    type: {
        name: "Composite",
        className: "SqlContainerGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlContainerGetPropertiesResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "SqlContainerGetPropertiesOptions"
                }
            } })
    }
};
export const SqlContainerCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "SqlContainerCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlContainerResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const SqlStoredProcedureGetResults = {
    type: {
        name: "Composite",
        className: "SqlStoredProcedureGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlStoredProcedureGetPropertiesResource"
                }
            } })
    }
};
export const SqlStoredProcedureCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "SqlStoredProcedureCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlStoredProcedureResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const SqlUserDefinedFunctionGetResults = {
    type: {
        name: "Composite",
        className: "SqlUserDefinedFunctionGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlUserDefinedFunctionGetPropertiesResource"
                }
            } })
    }
};
export const SqlUserDefinedFunctionCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "SqlUserDefinedFunctionCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlUserDefinedFunctionResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const SqlTriggerGetResults = {
    type: {
        name: "Composite",
        className: "SqlTriggerGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlTriggerGetPropertiesResource"
                }
            } })
    }
};
export const SqlTriggerCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "SqlTriggerCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "SqlTriggerResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const MongoDBDatabaseGetResults = {
    type: {
        name: "Composite",
        className: "MongoDBDatabaseGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "MongoDBDatabaseGetPropertiesResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "MongoDBDatabaseGetPropertiesOptions"
                }
            } })
    }
};
export const MongoDBDatabaseCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "MongoDBDatabaseCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "MongoDBDatabaseResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const MongoDBCollectionGetResults = {
    type: {
        name: "Composite",
        className: "MongoDBCollectionGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "MongoDBCollectionGetPropertiesResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "MongoDBCollectionGetPropertiesOptions"
                }
            } })
    }
};
export const MongoDBCollectionCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "MongoDBCollectionCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "MongoDBCollectionResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const TableGetResults = {
    type: {
        name: "Composite",
        className: "TableGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "TableGetPropertiesResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "TableGetPropertiesOptions"
                }
            } })
    }
};
export const TableCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "TableCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "TableResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const CassandraKeyspaceGetResults = {
    type: {
        name: "Composite",
        className: "CassandraKeyspaceGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "CassandraKeyspaceGetPropertiesResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CassandraKeyspaceGetPropertiesOptions"
                }
            } })
    }
};
export const CassandraKeyspaceCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "CassandraKeyspaceCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "CassandraKeyspaceResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const CassandraTableGetResults = {
    type: {
        name: "Composite",
        className: "CassandraTableGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "CassandraTableGetPropertiesResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CassandraTableGetPropertiesOptions"
                }
            } })
    }
};
export const CassandraTableCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "CassandraTableCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "CassandraTableResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const GremlinDatabaseGetResults = {
    type: {
        name: "Composite",
        className: "GremlinDatabaseGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "GremlinDatabaseGetPropertiesResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "GremlinDatabaseGetPropertiesOptions"
                }
            } })
    }
};
export const GremlinDatabaseCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "GremlinDatabaseCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "GremlinDatabaseResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const GremlinGraphGetResults = {
    type: {
        name: "Composite",
        className: "GremlinGraphGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "GremlinGraphGetPropertiesResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "GremlinGraphGetPropertiesOptions"
                }
            } })
    }
};
export const GremlinGraphCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "GremlinGraphCreateUpdateParameters",
        modelProperties: Object.assign(Object.assign({}, ARMResourceProperties.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "GremlinGraphResource"
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Composite",
                    className: "CreateUpdateOptions"
                }
            } })
    }
};
export const DatabaseAccountListKeysResult = {
    type: {
        name: "Composite",
        className: "DatabaseAccountListKeysResult",
        modelProperties: Object.assign(Object.assign({}, DatabaseAccountListReadOnlyKeysResult.type.modelProperties), { primaryMasterKey: {
                serializedName: "primaryMasterKey",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, secondaryMasterKey: {
                serializedName: "secondaryMasterKey",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const PartitionMetric = {
    type: {
        name: "Composite",
        className: "PartitionMetric",
        modelProperties: Object.assign(Object.assign({}, Metric.type.modelProperties), { partitionId: {
                serializedName: "partitionId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, partitionKeyRangeId: {
                serializedName: "partitionKeyRangeId",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const PercentileMetricValue = {
    type: {
        name: "Composite",
        className: "PercentileMetricValue",
        modelProperties: Object.assign(Object.assign({}, MetricValue.type.modelProperties), { p10: {
                serializedName: "P10",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, p25: {
                serializedName: "P25",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, p50: {
                serializedName: "P50",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, p75: {
                serializedName: "P75",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, p90: {
                serializedName: "P90",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, p95: {
                serializedName: "P95",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, p99: {
                serializedName: "P99",
                readOnly: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const PartitionUsage = {
    type: {
        name: "Composite",
        className: "PartitionUsage",
        modelProperties: Object.assign(Object.assign({}, Usage.type.modelProperties), { partitionId: {
                serializedName: "partitionId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, partitionKeyRangeId: {
                serializedName: "partitionKeyRangeId",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const SqlDatabaseGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "SqlDatabaseGetPropertiesResource",
        modelProperties: Object.assign(Object.assign(Object.assign({}, SqlDatabaseResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties), { colls: {
                serializedName: "_colls",
                type: {
                    name: "String"
                }
            }, users: {
                serializedName: "_users",
                type: {
                    name: "String"
                }
            } })
    }
};
export const RestorableSqlDatabasePropertiesResourceDatabase = {
    type: {
        name: "Composite",
        className: "RestorableSqlDatabasePropertiesResourceDatabase",
        modelProperties: Object.assign(Object.assign(Object.assign({}, SqlDatabaseResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties), { colls: {
                serializedName: "_colls",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, users: {
                serializedName: "_users",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, self: {
                serializedName: "_self",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ThroughputSettingsGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "ThroughputSettingsGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, ThroughputSettingsResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const SqlContainerGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "SqlContainerGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, SqlContainerResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const ClientEncryptionKeyGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "ClientEncryptionKeyGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, ClientEncryptionKeyResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const SqlStoredProcedureGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "SqlStoredProcedureGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, SqlStoredProcedureResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const SqlUserDefinedFunctionGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "SqlUserDefinedFunctionGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, SqlUserDefinedFunctionResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const SqlTriggerGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "SqlTriggerGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, SqlTriggerResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const MongoDBDatabaseGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "MongoDBDatabaseGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, MongoDBDatabaseResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const MongoDBCollectionGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "MongoDBCollectionGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, MongoDBCollectionResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const TableGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "TableGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, TableResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const CassandraKeyspaceGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "CassandraKeyspaceGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, CassandraKeyspaceResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const CassandraTableGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "CassandraTableGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, CassandraTableResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const GremlinDatabaseGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "GremlinDatabaseGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, GremlinDatabaseResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const GremlinGraphGetPropertiesResource = {
    type: {
        name: "Composite",
        className: "GremlinGraphGetPropertiesResource",
        modelProperties: Object.assign(Object.assign({}, GremlinGraphResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties)
    }
};
export const RestorableSqlContainerPropertiesResourceContainer = {
    type: {
        name: "Composite",
        className: "RestorableSqlContainerPropertiesResourceContainer",
        modelProperties: Object.assign(Object.assign(Object.assign({}, SqlContainerResource.type.modelProperties), ExtendedResourceProperties.type.modelProperties), { self: {
                serializedName: "_self",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const SqlDatabaseGetPropertiesOptions = {
    type: {
        name: "Composite",
        className: "SqlDatabaseGetPropertiesOptions",
        modelProperties: Object.assign({}, OptionsResource.type.modelProperties)
    }
};
export const SqlContainerGetPropertiesOptions = {
    type: {
        name: "Composite",
        className: "SqlContainerGetPropertiesOptions",
        modelProperties: Object.assign({}, OptionsResource.type.modelProperties)
    }
};
export const MongoDBDatabaseGetPropertiesOptions = {
    type: {
        name: "Composite",
        className: "MongoDBDatabaseGetPropertiesOptions",
        modelProperties: Object.assign({}, OptionsResource.type.modelProperties)
    }
};
export const MongoDBCollectionGetPropertiesOptions = {
    type: {
        name: "Composite",
        className: "MongoDBCollectionGetPropertiesOptions",
        modelProperties: Object.assign({}, OptionsResource.type.modelProperties)
    }
};
export const TableGetPropertiesOptions = {
    type: {
        name: "Composite",
        className: "TableGetPropertiesOptions",
        modelProperties: Object.assign({}, OptionsResource.type.modelProperties)
    }
};
export const CassandraKeyspaceGetPropertiesOptions = {
    type: {
        name: "Composite",
        className: "CassandraKeyspaceGetPropertiesOptions",
        modelProperties: Object.assign({}, OptionsResource.type.modelProperties)
    }
};
export const CassandraTableGetPropertiesOptions = {
    type: {
        name: "Composite",
        className: "CassandraTableGetPropertiesOptions",
        modelProperties: Object.assign({}, OptionsResource.type.modelProperties)
    }
};
export const GremlinDatabaseGetPropertiesOptions = {
    type: {
        name: "Composite",
        className: "GremlinDatabaseGetPropertiesOptions",
        modelProperties: Object.assign({}, OptionsResource.type.modelProperties)
    }
};
export const GremlinGraphGetPropertiesOptions = {
    type: {
        name: "Composite",
        className: "GremlinGraphGetPropertiesOptions",
        modelProperties: Object.assign({}, OptionsResource.type.modelProperties)
    }
};
export const ClientEncryptionKeyGetResults = {
    type: {
        name: "Composite",
        className: "ClientEncryptionKeyGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { resource: {
                serializedName: "properties.resource",
                type: {
                    name: "Composite",
                    className: "ClientEncryptionKeyGetPropertiesResource"
                }
            } })
    }
};
export const LocationGetResult = {
    type: {
        name: "Composite",
        className: "LocationGetResult",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "LocationProperties"
                }
            } })
    }
};
export const DataCenterResource = {
    type: {
        name: "Composite",
        className: "DataCenterResource",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "DataCenterResourceProperties"
                }
            } })
    }
};
export const MongoRoleDefinitionGetResults = {
    type: {
        name: "Composite",
        className: "MongoRoleDefinitionGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { roleName: {
                serializedName: "properties.roleName",
                type: {
                    name: "String"
                }
            }, typePropertiesType: {
                serializedName: "properties.type",
                type: {
                    name: "Enum",
                    allowedValues: ["BuiltInRole", "CustomRole"]
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                type: {
                    name: "String"
                }
            }, privileges: {
                serializedName: "properties.privileges",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Privilege"
                        }
                    }
                }
            }, roles: {
                serializedName: "properties.roles",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Role"
                        }
                    }
                }
            } })
    }
};
export const MongoUserDefinitionGetResults = {
    type: {
        name: "Composite",
        className: "MongoUserDefinitionGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { userName: {
                serializedName: "properties.userName",
                type: {
                    name: "String"
                }
            }, password: {
                serializedName: "properties.password",
                type: {
                    name: "String"
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                type: {
                    name: "String"
                }
            }, customData: {
                serializedName: "properties.customData",
                type: {
                    name: "String"
                }
            }, roles: {
                serializedName: "properties.roles",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Role"
                        }
                    }
                }
            }, mechanisms: {
                serializedName: "properties.mechanisms",
                type: {
                    name: "String"
                }
            } })
    }
};
export const NotebookWorkspace = {
    type: {
        name: "Composite",
        className: "NotebookWorkspace",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { notebookServerEndpoint: {
                serializedName: "properties.notebookServerEndpoint",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const NotebookWorkspaceCreateUpdateParameters = {
    type: {
        name: "Composite",
        className: "NotebookWorkspaceCreateUpdateParameters",
        modelProperties: Object.assign({}, ARMProxyResource.type.modelProperties)
    }
};
export const PrivateLinkResource = {
    type: {
        name: "Composite",
        className: "PrivateLinkResource",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { groupId: {
                serializedName: "properties.groupId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, requiredMembers: {
                serializedName: "properties.requiredMembers",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, requiredZoneNames: {
                serializedName: "properties.requiredZoneNames",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export const SqlRoleDefinitionGetResults = {
    type: {
        name: "Composite",
        className: "SqlRoleDefinitionGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { roleName: {
                serializedName: "properties.roleName",
                type: {
                    name: "String"
                }
            }, typePropertiesType: {
                serializedName: "properties.type",
                type: {
                    name: "Enum",
                    allowedValues: ["BuiltInRole", "CustomRole"]
                }
            }, assignableScopes: {
                serializedName: "properties.assignableScopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, permissions: {
                serializedName: "properties.permissions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Permission"
                        }
                    }
                }
            } })
    }
};
export const SqlRoleAssignmentGetResults = {
    type: {
        name: "Composite",
        className: "SqlRoleAssignmentGetResults",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { roleDefinitionId: {
                serializedName: "properties.roleDefinitionId",
                type: {
                    name: "String"
                }
            }, scope: {
                serializedName: "properties.scope",
                type: {
                    name: "String"
                }
            }, principalId: {
                serializedName: "properties.principalId",
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServiceResource = {
    type: {
        name: "Composite",
        className: "ServiceResource",
        modelProperties: Object.assign(Object.assign({}, ARMProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "ServiceResourceProperties"
                }
            } })
    }
};
export const ClusterResource = {
    type: {
        name: "Composite",
        className: "ClusterResource",
        modelProperties: Object.assign(Object.assign({}, ManagedCassandraARMResourceProperties.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "ClusterResourceProperties"
                }
            } })
    }
};
export const DataTransferServiceResourceProperties = {
    serializedName: "DataTransfer",
    type: {
        name: "Composite",
        className: "DataTransferServiceResourceProperties",
        uberParent: "ServiceResourceProperties",
        additionalProperties: { type: { name: "Object" } },
        polymorphicDiscriminator: ServiceResourceProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, ServiceResourceProperties.type.modelProperties), { locations: {
                serializedName: "locations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataTransferRegionalServiceResource"
                        }
                    }
                }
            } })
    }
};
export const SqlDedicatedGatewayServiceResourceProperties = {
    serializedName: "SqlDedicatedGateway",
    type: {
        name: "Composite",
        className: "SqlDedicatedGatewayServiceResourceProperties",
        uberParent: "ServiceResourceProperties",
        additionalProperties: { type: { name: "Object" } },
        polymorphicDiscriminator: ServiceResourceProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, ServiceResourceProperties.type.modelProperties), { sqlDedicatedGatewayEndpoint: {
                serializedName: "sqlDedicatedGatewayEndpoint",
                type: {
                    name: "String"
                }
            }, locations: {
                serializedName: "locations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlDedicatedGatewayRegionalServiceResource"
                        }
                    }
                }
            } })
    }
};
export const GraphAPIComputeServiceResourceProperties = {
    serializedName: "GraphAPICompute",
    type: {
        name: "Composite",
        className: "GraphAPIComputeServiceResourceProperties",
        uberParent: "ServiceResourceProperties",
        additionalProperties: { type: { name: "Object" } },
        polymorphicDiscriminator: ServiceResourceProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, ServiceResourceProperties.type.modelProperties), { graphApiComputeEndpoint: {
                serializedName: "graphApiComputeEndpoint",
                type: {
                    name: "String"
                }
            }, locations: {
                serializedName: "locations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GraphAPIComputeRegionalServiceResource"
                        }
                    }
                }
            } })
    }
};
export const MaterializedViewsBuilderServiceResourceProperties = {
    serializedName: "MaterializedViewsBuilder",
    type: {
        name: "Composite",
        className: "MaterializedViewsBuilderServiceResourceProperties",
        uberParent: "ServiceResourceProperties",
        additionalProperties: { type: { name: "Object" } },
        polymorphicDiscriminator: ServiceResourceProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, ServiceResourceProperties.type.modelProperties), { locations: {
                serializedName: "locations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaterializedViewsBuilderRegionalServiceResource"
                        }
                    }
                }
            } })
    }
};
export const DataTransferRegionalServiceResource = {
    type: {
        name: "Composite",
        className: "DataTransferRegionalServiceResource",
        modelProperties: Object.assign({}, RegionalServiceResource.type.modelProperties)
    }
};
export const SqlDedicatedGatewayRegionalServiceResource = {
    type: {
        name: "Composite",
        className: "SqlDedicatedGatewayRegionalServiceResource",
        modelProperties: Object.assign(Object.assign({}, RegionalServiceResource.type.modelProperties), { sqlDedicatedGatewayEndpoint: {
                serializedName: "sqlDedicatedGatewayEndpoint",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const GraphAPIComputeRegionalServiceResource = {
    type: {
        name: "Composite",
        className: "GraphAPIComputeRegionalServiceResource",
        modelProperties: Object.assign(Object.assign({}, RegionalServiceResource.type.modelProperties), { graphApiComputeEndpoint: {
                serializedName: "graphApiComputeEndpoint",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const MaterializedViewsBuilderRegionalServiceResource = {
    type: {
        name: "Composite",
        className: "MaterializedViewsBuilderRegionalServiceResource",
        modelProperties: Object.assign({}, RegionalServiceResource.type.modelProperties)
    }
};
export const PrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnection",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { privateEndpoint: {
                serializedName: "properties.privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpointProperty"
                }
            }, privateLinkServiceConnectionState: {
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkServiceConnectionStateProperty"
                }
            }, groupId: {
                serializedName: "properties.groupId",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            } })
    }
};
export const DatabaseAccountsDeleteHeaders = {
    type: {
        name: "Composite",
        className: "DatabaseAccountsDeleteHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseAccountsFailoverPriorityChangeHeaders = {
    type: {
        name: "Composite",
        className: "DatabaseAccountsFailoverPriorityChangeHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseAccountsOfflineRegionHeaders = {
    type: {
        name: "Composite",
        className: "DatabaseAccountsOfflineRegionHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseAccountsOnlineRegionHeaders = {
    type: {
        name: "Composite",
        className: "DatabaseAccountsOnlineRegionHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseAccountsRegenerateKeyHeaders = {
    type: {
        name: "Composite",
        className: "DatabaseAccountsRegenerateKeyHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesCreateUpdateSqlDatabaseHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesCreateUpdateSqlDatabaseHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesDeleteSqlDatabaseHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesDeleteSqlDatabaseHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesUpdateSqlDatabaseThroughputHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesUpdateSqlDatabaseThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesMigrateSqlDatabaseToAutoscaleHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesMigrateSqlDatabaseToAutoscaleHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesMigrateSqlDatabaseToManualThroughputHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesMigrateSqlDatabaseToManualThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesCreateUpdateSqlContainerHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesCreateUpdateSqlContainerHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesDeleteSqlContainerHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesDeleteSqlContainerHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesUpdateSqlContainerThroughputHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesUpdateSqlContainerThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesMigrateSqlContainerToAutoscaleHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesMigrateSqlContainerToAutoscaleHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesMigrateSqlContainerToManualThroughputHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesMigrateSqlContainerToManualThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesCreateUpdateClientEncryptionKeyHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesCreateUpdateClientEncryptionKeyHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesCreateUpdateSqlStoredProcedureHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesCreateUpdateSqlStoredProcedureHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesDeleteSqlStoredProcedureHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesDeleteSqlStoredProcedureHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesCreateUpdateSqlUserDefinedFunctionHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesCreateUpdateSqlUserDefinedFunctionHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesDeleteSqlUserDefinedFunctionHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesDeleteSqlUserDefinedFunctionHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesCreateUpdateSqlTriggerHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesCreateUpdateSqlTriggerHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SqlResourcesDeleteSqlTriggerHeaders = {
    type: {
        name: "Composite",
        className: "SqlResourcesDeleteSqlTriggerHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesCreateUpdateMongoDBDatabaseHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesCreateUpdateMongoDBDatabaseHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesDeleteMongoDBDatabaseHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesDeleteMongoDBDatabaseHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesUpdateMongoDBDatabaseThroughputHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesUpdateMongoDBDatabaseThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesCreateUpdateMongoDBCollectionHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesCreateUpdateMongoDBCollectionHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesDeleteMongoDBCollectionHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesDeleteMongoDBCollectionHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesUpdateMongoDBCollectionThroughputHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesUpdateMongoDBCollectionThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesMigrateMongoDBCollectionToAutoscaleHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesMigrateMongoDBCollectionToAutoscaleHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MongoDBResourcesMigrateMongoDBCollectionToManualThroughputHeaders = {
    type: {
        name: "Composite",
        className: "MongoDBResourcesMigrateMongoDBCollectionToManualThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TableResourcesCreateUpdateTableHeaders = {
    type: {
        name: "Composite",
        className: "TableResourcesCreateUpdateTableHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TableResourcesDeleteTableHeaders = {
    type: {
        name: "Composite",
        className: "TableResourcesDeleteTableHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TableResourcesUpdateTableThroughputHeaders = {
    type: {
        name: "Composite",
        className: "TableResourcesUpdateTableThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TableResourcesMigrateTableToAutoscaleHeaders = {
    type: {
        name: "Composite",
        className: "TableResourcesMigrateTableToAutoscaleHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TableResourcesMigrateTableToManualThroughputHeaders = {
    type: {
        name: "Composite",
        className: "TableResourcesMigrateTableToManualThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesCreateUpdateCassandraKeyspaceHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesCreateUpdateCassandraKeyspaceHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesDeleteCassandraKeyspaceHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesDeleteCassandraKeyspaceHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesUpdateCassandraKeyspaceThroughputHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesUpdateCassandraKeyspaceThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesMigrateCassandraKeyspaceToAutoscaleHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesMigrateCassandraKeyspaceToAutoscaleHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesMigrateCassandraKeyspaceToManualThroughputHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesMigrateCassandraKeyspaceToManualThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesCreateUpdateCassandraTableHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesCreateUpdateCassandraTableHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesDeleteCassandraTableHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesDeleteCassandraTableHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesUpdateCassandraTableThroughputHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesUpdateCassandraTableThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesMigrateCassandraTableToAutoscaleHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesMigrateCassandraTableToAutoscaleHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CassandraResourcesMigrateCassandraTableToManualThroughputHeaders = {
    type: {
        name: "Composite",
        className: "CassandraResourcesMigrateCassandraTableToManualThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesCreateUpdateGremlinDatabaseHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesCreateUpdateGremlinDatabaseHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesDeleteGremlinDatabaseHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesDeleteGremlinDatabaseHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesUpdateGremlinDatabaseThroughputHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesUpdateGremlinDatabaseThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesMigrateGremlinDatabaseToAutoscaleHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesMigrateGremlinDatabaseToAutoscaleHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesMigrateGremlinDatabaseToManualThroughputHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesMigrateGremlinDatabaseToManualThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesCreateUpdateGremlinGraphHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesCreateUpdateGremlinGraphHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesDeleteGremlinGraphHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesDeleteGremlinGraphHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesUpdateGremlinGraphThroughputHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesUpdateGremlinGraphThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesMigrateGremlinGraphToAutoscaleHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesMigrateGremlinGraphToAutoscaleHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const GremlinResourcesMigrateGremlinGraphToManualThroughputHeaders = {
    type: {
        name: "Composite",
        className: "GremlinResourcesMigrateGremlinGraphToManualThroughputHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceCreateHeaders = {
    type: {
        name: "Composite",
        className: "ServiceCreateHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceDeleteHeaders = {
    type: {
        name: "Composite",
        className: "ServiceDeleteHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export let discriminators = {
    BackupPolicy: BackupPolicy,
    ServiceResourceProperties: ServiceResourceProperties,
    "BackupPolicy.Periodic": PeriodicModeBackupPolicy,
    "BackupPolicy.Continuous": ContinuousModeBackupPolicy,
    "ServiceResourceProperties.DataTransfer": DataTransferServiceResourceProperties,
    "ServiceResourceProperties.SqlDedicatedGateway": SqlDedicatedGatewayServiceResourceProperties,
    "ServiceResourceProperties.GraphAPICompute": GraphAPIComputeServiceResourceProperties,
    "ServiceResourceProperties.MaterializedViewsBuilder": MaterializedViewsBuilderServiceResourceProperties
};
//# sourceMappingURL=mappers.js.map