import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RestorableGremlinGraphs } from "../operationsInterfaces";
import { CosmosDBManagementClient } from "../cosmosDBManagementClient";
import { RestorableGremlinGraphGetResult, RestorableGremlinGraphsListOptionalParams } from "../models";
/** Class containing RestorableGremlinGraphs operations. */
export declare class RestorableGremlinGraphsImpl implements RestorableGremlinGraphs {
    private readonly client;
    /**
     * Initialize a new instance of the class RestorableGremlinGraphs class.
     * @param client Reference to the service client
     */
    constructor(client: CosmosDBManagementClient);
    /**
     * Show the event feed of all mutations done on all the Azure Cosmos DB Gremlin graphs under a specific
     * database. This helps in scenario where container was accidentally deleted. This API requires
     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
     * @param location Cosmos DB region, with spaces between words and each word capitalized.
     * @param instanceId The instanceId GUID of a restorable database account.
     * @param options The options parameters.
     */
    list(location: string, instanceId: string, options?: RestorableGremlinGraphsListOptionalParams): PagedAsyncIterableIterator<RestorableGremlinGraphGetResult>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Show the event feed of all mutations done on all the Azure Cosmos DB Gremlin graphs under a specific
     * database. This helps in scenario where container was accidentally deleted. This API requires
     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
     * @param location Cosmos DB region, with spaces between words and each word capitalized.
     * @param instanceId The instanceId GUID of a restorable database account.
     * @param options The options parameters.
     */
    private _list;
}
//# sourceMappingURL=restorableGremlinGraphs.d.ts.map