import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Locations } from "../operationsInterfaces";
import { CosmosDBManagementClient } from "../cosmosDBManagementClient";
import { LocationGetResult, LocationsListOptionalParams, LocationsGetOptionalParams, LocationsGetResponse } from "../models";
/** Class containing Locations operations. */
export declare class LocationsImpl implements Locations {
    private readonly client;
    /**
     * Initialize a new instance of the class Locations class.
     * @param client Reference to the service client
     */
    constructor(client: CosmosDBManagementClient);
    /**
     * List Cosmos DB locations and their properties
     * @param options The options parameters.
     */
    list(options?: LocationsListOptionalParams): PagedAsyncIterableIterator<LocationGetResult>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List Cosmos DB locations and their properties
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get the properties of an existing Cosmos DB location
     * @param location Cosmos DB region, with spaces between words and each word capitalized.
     * @param options The options parameters.
     */
    get(location: string, options?: LocationsGetOptionalParams): Promise<LocationsGetResponse>;
}
//# sourceMappingURL=locations.d.ts.map