/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { CosmosDBManagementClient } from "@azure/arm-cosmosdb";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Create or update an Azure Cosmos DB MongoDB Collection
 *
 * @summary Create or update an Azure Cosmos DB MongoDB Collection
 * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2023-11-15/examples/CosmosDBMongoDBCollectionCreateUpdate.json
 */
function cosmosDbMongoDbcollectionCreateUpdate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["COSMOSDB_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["COSMOSDB_RESOURCE_GROUP"] || "rg1";
        const accountName = "ddb1";
        const databaseName = "databaseName";
        const collectionName = "collectionName";
        const createUpdateMongoDBCollectionParameters = {
            location: "West US",
            options: {},
            resource: {
                id: "collectionName",
                indexes: [
                    {
                        key: { keys: ["_ts"] },
                        options: { expireAfterSeconds: 100, unique: true }
                    },
                    { key: { keys: ["_id"] } }
                ],
                shardKey: { testKey: "Hash" }
            },
            tags: {}
        };
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const result = yield client.mongoDBResources.beginCreateUpdateMongoDBCollectionAndWait(resourceGroupName, accountName, databaseName, collectionName, createUpdateMongoDBCollectionParameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        cosmosDbMongoDbcollectionCreateUpdate();
    });
}
main().catch(console.error);
//# sourceMappingURL=mongoDbResourcesCreateUpdateMongoDbcollectionSample.js.map