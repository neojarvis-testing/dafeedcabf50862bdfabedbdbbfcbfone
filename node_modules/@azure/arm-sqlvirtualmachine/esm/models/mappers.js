/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __assign } from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var PrivateIPAddress = {
    serializedName: "PrivateIPAddress",
    type: {
        name: "Composite",
        className: "PrivateIPAddress",
        modelProperties: {
            ipAddress: {
                serializedName: "ipAddress",
                type: {
                    name: "String"
                }
            },
            subnetResourceId: {
                serializedName: "subnetResourceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var LoadBalancerConfiguration = {
    serializedName: "LoadBalancerConfiguration",
    type: {
        name: "Composite",
        className: "LoadBalancerConfiguration",
        modelProperties: {
            privateIpAddress: {
                serializedName: "privateIpAddress",
                type: {
                    name: "Composite",
                    className: "PrivateIPAddress"
                }
            },
            publicIpAddressResourceId: {
                serializedName: "publicIpAddressResourceId",
                type: {
                    name: "String"
                }
            },
            loadBalancerResourceId: {
                serializedName: "loadBalancerResourceId",
                type: {
                    name: "String"
                }
            },
            probePort: {
                serializedName: "probePort",
                type: {
                    name: "Number"
                }
            },
            sqlVirtualMachineInstances: {
                serializedName: "sqlVirtualMachineInstances",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProxyResource = {
    serializedName: "ProxyResource",
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: __assign({}, Resource.type.modelProperties)
    }
};
export var AvailabilityGroupListener = {
    serializedName: "AvailabilityGroupListener",
    type: {
        name: "Composite",
        className: "AvailabilityGroupListener",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, availabilityGroupName: {
                serializedName: "properties.availabilityGroupName",
                type: {
                    name: "String"
                }
            }, loadBalancerConfigurations: {
                serializedName: "properties.loadBalancerConfigurations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LoadBalancerConfiguration"
                        }
                    }
                }
            }, createDefaultAvailabilityGroupIfNotExist: {
                serializedName: "properties.createDefaultAvailabilityGroupIfNotExist",
                type: {
                    name: "Boolean"
                }
            }, port: {
                serializedName: "properties.port",
                type: {
                    name: "Number"
                }
            } })
    }
};
export var OperationDisplay = {
    serializedName: "OperationDisplay",
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                readOnly: true,
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                readOnly: true,
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                readOnly: true,
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            description: {
                readOnly: true,
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Operation = {
    serializedName: "Operation",
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                readOnly: true,
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                readOnly: true,
                serializedName: "origin",
                type: {
                    name: "String"
                }
            },
            properties: {
                readOnly: true,
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Object"
                        }
                    }
                }
            }
        }
    }
};
export var WsfcDomainProfile = {
    serializedName: "WsfcDomainProfile",
    type: {
        name: "Composite",
        className: "WsfcDomainProfile",
        modelProperties: {
            domainFqdn: {
                serializedName: "domainFqdn",
                type: {
                    name: "String"
                }
            },
            ouPath: {
                serializedName: "ouPath",
                type: {
                    name: "String"
                }
            },
            clusterBootstrapAccount: {
                serializedName: "clusterBootstrapAccount",
                type: {
                    name: "String"
                }
            },
            clusterOperatorAccount: {
                serializedName: "clusterOperatorAccount",
                type: {
                    name: "String"
                }
            },
            sqlServiceAccount: {
                serializedName: "sqlServiceAccount",
                type: {
                    name: "String"
                }
            },
            fileShareWitnessPath: {
                serializedName: "fileShareWitnessPath",
                type: {
                    name: "String"
                }
            },
            storageAccountUrl: {
                serializedName: "storageAccountUrl",
                type: {
                    name: "String"
                }
            },
            storageAccountPrimaryKey: {
                serializedName: "storageAccountPrimaryKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TrackedResource = {
    serializedName: "TrackedResource",
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            }, tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var SqlVirtualMachineGroup = {
    serializedName: "SqlVirtualMachineGroup",
    type: {
        name: "Composite",
        className: "SqlVirtualMachineGroup",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, sqlImageOffer: {
                serializedName: "properties.sqlImageOffer",
                type: {
                    name: "String"
                }
            }, sqlImageSku: {
                serializedName: "properties.sqlImageSku",
                type: {
                    name: "String"
                }
            }, scaleType: {
                readOnly: true,
                serializedName: "properties.scaleType",
                type: {
                    name: "String"
                }
            }, clusterManagerType: {
                readOnly: true,
                serializedName: "properties.clusterManagerType",
                type: {
                    name: "String"
                }
            }, clusterConfiguration: {
                readOnly: true,
                serializedName: "properties.clusterConfiguration",
                type: {
                    name: "String"
                }
            }, wsfcDomainProfile: {
                serializedName: "properties.wsfcDomainProfile",
                type: {
                    name: "Composite",
                    className: "WsfcDomainProfile"
                }
            } })
    }
};
export var SqlVirtualMachineGroupUpdate = {
    serializedName: "SqlVirtualMachineGroupUpdate",
    type: {
        name: "Composite",
        className: "SqlVirtualMachineGroupUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var ResourceIdentity = {
    serializedName: "ResourceIdentity",
    type: {
        name: "Composite",
        className: "ResourceIdentity",
        modelProperties: {
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "Uuid"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
export var WsfcDomainCredentials = {
    serializedName: "WsfcDomainCredentials",
    type: {
        name: "Composite",
        className: "WsfcDomainCredentials",
        modelProperties: {
            clusterBootstrapAccountPassword: {
                serializedName: "clusterBootstrapAccountPassword",
                type: {
                    name: "String"
                }
            },
            clusterOperatorAccountPassword: {
                serializedName: "clusterOperatorAccountPassword",
                type: {
                    name: "String"
                }
            },
            sqlServiceAccountPassword: {
                serializedName: "sqlServiceAccountPassword",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AutoPatchingSettings = {
    serializedName: "AutoPatchingSettings",
    type: {
        name: "Composite",
        className: "AutoPatchingSettings",
        modelProperties: {
            enable: {
                serializedName: "enable",
                type: {
                    name: "Boolean"
                }
            },
            dayOfWeek: {
                serializedName: "dayOfWeek",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ]
                }
            },
            maintenanceWindowStartingHour: {
                serializedName: "maintenanceWindowStartingHour",
                type: {
                    name: "Number"
                }
            },
            maintenanceWindowDuration: {
                serializedName: "maintenanceWindowDuration",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var AutoBackupSettings = {
    serializedName: "AutoBackupSettings",
    type: {
        name: "Composite",
        className: "AutoBackupSettings",
        modelProperties: {
            enable: {
                serializedName: "enable",
                type: {
                    name: "Boolean"
                }
            },
            enableEncryption: {
                serializedName: "enableEncryption",
                type: {
                    name: "Boolean"
                }
            },
            retentionPeriod: {
                serializedName: "retentionPeriod",
                type: {
                    name: "Number"
                }
            },
            storageAccountUrl: {
                serializedName: "storageAccountUrl",
                type: {
                    name: "String"
                }
            },
            storageAccessKey: {
                serializedName: "storageAccessKey",
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "password",
                type: {
                    name: "String"
                }
            },
            backupSystemDbs: {
                serializedName: "backupSystemDbs",
                type: {
                    name: "Boolean"
                }
            },
            backupScheduleType: {
                serializedName: "backupScheduleType",
                type: {
                    name: "String"
                }
            },
            fullBackupFrequency: {
                serializedName: "fullBackupFrequency",
                type: {
                    name: "String"
                }
            },
            fullBackupStartTime: {
                serializedName: "fullBackupStartTime",
                type: {
                    name: "Number"
                }
            },
            fullBackupWindowHours: {
                serializedName: "fullBackupWindowHours",
                type: {
                    name: "Number"
                }
            },
            logBackupFrequency: {
                serializedName: "logBackupFrequency",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var KeyVaultCredentialSettings = {
    serializedName: "KeyVaultCredentialSettings",
    type: {
        name: "Composite",
        className: "KeyVaultCredentialSettings",
        modelProperties: {
            enable: {
                serializedName: "enable",
                type: {
                    name: "Boolean"
                }
            },
            credentialName: {
                serializedName: "credentialName",
                type: {
                    name: "String"
                }
            },
            azureKeyVaultUrl: {
                serializedName: "azureKeyVaultUrl",
                type: {
                    name: "String"
                }
            },
            servicePrincipalName: {
                serializedName: "servicePrincipalName",
                type: {
                    name: "String"
                }
            },
            servicePrincipalSecret: {
                serializedName: "servicePrincipalSecret",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SqlConnectivityUpdateSettings = {
    serializedName: "SqlConnectivityUpdateSettings",
    type: {
        name: "Composite",
        className: "SqlConnectivityUpdateSettings",
        modelProperties: {
            connectivityType: {
                serializedName: "connectivityType",
                type: {
                    name: "String"
                }
            },
            port: {
                serializedName: "port",
                type: {
                    name: "Number"
                }
            },
            sqlAuthUpdateUserName: {
                serializedName: "sqlAuthUpdateUserName",
                type: {
                    name: "String"
                }
            },
            sqlAuthUpdatePassword: {
                serializedName: "sqlAuthUpdatePassword",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SqlWorkloadTypeUpdateSettings = {
    serializedName: "SqlWorkloadTypeUpdateSettings",
    type: {
        name: "Composite",
        className: "SqlWorkloadTypeUpdateSettings",
        modelProperties: {
            sqlWorkloadType: {
                serializedName: "sqlWorkloadType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SqlStorageUpdateSettings = {
    serializedName: "SqlStorageUpdateSettings",
    type: {
        name: "Composite",
        className: "SqlStorageUpdateSettings",
        modelProperties: {
            diskCount: {
                serializedName: "diskCount",
                type: {
                    name: "Number"
                }
            },
            startingDeviceId: {
                serializedName: "startingDeviceId",
                type: {
                    name: "Number"
                }
            },
            diskConfigurationType: {
                serializedName: "diskConfigurationType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AdditionalFeaturesServerConfigurations = {
    serializedName: "AdditionalFeaturesServerConfigurations",
    type: {
        name: "Composite",
        className: "AdditionalFeaturesServerConfigurations",
        modelProperties: {
            isRServicesEnabled: {
                serializedName: "isRServicesEnabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var ServerConfigurationsManagementSettings = {
    serializedName: "ServerConfigurationsManagementSettings",
    type: {
        name: "Composite",
        className: "ServerConfigurationsManagementSettings",
        modelProperties: {
            sqlConnectivityUpdateSettings: {
                serializedName: "sqlConnectivityUpdateSettings",
                type: {
                    name: "Composite",
                    className: "SqlConnectivityUpdateSettings"
                }
            },
            sqlWorkloadTypeUpdateSettings: {
                serializedName: "sqlWorkloadTypeUpdateSettings",
                type: {
                    name: "Composite",
                    className: "SqlWorkloadTypeUpdateSettings"
                }
            },
            sqlStorageUpdateSettings: {
                serializedName: "sqlStorageUpdateSettings",
                type: {
                    name: "Composite",
                    className: "SqlStorageUpdateSettings"
                }
            },
            additionalFeaturesServerConfigurations: {
                serializedName: "additionalFeaturesServerConfigurations",
                type: {
                    name: "Composite",
                    className: "AdditionalFeaturesServerConfigurations"
                }
            }
        }
    }
};
export var SQLStorageSettings = {
    serializedName: "SQLStorageSettings",
    type: {
        name: "Composite",
        className: "SQLStorageSettings",
        modelProperties: {
            luns: {
                serializedName: "luns",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number"
                        }
                    }
                }
            },
            defaultFilePath: {
                serializedName: "defaultFilePath",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StorageConfigurationSettings = {
    serializedName: "StorageConfigurationSettings",
    type: {
        name: "Composite",
        className: "StorageConfigurationSettings",
        modelProperties: {
            sqlDataSettings: {
                serializedName: "sqlDataSettings",
                type: {
                    name: "Composite",
                    className: "SQLStorageSettings"
                }
            },
            sqlLogSettings: {
                serializedName: "sqlLogSettings",
                type: {
                    name: "Composite",
                    className: "SQLStorageSettings"
                }
            },
            sqlTempDbSettings: {
                serializedName: "sqlTempDbSettings",
                type: {
                    name: "Composite",
                    className: "SQLStorageSettings"
                }
            },
            diskConfigurationType: {
                serializedName: "diskConfigurationType",
                type: {
                    name: "String"
                }
            },
            storageWorkloadType: {
                serializedName: "storageWorkloadType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SqlVirtualMachine = {
    serializedName: "SqlVirtualMachine",
    type: {
        name: "Composite",
        className: "SqlVirtualMachine",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ResourceIdentity"
                }
            }, virtualMachineResourceId: {
                serializedName: "properties.virtualMachineResourceId",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, sqlImageOffer: {
                serializedName: "properties.sqlImageOffer",
                type: {
                    name: "String"
                }
            }, sqlServerLicenseType: {
                serializedName: "properties.sqlServerLicenseType",
                type: {
                    name: "String"
                }
            }, sqlManagement: {
                serializedName: "properties.sqlManagement",
                type: {
                    name: "String"
                }
            }, sqlImageSku: {
                serializedName: "properties.sqlImageSku",
                type: {
                    name: "String"
                }
            }, sqlVirtualMachineGroupResourceId: {
                serializedName: "properties.sqlVirtualMachineGroupResourceId",
                type: {
                    name: "String"
                }
            }, wsfcDomainCredentials: {
                serializedName: "properties.wsfcDomainCredentials",
                type: {
                    name: "Composite",
                    className: "WsfcDomainCredentials"
                }
            }, autoPatchingSettings: {
                serializedName: "properties.autoPatchingSettings",
                type: {
                    name: "Composite",
                    className: "AutoPatchingSettings"
                }
            }, autoBackupSettings: {
                serializedName: "properties.autoBackupSettings",
                type: {
                    name: "Composite",
                    className: "AutoBackupSettings"
                }
            }, keyVaultCredentialSettings: {
                serializedName: "properties.keyVaultCredentialSettings",
                type: {
                    name: "Composite",
                    className: "KeyVaultCredentialSettings"
                }
            }, serverConfigurationsManagementSettings: {
                serializedName: "properties.serverConfigurationsManagementSettings",
                type: {
                    name: "Composite",
                    className: "ServerConfigurationsManagementSettings"
                }
            }, storageConfigurationSettings: {
                serializedName: "properties.storageConfigurationSettings",
                type: {
                    name: "Composite",
                    className: "StorageConfigurationSettings"
                }
            } })
    }
};
export var SqlVirtualMachineUpdate = {
    serializedName: "SqlVirtualMachineUpdate",
    type: {
        name: "Composite",
        className: "SqlVirtualMachineUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var AvailabilityGroupListenerListResult = {
    serializedName: "AvailabilityGroupListenerListResult",
    type: {
        name: "Composite",
        className: "AvailabilityGroupListenerListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AvailabilityGroupListener"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var OperationListResult = {
    serializedName: "OperationListResult",
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SqlVirtualMachineGroupListResult = {
    serializedName: "SqlVirtualMachineGroupListResult",
    type: {
        name: "Composite",
        className: "SqlVirtualMachineGroupListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlVirtualMachineGroup"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SqlVirtualMachineListResult = {
    serializedName: "SqlVirtualMachineListResult",
    type: {
        name: "Composite",
        className: "SqlVirtualMachineListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SqlVirtualMachine"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map