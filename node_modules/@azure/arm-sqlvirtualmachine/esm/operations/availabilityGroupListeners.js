/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/availabilityGroupListenersMappers";
import * as Parameters from "../models/parameters";
/** Class representing a AvailabilityGroupListeners. */
var AvailabilityGroupListeners = /** @class */ (function () {
    /**
     * Create a AvailabilityGroupListeners.
     * @param {SqlVirtualMachineManagementClientContext} client Reference to the service client.
     */
    function AvailabilityGroupListeners(client) {
        this.client = client;
    }
    AvailabilityGroupListeners.prototype.get = function (resourceGroupName, sqlVirtualMachineGroupName, availabilityGroupListenerName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            sqlVirtualMachineGroupName: sqlVirtualMachineGroupName,
            availabilityGroupListenerName: availabilityGroupListenerName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Creates or updates an availability group listener.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param availabilityGroupListenerName Name of the availability group listener.
     * @param parameters The availability group listener.
     * @param [options] The optional parameters
     * @returns Promise<Models.AvailabilityGroupListenersCreateOrUpdateResponse>
     */
    AvailabilityGroupListeners.prototype.createOrUpdate = function (resourceGroupName, sqlVirtualMachineGroupName, availabilityGroupListenerName, parameters, options) {
        return this.beginCreateOrUpdate(resourceGroupName, sqlVirtualMachineGroupName, availabilityGroupListenerName, parameters, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Deletes an availability group listener.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param availabilityGroupListenerName Name of the availability group listener.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    AvailabilityGroupListeners.prototype.deleteMethod = function (resourceGroupName, sqlVirtualMachineGroupName, availabilityGroupListenerName, options) {
        return this.beginDeleteMethod(resourceGroupName, sqlVirtualMachineGroupName, availabilityGroupListenerName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    AvailabilityGroupListeners.prototype.listByGroup = function (resourceGroupName, sqlVirtualMachineGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            sqlVirtualMachineGroupName: sqlVirtualMachineGroupName,
            options: options
        }, listByGroupOperationSpec, callback);
    };
    /**
     * Creates or updates an availability group listener.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param availabilityGroupListenerName Name of the availability group listener.
     * @param parameters The availability group listener.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    AvailabilityGroupListeners.prototype.beginCreateOrUpdate = function (resourceGroupName, sqlVirtualMachineGroupName, availabilityGroupListenerName, parameters, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            sqlVirtualMachineGroupName: sqlVirtualMachineGroupName,
            availabilityGroupListenerName: availabilityGroupListenerName,
            parameters: parameters,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * Deletes an availability group listener.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param availabilityGroupListenerName Name of the availability group listener.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    AvailabilityGroupListeners.prototype.beginDeleteMethod = function (resourceGroupName, sqlVirtualMachineGroupName, availabilityGroupListenerName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            sqlVirtualMachineGroupName: sqlVirtualMachineGroupName,
            availabilityGroupListenerName: availabilityGroupListenerName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    AvailabilityGroupListeners.prototype.listByGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByGroupNextOperationSpec, callback);
    };
    return AvailabilityGroupListeners;
}());
export { AvailabilityGroupListeners };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}/availabilityGroupListeners/{availabilityGroupListenerName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.sqlVirtualMachineGroupName,
        Parameters.availabilityGroupListenerName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.AvailabilityGroupListener
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}/availabilityGroupListeners",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.sqlVirtualMachineGroupName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.AvailabilityGroupListenerListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}/availabilityGroupListeners/{availabilityGroupListenerName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.sqlVirtualMachineGroupName,
        Parameters.availabilityGroupListenerName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.AvailabilityGroupListener), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.AvailabilityGroupListener
        },
        201: {
            bodyMapper: Mappers.AvailabilityGroupListener
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}/availabilityGroupListeners/{availabilityGroupListenerName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.sqlVirtualMachineGroupName,
        Parameters.availabilityGroupListenerName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.AvailabilityGroupListenerListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=availabilityGroupListeners.js.map