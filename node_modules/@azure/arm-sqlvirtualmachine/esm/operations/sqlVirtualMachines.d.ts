import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { SqlVirtualMachineManagementClientContext } from "../sqlVirtualMachineManagementClientContext";
/** Class representing a SqlVirtualMachines. */
export declare class SqlVirtualMachines {
    private readonly client;
    /**
     * Create a SqlVirtualMachines.
     * @param {SqlVirtualMachineManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlVirtualMachineManagementClientContext);
    /**
     * Gets the list of sql virtual machines in a SQL virtual machine group.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachinesListBySqlVmGroupResponse>
     */
    listBySqlVmGroup(resourceGroupName: string, sqlVirtualMachineGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachinesListBySqlVmGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param callback The callback
     */
    listBySqlVmGroup(resourceGroupName: string, sqlVirtualMachineGroupName: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySqlVmGroup(resourceGroupName: string, sqlVirtualMachineGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * Gets all SQL virtual machines in a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachinesListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachinesListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * Gets a SQL virtual machine.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineName Name of the SQL virtual machine.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachinesGetResponse>
     */
    get(resourceGroupName: string, sqlVirtualMachineName: string, options?: Models.SqlVirtualMachinesGetOptionalParams): Promise<Models.SqlVirtualMachinesGetResponse>;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineName Name of the SQL virtual machine.
     * @param callback The callback
     */
    get(resourceGroupName: string, sqlVirtualMachineName: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachine>): void;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineName Name of the SQL virtual machine.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, sqlVirtualMachineName: string, options: Models.SqlVirtualMachinesGetOptionalParams, callback: msRest.ServiceCallback<Models.SqlVirtualMachine>): void;
    /**
     * Creates or updates a SQL virtual machine.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineName Name of the SQL virtual machine.
     * @param parameters The SQL virtual machine.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachinesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, sqlVirtualMachineName: string, parameters: Models.SqlVirtualMachine, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachinesCreateOrUpdateResponse>;
    /**
     * Deletes a SQL virtual machine.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineName Name of the SQL virtual machine.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, sqlVirtualMachineName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Updates a SQL virtual machine.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineName Name of the SQL virtual machine.
     * @param parameters The SQL virtual machine.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachinesUpdateResponse>
     */
    update(resourceGroupName: string, sqlVirtualMachineName: string, parameters: Models.SqlVirtualMachineUpdate, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachinesUpdateResponse>;
    /**
     * Gets all SQL virtual machines in a resource group.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachinesListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachinesListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * Creates or updates a SQL virtual machine.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineName Name of the SQL virtual machine.
     * @param parameters The SQL virtual machine.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, sqlVirtualMachineName: string, parameters: Models.SqlVirtualMachine, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes a SQL virtual machine.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineName Name of the SQL virtual machine.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, sqlVirtualMachineName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Updates a SQL virtual machine.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineName Name of the SQL virtual machine.
     * @param parameters The SQL virtual machine.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, sqlVirtualMachineName: string, parameters: Models.SqlVirtualMachineUpdate, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets the list of sql virtual machines in a SQL virtual machine group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachinesListBySqlVmGroupNextResponse>
     */
    listBySqlVmGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachinesListBySqlVmGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySqlVmGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySqlVmGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * Gets all SQL virtual machines in a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachinesListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachinesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * Gets all SQL virtual machines in a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachinesListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachinesListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineListResult>): void;
}
//# sourceMappingURL=sqlVirtualMachines.d.ts.map