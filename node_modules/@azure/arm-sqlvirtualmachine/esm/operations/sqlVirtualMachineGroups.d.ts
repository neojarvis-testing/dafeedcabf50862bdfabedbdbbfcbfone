import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { SqlVirtualMachineManagementClientContext } from "../sqlVirtualMachineManagementClientContext";
/** Class representing a SqlVirtualMachineGroups. */
export declare class SqlVirtualMachineGroups {
    private readonly client;
    /**
     * Create a SqlVirtualMachineGroups.
     * @param {SqlVirtualMachineManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlVirtualMachineManagementClientContext);
    /**
     * Gets a SQL virtual machine group.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachineGroupsGetResponse>
     */
    get(resourceGroupName: string, sqlVirtualMachineGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachineGroupsGetResponse>;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param callback The callback
     */
    get(resourceGroupName: string, sqlVirtualMachineGroupName: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroup>): void;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, sqlVirtualMachineGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroup>): void;
    /**
     * Creates or updates a SQL virtual machine group.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param parameters The SQL virtual machine group.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachineGroupsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, sqlVirtualMachineGroupName: string, parameters: Models.SqlVirtualMachineGroup, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachineGroupsCreateOrUpdateResponse>;
    /**
     * Deletes a SQL virtual machine group.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, sqlVirtualMachineGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Updates SQL virtual machine group tags.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param parameters The SQL virtual machine group.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachineGroupsUpdateResponse>
     */
    update(resourceGroupName: string, sqlVirtualMachineGroupName: string, parameters: Models.SqlVirtualMachineGroupUpdate, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachineGroupsUpdateResponse>;
    /**
     * Gets all SQL virtual machine groups in a resource group.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachineGroupsListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachineGroupsListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroupListResult>): void;
    /**
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroupListResult>): void;
    /**
     * Gets all SQL virtual machine groups in a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachineGroupsListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachineGroupsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroupListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroupListResult>): void;
    /**
     * Creates or updates a SQL virtual machine group.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param parameters The SQL virtual machine group.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, sqlVirtualMachineGroupName: string, parameters: Models.SqlVirtualMachineGroup, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes a SQL virtual machine group.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, sqlVirtualMachineGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Updates SQL virtual machine group tags.
     * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
     * this value from the Azure Resource Manager API or the portal.
     * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
     * @param parameters The SQL virtual machine group.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, sqlVirtualMachineGroupName: string, parameters: Models.SqlVirtualMachineGroupUpdate, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets all SQL virtual machine groups in a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachineGroupsListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachineGroupsListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroupListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroupListResult>): void;
    /**
     * Gets all SQL virtual machine groups in a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SqlVirtualMachineGroupsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlVirtualMachineGroupsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroupListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlVirtualMachineGroupListResult>): void;
}
//# sourceMappingURL=sqlVirtualMachineGroups.d.ts.map