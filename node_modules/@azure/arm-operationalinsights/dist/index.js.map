{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/queryPacks.ts","../src/operations/queries.ts","../src/operations/dataExports.ts","../src/operations/dataSources.ts","../src/operations/intelligencePacks.ts","../src/lroImpl.ts","../src/operations/linkedServices.ts","../src/operations/linkedStorageAccounts.ts","../src/operations/managementGroups.ts","../src/operations/operationStatuses.ts","../src/operations/sharedKeysOperations.ts","../src/operations/usages.ts","../src/operations/storageInsightConfigs.ts","../src/operations/savedSearches.ts","../src/operations/availableServiceTiers.ts","../src/operations/gateways.ts","../src/operations/schemaOperations.ts","../src/operations/workspacePurge.ts","../src/operations/clusters.ts","../src/operations/operations.ts","../src/operations/workspaces.ts","../src/operations/deletedWorkspaces.ts","../src/operations/tables.ts","../src/operationalInsightsManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Describes the list of Log Analytics QueryPack resources. */\nexport interface LogAnalyticsQueryPackListResult {\n  /** List of Log Analytics QueryPack definitions. */\n  value: LogAnalyticsQueryPack[];\n  /** The URI to get the next set of Log Analytics QueryPack definitions if too many QueryPacks where returned in the result set. */\n  nextLink?: string;\n}\n\n/** An azure resource object */\nexport interface QueryPacksResource {\n  /**\n   * Azure resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Azure resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Azure resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location */\n  location: string;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** A container holding only the Tags for a resource, allowing the user to update the tags on a QueryPack instance. */\nexport interface TagsResource {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Describes the list of Log Analytics QueryPack-Query resources. */\nexport interface LogAnalyticsQueryPackQueryListResult {\n  /** List of Log Analytics QueryPack Query definitions. */\n  value: LogAnalyticsQueryPackQuery[];\n  /** The URI to get the next set of Log Analytics QueryPack definitions if too many QueryPack-Queries where returned in the result set. */\n  nextLink?: string;\n}\n\n/** The related metadata items for the function. */\nexport interface LogAnalyticsQueryPackQueryPropertiesRelated {\n  /** The related categories for the function. */\n  categories?: string[];\n  /** The related resource types for the function. */\n  resourceTypes?: string[];\n  /** The related Log Analytics solutions for the function. */\n  solutions?: string[];\n}\n\n/** An Azure resource QueryPack-Query object */\nexport interface AzureResourceProperties {\n  /**\n   * Azure resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Azure resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Azure resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Read only system data\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Read only system data */\nexport interface SystemData {\n  /** An identifier for the identity that created the resource */\n  createdBy?: string;\n  /** The type of identity that created the resource */\n  createdByType?: IdentityType;\n  /** The timestamp of resource creation (UTC) */\n  createdAt?: Date;\n  /** An identifier for the identity that last modified the resource */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource */\n  lastModifiedByType?: IdentityType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** Properties that define an Log Analytics QueryPack-Query search properties. */\nexport interface LogAnalyticsQueryPackQuerySearchProperties {\n  /** The related metadata items for the function. */\n  related?: LogAnalyticsQueryPackQuerySearchPropertiesRelated;\n  /** Tags associated with the query. */\n  tags?: { [propertyName: string]: string[] };\n}\n\n/** The related metadata items for the function. */\nexport interface LogAnalyticsQueryPackQuerySearchPropertiesRelated {\n  /** The related categories for the function. */\n  categories?: string[];\n  /** The related resource types for the function. */\n  resourceTypes?: string[];\n  /** The related Log Analytics solutions for the function. */\n  solutions?: string[];\n}\n\n/** Result of the request to list data exports. */\nexport interface DataExportListResult {\n  /** List of data export instances within a workspace.. */\n  value?: DataExport[];\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** The list data source by workspace operation response. */\nexport interface DataSourceListResult {\n  /** A list of datasources. */\n  value?: DataSource[];\n  /** The link (url) to the next page of datasources. */\n  nextLink?: string;\n}\n\n/** Intelligence Pack containing a string name and boolean indicating if it's enabled. */\nexport interface IntelligencePack {\n  /** The name of the intelligence pack. */\n  name?: string;\n  /** The enabled boolean for the intelligence pack. */\n  enabled?: boolean;\n  /** The display name of the intelligence pack. */\n  displayName?: string;\n}\n\n/** The list linked service operation response. */\nexport interface LinkedServiceListResult {\n  /** The list of linked service instances */\n  value?: LinkedService[];\n}\n\n/** The list linked storage accounts service operation response. */\nexport interface LinkedStorageAccountsListResult {\n  /** A list of linked storage accounts instances. */\n  value?: LinkedStorageAccountsResource[];\n}\n\n/** The list workspace management groups operation response. */\nexport interface WorkspaceListManagementGroupsResult {\n  /** Gets or sets a list of management groups attached to the workspace. */\n  value?: ManagementGroup[];\n}\n\n/** A management group that is connected to a workspace */\nexport interface ManagementGroup {\n  /** The number of servers connected to the management group. */\n  serverCount?: number;\n  /** Gets or sets a value indicating whether the management group is a gateway. */\n  isGateway?: boolean;\n  /** The name of the management group. */\n  name?: string;\n  /** The unique ID of the management group. */\n  id?: string;\n  /** The datetime that the management group was created. */\n  created?: Date;\n  /** The last datetime that the management group received data. */\n  dataReceived?: Date;\n  /** The version of System Center that is managing the management group. */\n  version?: string;\n  /** The SKU of System Center that is managing the management group. */\n  sku?: string;\n}\n\n/** The status of operation. */\nexport interface OperationStatus {\n  /** The operation Id. */\n  id?: string;\n  /** The operation name. */\n  name?: string;\n  /** The start time of the operation. */\n  startTime?: string;\n  /** The end time of the operation. */\n  endTime?: string;\n  /** The status of the operation. */\n  status?: string;\n  /** The error detail of the operation if any. */\n  error?: ErrorResponse;\n}\n\n/** The shared keys for a workspace. */\nexport interface SharedKeys {\n  /** The primary shared key of a workspace. */\n  primarySharedKey?: string;\n  /** The secondary shared key of a workspace. */\n  secondarySharedKey?: string;\n}\n\n/** The list workspace usages operation response. */\nexport interface WorkspaceListUsagesResult {\n  /** Gets or sets a list of usage metrics for a workspace. */\n  value?: UsageMetric[];\n}\n\n/** A metric describing the usage of a resource. */\nexport interface UsageMetric {\n  /** The name of the metric. */\n  name?: MetricName;\n  /** The units used for the metric. */\n  unit?: string;\n  /** The current value of the metric. */\n  currentValue?: number;\n  /** The quota limit for the metric. */\n  limit?: number;\n  /** The time that the metric's value will reset. */\n  nextResetTime?: Date;\n  /** The quota period that determines the length of time between value resets. */\n  quotaPeriod?: string;\n}\n\n/** The name of a metric. */\nexport interface MetricName {\n  /** The system name of the metric. */\n  value?: string;\n  /** The localized name of the metric. */\n  localizedValue?: string;\n}\n\n/** Describes a storage account connection. */\nexport interface StorageAccount {\n  /** The Azure Resource Manager ID of the storage account resource. */\n  id: string;\n  /** The storage account key. */\n  key: string;\n}\n\n/** The status of the storage insight. */\nexport interface StorageInsightStatus {\n  /** The state of the storage insight connection to the workspace */\n  state: StorageInsightState;\n  /** Description of the state of the storage insight. */\n  description?: string;\n}\n\n/** The list storage insights operation response. */\nexport interface StorageInsightListResult {\n  /** A list of storage insight items. */\n  value?: StorageInsight[];\n  /** The link (url) to the next page of results. */\n  odataNextLink?: string;\n}\n\n/** A tag of a saved search. */\nexport interface Tag {\n  /** The tag name. */\n  name: string;\n  /** The tag value. */\n  value: string;\n}\n\n/** The saved search list operation response. */\nexport interface SavedSearchesListResult {\n  /** The array of result values. */\n  value?: SavedSearch[];\n}\n\n/** Service Tier details. */\nexport interface AvailableServiceTier {\n  /**\n   * The name of the Service Tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceTier?: SkuNameEnum;\n  /**\n   * True if the Service Tier is enabled for the workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly enabled?: boolean;\n  /**\n   * The minimum retention for the Service Tier, in days.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minimumRetention?: number;\n  /**\n   * The maximum retention for the Service Tier, in days.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maximumRetention?: number;\n  /**\n   * The default retention for the Service Tier, in days.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultRetention?: number;\n  /**\n   * The capacity reservation level in GB per day. Returned for the Capacity Reservation Service Tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capacityReservationLevel?: number;\n  /**\n   * Time when the sku was last updated for the workspace. Returned for the Capacity Reservation Service Tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastSkuUpdate?: string;\n}\n\n/** The get schema operation response. */\nexport interface SearchGetSchemaResponse {\n  /** The metadata from search results. */\n  metadata?: SearchMetadata;\n  /** The array of result values. */\n  value?: SearchSchemaValue[];\n}\n\n/** Metadata for search results. */\nexport interface SearchMetadata {\n  /** The request id of the search. */\n  searchId?: string;\n  /** The search result type. */\n  resultType?: string;\n  /** The total number of search results. */\n  total?: number;\n  /** The number of top search results. */\n  top?: number;\n  /** The id of the search results request. */\n  id?: string;\n  /** The core summaries. */\n  coreSummaries?: CoreSummary[];\n  /** The status of the search results. */\n  status?: string;\n  /** The start time for the search. */\n  startTime?: Date;\n  /** The time of last update. */\n  lastUpdated?: Date;\n  /** The ETag of the search results. */\n  eTag?: string;\n  /** How the results are sorted. */\n  sort?: SearchSort[];\n  /** The request time. */\n  requestTime?: number;\n  /** The aggregated value field. */\n  aggregatedValueField?: string;\n  /** The aggregated grouping fields. */\n  aggregatedGroupingFields?: string;\n  /** The sum of all aggregates returned in the result set. */\n  sum?: number;\n  /** The max of all aggregates returned in the result set. */\n  max?: number;\n  /** The schema. */\n  schema?: SearchMetadataSchema;\n}\n\n/** The core summary of a search. */\nexport interface CoreSummary {\n  /** The status of a core summary. */\n  status?: string;\n  /** The number of documents of a core summary. */\n  numberOfDocuments: number;\n}\n\n/** The sort parameters for search. */\nexport interface SearchSort {\n  /** The name of the field the search query is sorted on. */\n  name?: string;\n  /** The sort order of the search. */\n  order?: SearchSortEnum;\n}\n\n/** Schema metadata for search. */\nexport interface SearchMetadataSchema {\n  /** The name of the metadata schema. */\n  name?: string;\n  /** The version of the metadata schema. */\n  version?: number;\n}\n\n/** Value object for schema results. */\nexport interface SearchSchemaValue {\n  /** The name of the schema. */\n  name?: string;\n  /** The display name of the schema. */\n  displayName?: string;\n  /** The type. */\n  type?: string;\n  /** The boolean that indicates the field is searchable as free text. */\n  indexed: boolean;\n  /** The boolean that indicates whether or not the field is stored. */\n  stored: boolean;\n  /** The boolean that indicates whether or not the field is a facet. */\n  facet: boolean;\n  /** The array of workflows containing the field. */\n  ownerType?: string[];\n}\n\n/** Describes the body of a purge request for an App Insights Workspace */\nexport interface WorkspacePurgeBody {\n  /** Table from which to purge data. */\n  table: string;\n  /** The set of columns and filters (queries) to run over them to purge the resulting data. */\n  filters: WorkspacePurgeBodyFilters[];\n}\n\n/** User-defined filters to return data which will be purged from the table. */\nexport interface WorkspacePurgeBodyFilters {\n  /** The column of the table over which the given query should run */\n  column?: string;\n  /** A query operator to evaluate over the provided column and value(s). Supported operators are ==, =~, in, in~, >, >=, <, <=, between, and have the same behavior as they would in a KQL query. */\n  operator?: string;\n  /** the value for the operator to function over. This can be a number (e.g., > 100), a string (timestamp >= '2017-09-01') or array of values. */\n  value?: any;\n  /** When filtering over custom dimensions, this key will be used as the name of the custom dimension. */\n  key?: string;\n}\n\n/** Response containing operationId for a specific purge action. */\nexport interface WorkspacePurgeResponse {\n  /** Id to use when querying for status for a particular purge operation. */\n  operationId: string;\n}\n\n/** Response containing status for a specific purge operation. */\nexport interface WorkspacePurgeStatusResponse {\n  /** Status of the operation represented by the requested Id. */\n  status: PurgeState;\n}\n\n/** The list clusters operation response. */\nexport interface ClusterListResult {\n  /** The link used to get the next page of recommendations. */\n  nextLink?: string;\n  /** A list of Log Analytics clusters. */\n  value?: Cluster[];\n}\n\n/** Identity for the resource. */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** Type of managed service identity. */\n  type: IdentityType;\n  /** The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */\n  userAssignedIdentities?: { [propertyName: string]: UserIdentityProperties };\n}\n\n/** User assigned identity properties. */\nexport interface UserIdentityProperties {\n  /**\n   * The principal id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** The cluster sku definition. */\nexport interface ClusterSku {\n  /** The capacity value */\n  capacity?: Capacity;\n  /** The name of the SKU. */\n  name?: ClusterSkuNameEnum;\n}\n\n/** The key vault properties. */\nexport interface KeyVaultProperties {\n  /** The Key Vault uri which holds they key associated with the Log Analytics cluster. */\n  keyVaultUri?: string;\n  /** The name of the key associated with the Log Analytics cluster. */\n  keyName?: string;\n  /** The version of the key associated with the Log Analytics cluster. */\n  keyVersion?: string;\n  /** Selected key minimum required size. */\n  keyRsaSize?: number;\n}\n\n/** The list of Log Analytics workspaces associated with the cluster. */\nexport interface AssociatedWorkspace {\n  /**\n   * The id of the assigned workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly workspaceId?: string;\n  /**\n   * The name id the assigned workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly workspaceName?: string;\n  /**\n   * The ResourceId id the assigned workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceId?: string;\n  /**\n   * The time of workspace association.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly associateDate?: string;\n}\n\n/** The Capacity Reservation properties. */\nexport interface CapacityReservationProperties {\n  /**\n   * The last time Sku was updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastSkuUpdate?: string;\n  /**\n   * Minimum CapacityReservation value in GB.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minCapacity?: number;\n}\n\n/** The top level Log Analytics cluster resource container. */\nexport interface ClusterPatch {\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** The sku properties. */\n  sku?: ClusterSku;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The associated key properties. */\n  keyVaultProperties?: KeyVaultProperties;\n  /** The cluster's billing type. */\n  billingType?: BillingType;\n}\n\n/** Result of the request to list solution operations. */\nexport interface OperationListResult {\n  /** List of solution operations supported by the OperationsManagement resource provider. */\n  value?: Operation[];\n  /**\n   * URL to get the next set of operation list results if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Supported operation of OperationalInsights resource provider. */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** Display metadata associated with the operation. */\n  display?: OperationDisplay;\n}\n\n/** Display metadata associated with the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft OperationsManagement. */\n  provider?: string;\n  /** Resource on which the operation is performed etc. */\n  resource?: string;\n  /** Type of operation: get, read, delete, etc. */\n  operation?: string;\n  /** Description of operation */\n  description?: string;\n}\n\n/** The list workspaces operation response. */\nexport interface WorkspaceListResult {\n  /** A list of workspaces. */\n  value?: Workspace[];\n}\n\n/** The SKU (tier) of a workspace. */\nexport interface WorkspaceSku {\n  /** The name of the SKU. */\n  name: WorkspaceSkuNameEnum;\n  /** The capacity reservation level in GB for this workspace, when CapacityReservation sku is selected. */\n  capacityReservationLevel?: CapacityReservationLevel;\n  /**\n   * The last time when the sku was updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastSkuUpdate?: string;\n}\n\n/** The daily volume cap for ingestion. */\nexport interface WorkspaceCapping {\n  /** The workspace daily quota for ingestion. */\n  dailyQuotaGb?: number;\n  /**\n   * The time when the quota will be rest.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quotaNextResetTime?: string;\n  /**\n   * The status of data ingestion for this workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataIngestionStatus?: DataIngestionStatus;\n}\n\n/** The private link scope resource reference. */\nexport interface PrivateLinkScopedResource {\n  /** The full resource Id of the private link scope resource. */\n  resourceId?: string;\n  /** The private link scope unique Identifier. */\n  scopeId?: string;\n}\n\n/** Workspace features. */\nexport interface WorkspaceFeatures {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** Flag that indicate if data should be exported. */\n  enableDataExport?: boolean;\n  /** Flag that describes if we want to remove the data after 30 days. */\n  immediatePurgeDataOn30Days?: boolean;\n  /** Flag that indicate which permission to use - resource or workspace or both. */\n  enableLogAccessUsingOnlyResourcePermissions?: boolean;\n  /** Dedicated LA cluster resourceId that is linked to the workspaces. */\n  clusterResourceId?: string;\n  /** Disable Non-AAD based Auth. */\n  disableLocalAuth?: boolean;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemDataAutoGenerated {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** The list tables operation response. */\nexport interface TablesListResult {\n  /** A list of data tables. */\n  value?: Table[];\n}\n\n/** Parameters of the search job that initiated this table. */\nexport interface SearchResults {\n  /** Search job query. */\n  query?: string;\n  /** Search job Description. */\n  description?: string;\n  /** Limit the search job to return up to specified number of rows. */\n  limit?: number;\n  /** The timestamp to start the search from (UTC) */\n  startSearchTime?: Date;\n  /** The timestamp to end the search by (UTC) */\n  endSearchTime?: Date;\n  /**\n   * The table used in the search job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourceTable?: string;\n  /**\n   * Search results table async operation id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureAsyncOperationId?: string;\n}\n\n/** Restore parameters. */\nexport interface RestoredLogs {\n  /** The timestamp to start the restore from (UTC). */\n  startRestoreTime?: Date;\n  /** The timestamp to end the restore by (UTC). */\n  endRestoreTime?: Date;\n  /** The table to restore data from. */\n  sourceTable?: string;\n  /**\n   * Search results table async operation id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureAsyncOperationId?: string;\n}\n\n/** Search job execution statistics. */\nexport interface ResultStatistics {\n  /**\n   * Search job completion percentage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly progress?: number;\n  /**\n   * The number of rows that were returned by the search job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ingestedRecords?: number;\n  /**\n   * Search job: Amount of scanned data.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scannedGb?: number;\n}\n\n/** Table's schema. */\nexport interface Schema {\n  /** Table name. */\n  name?: string;\n  /** Table display name. */\n  displayName?: string;\n  /** Table description. */\n  description?: string;\n  /** A list of table custom columns. */\n  columns?: Column[];\n  /**\n   * A list of table standard columns.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly standardColumns?: Column[];\n  /**\n   * Table category.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly categories?: string[];\n  /**\n   * Table labels.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly labels?: string[];\n  /**\n   * Table's creator.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly source?: SourceEnum;\n  /**\n   * Table's creator.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tableType?: TableTypeEnum;\n  /**\n   * The subtype describes what APIs can be used to interact with the table, and what features are available against it.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tableSubType?: TableSubTypeEnum;\n  /**\n   * List of solutions the table is affiliated with\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly solutions?: string[];\n}\n\n/** Table column. */\nexport interface Column {\n  /** Column name. */\n  name?: string;\n  /** Column data type. */\n  type?: ColumnTypeEnum;\n  /** Column data type logical hint. */\n  dataTypeHint?: ColumnDataTypeHintEnum;\n  /** Column display name. */\n  displayName?: string;\n  /** Column description. */\n  description?: string;\n  /**\n   * Is displayed by default.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDefaultDisplay?: boolean;\n  /**\n   * Is column hidden.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isHidden?: boolean;\n}\n\n/** DataSource filter. Right now, only filter by kind is supported. */\nexport interface DataSourceFilter {\n  /** The kind of the DataSource. */\n  kind?: DataSourceKind;\n}\n\n/** An Log Analytics QueryPack definition. */\nexport interface LogAnalyticsQueryPack extends QueryPacksResource {\n  /**\n   * The unique ID of your application. This field cannot be changed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queryPackId?: string;\n  /**\n   * Creation Date for the Log Analytics QueryPack, in ISO 8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n  /**\n   * Last modified date of the Log Analytics QueryPack, in ISO 8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeModified?: Date;\n  /**\n   * Current state of this QueryPack: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** A Log Analytics QueryPack-Query definition. */\nexport interface LogAnalyticsQueryPackQuery extends AzureResourceProperties {\n  /**\n   * The unique ID of your application. This field cannot be changed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly idPropertiesId?: string;\n  /** Unique display name for your query within the Query Pack. */\n  displayName?: string;\n  /**\n   * Creation Date for the Log Analytics Query, in ISO 8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n  /**\n   * Last modified date of the Log Analytics Query, in ISO 8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeModified?: Date;\n  /**\n   * Object Id of user creating the query.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly author?: string;\n  /** Description of the query. */\n  description?: string;\n  /** Body of the query. */\n  body?: string;\n  /** The related metadata items for the function. */\n  related?: LogAnalyticsQueryPackQueryPropertiesRelated;\n  /** Tags associated with the query. */\n  tags?: { [propertyName: string]: string[] };\n  /** Additional properties that can be set for the query. */\n  properties?: Record<string, unknown>;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location: string;\n}\n\n/** The resource model definition for an Azure Resource Manager resource with an etag. */\nexport interface AzureEntityResource extends Resource {\n  /**\n   * Resource Etag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** The top level data export resource container. */\nexport interface DataExport extends ProxyResource {\n  /** The data export rule ID. */\n  dataExportId?: string;\n  /** An array of tables to export, for example: [“Heartbeat, SecurityEvent”]. */\n  tableNames?: string[];\n  /** Active when enabled. */\n  enable?: boolean;\n  /** The latest data export rule modification time. */\n  createdDate?: string;\n  /** Date and time when the export was last modified. */\n  lastModifiedDate?: string;\n  /** The destination resource ID. This can be copied from the Properties entry of the destination resource in Azure. */\n  resourceId?: string;\n  /**\n   * The type of the destination resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly typePropertiesDestinationType?: Type;\n  /** Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account. */\n  eventHubName?: string;\n}\n\n/** Datasources under OMS Workspace. */\nexport interface DataSource extends ProxyResource {\n  /** The data source properties in raw json format, each kind of data source have it's own schema. */\n  properties: Record<string, unknown>;\n  /** The ETag of the data source. */\n  etag?: string;\n  /** The kind of the DataSource. */\n  kind: DataSourceKind;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The top level Linked service resource container. */\nexport interface LinkedService extends ProxyResource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require read access */\n  resourceId?: string;\n  /** The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require write access */\n  writeAccessResourceId?: string;\n  /** The provisioning state of the linked service. */\n  provisioningState?: LinkedServiceEntityStatus;\n}\n\n/** Linked storage accounts top level resource container. */\nexport interface LinkedStorageAccountsResource extends ProxyResource {\n  /**\n   * Linked storage accounts type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourceType?: DataSourceType;\n  /** Linked storage accounts resources ids. */\n  storageAccountIds?: string[];\n}\n\n/** The top level storage insight resource container. */\nexport interface StorageInsight extends ProxyResource {\n  /** The ETag of the storage insight. */\n  eTag?: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The names of the blob containers that the workspace should read */\n  containers?: string[];\n  /** The names of the Azure tables that the workspace should read */\n  tables?: string[];\n  /** The storage account connection details */\n  storageAccount?: StorageAccount;\n  /**\n   * The status of the storage insight\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: StorageInsightStatus;\n}\n\n/** Value object for saved search results. */\nexport interface SavedSearch extends ProxyResource {\n  /** The ETag of the saved search. To override an existing saved search, use \"*\" or specify the current Etag */\n  etag?: string;\n  /** The category of the saved search. This helps the user to find a saved search faster. */\n  category: string;\n  /** Saved search display name. */\n  displayName: string;\n  /** The query expression for the saved search. */\n  query: string;\n  /** The function alias if query serves as a function. */\n  functionAlias?: string;\n  /** The optional function parameters if query serves as a function. Value should be in the following format: 'param-name1:type1 = default_value1, param-name2:type2 = default_value2'. For more examples and proper syntax please refer to https://docs.microsoft.com/en-us/azure/kusto/query/functions/user-defined-functions. */\n  functionParameters?: string;\n  /** The version number of the query language. The current version is 2 and is the default. */\n  version?: number;\n  /** The tags attached to the saved search. */\n  tags?: Tag[];\n}\n\n/** Workspace data table definition. */\nexport interface Table extends ProxyResource {\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemDataAutoGenerated;\n  /** The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention. */\n  retentionInDays?: number;\n  /** The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention. */\n  totalRetentionInDays?: number;\n  /**\n   * The table data archive retention in days. Calculated as (totalRetentionInDays-retentionInDays)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly archiveRetentionInDays?: number;\n  /** Parameters of the search job that initiated this table. */\n  searchResults?: SearchResults;\n  /** Parameters of the restore operation that initiated this table. */\n  restoredLogs?: RestoredLogs;\n  /**\n   * Search job execution statistics.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resultStatistics?: ResultStatistics;\n  /** Instruct the system how to handle and charge the logs ingested to this table. */\n  plan?: TablePlanEnum;\n  /**\n   * The timestamp that table plan was last modified (UTC).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastPlanModifiedDate?: string;\n  /** Table schema. */\n  schema?: Schema;\n  /**\n   * Table's current provisioning state. If set to 'updating', indicates a resource lock due to ongoing operation, forbidding any update to the table until the ongoing operation is concluded.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStateEnum;\n  /**\n   * True - Value originates from workspace retention in days, False - Customer specific.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly retentionInDaysAsDefault?: boolean;\n  /**\n   * True - Value originates from retention in days, False - Customer specific.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalRetentionInDaysAsDefault?: boolean;\n}\n\n/** The top level Log Analytics cluster resource container. */\nexport interface Cluster extends TrackedResource {\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** The sku properties. */\n  sku?: ClusterSku;\n  /**\n   * The ID associated with the cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clusterId?: string;\n  /**\n   * The provisioning state of the cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ClusterEntityStatus;\n  /** Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true' */\n  isDoubleEncryptionEnabled?: boolean;\n  /** Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones. */\n  isAvailabilityZonesEnabled?: boolean;\n  /** The cluster's billing type. */\n  billingType?: BillingType;\n  /** The associated key properties. */\n  keyVaultProperties?: KeyVaultProperties;\n  /**\n   * The last time the cluster was updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedDate?: string;\n  /**\n   * The cluster creation time\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdDate?: string;\n  /** The list of Log Analytics workspaces associated with the cluster */\n  associatedWorkspaces?: AssociatedWorkspace[];\n  /** Additional properties for capacity reservation */\n  capacityReservationProperties?: CapacityReservationProperties;\n}\n\n/** The top level Workspace resource container. */\nexport interface Workspace extends TrackedResource {\n  /** The identity of the resource. */\n  identity?: Identity;\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemDataAutoGenerated;\n  /** The etag of the workspace. */\n  etag?: string;\n  /**\n   * The provisioning state of the workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: WorkspaceEntityStatus;\n  /**\n   * This is a read-only property. Represents the ID associated with the workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customerId?: string;\n  /** The SKU of the workspace. */\n  sku?: WorkspaceSku;\n  /** The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details. */\n  retentionInDays?: number;\n  /** The daily volume cap for ingestion. */\n  workspaceCapping?: WorkspaceCapping;\n  /**\n   * Workspace creation date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdDate?: string;\n  /**\n   * Workspace modification date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modifiedDate?: string;\n  /** The network access type for accessing Log Analytics ingestion. */\n  publicNetworkAccessForIngestion?: PublicNetworkAccessType;\n  /** The network access type for accessing Log Analytics query. */\n  publicNetworkAccessForQuery?: PublicNetworkAccessType;\n  /** Indicates whether customer managed storage is mandatory for query management. */\n  forceCmkForQuery?: boolean;\n  /**\n   * List of linked private link scope resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateLinkScopedResources?: PrivateLinkScopedResource[];\n  /** Workspace features. */\n  features?: WorkspaceFeatures;\n  /** The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}. */\n  defaultDataCollectionRuleResourceId?: string;\n}\n\n/** The top level Workspace resource container. */\nexport interface WorkspacePatch extends AzureEntityResource {\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** Resource tags. Optional. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * The provisioning state of the workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: WorkspaceEntityStatus;\n  /**\n   * This is a read-only property. Represents the ID associated with the workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customerId?: string;\n  /** The SKU of the workspace. */\n  sku?: WorkspaceSku;\n  /** The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details. */\n  retentionInDays?: number;\n  /** The daily volume cap for ingestion. */\n  workspaceCapping?: WorkspaceCapping;\n  /**\n   * Workspace creation date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdDate?: string;\n  /**\n   * Workspace modification date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modifiedDate?: string;\n  /** The network access type for accessing Log Analytics ingestion. */\n  publicNetworkAccessForIngestion?: PublicNetworkAccessType;\n  /** The network access type for accessing Log Analytics query. */\n  publicNetworkAccessForQuery?: PublicNetworkAccessType;\n  /** Indicates whether customer managed storage is mandatory for query management. */\n  forceCmkForQuery?: boolean;\n  /**\n   * List of linked private link scope resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateLinkScopedResources?: PrivateLinkScopedResource[];\n  /** Workspace features. */\n  features?: WorkspaceFeatures;\n  /** The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}. */\n  defaultDataCollectionRuleResourceId?: string;\n}\n\n/** Defines headers for WorkspacePurge_purge operation. */\nexport interface WorkspacePurgePurgeHeaders {\n  /** The location from which to request the operation status. */\n  xMsStatusLocation?: string;\n}\n\n/** Known values of {@link IdentityType} that the service accepts. */\nexport enum KnownIdentityType {\n  /** User */\n  User = \"user\",\n  /** Application */\n  Application = \"application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"managedIdentity\",\n  /** Key */\n  Key = \"key\",\n  /** SystemAssigned */\n  SystemAssigned = \"SystemAssigned\",\n  /** UserAssigned */\n  UserAssigned = \"UserAssigned\",\n  /** None */\n  None = \"None\"\n}\n\n/**\n * Defines values for IdentityType. \\\n * {@link KnownIdentityType} can be used interchangeably with IdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **user** \\\n * **application** \\\n * **managedIdentity** \\\n * **key** \\\n * **SystemAssigned** \\\n * **UserAssigned** \\\n * **None**\n */\nexport type IdentityType = string;\n\n/** Known values of {@link Type} that the service accepts. */\nexport enum KnownType {\n  /** StorageAccount */\n  StorageAccount = \"StorageAccount\",\n  /** EventHub */\n  EventHub = \"EventHub\"\n}\n\n/**\n * Defines values for Type. \\\n * {@link KnownType} can be used interchangeably with Type,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **StorageAccount** \\\n * **EventHub**\n */\nexport type Type = string;\n\n/** Known values of {@link DataSourceKind} that the service accepts. */\nexport enum KnownDataSourceKind {\n  /** WindowsEvent */\n  WindowsEvent = \"WindowsEvent\",\n  /** WindowsPerformanceCounter */\n  WindowsPerformanceCounter = \"WindowsPerformanceCounter\",\n  /** IISLogs */\n  IISLogs = \"IISLogs\",\n  /** LinuxSyslog */\n  LinuxSyslog = \"LinuxSyslog\",\n  /** LinuxSyslogCollection */\n  LinuxSyslogCollection = \"LinuxSyslogCollection\",\n  /** LinuxPerformanceObject */\n  LinuxPerformanceObject = \"LinuxPerformanceObject\",\n  /** LinuxPerformanceCollection */\n  LinuxPerformanceCollection = \"LinuxPerformanceCollection\",\n  /** CustomLog */\n  CustomLog = \"CustomLog\",\n  /** CustomLogCollection */\n  CustomLogCollection = \"CustomLogCollection\",\n  /** AzureAuditLog */\n  AzureAuditLog = \"AzureAuditLog\",\n  /** AzureActivityLog */\n  AzureActivityLog = \"AzureActivityLog\",\n  /** GenericDataSource */\n  GenericDataSource = \"GenericDataSource\",\n  /** ChangeTrackingCustomPath */\n  ChangeTrackingCustomPath = \"ChangeTrackingCustomPath\",\n  /** ChangeTrackingPath */\n  ChangeTrackingPath = \"ChangeTrackingPath\",\n  /** ChangeTrackingServices */\n  ChangeTrackingServices = \"ChangeTrackingServices\",\n  /** ChangeTrackingDataTypeConfiguration */\n  ChangeTrackingDataTypeConfiguration = \"ChangeTrackingDataTypeConfiguration\",\n  /** ChangeTrackingDefaultRegistry */\n  ChangeTrackingDefaultRegistry = \"ChangeTrackingDefaultRegistry\",\n  /** ChangeTrackingRegistry */\n  ChangeTrackingRegistry = \"ChangeTrackingRegistry\",\n  /** ChangeTrackingLinuxPath */\n  ChangeTrackingLinuxPath = \"ChangeTrackingLinuxPath\",\n  /** LinuxChangeTrackingPath */\n  LinuxChangeTrackingPath = \"LinuxChangeTrackingPath\",\n  /** ChangeTrackingContentLocation */\n  ChangeTrackingContentLocation = \"ChangeTrackingContentLocation\",\n  /** WindowsTelemetry */\n  WindowsTelemetry = \"WindowsTelemetry\",\n  /** Office365 */\n  Office365 = \"Office365\",\n  /** SecurityWindowsBaselineConfiguration */\n  SecurityWindowsBaselineConfiguration = \"SecurityWindowsBaselineConfiguration\",\n  /** SecurityCenterSecurityWindowsBaselineConfiguration */\n  SecurityCenterSecurityWindowsBaselineConfiguration = \"SecurityCenterSecurityWindowsBaselineConfiguration\",\n  /** SecurityEventCollectionConfiguration */\n  SecurityEventCollectionConfiguration = \"SecurityEventCollectionConfiguration\",\n  /** SecurityInsightsSecurityEventCollectionConfiguration */\n  SecurityInsightsSecurityEventCollectionConfiguration = \"SecurityInsightsSecurityEventCollectionConfiguration\",\n  /** ImportComputerGroup */\n  ImportComputerGroup = \"ImportComputerGroup\",\n  /** NetworkMonitoring */\n  NetworkMonitoring = \"NetworkMonitoring\",\n  /** Itsm */\n  Itsm = \"Itsm\",\n  /** DnsAnalytics */\n  DnsAnalytics = \"DnsAnalytics\",\n  /** ApplicationInsights */\n  ApplicationInsights = \"ApplicationInsights\",\n  /** SqlDataClassification */\n  SqlDataClassification = \"SqlDataClassification\"\n}\n\n/**\n * Defines values for DataSourceKind. \\\n * {@link KnownDataSourceKind} can be used interchangeably with DataSourceKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **WindowsEvent** \\\n * **WindowsPerformanceCounter** \\\n * **IISLogs** \\\n * **LinuxSyslog** \\\n * **LinuxSyslogCollection** \\\n * **LinuxPerformanceObject** \\\n * **LinuxPerformanceCollection** \\\n * **CustomLog** \\\n * **CustomLogCollection** \\\n * **AzureAuditLog** \\\n * **AzureActivityLog** \\\n * **GenericDataSource** \\\n * **ChangeTrackingCustomPath** \\\n * **ChangeTrackingPath** \\\n * **ChangeTrackingServices** \\\n * **ChangeTrackingDataTypeConfiguration** \\\n * **ChangeTrackingDefaultRegistry** \\\n * **ChangeTrackingRegistry** \\\n * **ChangeTrackingLinuxPath** \\\n * **LinuxChangeTrackingPath** \\\n * **ChangeTrackingContentLocation** \\\n * **WindowsTelemetry** \\\n * **Office365** \\\n * **SecurityWindowsBaselineConfiguration** \\\n * **SecurityCenterSecurityWindowsBaselineConfiguration** \\\n * **SecurityEventCollectionConfiguration** \\\n * **SecurityInsightsSecurityEventCollectionConfiguration** \\\n * **ImportComputerGroup** \\\n * **NetworkMonitoring** \\\n * **Itsm** \\\n * **DnsAnalytics** \\\n * **ApplicationInsights** \\\n * **SqlDataClassification**\n */\nexport type DataSourceKind = string;\n\n/** Known values of {@link LinkedServiceEntityStatus} that the service accepts. */\nexport enum KnownLinkedServiceEntityStatus {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** ProvisioningAccount */\n  ProvisioningAccount = \"ProvisioningAccount\",\n  /** Updating */\n  Updating = \"Updating\"\n}\n\n/**\n * Defines values for LinkedServiceEntityStatus. \\\n * {@link KnownLinkedServiceEntityStatus} can be used interchangeably with LinkedServiceEntityStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Deleting** \\\n * **ProvisioningAccount** \\\n * **Updating**\n */\nexport type LinkedServiceEntityStatus = string;\n\n/** Known values of {@link StorageInsightState} that the service accepts. */\nexport enum KnownStorageInsightState {\n  /** OK */\n  OK = \"OK\",\n  /** Error */\n  Error = \"ERROR\"\n}\n\n/**\n * Defines values for StorageInsightState. \\\n * {@link KnownStorageInsightState} can be used interchangeably with StorageInsightState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **OK** \\\n * **ERROR**\n */\nexport type StorageInsightState = string;\n\n/** Known values of {@link SkuNameEnum} that the service accepts. */\nexport enum KnownSkuNameEnum {\n  /** Free */\n  Free = \"Free\",\n  /** Standard */\n  Standard = \"Standard\",\n  /** Premium */\n  Premium = \"Premium\",\n  /** PerNode */\n  PerNode = \"PerNode\",\n  /** PerGB2018 */\n  PerGB2018 = \"PerGB2018\",\n  /** Standalone */\n  Standalone = \"Standalone\",\n  /** CapacityReservation */\n  CapacityReservation = \"CapacityReservation\"\n}\n\n/**\n * Defines values for SkuNameEnum. \\\n * {@link KnownSkuNameEnum} can be used interchangeably with SkuNameEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Free** \\\n * **Standard** \\\n * **Premium** \\\n * **PerNode** \\\n * **PerGB2018** \\\n * **Standalone** \\\n * **CapacityReservation**\n */\nexport type SkuNameEnum = string;\n\n/** Known values of {@link SearchSortEnum} that the service accepts. */\nexport enum KnownSearchSortEnum {\n  /** Asc */\n  Asc = \"asc\",\n  /** Desc */\n  Desc = \"desc\"\n}\n\n/**\n * Defines values for SearchSortEnum. \\\n * {@link KnownSearchSortEnum} can be used interchangeably with SearchSortEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **asc** \\\n * **desc**\n */\nexport type SearchSortEnum = string;\n\n/** Known values of {@link PurgeState} that the service accepts. */\nexport enum KnownPurgeState {\n  /** Pending */\n  Pending = \"pending\",\n  /** Completed */\n  Completed = \"completed\"\n}\n\n/**\n * Defines values for PurgeState. \\\n * {@link KnownPurgeState} can be used interchangeably with PurgeState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **pending** \\\n * **completed**\n */\nexport type PurgeState = string;\n\n/** Known values of {@link ClusterSkuNameEnum} that the service accepts. */\nexport enum KnownClusterSkuNameEnum {\n  /** CapacityReservation */\n  CapacityReservation = \"CapacityReservation\"\n}\n\n/**\n * Defines values for ClusterSkuNameEnum. \\\n * {@link KnownClusterSkuNameEnum} can be used interchangeably with ClusterSkuNameEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CapacityReservation**\n */\nexport type ClusterSkuNameEnum = string;\n\n/** Known values of {@link ClusterEntityStatus} that the service accepts. */\nexport enum KnownClusterEntityStatus {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** ProvisioningAccount */\n  ProvisioningAccount = \"ProvisioningAccount\",\n  /** Updating */\n  Updating = \"Updating\"\n}\n\n/**\n * Defines values for ClusterEntityStatus. \\\n * {@link KnownClusterEntityStatus} can be used interchangeably with ClusterEntityStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled** \\\n * **Deleting** \\\n * **ProvisioningAccount** \\\n * **Updating**\n */\nexport type ClusterEntityStatus = string;\n\n/** Known values of {@link BillingType} that the service accepts. */\nexport enum KnownBillingType {\n  /** Cluster */\n  Cluster = \"Cluster\",\n  /** Workspaces */\n  Workspaces = \"Workspaces\"\n}\n\n/**\n * Defines values for BillingType. \\\n * {@link KnownBillingType} can be used interchangeably with BillingType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Cluster** \\\n * **Workspaces**\n */\nexport type BillingType = string;\n\n/** Known values of {@link WorkspaceEntityStatus} that the service accepts. */\nexport enum KnownWorkspaceEntityStatus {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** ProvisioningAccount */\n  ProvisioningAccount = \"ProvisioningAccount\",\n  /** Updating */\n  Updating = \"Updating\"\n}\n\n/**\n * Defines values for WorkspaceEntityStatus. \\\n * {@link KnownWorkspaceEntityStatus} can be used interchangeably with WorkspaceEntityStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled** \\\n * **Deleting** \\\n * **ProvisioningAccount** \\\n * **Updating**\n */\nexport type WorkspaceEntityStatus = string;\n\n/** Known values of {@link WorkspaceSkuNameEnum} that the service accepts. */\nexport enum KnownWorkspaceSkuNameEnum {\n  /** Free */\n  Free = \"Free\",\n  /** Standard */\n  Standard = \"Standard\",\n  /** Premium */\n  Premium = \"Premium\",\n  /** PerNode */\n  PerNode = \"PerNode\",\n  /** PerGB2018 */\n  PerGB2018 = \"PerGB2018\",\n  /** Standalone */\n  Standalone = \"Standalone\",\n  /** CapacityReservation */\n  CapacityReservation = \"CapacityReservation\",\n  /** LACluster */\n  LACluster = \"LACluster\"\n}\n\n/**\n * Defines values for WorkspaceSkuNameEnum. \\\n * {@link KnownWorkspaceSkuNameEnum} can be used interchangeably with WorkspaceSkuNameEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Free** \\\n * **Standard** \\\n * **Premium** \\\n * **PerNode** \\\n * **PerGB2018** \\\n * **Standalone** \\\n * **CapacityReservation** \\\n * **LACluster**\n */\nexport type WorkspaceSkuNameEnum = string;\n\n/** Known values of {@link DataIngestionStatus} that the service accepts. */\nexport enum KnownDataIngestionStatus {\n  /** Ingestion enabled following daily cap quota reset, or subscription enablement. */\n  RespectQuota = \"RespectQuota\",\n  /** Ingestion started following service setting change. */\n  ForceOn = \"ForceOn\",\n  /** Ingestion stopped following service setting change. */\n  ForceOff = \"ForceOff\",\n  /** Reached daily cap quota, ingestion stopped. */\n  OverQuota = \"OverQuota\",\n  /** Ingestion stopped following suspended subscription. */\n  SubscriptionSuspended = \"SubscriptionSuspended\",\n  /** 80% of daily cap quota reached. */\n  ApproachingQuota = \"ApproachingQuota\"\n}\n\n/**\n * Defines values for DataIngestionStatus. \\\n * {@link KnownDataIngestionStatus} can be used interchangeably with DataIngestionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RespectQuota**: Ingestion enabled following daily cap quota reset, or subscription enablement. \\\n * **ForceOn**: Ingestion started following service setting change. \\\n * **ForceOff**: Ingestion stopped following service setting change. \\\n * **OverQuota**: Reached daily cap quota, ingestion stopped. \\\n * **SubscriptionSuspended**: Ingestion stopped following suspended subscription. \\\n * **ApproachingQuota**: 80% of daily cap quota reached.\n */\nexport type DataIngestionStatus = string;\n\n/** Known values of {@link PublicNetworkAccessType} that the service accepts. */\nexport enum KnownPublicNetworkAccessType {\n  /** Enables connectivity to Log Analytics through public DNS. */\n  Enabled = \"Enabled\",\n  /** Disables public connectivity to Log Analytics through public DNS. */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PublicNetworkAccessType. \\\n * {@link KnownPublicNetworkAccessType} can be used interchangeably with PublicNetworkAccessType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled**: Enables connectivity to Log Analytics through public DNS. \\\n * **Disabled**: Disables public connectivity to Log Analytics through public DNS.\n */\nexport type PublicNetworkAccessType = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link TablePlanEnum} that the service accepts. */\nexport enum KnownTablePlanEnum {\n  /** Logs  that are adjusted to support high volume low value verbose logs. */\n  Basic = \"Basic\",\n  /** Logs  that allow monitoring and analytics. */\n  Analytics = \"Analytics\"\n}\n\n/**\n * Defines values for TablePlanEnum. \\\n * {@link KnownTablePlanEnum} can be used interchangeably with TablePlanEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic**: Logs  that are adjusted to support high volume low value verbose logs. \\\n * **Analytics**: Logs  that allow monitoring and analytics.\n */\nexport type TablePlanEnum = string;\n\n/** Known values of {@link ColumnTypeEnum} that the service accepts. */\nexport enum KnownColumnTypeEnum {\n  /** String */\n  String = \"string\",\n  /** Int */\n  Int = \"int\",\n  /** Long */\n  Long = \"long\",\n  /** Real */\n  Real = \"real\",\n  /** Boolean */\n  Boolean = \"boolean\",\n  /** DateTime */\n  DateTime = \"dateTime\",\n  /** Guid */\n  Guid = \"guid\",\n  /** Dynamic */\n  Dynamic = \"dynamic\"\n}\n\n/**\n * Defines values for ColumnTypeEnum. \\\n * {@link KnownColumnTypeEnum} can be used interchangeably with ColumnTypeEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **string** \\\n * **int** \\\n * **long** \\\n * **real** \\\n * **boolean** \\\n * **dateTime** \\\n * **guid** \\\n * **dynamic**\n */\nexport type ColumnTypeEnum = string;\n\n/** Known values of {@link ColumnDataTypeHintEnum} that the service accepts. */\nexport enum KnownColumnDataTypeHintEnum {\n  /** A string that matches the pattern of a URI, for example, scheme://username:password@host:1234/this/is/a/path?k1=v1&k2=v2#fragment */\n  Uri = \"uri\",\n  /** A standard 128-bit GUID following the standard shape, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx */\n  Guid = \"guid\",\n  /** An Azure Resource Model (ARM) path: /subscriptions/{...}/resourceGroups/{...}/providers/Microsoft.{...}/{...}/{...}/{...}... */\n  ArmPath = \"armPath\",\n  /** A standard V4/V6 ip address following the standard shape, x.x.x.x/y:y:y:y:y:y:y:y */\n  Ip = \"ip\"\n}\n\n/**\n * Defines values for ColumnDataTypeHintEnum. \\\n * {@link KnownColumnDataTypeHintEnum} can be used interchangeably with ColumnDataTypeHintEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **uri**: A string that matches the pattern of a URI, for example, scheme:\\/\\/username:password@host:1234\\/this\\/is\\/a\\/path?k1=v1&k2=v2#fragment \\\n * **guid**: A standard 128-bit GUID following the standard shape, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \\\n * **armPath**: An Azure Resource Model (ARM) path: \\/subscriptions\\/{...}\\/resourceGroups\\/{...}\\/providers\\/Microsoft.{...}\\/{...}\\/{...}\\/{...}... \\\n * **ip**: A standard V4\\/V6 ip address following the standard shape, x.x.x.x\\/y:y:y:y:y:y:y:y\n */\nexport type ColumnDataTypeHintEnum = string;\n\n/** Known values of {@link SourceEnum} that the service accepts. */\nexport enum KnownSourceEnum {\n  /** Tables provisioned by the system, as collected via Diagnostic Settings, the Agents, or any other standard data collection means. */\n  Microsoft = \"microsoft\",\n  /** Tables created by the owner of the Workspace, and only found in this Workspace. */\n  Customer = \"customer\"\n}\n\n/**\n * Defines values for SourceEnum. \\\n * {@link KnownSourceEnum} can be used interchangeably with SourceEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **microsoft**: Tables provisioned by the system, as collected via Diagnostic Settings, the Agents, or any other standard data collection means. \\\n * **customer**: Tables created by the owner of the Workspace, and only found in this Workspace.\n */\nexport type SourceEnum = string;\n\n/** Known values of {@link TableTypeEnum} that the service accepts. */\nexport enum KnownTableTypeEnum {\n  /** Standard data collected by Azure Monitor. */\n  Microsoft = \"Microsoft\",\n  /** Custom log table. */\n  CustomLog = \"CustomLog\",\n  /** Restored data. */\n  RestoredLogs = \"RestoredLogs\",\n  /** Data collected by a search job. */\n  SearchResults = \"SearchResults\"\n}\n\n/**\n * Defines values for TableTypeEnum. \\\n * {@link KnownTableTypeEnum} can be used interchangeably with TableTypeEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Microsoft**: Standard data collected by Azure Monitor. \\\n * **CustomLog**: Custom log table. \\\n * **RestoredLogs**: Restored data. \\\n * **SearchResults**: Data collected by a search job.\n */\nexport type TableTypeEnum = string;\n\n/** Known values of {@link TableSubTypeEnum} that the service accepts. */\nexport enum KnownTableSubTypeEnum {\n  /** The default subtype with which built-in tables are created. */\n  Any = \"Any\",\n  /** Indicates a table created through the Data Collector API or with the custom logs feature of the MMA agent, or any table against which Custom Fields were created. */\n  Classic = \"Classic\",\n  /** A table eligible to have data sent into it via any of the means supported by Data Collection Rules: the Data Collection Endpoint API, ingestion-time transformations, or any other mechanism provided by Data Collection Rules */\n  DataCollectionRuleBased = \"DataCollectionRuleBased\"\n}\n\n/**\n * Defines values for TableSubTypeEnum. \\\n * {@link KnownTableSubTypeEnum} can be used interchangeably with TableSubTypeEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any**: The default subtype with which built-in tables are created. \\\n * **Classic**: Indicates a table created through the Data Collector API or with the custom logs feature of the MMA agent, or any table against which Custom Fields were created. \\\n * **DataCollectionRuleBased**: A table eligible to have data sent into it via any of the means supported by Data Collection Rules: the Data Collection Endpoint API, ingestion-time transformations, or any other mechanism provided by Data Collection Rules\n */\nexport type TableSubTypeEnum = string;\n\n/** Known values of {@link ProvisioningStateEnum} that the service accepts. */\nexport enum KnownProvisioningStateEnum {\n  /** Table schema is still being built and updated, table is currently locked for any changes till the procedure is done. */\n  Updating = \"Updating\",\n  /** Table schema is stable and without changes, table data is being updated. */\n  InProgress = \"InProgress\",\n  /** Table state is stable and without changes, table is unlocked and open for new updates. */\n  Succeeded = \"Succeeded\"\n}\n\n/**\n * Defines values for ProvisioningStateEnum. \\\n * {@link KnownProvisioningStateEnum} can be used interchangeably with ProvisioningStateEnum,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Updating**: Table schema is still being built and updated, table is currently locked for any changes till the procedure is done. \\\n * **InProgress**: Table schema is stable and without changes, table data is being updated. \\\n * **Succeeded**: Table state is stable and without changes, table is unlocked and open for new updates.\n */\nexport type ProvisioningStateEnum = string;\n/** Defines values for DataSourceType. */\nexport type DataSourceType =\n  | \"CustomLogs\"\n  | \"AzureWatson\"\n  | \"Query\"\n  | \"Ingestion\"\n  | \"Alerts\";\n/** Defines values for Capacity. */\nexport type Capacity = 500 | 1000 | 2000 | 5000;\n/** Defines values for CapacityReservationLevel. */\nexport type CapacityReservationLevel =\n  | 100\n  | 200\n  | 300\n  | 400\n  | 500\n  | 1000\n  | 2000\n  | 5000;\n\n/** Optional parameters. */\nexport interface QueryPacksListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type QueryPacksListResponse = LogAnalyticsQueryPackListResult;\n\n/** Optional parameters. */\nexport interface QueryPacksListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type QueryPacksListByResourceGroupResponse = LogAnalyticsQueryPackListResult;\n\n/** Optional parameters. */\nexport interface QueryPacksCreateOrUpdateWithoutNameOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateWithoutName operation. */\nexport type QueryPacksCreateOrUpdateWithoutNameResponse = LogAnalyticsQueryPack;\n\n/** Optional parameters. */\nexport interface QueryPacksDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface QueryPacksGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type QueryPacksGetResponse = LogAnalyticsQueryPack;\n\n/** Optional parameters. */\nexport interface QueryPacksCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type QueryPacksCreateOrUpdateResponse = LogAnalyticsQueryPack;\n\n/** Optional parameters. */\nexport interface QueryPacksUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type QueryPacksUpdateTagsResponse = LogAnalyticsQueryPack;\n\n/** Optional parameters. */\nexport interface QueryPacksListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type QueryPacksListNextResponse = LogAnalyticsQueryPackListResult;\n\n/** Optional parameters. */\nexport interface QueryPacksListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type QueryPacksListByResourceGroupNextResponse = LogAnalyticsQueryPackListResult;\n\n/** Optional parameters. */\nexport interface QueriesListOptionalParams extends coreClient.OperationOptions {\n  /** Maximum items returned in page. */\n  top?: number;\n  /** Flag indicating whether or not to return the body of each applicable query. If false, only return the query information. */\n  includeBody?: boolean;\n  /** Base64 encoded token used to fetch the next page of items. Default is null. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type QueriesListResponse = LogAnalyticsQueryPackQueryListResult;\n\n/** Optional parameters. */\nexport interface QueriesSearchOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum items returned in page. */\n  top?: number;\n  /** Flag indicating whether or not to return the body of each applicable query. If false, only return the query information. */\n  includeBody?: boolean;\n  /** Base64 encoded token used to fetch the next page of items. Default is null. */\n  skipToken?: string;\n}\n\n/** Contains response data for the search operation. */\nexport type QueriesSearchResponse = LogAnalyticsQueryPackQueryListResult;\n\n/** Optional parameters. */\nexport interface QueriesGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type QueriesGetResponse = LogAnalyticsQueryPackQuery;\n\n/** Optional parameters. */\nexport interface QueriesPutOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the put operation. */\nexport type QueriesPutResponse = LogAnalyticsQueryPackQuery;\n\n/** Optional parameters. */\nexport interface QueriesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type QueriesUpdateResponse = LogAnalyticsQueryPackQuery;\n\n/** Optional parameters. */\nexport interface QueriesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface QueriesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type QueriesListNextResponse = LogAnalyticsQueryPackQueryListResult;\n\n/** Optional parameters. */\nexport interface QueriesSearchNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the searchNext operation. */\nexport type QueriesSearchNextResponse = LogAnalyticsQueryPackQueryListResult;\n\n/** Optional parameters. */\nexport interface DataExportsListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type DataExportsListByWorkspaceResponse = DataExportListResult;\n\n/** Optional parameters. */\nexport interface DataExportsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DataExportsCreateOrUpdateResponse = DataExport;\n\n/** Optional parameters. */\nexport interface DataExportsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DataExportsGetResponse = DataExport;\n\n/** Optional parameters. */\nexport interface DataExportsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DataSourcesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DataSourcesCreateOrUpdateResponse = DataSource;\n\n/** Optional parameters. */\nexport interface DataSourcesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DataSourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DataSourcesGetResponse = DataSource;\n\n/** Optional parameters. */\nexport interface DataSourcesListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Starting point of the collection of data source instances. */\n  skiptoken?: string;\n}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type DataSourcesListByWorkspaceResponse = DataSourceListResult;\n\n/** Optional parameters. */\nexport interface DataSourcesListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type DataSourcesListByWorkspaceNextResponse = DataSourceListResult;\n\n/** Optional parameters. */\nexport interface IntelligencePacksDisableOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface IntelligencePacksEnableOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface IntelligencePacksListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type IntelligencePacksListResponse = IntelligencePack[];\n\n/** Optional parameters. */\nexport interface LinkedServicesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LinkedServicesCreateOrUpdateResponse = LinkedService;\n\n/** Optional parameters. */\nexport interface LinkedServicesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type LinkedServicesDeleteResponse = LinkedService;\n\n/** Optional parameters. */\nexport interface LinkedServicesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LinkedServicesGetResponse = LinkedService;\n\n/** Optional parameters. */\nexport interface LinkedServicesListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type LinkedServicesListByWorkspaceResponse = LinkedServiceListResult;\n\n/** Optional parameters. */\nexport interface LinkedStorageAccountsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LinkedStorageAccountsCreateOrUpdateResponse = LinkedStorageAccountsResource;\n\n/** Optional parameters. */\nexport interface LinkedStorageAccountsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface LinkedStorageAccountsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LinkedStorageAccountsGetResponse = LinkedStorageAccountsResource;\n\n/** Optional parameters. */\nexport interface LinkedStorageAccountsListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type LinkedStorageAccountsListByWorkspaceResponse = LinkedStorageAccountsListResult;\n\n/** Optional parameters. */\nexport interface ManagementGroupsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ManagementGroupsListResponse = WorkspaceListManagementGroupsResult;\n\n/** Optional parameters. */\nexport interface OperationStatusesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type OperationStatusesGetResponse = OperationStatus;\n\n/** Optional parameters. */\nexport interface SharedKeysGetSharedKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSharedKeys operation. */\nexport type SharedKeysGetSharedKeysResponse = SharedKeys;\n\n/** Optional parameters. */\nexport interface SharedKeysRegenerateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regenerate operation. */\nexport type SharedKeysRegenerateResponse = SharedKeys;\n\n/** Optional parameters. */\nexport interface UsagesListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type UsagesListResponse = WorkspaceListUsagesResult;\n\n/** Optional parameters. */\nexport interface StorageInsightConfigsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type StorageInsightConfigsCreateOrUpdateResponse = StorageInsight;\n\n/** Optional parameters. */\nexport interface StorageInsightConfigsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type StorageInsightConfigsGetResponse = StorageInsight;\n\n/** Optional parameters. */\nexport interface StorageInsightConfigsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface StorageInsightConfigsListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type StorageInsightConfigsListByWorkspaceResponse = StorageInsightListResult;\n\n/** Optional parameters. */\nexport interface StorageInsightConfigsListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type StorageInsightConfigsListByWorkspaceNextResponse = StorageInsightListResult;\n\n/** Optional parameters. */\nexport interface SavedSearchesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SavedSearchesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SavedSearchesCreateOrUpdateResponse = SavedSearch;\n\n/** Optional parameters. */\nexport interface SavedSearchesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SavedSearchesGetResponse = SavedSearch;\n\n/** Optional parameters. */\nexport interface SavedSearchesListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type SavedSearchesListByWorkspaceResponse = SavedSearchesListResult;\n\n/** Optional parameters. */\nexport interface AvailableServiceTiersListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type AvailableServiceTiersListByWorkspaceResponse = AvailableServiceTier[];\n\n/** Optional parameters. */\nexport interface GatewaysDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SchemaGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SchemaGetResponse = SearchGetSchemaResponse;\n\n/** Optional parameters. */\nexport interface WorkspacePurgePurgeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the purge operation. */\nexport type WorkspacePurgePurgeResponse = WorkspacePurgePurgeHeaders &\n  WorkspacePurgeResponse;\n\n/** Optional parameters. */\nexport interface WorkspacePurgeGetPurgeStatusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getPurgeStatus operation. */\nexport type WorkspacePurgeGetPurgeStatusResponse = WorkspacePurgeStatusResponse;\n\n/** Optional parameters. */\nexport interface ClustersListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ClustersListByResourceGroupResponse = ClusterListResult;\n\n/** Optional parameters. */\nexport interface ClustersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ClustersListResponse = ClusterListResult;\n\n/** Optional parameters. */\nexport interface ClustersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ClustersCreateOrUpdateResponse = Cluster;\n\n/** Optional parameters. */\nexport interface ClustersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ClustersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ClustersGetResponse = Cluster;\n\n/** Optional parameters. */\nexport interface ClustersUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ClustersUpdateResponse = Cluster;\n\n/** Optional parameters. */\nexport interface ClustersListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ClustersListByResourceGroupNextResponse = ClusterListResult;\n\n/** Optional parameters. */\nexport interface ClustersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ClustersListNextResponse = ClusterListResult;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspacesListResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type WorkspacesListByResourceGroupResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspacesCreateOrUpdateResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the workspace without the recovery option. A workspace that was deleted with this flag cannot be recovered. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkspacesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspacesGetResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type WorkspacesUpdateResponse = Workspace;\n\n/** Optional parameters. */\nexport interface DeletedWorkspacesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DeletedWorkspacesListResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface DeletedWorkspacesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DeletedWorkspacesListByResourceGroupResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface TablesListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type TablesListByWorkspaceResponse = TablesListResult;\n\n/** Optional parameters. */\nexport interface TablesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type TablesCreateOrUpdateResponse = Table;\n\n/** Optional parameters. */\nexport interface TablesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type TablesUpdateResponse = Table;\n\n/** Optional parameters. */\nexport interface TablesGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type TablesGetResponse = Table;\n\n/** Optional parameters. */\nexport interface TablesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface TablesMigrateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TablesCancelSearchOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface OperationalInsightsManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const LogAnalyticsQueryPackListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsQueryPackListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LogAnalyticsQueryPack\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryPacksResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryPacksResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const TagsResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsResource\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsQueryPackQueryListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsQueryPackQueryListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LogAnalyticsQueryPackQuery\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsQueryPackQueryPropertiesRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsQueryPackQueryPropertiesRelated\",\n    modelProperties: {\n      categories: {\n        serializedName: \"categories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureResourceProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsQueryPackQuerySearchProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsQueryPackQuerySearchProperties\",\n    modelProperties: {\n      related: {\n        serializedName: \"related\",\n        type: {\n          name: \"Composite\",\n          className: \"LogAnalyticsQueryPackQuerySearchPropertiesRelated\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Sequence\", element: { type: { name: \"String\" } } }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsQueryPackQuerySearchPropertiesRelated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsQueryPackQuerySearchPropertiesRelated\",\n    modelProperties: {\n      categories: {\n        serializedName: \"categories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataExportListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataExportListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataExport\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataSourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataSourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataSource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntelligencePack: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntelligencePack\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinkedServiceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinkedServiceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LinkedService\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LinkedStorageAccountsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinkedStorageAccountsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LinkedStorageAccountsResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceListManagementGroupsResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceListManagementGroupsResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagementGroup\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementGroup\",\n    modelProperties: {\n      serverCount: {\n        serializedName: \"properties.serverCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isGateway: {\n        serializedName: \"properties.isGateway\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      name: {\n        serializedName: \"properties.name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"properties.id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      created: {\n        serializedName: \"properties.created\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      dataReceived: {\n        serializedName: \"properties.dataReceived\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"properties.sku\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationStatus\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedKeys: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedKeys\",\n    modelProperties: {\n      primarySharedKey: {\n        serializedName: \"primarySharedKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondarySharedKey: {\n        serializedName: \"secondarySharedKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceListUsagesResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceListUsagesResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UsageMetric\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UsageMetric: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsageMetric\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"MetricName\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nextResetTime: {\n        serializedName: \"nextResetTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      quotaPeriod: {\n        serializedName: \"quotaPeriod\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccount\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageInsightStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageInsightStatus\",\n    modelProperties: {\n      state: {\n        serializedName: \"state\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageInsightListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageInsightListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageInsight\"\n            }\n          }\n        }\n      },\n      odataNextLink: {\n        serializedName: \"@odata\\\\.nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Tag: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tag\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SavedSearchesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SavedSearchesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SavedSearch\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableServiceTier: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailableServiceTier\",\n    modelProperties: {\n      serviceTier: {\n        serializedName: \"serviceTier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      minimumRetention: {\n        serializedName: \"minimumRetention\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximumRetention: {\n        serializedName: \"maximumRetention\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultRetention: {\n        serializedName: \"defaultRetention\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      capacityReservationLevel: {\n        serializedName: \"capacityReservationLevel\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastSkuUpdate: {\n        serializedName: \"lastSkuUpdate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SearchGetSchemaResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SearchGetSchemaResponse\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Composite\",\n          className: \"SearchMetadata\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SearchSchemaValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SearchMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SearchMetadata\",\n    modelProperties: {\n      searchId: {\n        serializedName: \"requestId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      total: {\n        serializedName: \"total\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      top: {\n        serializedName: \"top\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      coreSummaries: {\n        serializedName: \"coreSummaries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CoreSummary\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastUpdated: {\n        serializedName: \"lastUpdated\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      eTag: {\n        serializedName: \"eTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sort: {\n        serializedName: \"sort\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SearchSort\"\n            }\n          }\n        }\n      },\n      requestTime: {\n        serializedName: \"requestTime\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      aggregatedValueField: {\n        serializedName: \"aggregatedValueField\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregatedGroupingFields: {\n        serializedName: \"aggregatedGroupingFields\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sum: {\n        serializedName: \"sum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      max: {\n        serializedName: \"max\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      schema: {\n        serializedName: \"schema\",\n        type: {\n          name: \"Composite\",\n          className: \"SearchMetadataSchema\"\n        }\n      }\n    }\n  }\n};\n\nexport const CoreSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CoreSummary\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfDocuments: {\n        serializedName: \"numberOfDocuments\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SearchSort: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SearchSort\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      order: {\n        serializedName: \"order\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SearchMetadataSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SearchMetadataSchema\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SearchSchemaValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SearchSchemaValue\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      indexed: {\n        serializedName: \"indexed\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      stored: {\n        serializedName: \"stored\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      facet: {\n        serializedName: \"facet\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      ownerType: {\n        serializedName: \"ownerType\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspacePurgeBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspacePurgeBody\",\n    modelProperties: {\n      table: {\n        serializedName: \"table\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      filters: {\n        serializedName: \"filters\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WorkspacePurgeBodyFilters\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspacePurgeBodyFilters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspacePurgeBodyFilters\",\n    modelProperties: {\n      column: {\n        serializedName: \"column\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"any\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspacePurgeResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspacePurgeResponse\",\n    modelProperties: {\n      operationId: {\n        serializedName: \"operationId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspacePurgeStatusResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspacePurgeStatusResponse\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterListResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Cluster\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Identity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"UserIdentityProperties\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserIdentityProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserIdentityProperties\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterSku\",\n    modelProperties: {\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [500, 1000, 2000, 5000]\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultProperties\",\n    modelProperties: {\n      keyVaultUri: {\n        serializedName: \"keyVaultUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyName: {\n        serializedName: \"keyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVersion: {\n        serializedName: \"keyVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyRsaSize: {\n        serializedName: \"keyRsaSize\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AssociatedWorkspace: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AssociatedWorkspace\",\n    modelProperties: {\n      workspaceId: {\n        serializedName: \"workspaceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      workspaceName: {\n        serializedName: \"workspaceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      associateDate: {\n        serializedName: \"associateDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationProperties\",\n    modelProperties: {\n      lastSkuUpdate: {\n        serializedName: \"lastSkuUpdate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      minCapacity: {\n        serializedName: \"minCapacity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterPatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterPatch\",\n    modelProperties: {\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"ClusterSku\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      keyVaultProperties: {\n        serializedName: \"properties.keyVaultProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultProperties\"\n        }\n      },\n      billingType: {\n        serializedName: \"properties.billingType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Workspace\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      capacityReservationLevel: {\n        serializedName: \"capacityReservationLevel\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [100, 200, 300, 400, 500, 1000, 2000, 5000]\n        }\n      },\n      lastSkuUpdate: {\n        serializedName: \"lastSkuUpdate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceCapping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceCapping\",\n    modelProperties: {\n      dailyQuotaGb: {\n        serializedName: \"dailyQuotaGb\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      quotaNextResetTime: {\n        serializedName: \"quotaNextResetTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataIngestionStatus: {\n        serializedName: \"dataIngestionStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkScopedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkScopedResource\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scopeId: {\n        serializedName: \"scopeId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceFeatures: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceFeatures\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      enableDataExport: {\n        serializedName: \"enableDataExport\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      immediatePurgeDataOn30Days: {\n        serializedName: \"immediatePurgeDataOn30Days\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableLogAccessUsingOnlyResourcePermissions: {\n        serializedName: \"enableLogAccessUsingOnlyResourcePermissions\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      clusterResourceId: {\n        serializedName: \"clusterResourceId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      disableLocalAuth: {\n        serializedName: \"disableLocalAuth\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemDataAutoGenerated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemDataAutoGenerated\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const TablesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TablesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Table\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SearchResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SearchResults\",\n    modelProperties: {\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      startSearchTime: {\n        serializedName: \"startSearchTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endSearchTime: {\n        serializedName: \"endSearchTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceTable: {\n        serializedName: \"sourceTable\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      azureAsyncOperationId: {\n        serializedName: \"azureAsyncOperationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestoredLogs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestoredLogs\",\n    modelProperties: {\n      startRestoreTime: {\n        serializedName: \"startRestoreTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endRestoreTime: {\n        serializedName: \"endRestoreTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceTable: {\n        serializedName: \"sourceTable\",\n        type: {\n          name: \"String\"\n        }\n      },\n      azureAsyncOperationId: {\n        serializedName: \"azureAsyncOperationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResultStatistics: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResultStatistics\",\n    modelProperties: {\n      progress: {\n        constraints: {\n          MultipleOf: 0.01\n        },\n        serializedName: \"progress\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      ingestedRecords: {\n        serializedName: \"ingestedRecords\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      scannedGb: {\n        constraints: {\n          MultipleOf: 0.01\n        },\n        serializedName: \"scannedGb\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Schema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Schema\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      columns: {\n        serializedName: \"columns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Column\"\n            }\n          }\n        }\n      },\n      standardColumns: {\n        serializedName: \"standardColumns\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Column\"\n            }\n          }\n        }\n      },\n      categories: {\n        serializedName: \"categories\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      labels: {\n        serializedName: \"labels\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tableType: {\n        serializedName: \"tableType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tableSubType: {\n        serializedName: \"tableSubType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Column: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Column\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataTypeHint: {\n        serializedName: \"dataTypeHint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDefaultDisplay: {\n        serializedName: \"isDefaultDisplay\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isHidden: {\n        serializedName: \"isHidden\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataSourceFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataSourceFilter\",\n    modelProperties: {\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsQueryPack: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsQueryPack\",\n    modelProperties: {\n      ...QueryPacksResource.type.modelProperties,\n      queryPackId: {\n        serializedName: \"properties.queryPackId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      timeModified: {\n        serializedName: \"properties.timeModified\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsQueryPackQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsQueryPackQuery\",\n    modelProperties: {\n      ...AzureResourceProperties.type.modelProperties,\n      idPropertiesId: {\n        serializedName: \"properties.id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      timeModified: {\n        serializedName: \"properties.timeModified\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      author: {\n        serializedName: \"properties.author\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      body: {\n        serializedName: \"properties.body\",\n        type: {\n          name: \"String\"\n        }\n      },\n      related: {\n        serializedName: \"properties.related\",\n        type: {\n          name: \"Composite\",\n          className: \"LogAnalyticsQueryPackQueryPropertiesRelated\"\n        }\n      },\n      tags: {\n        serializedName: \"properties.tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Sequence\", element: { type: { name: \"String\" } } }\n          }\n        }\n      },\n      properties: {\n        serializedName: \"properties.properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureEntityResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureEntityResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataExport: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataExport\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      dataExportId: {\n        serializedName: \"properties.dataExportId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableNames: {\n        serializedName: \"properties.tableNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      enable: {\n        serializedName: \"properties.enable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      createdDate: {\n        serializedName: \"properties.createdDate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedDate: {\n        serializedName: \"properties.lastModifiedDate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"properties.destination.resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typePropertiesDestinationType: {\n        serializedName: \"properties.destination.type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHubName: {\n        serializedName: \"properties.destination.metaData.eventHubName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataSource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const LinkedService: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinkedService\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      resourceId: {\n        serializedName: \"properties.resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      writeAccessResourceId: {\n        serializedName: \"properties.writeAccessResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinkedStorageAccountsResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinkedStorageAccountsResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      dataSourceType: {\n        serializedName: \"properties.dataSourceType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"CustomLogs\",\n            \"AzureWatson\",\n            \"Query\",\n            \"Ingestion\",\n            \"Alerts\"\n          ]\n        }\n      },\n      storageAccountIds: {\n        serializedName: \"properties.storageAccountIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StorageInsight: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageInsight\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      eTag: {\n        serializedName: \"eTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      containers: {\n        serializedName: \"properties.containers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tables: {\n        serializedName: \"properties.tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      storageAccount: {\n        serializedName: \"properties.storageAccount\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageAccount\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageInsightStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const SavedSearch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SavedSearch\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"properties.category\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"properties.query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      functionAlias: {\n        serializedName: \"properties.functionAlias\",\n        type: {\n          name: \"String\"\n        }\n      },\n      functionParameters: {\n        serializedName: \"properties.functionParameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tags: {\n        serializedName: \"properties.tags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Tag\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Table: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Table\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemDataAutoGenerated\"\n        }\n      },\n      retentionInDays: {\n        constraints: {\n          InclusiveMaximum: 730,\n          InclusiveMinimum: 4\n        },\n        serializedName: \"properties.retentionInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalRetentionInDays: {\n        constraints: {\n          InclusiveMaximum: 2555,\n          InclusiveMinimum: 4\n        },\n        serializedName: \"properties.totalRetentionInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      archiveRetentionInDays: {\n        serializedName: \"properties.archiveRetentionInDays\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      searchResults: {\n        serializedName: \"properties.searchResults\",\n        type: {\n          name: \"Composite\",\n          className: \"SearchResults\"\n        }\n      },\n      restoredLogs: {\n        serializedName: \"properties.restoredLogs\",\n        type: {\n          name: \"Composite\",\n          className: \"RestoredLogs\"\n        }\n      },\n      resultStatistics: {\n        serializedName: \"properties.resultStatistics\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultStatistics\"\n        }\n      },\n      plan: {\n        serializedName: \"properties.plan\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastPlanModifiedDate: {\n        serializedName: \"properties.lastPlanModifiedDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schema: {\n        serializedName: \"properties.schema\",\n        type: {\n          name: \"Composite\",\n          className: \"Schema\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionInDaysAsDefault: {\n        serializedName: \"properties.retentionInDaysAsDefault\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      totalRetentionInDaysAsDefault: {\n        serializedName: \"properties.totalRetentionInDaysAsDefault\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Cluster: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Cluster\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"ClusterSku\"\n        }\n      },\n      clusterId: {\n        serializedName: \"properties.clusterId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDoubleEncryptionEnabled: {\n        serializedName: \"properties.isDoubleEncryptionEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isAvailabilityZonesEnabled: {\n        serializedName: \"properties.isAvailabilityZonesEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      billingType: {\n        serializedName: \"properties.billingType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVaultProperties: {\n        serializedName: \"properties.keyVaultProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultProperties\"\n        }\n      },\n      lastModifiedDate: {\n        serializedName: \"properties.lastModifiedDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdDate: {\n        serializedName: \"properties.createdDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      associatedWorkspaces: {\n        serializedName: \"properties.associatedWorkspaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AssociatedWorkspace\"\n            }\n          }\n        }\n      },\n      capacityReservationProperties: {\n        serializedName: \"properties.capacityReservationProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"CapacityReservationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Workspace: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Workspace\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemDataAutoGenerated\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerId: {\n        serializedName: \"properties.customerId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"properties.sku\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceSku\"\n        }\n      },\n      retentionInDays: {\n        serializedName: \"properties.retentionInDays\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      workspaceCapping: {\n        serializedName: \"properties.workspaceCapping\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceCapping\"\n        }\n      },\n      createdDate: {\n        serializedName: \"properties.createdDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modifiedDate: {\n        serializedName: \"properties.modifiedDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccessForIngestion: {\n        defaultValue: \"Enabled\",\n        serializedName: \"properties.publicNetworkAccessForIngestion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccessForQuery: {\n        defaultValue: \"Enabled\",\n        serializedName: \"properties.publicNetworkAccessForQuery\",\n        type: {\n          name: \"String\"\n        }\n      },\n      forceCmkForQuery: {\n        serializedName: \"properties.forceCmkForQuery\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      privateLinkScopedResources: {\n        serializedName: \"properties.privateLinkScopedResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkScopedResource\"\n            }\n          }\n        }\n      },\n      features: {\n        serializedName: \"properties.features\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceFeatures\"\n        }\n      },\n      defaultDataCollectionRuleResourceId: {\n        serializedName: \"properties.defaultDataCollectionRuleResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspacePatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspacePatch\",\n    modelProperties: {\n      ...AzureEntityResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerId: {\n        serializedName: \"properties.customerId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"properties.sku\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceSku\"\n        }\n      },\n      retentionInDays: {\n        serializedName: \"properties.retentionInDays\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      workspaceCapping: {\n        serializedName: \"properties.workspaceCapping\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceCapping\"\n        }\n      },\n      createdDate: {\n        serializedName: \"properties.createdDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modifiedDate: {\n        serializedName: \"properties.modifiedDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccessForIngestion: {\n        defaultValue: \"Enabled\",\n        serializedName: \"properties.publicNetworkAccessForIngestion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccessForQuery: {\n        defaultValue: \"Enabled\",\n        serializedName: \"properties.publicNetworkAccessForQuery\",\n        type: {\n          name: \"String\"\n        }\n      },\n      forceCmkForQuery: {\n        serializedName: \"properties.forceCmkForQuery\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      privateLinkScopedResources: {\n        serializedName: \"properties.privateLinkScopedResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkScopedResource\"\n            }\n          }\n        }\n      },\n      features: {\n        serializedName: \"properties.features\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceFeatures\"\n        }\n      },\n      defaultDataCollectionRuleResourceId: {\n        serializedName: \"properties.defaultDataCollectionRuleResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspacePurgePurgeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspacePurgePurgeHeaders\",\n    modelProperties: {\n      xMsStatusLocation: {\n        serializedName: \"x-ms-status-location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  LogAnalyticsQueryPack as LogAnalyticsQueryPackMapper,\n  TagsResource as TagsResourceMapper,\n  LogAnalyticsQueryPackQuerySearchProperties as LogAnalyticsQueryPackQuerySearchPropertiesMapper,\n  LogAnalyticsQueryPackQuery as LogAnalyticsQueryPackQueryMapper,\n  DataExport as DataExportMapper,\n  DataSource as DataSourceMapper,\n  LinkedService as LinkedServiceMapper,\n  LinkedStorageAccountsResource as LinkedStorageAccountsResourceMapper,\n  StorageInsight as StorageInsightMapper,\n  SavedSearch as SavedSearchMapper,\n  WorkspacePurgeBody as WorkspacePurgeBodyMapper,\n  Cluster as ClusterMapper,\n  ClusterPatch as ClusterPatchMapper,\n  Workspace as WorkspaceMapper,\n  WorkspacePatch as WorkspacePatchMapper,\n  Table as TableMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2019-09-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const logAnalyticsQueryPackPayload: OperationParameter = {\n  parameterPath: \"logAnalyticsQueryPackPayload\",\n  mapper: LogAnalyticsQueryPackMapper\n};\n\nexport const queryPackName: OperationURLParameter = {\n  parameterPath: \"queryPackName\",\n  mapper: {\n    serializedName: \"queryPackName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const queryPackTags: OperationParameter = {\n  parameterPath: \"queryPackTags\",\n  mapper: TagsResourceMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const includeBody: OperationQueryParameter = {\n  parameterPath: [\"options\", \"includeBody\"],\n  mapper: {\n    serializedName: \"includeBody\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const skipToken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skipToken\"],\n  mapper: {\n    serializedName: \"$skipToken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const querySearchProperties: OperationParameter = {\n  parameterPath: \"querySearchProperties\",\n  mapper: LogAnalyticsQueryPackQuerySearchPropertiesMapper\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const queryPayload: OperationParameter = {\n  parameterPath: \"queryPayload\",\n  mapper: LogAnalyticsQueryPackQueryMapper\n};\n\nexport const workspaceName: OperationURLParameter = {\n  parameterPath: \"workspaceName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9]$\"),\n      MaxLength: 63,\n      MinLength: 4\n    },\n    serializedName: \"workspaceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-08-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataExportMapper\n};\n\nexport const dataExportName: OperationURLParameter = {\n  parameterPath: \"dataExportName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z][A-Za-z0-9-]+[A-Za-z0-9]$\"),\n      MaxLength: 63,\n      MinLength: 4\n    },\n    serializedName: \"dataExportName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const dataExportName1: OperationURLParameter = {\n  parameterPath: \"dataExportName\",\n  mapper: {\n    serializedName: \"dataExportName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataSourceMapper\n};\n\nexport const dataSourceName: OperationURLParameter = {\n  parameterPath: \"dataSourceName\",\n  mapper: {\n    serializedName: \"dataSourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: \"filter\",\n  mapper: {\n    serializedName: \"$filter\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skiptoken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skiptoken\"],\n  mapper: {\n    serializedName: \"$skiptoken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const intelligencePackName: OperationURLParameter = {\n  parameterPath: \"intelligencePackName\",\n  mapper: {\n    serializedName: \"intelligencePackName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: LinkedServiceMapper\n};\n\nexport const linkedServiceName: OperationURLParameter = {\n  parameterPath: \"linkedServiceName\",\n  mapper: {\n    serializedName: \"linkedServiceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: LinkedStorageAccountsResourceMapper\n};\n\nexport const dataSourceType: OperationURLParameter = {\n  parameterPath: \"dataSourceType\",\n  mapper: {\n    serializedName: \"dataSourceType\",\n    required: true,\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"CustomLogs\",\n        \"AzureWatson\",\n        \"Query\",\n        \"Ingestion\",\n        \"Alerts\"\n      ]\n    }\n  }\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const asyncOperationId: OperationURLParameter = {\n  parameterPath: \"asyncOperationId\",\n  mapper: {\n    serializedName: \"asyncOperationId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StorageInsightMapper\n};\n\nexport const storageInsightName: OperationURLParameter = {\n  parameterPath: \"storageInsightName\",\n  mapper: {\n    serializedName: \"storageInsightName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const savedSearchId: OperationURLParameter = {\n  parameterPath: \"savedSearchId\",\n  mapper: {\n    serializedName: \"savedSearchId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SavedSearchMapper\n};\n\nexport const gatewayId: OperationURLParameter = {\n  parameterPath: \"gatewayId\",\n  mapper: {\n    serializedName: \"gatewayId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: WorkspacePurgeBodyMapper\n};\n\nexport const purgeId: OperationURLParameter = {\n  parameterPath: \"purgeId\",\n  mapper: {\n    serializedName: \"purgeId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion2: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-06-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ClusterMapper\n};\n\nexport const clusterName: OperationURLParameter = {\n  parameterPath: \"clusterName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9]$\"),\n      MaxLength: 63,\n      MinLength: 4\n    },\n    serializedName: \"clusterName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const clusterName1: OperationURLParameter = {\n  parameterPath: \"clusterName\",\n  mapper: {\n    serializedName: \"clusterName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ClusterPatchMapper\n};\n\nexport const apiVersion3: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkspaceMapper\n};\n\nexport const force: OperationQueryParameter = {\n  parameterPath: [\"options\", \"force\"],\n  mapper: {\n    serializedName: \"force\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkspacePatchMapper\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TableMapper\n};\n\nexport const tableName: OperationURLParameter = {\n  parameterPath: \"tableName\",\n  mapper: {\n    serializedName: \"tableName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { QueryPacks } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  LogAnalyticsQueryPack,\n  QueryPacksListNextOptionalParams,\n  QueryPacksListOptionalParams,\n  QueryPacksListResponse,\n  QueryPacksListByResourceGroupNextOptionalParams,\n  QueryPacksListByResourceGroupOptionalParams,\n  QueryPacksListByResourceGroupResponse,\n  QueryPacksCreateOrUpdateWithoutNameOptionalParams,\n  QueryPacksCreateOrUpdateWithoutNameResponse,\n  QueryPacksDeleteOptionalParams,\n  QueryPacksGetOptionalParams,\n  QueryPacksGetResponse,\n  QueryPacksCreateOrUpdateOptionalParams,\n  QueryPacksCreateOrUpdateResponse,\n  TagsResource,\n  QueryPacksUpdateTagsOptionalParams,\n  QueryPacksUpdateTagsResponse,\n  QueryPacksListNextResponse,\n  QueryPacksListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing QueryPacks operations. */\nexport class QueryPacksImpl implements QueryPacks {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class QueryPacks class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all Log Analytics QueryPacks within a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: QueryPacksListOptionalParams\n  ): PagedAsyncIterableIterator<LogAnalyticsQueryPack> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: QueryPacksListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LogAnalyticsQueryPack[]> {\n    let result: QueryPacksListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: QueryPacksListOptionalParams\n  ): AsyncIterableIterator<LogAnalyticsQueryPack> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of Log Analytics QueryPacks within a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: QueryPacksListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<LogAnalyticsQueryPack> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: QueryPacksListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LogAnalyticsQueryPack[]> {\n    let result: QueryPacksListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: QueryPacksListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<LogAnalyticsQueryPack> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all Log Analytics QueryPacks within a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: QueryPacksListOptionalParams\n  ): Promise<QueryPacksListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets a list of Log Analytics QueryPacks within a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: QueryPacksListByResourceGroupOptionalParams\n  ): Promise<QueryPacksListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Creates a Log Analytics QueryPack. Note: You cannot specify a different value for InstrumentationKey\n   * nor AppId in the Put operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param logAnalyticsQueryPackPayload Properties that need to be specified to create or update a Log\n   *                                     Analytics QueryPack.\n   * @param options The options parameters.\n   */\n  createOrUpdateWithoutName(\n    resourceGroupName: string,\n    logAnalyticsQueryPackPayload: LogAnalyticsQueryPack,\n    options?: QueryPacksCreateOrUpdateWithoutNameOptionalParams\n  ): Promise<QueryPacksCreateOrUpdateWithoutNameResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, logAnalyticsQueryPackPayload, options },\n      createOrUpdateWithoutNameOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueryPacksDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Returns a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueryPacksGetOptionalParams\n  ): Promise<QueryPacksGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates (or updates) a Log Analytics QueryPack. Note: You cannot specify a different value for\n   * InstrumentationKey nor AppId in the Put operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param logAnalyticsQueryPackPayload Properties that need to be specified to create or update a Log\n   *                                     Analytics QueryPack.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    queryPackName: string,\n    logAnalyticsQueryPackPayload: LogAnalyticsQueryPack,\n    options?: QueryPacksCreateOrUpdateOptionalParams\n  ): Promise<QueryPacksCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        queryPackName,\n        logAnalyticsQueryPackPayload,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Updates an existing QueryPack's tags. To update other fields use the CreateOrUpdate method.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param queryPackTags Updated tag information to set into the QueryPack instance.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    queryPackName: string,\n    queryPackTags: TagsResource,\n    options?: QueryPacksUpdateTagsOptionalParams\n  ): Promise<QueryPacksUpdateTagsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, queryPackTags, options },\n      updateTagsOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: QueryPacksListNextOptionalParams\n  ): Promise<QueryPacksListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: QueryPacksListByResourceGroupNextOptionalParams\n  ): Promise<QueryPacksListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/queryPacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateWithoutNameOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.LogAnalyticsQueryPack\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.logAnalyticsQueryPackPayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPack\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPack\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.logAnalyticsQueryPackPayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateTagsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPack\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.queryPackTags,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Queries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  LogAnalyticsQueryPackQuery,\n  QueriesListNextOptionalParams,\n  QueriesListOptionalParams,\n  QueriesListResponse,\n  LogAnalyticsQueryPackQuerySearchProperties,\n  QueriesSearchNextOptionalParams,\n  QueriesSearchOptionalParams,\n  QueriesSearchResponse,\n  QueriesGetOptionalParams,\n  QueriesGetResponse,\n  QueriesPutOptionalParams,\n  QueriesPutResponse,\n  QueriesUpdateOptionalParams,\n  QueriesUpdateResponse,\n  QueriesDeleteOptionalParams,\n  QueriesListNextResponse,\n  QueriesSearchNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Queries operations. */\nexport class QueriesImpl implements Queries {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Queries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of Queries defined within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueriesListOptionalParams\n  ): PagedAsyncIterableIterator<LogAnalyticsQueryPackQuery> {\n    const iter = this.listPagingAll(resourceGroupName, queryPackName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          queryPackName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueriesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LogAnalyticsQueryPackQuery[]> {\n    let result: QueriesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, queryPackName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        queryPackName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueriesListOptionalParams\n  ): AsyncIterableIterator<LogAnalyticsQueryPackQuery> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      queryPackName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Search a list of Queries defined within a Log Analytics QueryPack according to given search\n   * properties.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param querySearchProperties Properties by which to search queries in the given Log Analytics\n   *                              QueryPack.\n   * @param options The options parameters.\n   */\n  public listSearch(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    options?: QueriesSearchOptionalParams\n  ): PagedAsyncIterableIterator<LogAnalyticsQueryPackQuery> {\n    const iter = this.searchPagingAll(\n      resourceGroupName,\n      queryPackName,\n      querySearchProperties,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.searchPagingPage(\n          resourceGroupName,\n          queryPackName,\n          querySearchProperties,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *searchPagingPage(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    options?: QueriesSearchOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LogAnalyticsQueryPackQuery[]> {\n    let result: QueriesSearchResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._search(\n        resourceGroupName,\n        queryPackName,\n        querySearchProperties,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._searchNext(\n        resourceGroupName,\n        queryPackName,\n        querySearchProperties,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *searchPagingAll(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    options?: QueriesSearchOptionalParams\n  ): AsyncIterableIterator<LogAnalyticsQueryPackQuery> {\n    for await (const page of this.searchPagingPage(\n      resourceGroupName,\n      queryPackName,\n      querySearchProperties,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of Queries defined within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    queryPackName: string,\n    options?: QueriesListOptionalParams\n  ): Promise<QueriesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Search a list of Queries defined within a Log Analytics QueryPack according to given search\n   * properties.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param querySearchProperties Properties by which to search queries in the given Log Analytics\n   *                              QueryPack.\n   * @param options The options parameters.\n   */\n  private _search(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    options?: QueriesSearchOptionalParams\n  ): Promise<QueriesSearchResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, querySearchProperties, options },\n      searchOperationSpec\n    );\n  }\n\n  /**\n   * Gets a specific Log Analytics Query defined within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param id The id of a specific query defined in the Log Analytics QueryPack\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    queryPackName: string,\n    id: string,\n    options?: QueriesGetOptionalParams\n  ): Promise<QueriesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, id, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Adds or Updates a specific Query within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param id The id of a specific query defined in the Log Analytics QueryPack\n   * @param queryPayload Properties that need to be specified to create a new query and add it to a Log\n   *                     Analytics QueryPack.\n   * @param options The options parameters.\n   */\n  put(\n    resourceGroupName: string,\n    queryPackName: string,\n    id: string,\n    queryPayload: LogAnalyticsQueryPackQuery,\n    options?: QueriesPutOptionalParams\n  ): Promise<QueriesPutResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, id, queryPayload, options },\n      putOperationSpec\n    );\n  }\n\n  /**\n   * Adds or Updates a specific Query within a Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param id The id of a specific query defined in the Log Analytics QueryPack\n   * @param queryPayload Properties that need to be specified to create a new query and add it to a Log\n   *                     Analytics QueryPack.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    queryPackName: string,\n    id: string,\n    queryPayload: LogAnalyticsQueryPackQuery,\n    options?: QueriesUpdateOptionalParams\n  ): Promise<QueriesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, id, queryPayload, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a specific Query defined within an Log Analytics QueryPack.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param id The id of a specific query defined in the Log Analytics QueryPack\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    queryPackName: string,\n    id: string,\n    options?: QueriesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, id, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    queryPackName: string,\n    nextLink: string,\n    options?: QueriesListNextOptionalParams\n  ): Promise<QueriesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, queryPackName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * SearchNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param queryPackName The name of the Log Analytics QueryPack resource.\n   * @param querySearchProperties Properties by which to search queries in the given Log Analytics\n   *                              QueryPack.\n   * @param nextLink The nextLink from the previous successful call to the Search method.\n   * @param options The options parameters.\n   */\n  private _searchNext(\n    resourceGroupName: string,\n    queryPackName: string,\n    querySearchProperties: LogAnalyticsQueryPackQuerySearchProperties,\n    nextLink: string,\n    options?: QueriesSearchNextOptionalParams\n  ): Promise<QueriesSearchNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        queryPackName,\n        querySearchProperties,\n        nextLink,\n        options\n      },\n      searchNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQueryListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.top,\n    Parameters.includeBody,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst searchOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/search\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQueryListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.querySearchProperties,\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.top,\n    Parameters.includeBody,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQuery\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst putOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQuery\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.queryPayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQuery\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.queryPayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQueryListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst searchNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsQueryPackQueryListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.queryPackName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { DataExports } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  DataExport,\n  DataExportsListByWorkspaceOptionalParams,\n  DataExportsListByWorkspaceResponse,\n  DataExportsCreateOrUpdateOptionalParams,\n  DataExportsCreateOrUpdateResponse,\n  DataExportsGetOptionalParams,\n  DataExportsGetResponse,\n  DataExportsDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DataExports operations. */\nexport class DataExportsImpl implements DataExports {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class DataExports class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the data export instances within a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DataExportsListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<DataExport> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DataExportsListByWorkspaceOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<DataExport[]> {\n    let result: DataExportsListByWorkspaceResponse;\n    result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DataExportsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<DataExport> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the data export instances within a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DataExportsListByWorkspaceOptionalParams\n  ): Promise<DataExportsListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a data export.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataExportName The data export rule name.\n   * @param parameters The parameters required to create or update a data export.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataExportName: string,\n    parameters: DataExport,\n    options?: DataExportsCreateOrUpdateOptionalParams\n  ): Promise<DataExportsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, dataExportName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a data export instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataExportName The data export rule name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataExportName: string,\n    options?: DataExportsGetOptionalParams\n  ): Promise<DataExportsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, dataExportName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified data export in a given workspace..\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataExportName The data export rule name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataExportName: string,\n    options?: DataExportsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, dataExportName, options },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataExportListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports/{dataExportName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataExport\n    },\n    201: {\n      bodyMapper: Mappers.DataExport\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.dataExportName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports/{dataExportName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataExport\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.dataExportName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports/{dataExportName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.dataExportName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DataSources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  DataSource,\n  DataSourcesListByWorkspaceNextOptionalParams,\n  DataSourcesListByWorkspaceOptionalParams,\n  DataSourcesListByWorkspaceResponse,\n  DataSourcesCreateOrUpdateOptionalParams,\n  DataSourcesCreateOrUpdateResponse,\n  DataSourcesDeleteOptionalParams,\n  DataSourcesGetOptionalParams,\n  DataSourcesGetResponse,\n  DataSourcesListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DataSources operations. */\nexport class DataSourcesImpl implements DataSources {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class DataSources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the first page of data source instances in a workspace with the link to the next page.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param filter The filter to apply on the operation.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    filter: string,\n    options?: DataSourcesListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<DataSource> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      filter,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          filter,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    filter: string,\n    options?: DataSourcesListByWorkspaceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DataSource[]> {\n    let result: DataSourcesListByWorkspaceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByWorkspace(\n        resourceGroupName,\n        workspaceName,\n        filter,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    filter: string,\n    options?: DataSourcesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<DataSource> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      filter,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a data source.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataSourceName The name of the datasource resource.\n   * @param parameters The parameters required to create or update a datasource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataSourceName: string,\n    parameters: DataSource,\n    options?: DataSourcesCreateOrUpdateOptionalParams\n  ): Promise<DataSourcesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, dataSourceName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a data source instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataSourceName Name of the datasource.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataSourceName: string,\n    options?: DataSourcesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, dataSourceName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets a datasource instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataSourceName Name of the datasource\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataSourceName: string,\n    options?: DataSourcesGetOptionalParams\n  ): Promise<DataSourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, dataSourceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets the first page of data source instances in a workspace with the link to the next page.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param filter The filter to apply on the operation.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    filter: string,\n    options?: DataSourcesListByWorkspaceOptionalParams\n  ): Promise<DataSourcesListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, filter, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: DataSourcesListByWorkspaceNextOptionalParams\n  ): Promise<DataSourcesListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataSources/{dataSourceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataSource\n    },\n    201: {\n      bodyMapper: Mappers.DataSource\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.dataSourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataSources/{dataSourceName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.dataSourceName\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataSources/{dataSourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataSource\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.dataSourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataSources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataSourceListResult\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.filter,\n    Parameters.skiptoken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataSourceListResult\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntelligencePacks } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  IntelligencePacksDisableOptionalParams,\n  IntelligencePacksEnableOptionalParams,\n  IntelligencePacksListOptionalParams,\n  IntelligencePacksListResponse\n} from \"../models\";\n\n/** Class containing IntelligencePacks operations. */\nexport class IntelligencePacksImpl implements IntelligencePacks {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntelligencePacks class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Disables an intelligence pack for a given workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param intelligencePackName The name of the intelligence pack to be disabled.\n   * @param options The options parameters.\n   */\n  disable(\n    resourceGroupName: string,\n    workspaceName: string,\n    intelligencePackName: string,\n    options?: IntelligencePacksDisableOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, intelligencePackName, options },\n      disableOperationSpec\n    );\n  }\n\n  /**\n   * Enables an intelligence pack for a given workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param intelligencePackName The name of the intelligence pack to be enabled.\n   * @param options The options parameters.\n   */\n  enable(\n    resourceGroupName: string,\n    workspaceName: string,\n    intelligencePackName: string,\n    options?: IntelligencePacksEnableOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, intelligencePackName, options },\n      enableOperationSpec\n    );\n  }\n\n  /**\n   * Lists all the intelligence packs possible and whether they are enabled or disabled for a given\n   * workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IntelligencePacksListOptionalParams\n  ): Promise<IntelligencePacksListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst disableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks/{intelligencePackName}/Disable\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.intelligencePackName\n  ],\n  serializer\n};\nconst enableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks/{intelligencePackName}/Enable\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.intelligencePackName\n  ],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"IntelligencePack\" }\n          }\n        }\n      }\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { LinkedServices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  LinkedService,\n  LinkedServicesListByWorkspaceOptionalParams,\n  LinkedServicesListByWorkspaceResponse,\n  LinkedServicesCreateOrUpdateOptionalParams,\n  LinkedServicesCreateOrUpdateResponse,\n  LinkedServicesDeleteOptionalParams,\n  LinkedServicesDeleteResponse,\n  LinkedServicesGetOptionalParams,\n  LinkedServicesGetResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing LinkedServices operations. */\nexport class LinkedServicesImpl implements LinkedServices {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class LinkedServices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the linked services instances in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LinkedServicesListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<LinkedService> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LinkedServicesListByWorkspaceOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<LinkedService[]> {\n    let result: LinkedServicesListByWorkspaceResponse;\n    result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LinkedServicesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<LinkedService> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a linked service.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param linkedServiceName Name of the linkedServices resource\n   * @param parameters The parameters required to create or update a linked service.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    linkedServiceName: string,\n    parameters: LinkedService,\n    options?: LinkedServicesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LinkedServicesCreateOrUpdateResponse>,\n      LinkedServicesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LinkedServicesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        linkedServiceName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update a linked service.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param linkedServiceName Name of the linkedServices resource\n   * @param parameters The parameters required to create or update a linked service.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    linkedServiceName: string,\n    parameters: LinkedService,\n    options?: LinkedServicesCreateOrUpdateOptionalParams\n  ): Promise<LinkedServicesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      linkedServiceName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a linked service instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param linkedServiceName Name of the linked service.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    linkedServiceName: string,\n    options?: LinkedServicesDeleteOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LinkedServicesDeleteResponse>,\n      LinkedServicesDeleteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LinkedServicesDeleteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, linkedServiceName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a linked service instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param linkedServiceName Name of the linked service.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    linkedServiceName: string,\n    options?: LinkedServicesDeleteOptionalParams\n  ): Promise<LinkedServicesDeleteResponse> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      linkedServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a linked service instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param linkedServiceName Name of the linked service.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    linkedServiceName: string,\n    options?: LinkedServicesGetOptionalParams\n  ): Promise<LinkedServicesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, linkedServiceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets the linked services instances in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LinkedServicesListByWorkspaceOptionalParams\n  ): Promise<LinkedServicesListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices/{linkedServiceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkedService\n    },\n    201: {\n      bodyMapper: Mappers.LinkedService\n    },\n    202: {\n      bodyMapper: Mappers.LinkedService\n    },\n    204: {\n      bodyMapper: Mappers.LinkedService\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.linkedServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices/{linkedServiceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkedService\n    },\n    201: {\n      bodyMapper: Mappers.LinkedService\n    },\n    202: {\n      bodyMapper: Mappers.LinkedService\n    },\n    204: {\n      bodyMapper: Mappers.LinkedService\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.linkedServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices/{linkedServiceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkedService\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.linkedServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkedServiceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { LinkedStorageAccounts } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  LinkedStorageAccountsResource,\n  LinkedStorageAccountsListByWorkspaceOptionalParams,\n  LinkedStorageAccountsListByWorkspaceResponse,\n  DataSourceType,\n  LinkedStorageAccountsCreateOrUpdateOptionalParams,\n  LinkedStorageAccountsCreateOrUpdateResponse,\n  LinkedStorageAccountsDeleteOptionalParams,\n  LinkedStorageAccountsGetOptionalParams,\n  LinkedStorageAccountsGetResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing LinkedStorageAccounts operations. */\nexport class LinkedStorageAccountsImpl implements LinkedStorageAccounts {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class LinkedStorageAccounts class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all linked storage accounts associated with the specified workspace, storage accounts will be\n   * sorted by their data source type.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LinkedStorageAccountsListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<LinkedStorageAccountsResource> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LinkedStorageAccountsListByWorkspaceOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<LinkedStorageAccountsResource[]> {\n    let result: LinkedStorageAccountsListByWorkspaceResponse;\n    result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LinkedStorageAccountsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<LinkedStorageAccountsResource> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or Update a link relation between current workspace and a group of storage accounts of a\n   * specific data source type.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataSourceType Linked storage accounts type.\n   * @param parameters The parameters required to create or update linked storage accounts.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataSourceType: DataSourceType,\n    parameters: LinkedStorageAccountsResource,\n    options?: LinkedStorageAccountsCreateOrUpdateOptionalParams\n  ): Promise<LinkedStorageAccountsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, dataSourceType, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes all linked storage accounts of a specific data source type associated with the specified\n   * workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataSourceType Linked storage accounts type.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataSourceType: DataSourceType,\n    options?: LinkedStorageAccountsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, dataSourceType, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets all linked storage account of a specific data source type associated with the specified\n   * workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param dataSourceType Linked storage accounts type.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    dataSourceType: DataSourceType,\n    options?: LinkedStorageAccountsGetOptionalParams\n  ): Promise<LinkedStorageAccountsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, dataSourceType, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets all linked storage accounts associated with the specified workspace, storage accounts will be\n   * sorted by their data source type.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LinkedStorageAccountsListByWorkspaceOptionalParams\n  ): Promise<LinkedStorageAccountsListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedStorageAccounts/{dataSourceType}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkedStorageAccountsResource\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.dataSourceType\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedStorageAccounts/{dataSourceType}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.dataSourceType\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedStorageAccounts/{dataSourceType}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkedStorageAccountsResource\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.dataSourceType\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedStorageAccounts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkedStorageAccountsListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ManagementGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  ManagementGroup,\n  ManagementGroupsListOptionalParams,\n  ManagementGroupsListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagementGroups operations. */\nexport class ManagementGroupsImpl implements ManagementGroups {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagementGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of management groups connected to a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ManagementGroupsListOptionalParams\n  ): PagedAsyncIterableIterator<ManagementGroup> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ManagementGroupsListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<ManagementGroup[]> {\n    let result: ManagementGroupsListResponse;\n    result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ManagementGroupsListOptionalParams\n  ): AsyncIterableIterator<ManagementGroup> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of management groups connected to a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ManagementGroupsListOptionalParams\n  ): Promise<ManagementGroupsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/managementGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListManagementGroupsResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { OperationStatuses } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  OperationStatusesGetOptionalParams,\n  OperationStatusesGetResponse\n} from \"../models\";\n\n/** Class containing OperationStatuses operations. */\nexport class OperationStatusesImpl implements OperationStatuses {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class OperationStatuses class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the status of a long running azure asynchronous operation.\n   * @param location The region name of operation.\n   * @param asyncOperationId The operation Id.\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    asyncOperationId: string,\n    options?: OperationStatusesGetOptionalParams\n  ): Promise<OperationStatusesGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, asyncOperationId, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/locations/{location}/operationStatuses/{asyncOperationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationStatus\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.asyncOperationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SharedKeysOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  SharedKeysGetSharedKeysOptionalParams,\n  SharedKeysGetSharedKeysResponse,\n  SharedKeysRegenerateOptionalParams,\n  SharedKeysRegenerateResponse\n} from \"../models\";\n\n/** Class containing SharedKeysOperations operations. */\nexport class SharedKeysOperationsImpl implements SharedKeysOperations {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class SharedKeysOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the shared keys for a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  getSharedKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SharedKeysGetSharedKeysOptionalParams\n  ): Promise<SharedKeysGetSharedKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      getSharedKeysOperationSpec\n    );\n  }\n\n  /**\n   * Regenerates the shared keys for a Log Analytics Workspace. These keys are used to connect Microsoft\n   * Operational Insights agents to the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  regenerate(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SharedKeysRegenerateOptionalParams\n  ): Promise<SharedKeysRegenerateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      regenerateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getSharedKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/sharedKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedKeys\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst regenerateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/regenerateSharedKey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedKeys\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Usages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  UsageMetric,\n  UsagesListOptionalParams,\n  UsagesListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Usages operations. */\nexport class UsagesImpl implements Usages {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Usages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of usage metrics for a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: UsagesListOptionalParams\n  ): PagedAsyncIterableIterator<UsageMetric> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: UsagesListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<UsageMetric[]> {\n    let result: UsagesListResponse;\n    result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: UsagesListOptionalParams\n  ): AsyncIterableIterator<UsageMetric> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of usage metrics for a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: UsagesListOptionalParams\n  ): Promise<UsagesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListUsagesResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { StorageInsightConfigs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  StorageInsight,\n  StorageInsightConfigsListByWorkspaceNextOptionalParams,\n  StorageInsightConfigsListByWorkspaceOptionalParams,\n  StorageInsightConfigsListByWorkspaceResponse,\n  StorageInsightConfigsCreateOrUpdateOptionalParams,\n  StorageInsightConfigsCreateOrUpdateResponse,\n  StorageInsightConfigsGetOptionalParams,\n  StorageInsightConfigsGetResponse,\n  StorageInsightConfigsDeleteOptionalParams,\n  StorageInsightConfigsListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing StorageInsightConfigs operations. */\nexport class StorageInsightConfigsImpl implements StorageInsightConfigs {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class StorageInsightConfigs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the storage insight instances within a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: StorageInsightConfigsListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<StorageInsight> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: StorageInsightConfigsListByWorkspaceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<StorageInsight[]> {\n    let result: StorageInsightConfigsListByWorkspaceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByWorkspace(\n        resourceGroupName,\n        workspaceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.odataNextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: StorageInsightConfigsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<StorageInsight> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a storage insight.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param storageInsightName Name of the storageInsightsConfigs resource\n   * @param parameters The parameters required to create or update a storage insight.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    storageInsightName: string,\n    parameters: StorageInsight,\n    options?: StorageInsightConfigsCreateOrUpdateOptionalParams\n  ): Promise<StorageInsightConfigsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        storageInsightName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a storage insight instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param storageInsightName Name of the storageInsightsConfigs resource\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    storageInsightName: string,\n    options?: StorageInsightConfigsGetOptionalParams\n  ): Promise<StorageInsightConfigsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, storageInsightName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a storageInsightsConfigs resource\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param storageInsightName Name of the storageInsightsConfigs resource\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    storageInsightName: string,\n    options?: StorageInsightConfigsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, storageInsightName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Lists the storage insight instances within a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: StorageInsightConfigsListByWorkspaceOptionalParams\n  ): Promise<StorageInsightConfigsListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: StorageInsightConfigsListByWorkspaceNextOptionalParams\n  ): Promise<StorageInsightConfigsListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageInsight\n    },\n    201: {\n      bodyMapper: Mappers.StorageInsight\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.storageInsightName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageInsight\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.storageInsightName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.storageInsightName\n  ],\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageInsightListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageInsightListResult\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SavedSearches } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  SavedSearchesDeleteOptionalParams,\n  SavedSearch,\n  SavedSearchesCreateOrUpdateOptionalParams,\n  SavedSearchesCreateOrUpdateResponse,\n  SavedSearchesGetOptionalParams,\n  SavedSearchesGetResponse,\n  SavedSearchesListByWorkspaceOptionalParams,\n  SavedSearchesListByWorkspaceResponse\n} from \"../models\";\n\n/** Class containing SavedSearches operations. */\nexport class SavedSearchesImpl implements SavedSearches {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class SavedSearches class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Deletes the specified saved search in a given workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param savedSearchId The id of the saved search.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    savedSearchId: string,\n    options?: SavedSearchesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, savedSearchId, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a saved search for a given workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param savedSearchId The id of the saved search.\n   * @param parameters The parameters required to save a search.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    savedSearchId: string,\n    parameters: SavedSearch,\n    options?: SavedSearchesCreateOrUpdateOptionalParams\n  ): Promise<SavedSearchesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, savedSearchId, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified saved search for a given workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param savedSearchId The id of the saved search.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    savedSearchId: string,\n    options?: SavedSearchesGetOptionalParams\n  ): Promise<SavedSearchesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, savedSearchId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets the saved searches for a given Log Analytics Workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SavedSearchesListByWorkspaceOptionalParams\n  ): Promise<SavedSearchesListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches/{savedSearchId}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.savedSearchId\n  ],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches/{savedSearchId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SavedSearch\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.savedSearchId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches/{savedSearchId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SavedSearch\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.savedSearchId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SavedSearchesListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { AvailableServiceTiers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  AvailableServiceTiersListByWorkspaceOptionalParams,\n  AvailableServiceTiersListByWorkspaceResponse\n} from \"../models\";\n\n/** Class containing AvailableServiceTiers operations. */\nexport class AvailableServiceTiersImpl implements AvailableServiceTiers {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class AvailableServiceTiers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the available service tiers for the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: AvailableServiceTiersListByWorkspaceOptionalParams\n  ): Promise<AvailableServiceTiersListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/availableServiceTiers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"AvailableServiceTier\" }\n          }\n        }\n      }\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Gateways } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport { GatewaysDeleteOptionalParams } from \"../models\";\n\n/** Class containing Gateways operations. */\nexport class GatewaysImpl implements Gateways {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Gateways class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Delete a Log Analytics gateway.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param gatewayId The Log Analytics gateway Id.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    gatewayId: string,\n    options?: GatewaysDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, gatewayId, options },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/gateways/{gatewayId}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.gatewayId\n  ],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SchemaOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport { SchemaGetOptionalParams, SchemaGetResponse } from \"../models\";\n\n/** Class containing SchemaOperations operations. */\nexport class SchemaOperationsImpl implements SchemaOperations {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class SchemaOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the schema for a given workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SchemaGetOptionalParams\n  ): Promise<SchemaGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/schema\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SearchGetSchemaResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { WorkspacePurge } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  WorkspacePurgeBody,\n  WorkspacePurgePurgeOptionalParams,\n  WorkspacePurgePurgeResponse,\n  WorkspacePurgeGetPurgeStatusOptionalParams,\n  WorkspacePurgeGetPurgeStatusResponse\n} from \"../models\";\n\n/** Class containing WorkspacePurge operations. */\nexport class WorkspacePurgeImpl implements WorkspacePurge {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspacePurge class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Purges data in an Log Analytics workspace by a set of user-defined filters.\n   *\n   * In order to manage system resources, purge requests are throttled at 50 requests per hour. You\n   * should batch the execution of purge requests by sending a single command whose predicate includes\n   * all user identities that require purging. Use the in operator to specify multiple identities. You\n   * should run the query prior to using for a purge request to verify that the results are expected.\n   * Log Analytics only supports purge operations required for compliance with GDPR. The Log Analytics\n   * product team reserves the right to reject requests for purge operations that are not for the purpose\n   * of GDPR compliance. In the event of a dispute, please create a support ticket\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param body Describes the body of a request to purge data in a single table of an Log Analytics\n   *             Workspace\n   * @param options The options parameters.\n   */\n  purge(\n    resourceGroupName: string,\n    workspaceName: string,\n    body: WorkspacePurgeBody,\n    options?: WorkspacePurgePurgeOptionalParams\n  ): Promise<WorkspacePurgePurgeResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, body, options },\n      purgeOperationSpec\n    );\n  }\n\n  /**\n   * Gets status of an ongoing purge operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param purgeId In a purge status request, this is the Id of the operation the status of which is\n   *                returned.\n   * @param options The options parameters.\n   */\n  getPurgeStatus(\n    resourceGroupName: string,\n    workspaceName: string,\n    purgeId: string,\n    options?: WorkspacePurgeGetPurgeStatusOptionalParams\n  ): Promise<WorkspacePurgeGetPurgeStatusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, purgeId, options },\n      getPurgeStatusOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst purgeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/purge\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.WorkspacePurgeResponse,\n      headersMapper: Mappers.WorkspacePurgePurgeHeaders\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getPurgeStatusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/operations/{purgeId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspacePurgeStatusResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.purgeId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Clusters } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Cluster,\n  ClustersListByResourceGroupNextOptionalParams,\n  ClustersListByResourceGroupOptionalParams,\n  ClustersListByResourceGroupResponse,\n  ClustersListNextOptionalParams,\n  ClustersListOptionalParams,\n  ClustersListResponse,\n  ClustersCreateOrUpdateOptionalParams,\n  ClustersCreateOrUpdateResponse,\n  ClustersDeleteOptionalParams,\n  ClustersGetOptionalParams,\n  ClustersGetResponse,\n  ClusterPatch,\n  ClustersUpdateOptionalParams,\n  ClustersUpdateResponse,\n  ClustersListByResourceGroupNextResponse,\n  ClustersListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Clusters operations. */\nexport class ClustersImpl implements Clusters {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Clusters class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets Log Analytics clusters in a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Cluster> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Cluster[]> {\n    let result: ClustersListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Cluster> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the Log Analytics clusters in a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ClustersListOptionalParams\n  ): PagedAsyncIterableIterator<Cluster> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ClustersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Cluster[]> {\n    let result: ClustersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ClustersListOptionalParams\n  ): AsyncIterableIterator<Cluster> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets Log Analytics clusters in a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams\n  ): Promise<ClustersListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets the Log Analytics clusters in a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ClustersListOptionalParams\n  ): Promise<ClustersListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Create or update a Log Analytics cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Log Analytics cluster.\n   * @param parameters The parameters required to create or update a Log Analytics cluster.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    clusterName: string,\n    parameters: Cluster,\n    options?: ClustersCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ClustersCreateOrUpdateResponse>,\n      ClustersCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ClustersCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update a Log Analytics cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Log Analytics cluster.\n   * @param parameters The parameters required to create or update a Log Analytics cluster.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    parameters: Cluster,\n    options?: ClustersCreateOrUpdateOptionalParams\n  ): Promise<ClustersCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      clusterName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a cluster instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName Name of the Log Analytics Cluster.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a cluster instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName Name of the Log Analytics Cluster.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      clusterName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a Log Analytics cluster instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName Name of the Log Analytics Cluster.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersGetOptionalParams\n  ): Promise<ClustersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a Log Analytics cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName Name of the Log Analytics Cluster.\n   * @param parameters The parameters required to patch a Log Analytics cluster.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    clusterName: string,\n    parameters: ClusterPatch,\n    options?: ClustersUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ClustersUpdateResponse>,\n      ClustersUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ClustersUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a Log Analytics cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName Name of the Log Analytics Cluster.\n   * @param parameters The parameters required to patch a Log Analytics cluster.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    parameters: ClusterPatch,\n    options?: ClustersUpdateOptionalParams\n  ): Promise<ClustersUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      clusterName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ClustersListByResourceGroupNextOptionalParams\n  ): Promise<ClustersListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ClustersListNextOptionalParams\n  ): Promise<ClustersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/clusters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters/{clusterName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Cluster\n    },\n    201: {\n      bodyMapper: Mappers.Cluster\n    },\n    202: {\n      bodyMapper: Mappers.Cluster\n    },\n    204: {\n      bodyMapper: Mappers.Cluster\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters/{clusterName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters/{clusterName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Cluster\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters/{clusterName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Cluster\n    },\n    201: {\n      bodyMapper: Mappers.Cluster\n    },\n    202: {\n      bodyMapper: Mappers.Cluster\n    },\n    204: {\n      bodyMapper: Mappers.Cluster\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available OperationalInsights Rest API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available OperationalInsights Rest API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.OperationalInsights/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Workspaces } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Workspace,\n  WorkspacesListOptionalParams,\n  WorkspacesListResponse,\n  WorkspacesListByResourceGroupOptionalParams,\n  WorkspacesListByResourceGroupResponse,\n  WorkspacesCreateOrUpdateOptionalParams,\n  WorkspacesCreateOrUpdateResponse,\n  WorkspacesDeleteOptionalParams,\n  WorkspacesGetOptionalParams,\n  WorkspacesGetResponse,\n  WorkspacePatch,\n  WorkspacesUpdateOptionalParams,\n  WorkspacesUpdateResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Workspaces operations. */\nexport class WorkspacesImpl implements Workspaces {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Workspaces class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the workspaces in a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: WorkspacesListOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: WorkspacesListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Workspace[]> {\n    let result: WorkspacesListResponse;\n    result = await this._list(options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    options?: WorkspacesListOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets workspaces in a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Workspace[]> {\n    let result: WorkspacesListByResourceGroupResponse;\n    result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the workspaces in a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: WorkspacesListOptionalParams\n  ): Promise<WorkspacesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets workspaces in a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): Promise<WorkspacesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param parameters The parameters required to create or update a workspace.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: Workspace,\n    options?: WorkspacesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesCreateOrUpdateResponse>,\n      WorkspacesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param parameters The parameters required to create or update a workspace.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: Workspace,\n    options?: WorkspacesCreateOrUpdateOptionalParams\n  ): Promise<WorkspacesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a workspace resource. To recover the workspace, create it again with the same name, in the\n   * same subscription, resource group and location. The name is kept for 14 days and cannot be used for\n   * another workspace. To remove the workspace completely and release the name, use the force flag.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a workspace resource. To recover the workspace, create it again with the same name, in the\n   * same subscription, resource group and location. The name is kept for 14 days and cannot be used for\n   * another workspace. To remove the workspace completely and release the name, use the force flag.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a workspace instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesGetOptionalParams\n  ): Promise<WorkspacesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param parameters The parameters required to patch a workspace.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: WorkspacePatch,\n    options?: WorkspacesUpdateOptionalParams\n  ): Promise<WorkspacesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, parameters, options },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/workspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    201: {\n      bodyMapper: Mappers.Workspace\n    },\n    202: {\n      bodyMapper: Mappers.Workspace\n    },\n    204: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters8,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3, Parameters.force],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters9,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { DeletedWorkspaces } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport {\n  Workspace,\n  DeletedWorkspacesListOptionalParams,\n  DeletedWorkspacesListResponse,\n  DeletedWorkspacesListByResourceGroupOptionalParams,\n  DeletedWorkspacesListByResourceGroupResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DeletedWorkspaces operations. */\nexport class DeletedWorkspacesImpl implements DeletedWorkspaces {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class DeletedWorkspaces class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets recently deleted workspaces in a subscription, available for recovery.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: DeletedWorkspacesListOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: DeletedWorkspacesListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Workspace[]> {\n    let result: DeletedWorkspacesListResponse;\n    result = await this._list(options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    options?: DeletedWorkspacesListOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets recently deleted workspaces in a resource group, available for recovery.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: DeletedWorkspacesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: DeletedWorkspacesListByResourceGroupOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Workspace[]> {\n    let result: DeletedWorkspacesListByResourceGroupResponse;\n    result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: DeletedWorkspacesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets recently deleted workspaces in a subscription, available for recovery.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: DeletedWorkspacesListOptionalParams\n  ): Promise<DeletedWorkspacesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets recently deleted workspaces in a resource group, available for recovery.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: DeletedWorkspacesListByResourceGroupOptionalParams\n  ): Promise<DeletedWorkspacesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/deletedWorkspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/deletedWorkspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Tables } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationalInsightsManagementClient } from \"../operationalInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Table,\n  TablesListByWorkspaceOptionalParams,\n  TablesListByWorkspaceResponse,\n  TablesCreateOrUpdateOptionalParams,\n  TablesCreateOrUpdateResponse,\n  TablesUpdateOptionalParams,\n  TablesUpdateResponse,\n  TablesGetOptionalParams,\n  TablesGetResponse,\n  TablesDeleteOptionalParams,\n  TablesMigrateOptionalParams,\n  TablesCancelSearchOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Tables operations. */\nexport class TablesImpl implements Tables {\n  private readonly client: OperationalInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Tables class.\n   * @param client Reference to the service client\n   */\n  constructor(client: OperationalInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the tables for the specified Log Analytics workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: TablesListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<Table> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: TablesListByWorkspaceOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Table[]> {\n    let result: TablesListByWorkspaceResponse;\n    result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: TablesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<Table> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the tables for the specified Log Analytics workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: TablesListByWorkspaceOptionalParams\n  ): Promise<TablesListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * Update or Create a Log Analytics workspace table.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param tableName The name of the table.\n   * @param parameters The parameters required to update table properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    tableName: string,\n    parameters: Table,\n    options?: TablesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<TablesCreateOrUpdateResponse>,\n      TablesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<TablesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, tableName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update or Create a Log Analytics workspace table.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param tableName The name of the table.\n   * @param parameters The parameters required to update table properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    tableName: string,\n    parameters: Table,\n    options?: TablesCreateOrUpdateOptionalParams\n  ): Promise<TablesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      tableName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a Log Analytics workspace table.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param tableName The name of the table.\n   * @param parameters The parameters required to update table properties.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    tableName: string,\n    parameters: Table,\n    options?: TablesUpdateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<TablesUpdateResponse>, TablesUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<TablesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, tableName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update a Log Analytics workspace table.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param tableName The name of the table.\n   * @param parameters The parameters required to update table properties.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    tableName: string,\n    parameters: Table,\n    options?: TablesUpdateOptionalParams\n  ): Promise<TablesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      tableName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a Log Analytics workspace table.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    tableName: string,\n    options?: TablesGetOptionalParams\n  ): Promise<TablesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, tableName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a Log Analytics workspace table.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    tableName: string,\n    options?: TablesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, tableName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete a Log Analytics workspace table.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    tableName: string,\n    options?: TablesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      tableName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Migrate a Log Analytics table from support of the Data Collector API and Custom Fields features to\n   * support of Data Collection Rule-based Custom Logs.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  migrate(\n    resourceGroupName: string,\n    workspaceName: string,\n    tableName: string,\n    options?: TablesMigrateOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, tableName, options },\n      migrateOperationSpec\n    );\n  }\n\n  /**\n   * Cancel a log analytics workspace search results table query run.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  cancelSearch(\n    resourceGroupName: string,\n    workspaceName: string,\n    tableName: string,\n    options?: TablesCancelSearchOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, tableName, options },\n      cancelSearchOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TablesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables/{tableName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Table\n    },\n    201: {\n      bodyMapper: Mappers.Table\n    },\n    202: {\n      bodyMapper: Mappers.Table\n    },\n    204: {\n      bodyMapper: Mappers.Table\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables/{tableName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Table\n    },\n    201: {\n      bodyMapper: Mappers.Table\n    },\n    202: {\n      bodyMapper: Mappers.Table\n    },\n    204: {\n      bodyMapper: Mappers.Table\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables/{tableName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Table\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables/{tableName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst migrateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables/{tableName}/migrate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelSearchOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables/{tableName}/cancelSearch\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  QueryPacksImpl,\n  QueriesImpl,\n  DataExportsImpl,\n  DataSourcesImpl,\n  IntelligencePacksImpl,\n  LinkedServicesImpl,\n  LinkedStorageAccountsImpl,\n  ManagementGroupsImpl,\n  OperationStatusesImpl,\n  SharedKeysOperationsImpl,\n  UsagesImpl,\n  StorageInsightConfigsImpl,\n  SavedSearchesImpl,\n  AvailableServiceTiersImpl,\n  GatewaysImpl,\n  SchemaOperationsImpl,\n  WorkspacePurgeImpl,\n  ClustersImpl,\n  OperationsImpl,\n  WorkspacesImpl,\n  DeletedWorkspacesImpl,\n  TablesImpl\n} from \"./operations\";\nimport {\n  QueryPacks,\n  Queries,\n  DataExports,\n  DataSources,\n  IntelligencePacks,\n  LinkedServices,\n  LinkedStorageAccounts,\n  ManagementGroups,\n  OperationStatuses,\n  SharedKeysOperations,\n  Usages,\n  StorageInsightConfigs,\n  SavedSearches,\n  AvailableServiceTiers,\n  Gateways,\n  SchemaOperations,\n  WorkspacePurge,\n  Clusters,\n  Operations,\n  Workspaces,\n  DeletedWorkspaces,\n  Tables\n} from \"./operationsInterfaces\";\nimport { OperationalInsightsManagementClientOptionalParams } from \"./models\";\n\nexport class OperationalInsightsManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the OperationalInsightsManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: OperationalInsightsManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: OperationalInsightsManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-operationalinsights/9.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.queryPacks = new QueryPacksImpl(this);\n    this.queries = new QueriesImpl(this);\n    this.dataExports = new DataExportsImpl(this);\n    this.dataSources = new DataSourcesImpl(this);\n    this.intelligencePacks = new IntelligencePacksImpl(this);\n    this.linkedServices = new LinkedServicesImpl(this);\n    this.linkedStorageAccounts = new LinkedStorageAccountsImpl(this);\n    this.managementGroups = new ManagementGroupsImpl(this);\n    this.operationStatuses = new OperationStatusesImpl(this);\n    this.sharedKeysOperations = new SharedKeysOperationsImpl(this);\n    this.usages = new UsagesImpl(this);\n    this.storageInsightConfigs = new StorageInsightConfigsImpl(this);\n    this.savedSearches = new SavedSearchesImpl(this);\n    this.availableServiceTiers = new AvailableServiceTiersImpl(this);\n    this.gateways = new GatewaysImpl(this);\n    this.schemaOperations = new SchemaOperationsImpl(this);\n    this.workspacePurge = new WorkspacePurgeImpl(this);\n    this.clusters = new ClustersImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.workspaces = new WorkspacesImpl(this);\n    this.deletedWorkspaces = new DeletedWorkspacesImpl(this);\n    this.tables = new TablesImpl(this);\n  }\n\n  queryPacks: QueryPacks;\n  queries: Queries;\n  dataExports: DataExports;\n  dataSources: DataSources;\n  intelligencePacks: IntelligencePacks;\n  linkedServices: LinkedServices;\n  linkedStorageAccounts: LinkedStorageAccounts;\n  managementGroups: ManagementGroups;\n  operationStatuses: OperationStatuses;\n  sharedKeysOperations: SharedKeysOperations;\n  usages: Usages;\n  storageInsightConfigs: StorageInsightConfigs;\n  savedSearches: SavedSearches;\n  availableServiceTiers: AvailableServiceTiers;\n  gateways: Gateways;\n  schemaOperations: SchemaOperations;\n  workspacePurge: WorkspacePurge;\n  clusters: Clusters;\n  operations: Operations;\n  workspaces: Workspaces;\n  deletedWorkspaces: DeletedWorkspaces;\n  tables: Tables;\n}\n"],"names":["KnownIdentityType","KnownType","KnownDataSourceKind","KnownLinkedServiceEntityStatus","KnownStorageInsightState","KnownSkuNameEnum","KnownSearchSortEnum","KnownPurgeState","KnownClusterSkuNameEnum","KnownClusterEntityStatus","KnownBillingType","KnownWorkspaceEntityStatus","KnownWorkspaceSkuNameEnum","KnownDataIngestionStatus","KnownPublicNetworkAccessType","KnownCreatedByType","KnownTablePlanEnum","KnownColumnTypeEnum","KnownColumnDataTypeHintEnum","KnownSourceEnum","KnownTableTypeEnum","KnownTableSubTypeEnum","KnownProvisioningStateEnum","LogAnalyticsQueryPackMapper","TagsResourceMapper","LogAnalyticsQueryPackQuerySearchPropertiesMapper","LogAnalyticsQueryPackQueryMapper","DataExportMapper","DataSourceMapper","LinkedServiceMapper","LinkedStorageAccountsResourceMapper","StorageInsightMapper","SavedSearchMapper","WorkspacePurgeBodyMapper","ClusterMapper","ClusterPatchMapper","WorkspaceMapper","WorkspacePatchMapper","TableMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","listByResourceGroupOperationSpec","deleteOperationSpec","getOperationSpec","createOrUpdateOperationSpec","listNextOperationSpec","listByResourceGroupNextOperationSpec","serializer","coreClient","Mappers.LogAnalyticsQueryPackListResult","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.accept","Parameters.resourceGroupName","Mappers.LogAnalyticsQueryPack","Parameters.logAnalyticsQueryPackPayload","Parameters.contentType","Parameters.queryPackName","Parameters.queryPackTags","Parameters.nextLink","updateOperationSpec","Mappers.LogAnalyticsQueryPackQueryListResult","Parameters.top","Parameters.includeBody","Parameters.skipToken","Parameters.querySearchProperties","Mappers.LogAnalyticsQueryPackQuery","Parameters.id","Parameters.queryPayload","listByWorkspaceOperationSpec","Mappers.DataExportListResult","Parameters.apiVersion1","Parameters.workspaceName","Mappers.DataExport","Parameters.parameters","Parameters.dataExportName","Parameters.dataExportName1","listByWorkspaceNextOperationSpec","Mappers.DataSource","Parameters.parameters1","Parameters.dataSourceName","Mappers.DataSourceListResult","Parameters.filter","Parameters.skiptoken","Parameters.intelligencePackName","__rest","__awaiter","LroEngine","Mappers.LinkedService","Parameters.parameters2","Parameters.linkedServiceName","Mappers.LinkedServiceListResult","Mappers.LinkedStorageAccountsResource","Parameters.parameters3","Parameters.dataSourceType","Mappers.LinkedStorageAccountsListResult","Mappers.WorkspaceListManagementGroupsResult","Mappers.OperationStatus","Parameters.location","Parameters.asyncOperationId","Mappers.SharedKeys","Mappers.WorkspaceListUsagesResult","Mappers.StorageInsight","Parameters.parameters4","Parameters.storageInsightName","Mappers.StorageInsightListResult","Parameters.savedSearchId","Mappers.SavedSearch","Parameters.parameters5","Mappers.SavedSearchesListResult","Parameters.gatewayId","Mappers.SearchGetSchemaResponse","Mappers.WorkspacePurgeResponse","Mappers.WorkspacePurgePurgeHeaders","Parameters.body","Mappers.WorkspacePurgeStatusResponse","Parameters.purgeId","Mappers.ClusterListResult","Parameters.apiVersion2","Mappers.Cluster","Parameters.parameters6","Parameters.clusterName","Parameters.clusterName1","Parameters.parameters7","Mappers.OperationListResult","Parameters.apiVersion3","Mappers.WorkspaceListResult","Mappers.Workspace","Parameters.parameters8","Parameters.force","Parameters.parameters9","Mappers.TablesListResult","Mappers.Table","Parameters.parameters10","Parameters.tableName","coreRestPipeline"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMG;AAMH,MAAM,OAAO,GAAG,IAAI,OAAO,EAAoB,CAAC;AAEhD;;;;;;AAMG;AACG,SAAU,oBAAoB,CAAC,IAAa,EAAA;;IAChD,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE;AAC7C,QAAA,OAAO,SAAS,CAAC;AAClB,KAAA;IACD,OAAO,CAAA,EAAA,GAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,iBAAiB,CAAC;AAC9C,CAAC;AAEe,SAAA,oBAAoB,CAClC,IAAa,EACb,iBAAqC,EAAA;;IAErC,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,iBAAiB,EAAE;QACnE,OAAO;AACR,KAAA;IACD,MAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC;AACzC,IAAA,QAAQ,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC/C,IAAA,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC9B;;ACtCA;;;;;;AAMG;AAktCH;AACYA,mCAeX;AAfD,CAAA,UAAY,iBAAiB,EAAA;;AAE3B,IAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,iBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;;AAE3B,IAAA,iBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;;AAEnC,IAAA,iBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;;AAEX,IAAA,iBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;;AAEjC,IAAA,iBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;;AAE7B,IAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAfWA,yBAAiB,KAAjBA,yBAAiB,GAe5B,EAAA,CAAA,CAAA,CAAA;AAiBD;AACYC,2BAKX;AALD,CAAA,UAAY,SAAS,EAAA;;AAEnB,IAAA,SAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;;AAEjC,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EALWA,iBAAS,KAATA,iBAAS,GAKpB,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,qCAmEX;AAnED,CAAA,UAAY,mBAAmB,EAAA;;AAE7B,IAAA,mBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;;AAE7B,IAAA,mBAAA,CAAA,2BAAA,CAAA,GAAA,2BAAuD,CAAA;;AAEvD,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;;AAE3B,IAAA,mBAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;;AAE/C,IAAA,mBAAA,CAAA,wBAAA,CAAA,GAAA,wBAAiD,CAAA;;AAEjD,IAAA,mBAAA,CAAA,4BAAA,CAAA,GAAA,4BAAyD,CAAA;;AAEzD,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;;AAE3C,IAAA,mBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;;AAE/B,IAAA,mBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;;AAErC,IAAA,mBAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;;AAEvC,IAAA,mBAAA,CAAA,0BAAA,CAAA,GAAA,0BAAqD,CAAA;;AAErD,IAAA,mBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;;AAEzC,IAAA,mBAAA,CAAA,wBAAA,CAAA,GAAA,wBAAiD,CAAA;;AAEjD,IAAA,mBAAA,CAAA,qCAAA,CAAA,GAAA,qCAA2E,CAAA;;AAE3E,IAAA,mBAAA,CAAA,+BAAA,CAAA,GAAA,+BAA+D,CAAA;;AAE/D,IAAA,mBAAA,CAAA,wBAAA,CAAA,GAAA,wBAAiD,CAAA;;AAEjD,IAAA,mBAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;;AAEnD,IAAA,mBAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;;AAEnD,IAAA,mBAAA,CAAA,+BAAA,CAAA,GAAA,+BAA+D,CAAA;;AAE/D,IAAA,mBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;;AAErC,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,mBAAA,CAAA,sCAAA,CAAA,GAAA,sCAA6E,CAAA;;AAE7E,IAAA,mBAAA,CAAA,oDAAA,CAAA,GAAA,oDAAyG,CAAA;;AAEzG,IAAA,mBAAA,CAAA,sCAAA,CAAA,GAAA,sCAA6E,CAAA;;AAE7E,IAAA,mBAAA,CAAA,sDAAA,CAAA,GAAA,sDAA6G,CAAA;;AAE7G,IAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;;AAE3C,IAAA,mBAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;;AAEvC,IAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,mBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;;AAE7B,IAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;;AAE3C,IAAA,mBAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AACjD,CAAC,EAnEWA,2BAAmB,KAAnBA,2BAAmB,GAmE9B,EAAA,CAAA,CAAA,CAAA;AA2CD;AACYC,gDASX;AATD,CAAA,UAAY,8BAA8B,EAAA;;AAExC,IAAA,8BAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,8BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,8BAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;;AAE3C,IAAA,8BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EATWA,sCAA8B,KAA9BA,sCAA8B,GASzC,EAAA,CAAA,CAAA,CAAA;AAcD;AACYC,0CAKX;AALD,CAAA,UAAY,wBAAwB,EAAA;;AAElC,IAAA,wBAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;;AAET,IAAA,wBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EALWA,gCAAwB,KAAxBA,gCAAwB,GAKnC,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,kCAeX;AAfD,CAAA,UAAY,gBAAgB,EAAA;;AAE1B,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;;AAEzB,IAAA,gBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC7C,CAAC,EAfWA,wBAAgB,KAAhBA,wBAAgB,GAe3B,EAAA,CAAA,CAAA,CAAA;AAiBD;AACYC,qCAKX;AALD,CAAA,UAAY,mBAAmB,EAAA;;AAE7B,IAAA,mBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;;AAEX,IAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EALWA,2BAAmB,KAAnBA,2BAAmB,GAK9B,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,iCAKX;AALD,CAAA,UAAY,eAAe,EAAA;;AAEzB,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EALWA,uBAAe,KAAfA,uBAAe,GAK1B,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,yCAGX;AAHD,CAAA,UAAY,uBAAuB,EAAA;;AAEjC,IAAA,uBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC7C,CAAC,EAHWA,+BAAuB,KAAvBA,+BAAuB,GAGlC,EAAA,CAAA,CAAA,CAAA;AAWD;AACYC,0CAeX;AAfD,CAAA,UAAY,wBAAwB,EAAA;;AAElC,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,wBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;;AAEjB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,wBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;;AAE3C,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAfWA,gCAAwB,KAAxBA,gCAAwB,GAenC,EAAA,CAAA,CAAA,CAAA;AAiBD;AACYC,kCAKX;AALD,CAAA,UAAY,gBAAgB,EAAA;;AAE1B,IAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EALWA,wBAAgB,KAAhBA,wBAAgB,GAK3B,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,4CAeX;AAfD,CAAA,UAAY,0BAA0B,EAAA;;AAEpC,IAAA,0BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,0BAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,0BAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;;AAEjB,IAAA,0BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,0BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,0BAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;;AAE3C,IAAA,0BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAfWA,kCAA0B,KAA1BA,kCAA0B,GAerC,EAAA,CAAA,CAAA,CAAA;AAiBD;AACYC,2CAiBX;AAjBD,CAAA,UAAY,yBAAyB,EAAA;;AAEnC,IAAA,yBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,yBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,yBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,yBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,yBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,yBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;;AAEzB,IAAA,yBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;;AAE3C,IAAA,yBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAjBWA,iCAAyB,KAAzBA,iCAAyB,GAiBpC,EAAA,CAAA,CAAA,CAAA;AAkBD;AACYC,0CAaX;AAbD,CAAA,UAAY,wBAAwB,EAAA;;AAElC,IAAA,wBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;;AAE7B,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,wBAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;;AAE/C,IAAA,wBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACvC,CAAC,EAbWA,gCAAwB,KAAxBA,gCAAwB,GAanC,EAAA,CAAA,CAAA,CAAA;AAgBD;AACYC,8CAKX;AALD,CAAA,UAAY,4BAA4B,EAAA;;AAEtC,IAAA,4BAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,4BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EALWA,oCAA4B,KAA5BA,oCAA4B,GAKvC,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,oCASX;AATD,CAAA,UAAY,kBAAkB,EAAA;;AAE5B,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;;AAE3B,IAAA,kBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;;AAEnC,IAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EATWA,0BAAkB,KAAlBA,0BAAkB,GAS7B,EAAA,CAAA,CAAA,CAAA;AAcD;AACYC,oCAKX;AALD,CAAA,UAAY,kBAAkB,EAAA;;AAE5B,IAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;;AAEf,IAAA,kBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EALWA,0BAAkB,KAAlBA,0BAAkB,GAK7B,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,qCAiBX;AAjBD,CAAA,UAAY,mBAAmB,EAAA;;AAE7B,IAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;;AAEjB,IAAA,mBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;;AAEX,IAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAjBWA,2BAAmB,KAAnBA,2BAAmB,GAiB9B,EAAA,CAAA,CAAA,CAAA;AAkBD;AACYC,6CASX;AATD,CAAA,UAAY,2BAA2B,EAAA;;AAErC,IAAA,2BAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;;AAEX,IAAA,2BAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,2BAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,2BAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACX,CAAC,EATWA,mCAA2B,KAA3BA,mCAA2B,GAStC,EAAA,CAAA,CAAA,CAAA;AAcD;AACYC,iCAKX;AALD,CAAA,UAAY,eAAe,EAAA;;AAEzB,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EALWA,uBAAe,KAAfA,uBAAe,GAK1B,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,oCASX;AATD,CAAA,UAAY,kBAAkB,EAAA;;AAE5B,IAAA,kBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,kBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;;AAEvB,IAAA,kBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;;AAE7B,IAAA,kBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACjC,CAAC,EATWA,0BAAkB,KAAlBA,0BAAkB,GAS7B,EAAA,CAAA,CAAA,CAAA;AAcD;AACYC,uCAOX;AAPD,CAAA,UAAY,qBAAqB,EAAA;;AAE/B,IAAA,qBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;;AAEX,IAAA,qBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,qBAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;AACrD,CAAC,EAPWA,6BAAqB,KAArBA,6BAAqB,GAOhC,EAAA,CAAA,CAAA,CAAA;AAaD;AACYC,4CAOX;AAPD,CAAA,UAAY,0BAA0B,EAAA;;AAEpC,IAAA,0BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;;AAErB,IAAA,0BAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;;AAEzB,IAAA,0BAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAPWA,kCAA0B,KAA1BA,kCAA0B,GAOrC,EAAA,CAAA,CAAA;;AC70DD;;;;;;AAMG;AAII,MAAM,+BAA+B,GAA+B;AACzE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iCAAiC;AAC5C,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,uBAAuB;AACnC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,aAAa;AACzB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;AACxB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,aAAa;AACzB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,qBAAqB;AACjC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oCAAoC,GAA+B;AAC9E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sCAAsC;AACjD,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,4BAA4B;AACxC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,2CAA2C,GAA+B;AACrF,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,6CAA6C;AACxD,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0CAA0C,GAA+B;AACpF,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4CAA4C;AACvD,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mDAAmD;AAC/D,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;AAClB,oBAAA,KAAK,EAAE;AACL,wBAAA,IAAI,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE;AAClE,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iDAAiD,GAA+B;AAC3F,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mDAAmD;AAC9D,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,YAAY;AACxB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA+B;AAClD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,UAAU;AACrB,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,YAAY;AACxB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,+BAA+B,GAA+B;AACzE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iCAAiC;AAC5C,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,+BAA+B;AAC3C,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mCAAmC,GAA+B;AAC7E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qCAAqC;AAChD,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,iBAAiB;AAC7B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;AAC5B,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;AAC5B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,eAAe;AAC3B,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,eAAe,EAAE;AACf,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,aAAa;AACzB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;AACxB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA+B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gBAAgB;AAC3B,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,wBAAwB,GAA+B;AAClE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,0BAA0B;AACrC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,gBAAgB;AAC5B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,GAAG,GAA+B;AAC7C,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,KAAK;AAChB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,aAAa;AACzB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,wBAAwB,EAAE;AACxB,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,gBAAgB;AAC5B,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,mBAAmB;AAC/B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA+B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gBAAgB;AAC3B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,aAAa;AACzB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,YAAY;AACxB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,wBAAwB,EAAE;AACxB,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,sBAAsB;AAClC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;AACxB,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,2BAA2B;AACvC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,KAAK;AACZ,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,sBAAsB,GAA+B;AAChE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,wBAAwB;AACnC,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,4BAA4B,GAA+B;AACtE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,8BAA8B;AACzC,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,SAAS;AACrB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA+B;AAClD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,UAAU;AACrB,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,sBAAsB,EAAE;AACtB,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;AAClB,oBAAA,KAAK,EAAE;wBACL,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wBAAwB,EAAE;AACjE,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,sBAAsB,GAA+B;AAChE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,wBAAwB;AACnC,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AACvC,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,6BAA6B,GAA+B;AACvE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,+BAA+B;AAC1C,QAAA,eAAe,EAAE;AACf,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,UAAU;AACtB,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,WAAW;AACvB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA+B;AACnD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,WAAW;AACtB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,WAAW;AACvB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,wBAAwB,EAAE;AACxB,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAC3D,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;QAC9B,oBAAoB,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AAClD,QAAA,eAAe,EAAE;AACf,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,0BAA0B,EAAE;AAC1B,gBAAA,cAAc,EAAE,4BAA4B;AAC5C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,2CAA2C,EAAE;AAC3C,gBAAA,cAAc,EAAE,6CAA6C;AAC7D,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,OAAO;AACnB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,eAAe,EAAE;AACf,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,qBAAqB,EAAE;AACrB,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,qBAAqB,EAAE;AACrB,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,WAAW,EAAE;AACX,oBAAA,UAAU,EAAE,IAAI;AACjB,iBAAA;AACD,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,eAAe,EAAE;AACf,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,WAAW,EAAE;AACX,oBAAA,UAAU,EAAE,IAAI;AACjB,iBAAA;AACD,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA+B;AAChD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,QAAQ;AACnB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,QAAQ;AACpB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,eAAe,EAAE;AACf,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,QAAQ;AACpB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA+B;AAChD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,QAAQ;AACnB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,qBAAqB,GAA+B;AAC/D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EAC1C,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA,EACD,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA+B;AACpE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,uBAAuB,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EAC/C,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA,EACD,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA,EACD,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,6CAA6C;AACzD,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;AAClB,oBAAA,KAAK,EAAE;AACL,wBAAA,IAAI,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE;AAClE,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,oBACV,QAAQ,CAAC,IAAI,CAAC,eAAe,CACjC;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EAChC,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EAChC,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;QACvB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,mCAAmC;AACnD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,6BAA6B,EAAE;AAC7B,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,8CAA8C;AAC9D,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;QACvB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,qBAAqB,EAAE;AACrB,gBAAA,cAAc,EAAE,kCAAkC;AAClD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,6BAA6B,GAA+B;AACvE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,2BAA2B;AAC3C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,aAAa,EAAE;wBACb,YAAY;wBACZ,aAAa;wBACb,OAAO;wBACP,WAAW;wBACX,QAAQ;AACT,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA+B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,2BAA2B;AAC3C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,gBAAgB;AAC5B,iBAAA;AACF,aAAA,EACD,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,sBAAsB;AAClC,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;QACxB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,KAAK;AACjB,yBAAA;AACF,qBAAA;AACF,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA+B;AAC/C,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,OAAO;QAClB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,yBAAyB;AACrC,iBAAA;AACF,aAAA,EACD,eAAe,EAAE;AACf,gBAAA,WAAW,EAAE;AACX,oBAAA,gBAAgB,EAAE,GAAG;AACrB,oBAAA,gBAAgB,EAAE,CAAC;AACpB,iBAAA;AACD,gBAAA,cAAc,EAAE,4BAA4B;AAC5C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,oBAAoB,EAAE;AACpB,gBAAA,WAAW,EAAE;AACX,oBAAA,gBAAgB,EAAE,IAAI;AACtB,oBAAA,gBAAgB,EAAE,CAAC;AACpB,iBAAA;AACD,gBAAA,cAAc,EAAE,iCAAiC;AACjD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,sBAAsB,EAAE;AACtB,gBAAA,cAAc,EAAE,mCAAmC;AACnD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,eAAe;AAC3B,iBAAA;AACF,aAAA,EACD,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,cAAc;AAC1B,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,iCAAiC;AACjD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,QAAQ;AACpB,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,wBAAwB,EAAE;AACxB,gBAAA,cAAc,EAAE,qCAAqC;AACrD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,6BAA6B,EAAE;AAC7B,gBAAA,cAAc,EAAE,0CAA0C;AAC1D,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,OAAO,GAA+B;AACjD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,SAAS;QACpB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,eAAe,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACvC,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,UAAU;AACtB,iBAAA;AACF,aAAA,EACD,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;AACF,aAAA,EACD,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,yBAAyB,EAAE;AACzB,gBAAA,cAAc,EAAE,sCAAsC;AACtD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,0BAA0B,EAAE;AAC1B,gBAAA,cAAc,EAAE,uCAAuC;AACvD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,iCAAiC;AACjD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,qBAAqB;AACjC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,6BAA6B,EAAE;AAC7B,gBAAA,cAAc,EAAE,0CAA0C;AAC1D,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,+BAA+B;AAC3C,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA+B;AACnD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,WAAW;QACtB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,eAAe,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACvC,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,UAAU;AACtB,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,yBAAyB;AACrC,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,cAAc;AAC1B,iBAAA;AACF,aAAA,EACD,eAAe,EAAE;AACf,gBAAA,cAAc,EAAE,4BAA4B;AAC5C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,+BAA+B,EAAE;AAC/B,gBAAA,YAAY,EAAE,SAAS;AACvB,gBAAA,cAAc,EAAE,4CAA4C;AAC5D,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,2BAA2B,EAAE;AAC3B,gBAAA,YAAY,EAAE,SAAS;AACvB,gBAAA,cAAc,EAAE,wCAAwC;AACxD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,0BAA0B,EAAE;AAC1B,gBAAA,cAAc,EAAE,uCAAuC;AACvD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,2BAA2B;AACvC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA,EACD,mCAAmC,EAAE;AACnC,gBAAA,cAAc,EAAE,gDAAgD;AAChE,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA+B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EAC3C,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,UAAU;AACtB,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,cAAc;AAC1B,iBAAA;AACF,aAAA,EACD,eAAe,EAAE;AACf,gBAAA,cAAc,EAAE,4BAA4B;AAC5C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,+BAA+B,EAAE;AAC/B,gBAAA,YAAY,EAAE,SAAS;AACvB,gBAAA,cAAc,EAAE,4CAA4C;AAC5D,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,2BAA2B,EAAE;AAC3B,gBAAA,YAAY,EAAE,SAAS;AACvB,gBAAA,cAAc,EAAE,wCAAwC;AACxD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,0BAA0B,EAAE;AAC1B,gBAAA,cAAc,EAAE,uCAAuC;AACvD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,2BAA2B;AACvC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA,EACD,mCAAmC,EAAE;AACnC,gBAAA,cAAc,EAAE,gDAAgD;AAChE,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA+B;AACpE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;AACvC,QAAA,eAAe,EAAE;AACf,YAAA,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/hGD;;;;;;AAMG;AA0BI,MAAM,MAAM,GAAuB;AACxC,IAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,QAAQ;AACxB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA0B;AAC1C,IAAA,aAAa,EAAE,OAAO;AACtB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,OAAO;AACvB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,UAAU,GAA4B;AACjD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,YAAY;AAC1B,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA0B;AACnD,IAAA,aAAa,EAAE,gBAAgB;AAC/B,IAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,YAAA,SAAS,EAAE,CAAC;AACb,SAAA;AACD,QAAA,cAAc,EAAE,gBAAgB;AAChC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA0B;AACtD,IAAA,aAAa,EAAE,mBAAmB;AAClC,IAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,YAAA,SAAS,EAAE,EAAE;AACb,YAAA,SAAS,EAAE,CAAC;AACb,SAAA;AACD,QAAA,cAAc,EAAE,mBAAmB;AACnC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;AACzC,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,cAAc;AAC9B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,4BAA4B,GAAuB;AAC9D,IAAA,aAAa,EAAE,8BAA8B;AAC7C,IAAA,MAAM,EAAEC,qBAA2B;CACpC,CAAC;AAEK,MAAM,aAAa,GAA0B;AAClD,IAAA,aAAa,EAAE,eAAe;AAC9B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,eAAe;AAC/B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAAuB;AAC/C,IAAA,aAAa,EAAE,eAAe;AAC9B,IAAA,MAAM,EAAEC,YAAkB;CAC3B,CAAC;AAEK,MAAM,QAAQ,GAA0B;AAC7C,IAAA,aAAa,EAAE,UAAU;AACzB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,UAAU;AAC1B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,GAAG,GAA4B;AAC1C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;AACjC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,MAAM;AACtB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA4B;AAClD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;AACzC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,SAAS;AAChB,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA4B;AAChD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;AACvC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,YAAY;AAC5B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,qBAAqB,GAAuB;AACvD,IAAA,aAAa,EAAE,uBAAuB;AACtC,IAAA,MAAM,EAAEC,0CAAgD;CACzD,CAAC;AAEK,MAAM,EAAE,GAA0B;AACvC,IAAA,aAAa,EAAE,IAAI;AACnB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,IAAI;AACpB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAAuB;AAC9C,IAAA,aAAa,EAAE,cAAc;AAC7B,IAAA,MAAM,EAAEC,0BAAgC;CACzC,CAAC;AAEK,MAAM,aAAa,GAA0B;AAClD,IAAA,aAAa,EAAE,eAAe;AAC9B,IAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,YAAA,OAAO,EAAE,IAAI,MAAM,CAAC,uCAAuC,CAAC;AAC5D,YAAA,SAAS,EAAE,EAAE;AACb,YAAA,SAAS,EAAE,CAAC;AACb,SAAA;AACD,QAAA,cAAc,EAAE,eAAe;AAC/B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA4B;AAClD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,YAAY;AAC1B,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAAuB;AAC5C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,UAAgB;CACzB,CAAC;AAEK,MAAM,cAAc,GAA0B;AACnD,IAAA,aAAa,EAAE,gBAAgB;AAC/B,IAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,YAAA,OAAO,EAAE,IAAI,MAAM,CAAC,oCAAoC,CAAC;AACzD,YAAA,SAAS,EAAE,EAAE;AACb,YAAA,SAAS,EAAE,CAAC;AACb,SAAA;AACD,QAAA,cAAc,EAAE,gBAAgB;AAChC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA0B;AACpD,IAAA,aAAa,EAAE,gBAAgB;AAC/B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,gBAAgB;AAChC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,UAAgB;CACzB,CAAC;AAEK,MAAM,cAAc,GAA0B;AACnD,IAAA,aAAa,EAAE,gBAAgB;AAC/B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,gBAAgB;AAChC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA4B;AAC7C,IAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,SAAS;AACzB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA4B;AAChD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;AACvC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,YAAY;AAC5B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA0B;AACzD,IAAA,aAAa,EAAE,sBAAsB;AACrC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,sBAAsB;AACtC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,aAAmB;CAC5B,CAAC;AAEK,MAAM,iBAAiB,GAA0B;AACtD,IAAA,aAAa,EAAE,mBAAmB;AAClC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,mBAAmB;AACnC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,6BAAmC;CAC5C,CAAC;AAEK,MAAM,cAAc,GAA0B;AACnD,IAAA,aAAa,EAAE,gBAAgB;AAC/B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,gBAAgB;AAChC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,MAAM;AACZ,YAAA,aAAa,EAAE;gBACb,YAAY;gBACZ,aAAa;gBACb,OAAO;gBACP,WAAW;gBACX,QAAQ;AACT,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA0B;AAC7C,IAAA,aAAa,EAAE,UAAU;AACzB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,UAAU;AAC1B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA0B;AACrD,IAAA,aAAa,EAAE,kBAAkB;AACjC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,kBAAkB;AAClC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,cAAoB;CAC7B,CAAC;AAEK,MAAM,kBAAkB,GAA0B;AACvD,IAAA,aAAa,EAAE,oBAAoB;AACnC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,oBAAoB;AACpC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA0B;AAClD,IAAA,aAAa,EAAE,eAAe;AAC9B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,eAAe;AAC/B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,WAAiB;CAC1B,CAAC;AAEK,MAAM,SAAS,GAA0B;AAC9C,IAAA,aAAa,EAAE,WAAW;AAC1B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,WAAW;AAC3B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,IAAI,GAAuB;AACtC,IAAA,aAAa,EAAE,MAAM;AACrB,IAAA,MAAM,EAAEC,kBAAwB;CACjC,CAAC;AAEK,MAAM,OAAO,GAA0B;AAC5C,IAAA,aAAa,EAAE,SAAS;AACxB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,SAAS;AACzB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA4B;AAClD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,YAAY;AAC1B,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,OAAa;CACtB,CAAC;AAEK,MAAM,WAAW,GAA0B;AAChD,IAAA,aAAa,EAAE,aAAa;AAC5B,IAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,YAAA,OAAO,EAAE,IAAI,MAAM,CAAC,uCAAuC,CAAC;AAC5D,YAAA,SAAS,EAAE,EAAE;AACb,YAAA,SAAS,EAAE,CAAC;AACb,SAAA;AACD,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA0B;AACjD,IAAA,aAAa,EAAE,aAAa;AAC5B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,YAAkB;CAC3B,CAAC;AAEK,MAAM,WAAW,GAA4B;AAClD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,YAAY;AAC1B,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,SAAe;CACxB,CAAC;AAEK,MAAM,KAAK,GAA4B;AAC5C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;AACnC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,OAAO;AACvB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,SAAS;AAChB,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,cAAoB;CAC7B,CAAC;AAEK,MAAM,YAAY,GAAuB;AAC9C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,KAAW;CACpB,CAAC;AAEK,MAAM,SAAS,GAA0B;AAC9C,IAAA,aAAa,EAAE,WAAW;AAC1B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,WAAW;AAC3B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF;;ACpgBD;;;;;;AAMG;AA+BH;AACA;MACa,cAAc,CAAA;AAGzB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,IAAI,CACT,OAAsC,EAAA;QAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;gBACD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAsC,EACtC,QAAuB,EAAA;;AAEvB,YAAA,IAAI,MAA8B,CAAC;YACnC,IAAI,iBAAiB,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE;gBACtB,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;AACnC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAC,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;AACD,YAAA,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,MAAMA,aAAA,CAAA,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AAC1D,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,OAAsC,EAAA;;;;gBAEtC,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;AAIG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,OAAqD,EAAA;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;gBACD,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,6BAA6B,CAC1C,iBAAyB,EACzB,OAAqD,EACrD,QAAuB,EAAA;;AAEvB,YAAA,IAAI,MAA6C,CAAC;YAClD,IAAI,iBAAiB,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE;gBACtB,MAAM,GAAG,MAAMD,aAAA,CAAA,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AACrE,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;AACD,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAqD,EAAA;;;;AAErD,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACK,IAAA,KAAK,CACX,OAAsC,EAAA;AAEtC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEE,mBAAiB,CAAC,CAAC;KACzE;AAED;;;;AAIG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,OAAqD,EAAA;AAErD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BC,kCAAgC,CACjC,CAAC;KACH;AAED;;;;;;;AAOG;AACH,IAAA,yBAAyB,CACvB,iBAAyB,EACzB,4BAAmD,EACnD,OAA2D,EAAA;AAE3D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,4BAA4B,EAAE,OAAO,EAAE,EAC5D,sCAAsC,CACvC,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,OAAwC,EAAA;AAExC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CC,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,OAAqC,EAAA;AAErC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CC,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;;;AAQG;AACH,IAAA,cAAc,CACZ,iBAAyB,EACzB,aAAqB,EACrB,4BAAmD,EACnD,OAAgD,EAAA;AAEhD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,aAAa;YACb,4BAA4B;YAC5B,OAAO;SACR,EACDC,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,UAAU,CACR,iBAAyB,EACzB,aAAqB,EACrB,aAA2B,EAC3B,OAA4C,EAAA;AAE5C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa,EAAE,OAAO,EAAE,EAC5D,uBAAuB,CACxB,CAAC;KACH;AAED;;;;AAIG;IACK,SAAS,CACf,QAAgB,EAChB,OAA0C,EAAA;AAE1C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBC,uBAAqB,CACtB,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAyD,EAAA;AAEzD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCC,sCAAoC,CACrC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMC,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMR,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,oFAAoF;AACtF,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAES,+BAAuC;AACpD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEC,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMN,kCAAgC,GAA6B;AACjE,IAAA,IAAI,EACF,uHAAuH;AACzH,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEQ,+BAAuC;AACpD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACD,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;AACvE,IAAA,IAAI,EACF,uHAAuH;AACzH,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAES,qBAA6B;AAC1C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEN,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEO,4BAAuC;AACpD,IAAA,eAAe,EAAE,CAACN,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC7B,KAAA;IACD,gBAAgB,EAAE,CAACD,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAML,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,uIAAuI;AACzI,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEQ,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACL,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,uIAAuI;AACzI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEa,qBAA6B;AAC1C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEN,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACL,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMH,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,uIAAuI;AACzI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEY,qBAA6B;AAC1C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEN,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEO,4BAAuC;AACpD,IAAA,eAAe,EAAE,CAACN,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACzB,KAAA;IACD,gBAAgB,EAAE,CAACL,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;AACxD,IAAA,IAAI,EACF,uIAAuI;AACzI,IAAA,UAAU,EAAE,OAAO;AACnB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAES,qBAA6B;AAC1C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEN,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEU,aAAwB;AACrC,IAAA,eAAe,EAAE,CAACT,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACzB,KAAA;IACD,gBAAgB,EAAE,CAACL,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAMF,uBAAqB,GAA6B;AACtD,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEI,+BAAuC;AACpD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAQ,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMD,sCAAoC,GAA6B;AACrE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,+BAAuC;AACpD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAM,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACzgBD;;;;;;AAMG;AA6BH;AACA;MACa,WAAW,CAAA;AAGtB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,IAAI,CACT,iBAAyB,EACzB,aAAqB,EACrB,OAAmC,EAAA;AAEnC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,cAAc,CAC3B,iBAAyB,EACzB,aAAqB,EACrB,OAAmC,EACnC,QAAuB,EAAA;;AAEvB,YAAA,IAAI,MAA2B,CAAC;YAChC,IAAI,iBAAiB,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE;AACtB,gBAAA,MAAM,GAAG,MAAAV,aAAA,CAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,aAAa,EAAE,OAAO,CAAC,CAAA,CAAC;AACrE,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;AACD,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,aAAa,EACb,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,iBAAyB,EACzB,aAAqB,EACrB,OAAmC,EAAA;;;;AAEnC,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;;AAQG;AACI,IAAA,UAAU,CACf,iBAAyB,EACzB,aAAqB,EACrB,qBAAiE,EACjE,OAAqC,EAAA;AAErC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAC/B,iBAAiB,EACjB,aAAa,EACb,qBAAqB,EACrB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,gBAAgB,CAC1B,iBAAiB,EACjB,aAAa,EACb,qBAAqB,EACrB,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;IAEc,gBAAgB,CAC7B,iBAAyB,EACzB,aAAqB,EACrB,qBAAiE,EACjE,OAAqC,EACrC,QAAuB,EAAA;;AAEvB,YAAA,IAAI,MAA6B,CAAC;YAClC,IAAI,iBAAiB,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE;AACtB,gBAAA,MAAM,GAAG,MAAAD,aAAA,CAAM,IAAI,CAAC,OAAO,CACzB,iBAAiB,EACjB,aAAa,EACb,qBAAqB,EACrB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;AACD,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAMA,aAAA,CAAA,IAAI,CAAC,WAAW,CAC7B,iBAAiB,EACjB,aAAa,EACb,qBAAqB,EACrB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,eAAe,CAC5B,iBAAyB,EACzB,aAAqB,EACrB,qBAAiE,EACjE,OAAqC,EAAA;;;;AAErC,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,gBAAgB,CAC5C,iBAAiB,EACjB,aAAa,EACb,qBAAqB,EACrB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,KAAK,CACX,iBAAyB,EACzB,aAAqB,EACrB,OAAmC,EAAA;AAEnC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CE,mBAAiB,CAClB,CAAC;KACH;AAED;;;;;;;;AAQG;AACK,IAAA,OAAO,CACb,iBAAyB,EACzB,aAAqB,EACrB,qBAAiE,EACjE,OAAqC,EAAA;AAErC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,qBAAqB,EAAE,OAAO,EAAE,EACpE,mBAAmB,CACpB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,EAAU,EACV,OAAkC,EAAA;AAElC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,EAAE,EAAE,OAAO,EAAE,EACjDG,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;;;AAQG;IACH,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,EAAU,EACV,YAAwC,EACxC,OAAkC,EAAA;QAElC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,EAC/D,gBAAgB,CACjB,CAAC;KACH;AAED;;;;;;;;AAQG;IACH,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,EAAU,EACV,YAAwC,EACxC,OAAqC,EAAA;QAErC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,EAC/DmB,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,EAAU,EACV,OAAqC,EAAA;AAErC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,EAAE,EAAE,OAAO,EAAE,EACjDpB,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,SAAS,CACf,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,OAAuC,EAAA;AAEvC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,EACvDG,uBAAqB,CACtB,CAAC;KACH;AAED;;;;;;;;AAQG;IACK,WAAW,CACjB,iBAAyB,EACzB,aAAqB,EACrB,qBAAiE,EACjE,QAAgB,EAChB,OAAyC,EAAA;AAEzC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,aAAa;YACb,qBAAqB;YACrB,QAAQ;YACR,OAAO;SACR,EACD,uBAAuB,CACxB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAME,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMR,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,+IAA+I;AACjJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEuB,oCAA4C;AACzD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEb,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE;AACf,QAAAC,UAAqB;AACrB,QAAAa,GAAc;AACd,QAAAC,WAAsB;AACtB,QAAAC,SAAoB;AACrB,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAd,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACL,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,sJAAsJ;AACxJ,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEgB,oCAA4C;AACzD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEb,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEiB,qBAAgC;AAC7C,IAAA,eAAe,EAAE;AACf,QAAAhB,UAAqB;AACrB,QAAAa,GAAc;AACd,QAAAC,WAAsB;AACtB,QAAAC,SAAoB;AACrB,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAd,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACzB,KAAA;IACD,gBAAgB,EAAE,CAACL,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,oJAAoJ;AACtJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEyB,0BAAkC;AAC/C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAElB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACxB,QAAAU,EAAa;AACd,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACf,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,gBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,oJAAoJ;AACtJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEqB,0BAAkC;AAC/C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAElB,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEoB,YAAuB;AACpC,IAAA,eAAe,EAAE,CAACnB,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACxB,QAAAU,EAAa;AACd,KAAA;IACD,gBAAgB,EAAE,CAACf,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAMe,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,oJAAoJ;AACtJ,IAAA,UAAU,EAAE,OAAO;AACnB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEM,0BAAkC;AAC/C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAElB,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEoB,YAAuB;AACpC,IAAA,eAAe,EAAE,CAACnB,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACxB,QAAAU,EAAa;AACd,KAAA;IACD,gBAAgB,EAAE,CAACf,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAML,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,oJAAoJ;AACtJ,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEQ,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACxB,QAAAU,EAAa;AACd,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACf,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMF,uBAAqB,GAA6B;AACtD,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEkB,oCAA4C;AACzD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEb,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACxB,QAAAE,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;AACxD,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEgB,oCAA4C;AACzD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEb,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAI,aAAwB;AACxB,QAAAE,QAAmB;AACpB,KAAA;IACD,gBAAgB,EAAE,CAACP,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX;;ACtkBD;;;;;;AAMG;AAmBH;AACA;MACa,eAAe,CAAA;AAG1B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,eAAe,CACpB,iBAAyB,EACzB,aAAqB,EACrB,OAAkD,EAAA;AAElD,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,yBAAyB,CACtC,iBAAyB,EACzB,aAAqB,EACrB,OAAkD,EAClD,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAA0C,CAAC;AAC/C,YAAA,MAAM,GAAG,MAAAV,aAAA,CAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,wBAAwB,CACrC,iBAAyB,EACzB,aAAqB,EACrB,OAAkD,EAAA;;;;AAElD,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,gBAAgB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,OAAkD,EAAA;AAElD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CiC,8BAA4B,CAC7B,CAAC;KACH;AAED;;;;;;;AAOG;IACH,cAAc,CACZ,iBAAyB,EACzB,aAAqB,EACrB,cAAsB,EACtB,UAAsB,EACtB,OAAiD,EAAA;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EACzE3B,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,cAAsB,EACtB,OAAsC,EAAA;AAEtC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,EAC7DD,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,cAAsB,EACtB,OAAyC,EAAA;AAEzC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,EAC7DD,qBAAmB,CACpB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMK,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMuB,8BAA4B,GAA6B;AAC7D,IAAA,IAAI,EACF,mJAAmJ;AACrJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEC,oBAA4B;AACzC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEtB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACuB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMH,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,oKAAoK;AACtK,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE+B,UAAkB;AAC/B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,UAAkB;AAC/B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEzB,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAE0B,UAAqB;AAClC,IAAA,eAAe,EAAE,CAACH,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAG,cAAyB;AAC1B,KAAA;IACD,gBAAgB,EAAE,CAACvB,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,oKAAoK;AACtK,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEgC,UAAkB;AAC/B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEzB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACuB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAI,eAA0B;AAC3B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACxB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAML,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,oKAAoK;AACtK,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEQ,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACuB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAI,eAA0B;AAC3B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACxB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACrRD;;;;;;AAMG;AAsBH;AACA;MACa,eAAe,CAAA;AAG1B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;AAMG;AACI,IAAA,eAAe,CACpB,iBAAyB,EACzB,aAAqB,EACrB,MAAc,EACd,OAAkD,EAAA;AAElD,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,aAAa,EACb,MAAM,EACN,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,aAAa,EACb,MAAM,EACN,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;IAEc,yBAAyB,CACtC,iBAAyB,EACzB,aAAqB,EACrB,MAAc,EACd,OAAkD,EAClD,QAAuB,EAAA;;AAEvB,YAAA,IAAI,MAA0C,CAAC;YAC/C,IAAI,iBAAiB,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE;AACtB,gBAAA,MAAM,GAAG,MAAAV,aAAA,CAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,aAAa,EACb,MAAM,EACN,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;AACD,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,aAAa,EACb,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,wBAAwB,CACrC,iBAAyB,EACzB,aAAqB,EACrB,MAAc,EACd,OAAkD,EAAA;;;;AAElD,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,aAAa,EACb,MAAM,EACN,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACH,cAAc,CACZ,iBAAyB,EACzB,aAAqB,EACrB,cAAsB,EACtB,UAAsB,EACtB,OAAiD,EAAA;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EACzEM,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,cAAsB,EACtB,OAAyC,EAAA;AAEzC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,EAC7DF,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,cAAsB,EACtB,OAAsC,EAAA;AAEtC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,EAC7DC,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,gBAAgB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,MAAc,EACd,OAAkD,EAAA;AAElD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,MAAM,EAAE,OAAO,EAAE,EACrD4B,8BAA4B,CAC7B,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,oBAAoB,CAC1B,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,OAAsD,EAAA;AAEtD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,EACvDQ,kCAAgC,CACjC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMhC,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMJ,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,oKAAoK;AACtK,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEoC,UAAkB;AAC/B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,UAAkB;AAC/B,SAAA;AACF,KAAA;IACD,WAAW,EAAEC,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACR,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAQ,cAAyB;AAC1B,KAAA;IACD,gBAAgB,EAAE,CAAC5B,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAML,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,oKAAoK;AACtK,IAAA,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;AAC/B,IAAA,eAAe,EAAE,CAAC+B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAQ,cAAyB;AAC1B,KAAA;gBACDnC,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,oKAAoK;AACtK,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEqC,UAAkB;AAC/B,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACP,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAQ,cAAyB;AAC1B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAC5B,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMwB,8BAA4B,GAA6B;AAC7D,IAAA,IAAI,EACF,mJAAmJ;AACrJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEY,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE;AACf,QAAAV,WAAsB;AACtB,QAAAW,MAAiB;AACjB,QAAAC,SAAoB;AACrB,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAjC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMgC,kCAAgC,GAA6B;AACjE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEI,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAA/B,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAM,QAAmB;AACnB,QAAAa,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC7UD;;;;;;AAMG;AAcH;MACa,qBAAqB,CAAA;AAGhC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;AAMG;AACH,IAAA,OAAO,CACL,iBAAyB,EACzB,aAAqB,EACrB,oBAA4B,EAC5B,OAAgD,EAAA;AAEhD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,oBAAoB,EAAE,OAAO,EAAE,EACnE,oBAAoB,CACrB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,oBAA4B,EAC5B,OAA+C,EAAA;AAE/C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,oBAAoB,EAAE,OAAO,EAAE,EACnE,mBAAmB,CACpB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,IAAI,CACF,iBAAyB,EACzB,aAAqB,EACrB,OAA6C,EAAA;AAE7C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CP,mBAAiB,CAClB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMO,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,oBAAoB,GAA6B;AACrD,IAAA,IAAI,EACF,wLAAwL;AAC1L,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;AACtB,IAAA,eAAe,EAAE,CAACyB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAY,oBAA+B;AAChC,KAAA;gBACDvC,YAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,uLAAuL;AACzL,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;AACtB,IAAA,eAAe,EAAE,CAAC0B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAY,oBAA+B;AAChC,KAAA;gBACDvC,YAAU;CACX,CAAC;AACF,MAAMP,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,yJAAyJ;AAC3J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;AACH,YAAA,UAAU,EAAE;AACV,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kBAAkB,EAAE;AAC3D,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACiC,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AClJD;;;;;;AAMG;MAIU,OAAO,CAAA;AAClB,IAAA,WAAA,CACU,eAAkE,EAClE,IAA6B,EAC7B,IAIe,EAChB,WAAA,GAAsB,IAAI,CAAC,IAAK,EAChC,aAAwB,GAAA,IAAI,CAAC,UAAU,EAAA;QARtC,IAAe,CAAA,eAAA,GAAf,eAAe,CAAmD;QAClE,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAyB;QAC7B,IAAI,CAAA,IAAA,GAAJ,IAAI,CAIW;QAChB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAqB;QAChC,IAAa,CAAA,aAAA,GAAb,aAAa,CAA0B;KAC5C;IACS,kBAAkB,GAAA;;AAC7B,YAAA,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACnD,CAAA,CAAA;AAAA,KAAA;AACY,IAAA,eAAe,CAAC,IAAY,EAAA;;AACvC,YAAA,MAAM,EAA+B,GAAA,IAAI,CAAC,IAAI,CAAxC,CAAkB,QAAQ,GAA1BwC,YAAA,CAAA,EAAA,EAAA,CAAA,aAAA,CAA4B,EAAa;AAC/C,YAAA,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAChC,QAAQ,CAAA,EAAA,EACX,IAAI,EACJ,UAAU,EAAE,KAAK,IACjB,CAAC;SACJ,CAAA,CAAA;AAAA,KAAA;AACF;;ACjCD;;;;;;AAMG;AAsBH;AACA;MACa,kBAAkB,CAAA;AAG7B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,eAAe,CACpB,iBAAyB,EACzB,aAAqB,EACrB,OAAqD,EAAA;AAErD,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,yBAAyB,CACtC,iBAAyB,EACzB,aAAqB,EACrB,OAAqD,EACrD,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAA6C,CAAC;AAClD,YAAA,MAAM,GAAG,MAAAlD,aAAA,CAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,wBAAwB,CACrC,iBAAyB,EACzB,aAAqB,EACrB,OAAqD,EAAA;;;;AAErD,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACG,mBAAmB,CACvB,iBAAyB,EACzB,aAAqB,EACrB,iBAAyB,EACzB,UAAyB,EACzB,OAAoD,EAAA;;AAOpD,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACmBkD,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,aAAa;gBACb,iBAAiB;gBACjB,UAAU;gBACV,OAAO;aACR,EACD5C,6BAA2B,CAC5B,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAI6C,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACG,0BAA0B,CAC9B,iBAAyB,EACzB,aAAqB,EACrB,iBAAyB,EACzB,UAAyB,EACzB,OAAoD,EAAA;;AAEpD,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,aAAa,EACb,iBAAiB,EACjB,UAAU,EACV,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,WAAW,CACf,iBAAyB,EACzB,aAAqB,EACrB,iBAAyB,EACzB,OAA4C,EAAA;;AAO5C,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACWD,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAChE9C,qBAAmB,CACpB,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAI+C,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,kBAAkB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,iBAAyB,EACzB,OAA4C,EAAA;;AAE5C,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,aAAa,EACb,iBAAiB,EACjB,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,iBAAyB,EACzB,OAAyC,EAAA;AAEzC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAChE9C,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,gBAAgB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,OAAqD,EAAA;AAErD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C4B,8BAA4B,CAC7B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMxB,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMJ,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,0KAA0K;AAC5K,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE8C,aAAqB;AAClC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;AAClC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;AAClC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEC,WAAsB;AACnC,IAAA,eAAe,EAAE,CAAClB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAkB,iBAA4B;AAC7B,KAAA;IACD,gBAAgB,EAAE,CAACtC,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAML,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,0KAA0K;AAC5K,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEgD,aAAqB;AAClC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;AAClC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;AAClC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACjB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAkB,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACtC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,0KAA0K;AAC5K,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE+C,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACjB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAkB,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACtC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMwB,8BAA4B,GAA6B;AAC7D,IAAA,IAAI,EACF,sJAAsJ;AACxJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEsB,uBAA+B;AAC5C,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACpB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACvbD;;;;;;AAMG;AAoBH;AACA;MACa,yBAAyB,CAAA;AAGpC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;AAMG;AACI,IAAA,eAAe,CACpB,iBAAyB,EACzB,aAAqB,EACrB,OAA4D,EAAA;AAE5D,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,yBAAyB,CACtC,iBAAyB,EACzB,aAAqB,EACrB,OAA4D,EAC5D,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAAoD,CAAC;AACzD,YAAA,MAAM,GAAG,MAAAV,aAAA,CAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,wBAAwB,CACrC,iBAAyB,EACzB,aAAqB,EACrB,OAA4D,EAAA;;;;AAE5D,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;;AAQG;IACH,cAAc,CACZ,iBAAyB,EACzB,aAAqB,EACrB,cAA8B,EAC9B,UAAyC,EACzC,OAA2D,EAAA;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EACzEM,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;;AAOG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,cAA8B,EAC9B,OAAmD,EAAA;AAEnD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,EAC7DF,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;;;AAOG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,cAA8B,EAC9B,OAAgD,EAAA;AAEhD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,EAC7DC,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,gBAAgB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,OAA4D,EAAA;AAE5D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C4B,8BAA4B,CAC7B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMxB,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMJ,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,8KAA8K;AAChL,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEkD,6BAAqC;AAClD,SAAA;AACF,KAAA;IACD,WAAW,EAAEC,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACtB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAsB,cAAyB;AAC1B,KAAA;IACD,gBAAgB,EAAE,CAAC1C,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAML,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,8KAA8K;AAChL,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;AACtB,IAAA,eAAe,EAAE,CAAC+B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAsB,cAAyB;AAC1B,KAAA;gBACDjD,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,8KAA8K;AAChL,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEmD,6BAAqC;AAClD,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACrB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAsB,cAAyB;AAC1B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAC1C,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMwB,8BAA4B,GAA6B;AAC7D,IAAA,IAAI,EACF,6JAA6J;AAC/J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE0B,+BAAuC;AACpD,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACxB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACxQD;;;;;;AAMG;AAcH;AACA;MACa,oBAAoB,CAAA;AAG/B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,IAAI,CACT,iBAAyB,EACzB,aAAqB,EACrB,OAA4C,EAAA;AAE5C,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,cAAc,CAC3B,iBAAyB,EACzB,aAAqB,EACrB,OAA4C,EAC5C,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAAoC,CAAC;AACzC,YAAA,MAAM,GAAG,MAAAV,aAAA,CAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,aAAa,EAAE,OAAO,CAAC,CAAA,CAAC;AACrE,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,iBAAyB,EACzB,aAAqB,EACrB,OAA4C,EAAA;;;;AAE5C,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,KAAK,CACX,iBAAyB,EACzB,aAAqB,EACrB,OAA4C,EAAA;AAE5C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CE,mBAAiB,CAClB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMO,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMR,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,wJAAwJ;AAC1J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE0D,mCAA2C;AACxD,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACzB,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACjID;;;;;;AAMG;AAYH;MACa,qBAAqB,CAAA;AAGhC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACH,IAAA,GAAG,CACD,QAAgB,EAChB,gBAAwB,EACxB,OAA4C,EAAA;AAE5C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,gBAAgB,EAAE,OAAO,EAAE,EACvCJ,kBAAgB,CACjB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMI,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAML,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,mIAAmI;AACrI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwD,eAAuB;AACpC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC1B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAA+C,QAAmB;AACnB,QAAAC,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAC/C,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACpED;;;;;;AAMG;AAcH;MACa,wBAAwB,CAAA;AAGnC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACH,IAAA,aAAa,CACX,iBAAyB,EACzB,aAAqB,EACrB,OAA+C,EAAA;AAE/C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C,0BAA0B,CAC3B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,UAAU,CACR,iBAAyB,EACzB,aAAqB,EACrB,OAA4C,EAAA;AAE5C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C,uBAAuB,CACxB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMA,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,0BAA0B,GAA6B;AAC3D,IAAA,IAAI,EACF,kJAAkJ;AACpJ,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEsD,UAAkB;AAC/B,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC7B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;AACxD,IAAA,IAAI,EACF,2JAA2J;AAC7J,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEuD,UAAkB;AAC/B,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC7B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC3GD;;;;;;AAMG;AAcH;AACA;MACa,UAAU,CAAA;AAGrB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,IAAI,CACT,iBAAyB,EACzB,aAAqB,EACrB,OAAkC,EAAA;AAElC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,cAAc,CAC3B,iBAAyB,EACzB,aAAqB,EACrB,OAAkC,EAClC,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAA0B,CAAC;AAC/B,YAAA,MAAM,GAAG,MAAAV,aAAA,CAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,aAAa,EAAE,OAAO,CAAC,CAAA,CAAC;AACrE,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,iBAAyB,EACzB,aAAqB,EACrB,OAAkC,EAAA;;;;AAElC,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,KAAK,CACX,iBAAyB,EACzB,aAAqB,EACrB,OAAkC,EAAA;AAElC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CE,mBAAiB,CAClB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMO,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMR,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,8IAA8I;AAChJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE+D,yBAAiC;AAC9C,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC9B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACjID;;;;;;AAMG;AAsBH;AACA;MACa,yBAAyB,CAAA;AAGpC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,eAAe,CACpB,iBAAyB,EACzB,aAAqB,EACrB,OAA4D,EAAA;AAE5D,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,yBAAyB,CACtC,iBAAyB,EACzB,aAAqB,EACrB,OAA4D,EAC5D,QAAuB,EAAA;;AAEvB,YAAA,IAAI,MAAoD,CAAC;YACzD,IAAI,iBAAiB,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE;AACtB,gBAAA,MAAM,GAAG,MAAAV,aAAA,CAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,iBAAiB,GAAG,MAAM,CAAC,aAAa,CAAC;AACzC,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;AACD,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,aAAa,EACb,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,aAAa,CAAC;AACzC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,wBAAwB,CACrC,iBAAyB,EACzB,aAAqB,EACrB,OAA4D,EAAA;;;;AAE5D,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACH,cAAc,CACZ,iBAAyB,EACzB,aAAqB,EACrB,kBAA0B,EAC1B,UAA0B,EAC1B,OAA2D,EAAA;AAE3D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,aAAa;YACb,kBAAkB;YAClB,UAAU;YACV,OAAO;SACR,EACDM,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,kBAA0B,EAC1B,OAAgD,EAAA;AAEhD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,kBAAkB,EAAE,OAAO,EAAE,EACjED,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,kBAA0B,EAC1B,OAAmD,EAAA;AAEnD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,kBAAkB,EAAE,OAAO,EAAE,EACjED,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,gBAAgB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,OAA4D,EAAA;AAE5D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C6B,8BAA4B,CAC7B,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,oBAAoB,CAC1B,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,OAAgE,EAAA;AAEhE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,EACvD,gCAAgC,CACjC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMxB,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMJ,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,kLAAkL;AACpL,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE4D,cAAsB;AACnC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,cAAsB;AACnC,SAAA;AACF,KAAA;IACD,WAAW,EAAEC,WAAsB;AACnC,IAAA,eAAe,EAAE,CAAChC,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAgC,kBAA6B;AAC9B,KAAA;IACD,gBAAgB,EAAE,CAACpD,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,kLAAkL;AACpL,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE6D,cAAsB;AACnC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC/B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAgC,kBAA6B;AAC9B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpD,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAML,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,kLAAkL;AACpL,IAAA,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;AAC/B,IAAA,eAAe,EAAE,CAAC+B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAgC,kBAA6B;AAC9B,KAAA;gBACD3D,YAAU;CACX,CAAC;AACF,MAAMwB,8BAA4B,GAA6B;AAC7D,IAAA,IAAI,EACF,6JAA6J;AAC/J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEoC,wBAAgC;AAC7C,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAClC,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;AACjE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE4D,wBAAgC;AAC7C,SAAA;AACF,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAvD,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAM,QAAmB;AACnB,QAAAa,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACrUD;;;;;;AAMG;AAkBH;MACa,iBAAiB,CAAA;AAG5B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,aAAqB,EACrB,OAA2C,EAAA;AAE3C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa,EAAE,OAAO,EAAE,EAC5DL,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;;;AAOG;IACH,cAAc,CACZ,iBAAyB,EACzB,aAAqB,EACrB,aAAqB,EACrB,UAAuB,EACvB,OAAmD,EAAA;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,EACxEE,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,aAAqB,EACrB,OAAwC,EAAA;AAExC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa,EAAE,OAAO,EAAE,EAC5DD,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,eAAe,CACb,iBAAyB,EACzB,aAAqB,EACrB,OAAoD,EAAA;AAEpD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C4B,8BAA4B,CAC7B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMxB,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMN,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,qKAAqK;AACvK,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;AACtB,IAAA,eAAe,EAAE,CAAC+B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAkC,aAAwB;AACzB,KAAA;gBACD7D,YAAU;CACX,CAAC;AACF,MAAMH,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,qKAAqK;AACvK,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEiE,WAAmB;AAChC,SAAA;AACF,KAAA;IACD,WAAW,EAAEC,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACrC,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAkC,aAAwB;AACzB,KAAA;IACD,gBAAgB,EAAE,CAACtD,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,qKAAqK;AACvK,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEkE,WAAmB;AAChC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACpC,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAkC,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACtD,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMwB,8BAA4B,GAA6B;AAC7D,IAAA,IAAI,EACF,qJAAqJ;AACvJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwC,uBAA+B;AAC5C,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACtC,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC9LD;;;;;;AAMG;AAYH;MACa,yBAAyB,CAAA;AAGpC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACH,IAAA,eAAe,CACb,iBAAyB,EACzB,aAAqB,EACrB,OAA4D,EAAA;AAE5D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CwB,8BAA4B,CAC7B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMxB,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMuB,8BAA4B,GAA6B;AAC7D,IAAA,IAAI,EACF,6JAA6J;AAC/J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;AACH,YAAA,UAAU,EAAE;AACV,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,sBAAsB,EAAE;AAC/D,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACE,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC3ED;;;;;;AAMG;AASH;MACa,YAAY,CAAA;AAGvB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,OAAsC,EAAA;AAEtC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,EACxDL,qBAAmB,CACpB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMK,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMN,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,4JAA4J;AAC9J,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;AACtB,IAAA,eAAe,EAAE,CAAC+B,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAAsC,SAAoB;AACrB,KAAA;gBACDjE,YAAU;CACX;;AC/DD;;;;;;AAMG;AASH;MACa,oBAAoB,CAAA;AAG/B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,OAAiC,EAAA;AAEjC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CJ,kBAAgB,CACjB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMI,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAML,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,8IAA8I;AAChJ,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEsE,uBAA+B;AAC5C,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACxC,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACjED;;;;;;AAMG;AAeH;MACa,kBAAkB,CAAA;AAG7B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;;;;;;;;;;AAeG;AACH,IAAA,KAAK,CACH,iBAAyB,EACzB,aAAqB,EACrB,IAAwB,EACxB,OAA2C,EAAA;AAE3C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,EACnD,kBAAkB,CACnB,CAAC;KACH;AAED;;;;;;;AAOG;AACH,IAAA,cAAc,CACZ,iBAAyB,EACzB,aAAqB,EACrB,OAAe,EACf,OAAoD,EAAA;AAEpD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,EACtD,2BAA2B,CAC5B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMA,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,kBAAkB,GAA6B;AACnD,IAAA,IAAI,EACF,6IAA6I;AAC/I,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEkE,sBAA8B;YAC1C,aAAa,EAAEC,0BAAkC;AAClD,SAAA;AACF,KAAA;IACD,WAAW,EAAEC,IAAe;AAC5B,IAAA,eAAe,EAAE,CAAC3C,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;IACD,gBAAgB,EAAE,CAACpB,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,4JAA4J;AAC9J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEsE,4BAAoC;AACjD,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC5C,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAArB,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAA4C,OAAkB;AACnB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAChE,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC7HD;;;;;;AAMG;AA+BH;AACA;MACa,YAAY,CAAA;AAGvB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;AAIG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,OAAmD,EAAA;QAEnD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;gBACD,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,6BAA6B,CAC1C,iBAAyB,EACzB,OAAmD,EACnD,QAAuB,EAAA;;AAEvB,YAAA,IAAI,MAA2C,CAAC;YAChD,IAAI,iBAAiB,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE;gBACtB,MAAM,GAAG,MAAMV,aAAA,CAAA,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AACrE,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;AACD,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAmD,EAAA;;;;AAEnD,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACI,IAAA,IAAI,CACT,OAAoC,EAAA;QAEpC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;gBACD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAoC,EACpC,QAAuB,EAAA;;AAEvB,YAAA,IAAI,MAA4B,CAAC;YACjC,IAAI,iBAAiB,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE;gBACtB,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;AACnC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAD,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;AACD,YAAA,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,MAAMA,aAAA,CAAA,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AAC1D,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,OAAoC,EAAA;;;;gBAEpC,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;AAIG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,OAAmD,EAAA;AAEnD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BG,kCAAgC,CACjC,CAAC;KACH;AAED;;;AAGG;AACK,IAAA,KAAK,CACX,OAAoC,EAAA;AAEpC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAED,mBAAiB,CAAC,CAAC;KACzE;AAED;;;;;;AAMG;AACG,IAAA,mBAAmB,CACvB,iBAAyB,EACzB,WAAmB,EACnB,UAAmB,EACnB,OAA8C,EAAA;;AAO9C,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACagD,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,EACvD5C,6BAA2B,CAC5B,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAI6C,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,0BAA0B,CAC9B,iBAAyB,EACzB,WAAmB,EACnB,UAAmB,EACnB,OAA8C,EAAA;;AAE9C,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,WAAW,EACX,UAAU,EACV,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACG,IAAA,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,OAAsC,EAAA;;AAEtC,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACbD,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3C9C,qBAAmB,CACpB,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAI+C,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACG,IAAA,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,OAAsC,EAAA;;AAEtC,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,OAAmC,EAAA;AAEnC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3C9C,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACG,IAAA,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,UAAwB,EACxB,OAAsC,EAAA;;AAOtC,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACK6C,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACnC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,EACvD1B,qBAAmB,CACpB,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAI2B,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,UAAwB,EACxB,OAAsC,EAAA;;AAEtC,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,UAAU,EACV,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAuD,EAAA;AAEvD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC,oCAAoC,CACrC,CAAC;KACH;AAED;;;;AAIG;IACK,SAAS,CACf,QAAgB,EAChB,OAAwC,EAAA;AAExC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB5C,uBAAqB,CACtB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAME,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMP,kCAAgC,GAA6B;AACjE,IAAA,IAAI,EACF,qHAAqH;AACvH,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE8E,iBAAyB;AACtC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAErE,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACsE,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAApE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACD,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMP,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,kFAAkF;AACpF,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE+E,iBAAyB;AACtC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAErE,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACsE,WAAsB,CAAC;IACzC,aAAa,EAAE,CAACpE,KAAgB,EAAEC,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMH,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,mIAAmI;AACrI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE6E,OAAe;AAC5B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;AAC5B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;AAC5B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;AAC5B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEvE,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEwE,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACF,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAApE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAoE,WAAsB;AACvB,KAAA;IACD,gBAAgB,EAAE,CAACrE,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAML,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,mIAAmI;AACrI,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEQ,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACsE,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAApE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAqE,YAAuB;AACxB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACtE,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,mIAAmI;AACrI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE8E,OAAe;AAC5B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEvE,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACsE,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAApE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAqE,YAAuB;AACxB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACtE,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMe,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,mIAAmI;AACrI,IAAA,UAAU,EAAE,OAAO;AACnB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE2D,OAAe;AAC5B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;AAC5B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;AAC5B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;AAC5B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEvE,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAE2E,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACL,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAApE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAqE,YAAuB;AACxB,KAAA;IACD,gBAAgB,EAAE,CAACtE,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;AACrE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwE,iBAAyB;AACtC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAErE,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAM,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMF,uBAAqB,GAA6B;AACtD,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE0E,iBAAyB;AACtC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAErE,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,aAAa,EAAE;AACb,QAAAE,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAQ,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC/rBD;;;;;;AAMG;AAiBH;AACA;MACa,cAAc,CAAA;AAGzB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,IAAI,CACT,OAAsC,EAAA;QAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;gBACD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAsC,EACtC,QAAuB,EAAA;;AAEvB,YAAA,IAAI,MAA8B,CAAC;YACnC,IAAI,iBAAiB,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE;gBACtB,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;AACnC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAV,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;AACD,YAAA,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,MAAMA,aAAA,CAAA,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AAC1D,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;AAC9B,gBAAA,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,MAAM,MAAAA,aAAA,CAAA,IAAI,CAAA,CAAC;AACZ,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,OAAsC,EAAA;;;;gBAEtC,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACK,IAAA,KAAK,CACX,OAAsC,EAAA;AAEtC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEE,mBAAiB,CAAC,CAAC;KACzE;AAED;;;;AAIG;IACK,SAAS,CACf,QAAgB,EAChB,OAA0C,EAAA;AAE1C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,qBAAqB,CACtB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMO,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMR,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EAAE,qDAAqD;AAC3D,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEsF,mBAA2B;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE5E,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE,CAAC3E,KAAgB,CAAC;AACjC,IAAA,gBAAgB,EAAE,CAACE,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,qBAAqB,GAA6B;AACtD,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE+E,mBAA2B;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE5E,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,aAAa,EAAE,CAACE,KAAgB,EAAES,QAAmB,CAAC;AACtD,IAAA,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACpJD;;;;;;AAMG;AA0BH;AACA;MACa,cAAc,CAAA;AAGzB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,IAAI,CACT,OAAsC,EAAA;QAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;gBACD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAsC,EACtC,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAA8B,CAAC;YACnC,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;AACnC,YAAA,MAAA,MAAAV,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,OAAsC,EAAA;;;;gBAEtC,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;AAIG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,OAAqD,EAAA;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;gBACD,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,6BAA6B,CAC1C,iBAAyB,EACzB,OAAqD,EACrD,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAA6C,CAAC;YAClD,MAAM,GAAG,MAAMD,aAAA,CAAA,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AACrE,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAqD,EAAA;;;;AAErD,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACK,IAAA,KAAK,CACX,OAAsC,EAAA;AAEtC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEE,mBAAiB,CAAC,CAAC;KACzE;AAED;;;;AAIG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,OAAqD,EAAA;AAErD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BC,kCAAgC,CACjC,CAAC;KACH;AAED;;;;;;AAMG;AACG,IAAA,mBAAmB,CACvB,iBAAyB,EACzB,aAAqB,EACrB,UAAqB,EACrB,OAAgD,EAAA;;AAOhD,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACe+C,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBAC7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,EACzD5C,6BAA2B,CAC5B,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAI6C,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,0BAA0B,CAC9B,iBAAyB,EACzB,aAAqB,EACrB,UAAqB,EACrB,OAAgD,EAAA;;AAEhD,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,aAAa,EACb,UAAU,EACV,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;AACG,IAAA,WAAW,CACf,iBAAyB,EACzB,aAAqB,EACrB,OAAwC,EAAA;;AAExC,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACbD,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C9C,qBAAmB,CACpB,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAI+C,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;AACG,IAAA,kBAAkB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,OAAwC,EAAA;;AAExC,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,OAAqC,EAAA;AAErC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C9C,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,UAA0B,EAC1B,OAAwC,EAAA;AAExC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,EACzDmB,qBAAmB,CACpB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMf,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMR,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,oFAAoF;AACtF,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwF,mBAA2B;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE9E,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;IACzC,aAAa,EAAE,CAAC3E,KAAgB,EAAEC,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMN,kCAAgC,GAA6B;AACjE,IAAA,IAAI,EACF,uHAAuH;AACzH,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEuF,mBAA2B;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE9E,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACD,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMH,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,uIAAuI;AACzI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEqF,SAAiB;AAC9B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;AAC9B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;AAC9B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;AAC9B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE/E,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEgF,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACH,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;IACD,gBAAgB,EAAE,CAACpB,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX,CAAC;AACF,MAAML,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,uIAAuI;AACzI,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEQ,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,eAAe,EAAE,CAAC6E,WAAsB,EAAEI,KAAgB,CAAC;AAC3D,IAAA,aAAa,EAAE;AACb,QAAA/E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMJ,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,uIAAuI;AACzI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEsF,SAAiB;AAC9B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE/E,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMe,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,uIAAuI;AACzI,IAAA,UAAU,EAAE,OAAO;AACnB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEmE,SAAiB;AAC9B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE/E,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEkF,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACL,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;IACD,gBAAgB,EAAE,CAACpB,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBX,YAAU;CACX;;ACvgBD;;;;;;AAMG;AAgBH;AACA;MACa,qBAAqB,CAAA;AAGhC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,IAAI,CACT,OAA6C,EAAA;QAE7C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;gBACD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAA6C,EAC7C,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAAqC,CAAC;YAC1C,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;AACnC,YAAA,MAAA,MAAAV,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,OAA6C,EAAA;;;;gBAE7C,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;AAIG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,OAA4D,EAAA;QAE5D,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;gBACD,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,6BAA6B,CAC1C,iBAAyB,EACzB,OAA4D,EAC5D,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAAoD,CAAC;YACzD,MAAM,GAAG,MAAMD,aAAA,CAAA,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AACrE,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAA4D,EAAA;;;;AAE5D,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACK,IAAA,KAAK,CACX,OAA6C,EAAA;AAE7C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAE,iBAAiB,CAAC,CAAC;KACzE;AAED;;;;AAIG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,OAA4D,EAAA;AAE5D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9B,gCAAgC,CACjC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMS,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,2FAA2F;AAC7F,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEgF,mBAA2B;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE9E,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;IACzC,aAAa,EAAE,CAAC3E,KAAgB,EAAEC,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;AACjE,IAAA,IAAI,EACF,8HAA8H;AAChI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEiF,mBAA2B;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE9E,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACD,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACjMD;;;;;;AAMG;AAyBH;AACA;MACa,UAAU,CAAA;AAGrB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA2C,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,eAAe,CACpB,iBAAyB,EACzB,aAAqB,EACrB,OAA6C,EAAA;AAE7C,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,MAAM,EAAE,CAAC,QAAuB,KAAI;AAClC,gBAAA,IAAI,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE;AACzB,oBAAA,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACpE,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,aAAa,EACb,OAAO,EACP,QAAQ,CACT,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,yBAAyB,CACtC,iBAAyB,EACzB,aAAqB,EACrB,OAA6C,EAC7C,SAAwB,EAAA;;AAExB,YAAA,IAAI,MAAqC,CAAC;AAC1C,YAAA,MAAM,GAAG,MAAAV,aAAA,CAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,wBAAwB,CACrC,iBAAyB,EACzB,aAAqB,EACrB,OAA6C,EAAA;;;;AAE7C,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,gBAAgB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,OAA6C,EAAA;AAE7C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C,4BAA4B,CAC7B,CAAC;KACH;AAED;;;;;;;AAOG;IACG,mBAAmB,CACvB,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,UAAiB,EACjB,OAA4C,EAAA;;AAO5C,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACWkD,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,EACpE,2BAA2B,CAC5B,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAIC,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AACzC,gBAAA,yBAAyB,EAAE,uBAAuB;AACnD,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACG,0BAA0B,CAC9B,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,UAAiB,EACjB,OAA4C,EAAA;;AAE5C,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,aAAa,EACb,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACG,WAAW,CACf,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,UAAiB,EACjB,OAAoC,EAAA;;AAIpC,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACGD,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACjC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,EACpE,mBAAmB,CACpB,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAIC,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AACzC,gBAAA,yBAAyB,EAAE,uBAAuB;AACnD,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACG,kBAAkB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,UAAiB,EACjB,OAAoC,EAAA;;AAEpC,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,aAAa,EACb,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,OAAiC,EAAA;AAEjC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,EACxD,gBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACG,IAAA,WAAW,CACf,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,OAAoC,EAAA;;AAEpC,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACbD,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,EACxD,mBAAmB,CACpB,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAIC,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AACzC,gBAAA,yBAAyB,EAAE,uBAAuB;AACnD,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,kBAAkB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,OAAoC,EAAA;;AAEpC,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,aAAa,EACb,SAAS,EACT,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;AACH,IAAA,OAAO,CACL,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,OAAqC,EAAA;AAErC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,EACxD,oBAAoB,CACrB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,YAAY,CACV,iBAAyB,EACzB,aAAqB,EACrB,SAAiB,EACjB,OAA0C,EAAA;AAE1C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,EACxD,yBAAyB,CAC1B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM,UAAU,GAAGzC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,4BAA4B,GAA6B;AAC7D,IAAA,IAAI,EACF,8IAA8I;AAChJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEqF,gBAAwB;AACrC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEnF,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACzB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,0JAA0J;AAC5J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEgF,KAAa;AAC1B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;AAC1B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;AAC1B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;AAC1B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEpF,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEqF,YAAuB;AACpC,IAAA,eAAe,EAAE,CAACR,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAA8D,SAAoB;AACrB,KAAA;IACD,gBAAgB,EAAE,CAAClF,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,0JAA0J;AAC5J,IAAA,UAAU,EAAE,OAAO;AACnB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE4E,KAAa;AAC1B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;AAC1B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;AAC1B,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;AAC1B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEpF,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEqF,YAAuB;AACpC,IAAA,eAAe,EAAE,CAACR,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAA8D,SAAoB;AACrB,KAAA;IACD,gBAAgB,EAAE,CAAClF,MAAiB,EAAEI,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,gBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,0JAA0J;AAC5J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE4E,KAAa;AAC1B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEpF,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAA8D,SAAoB;AACrB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,0JAA0J;AAC5J,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEJ,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAA8D,SAAoB;AACrB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;AACrD,IAAA,IAAI,EACF,kKAAkK;AACpK,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEJ,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAA8D,SAAoB;AACrB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;AAC1D,IAAA,IAAI,EACF,uKAAuK;AACzK,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEJ,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAAC6E,WAAsB,CAAC;AACzC,IAAA,aAAa,EAAE;AACb,QAAA3E,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAmB,aAAwB;AACxB,QAAA8D,SAAoB;AACrB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;IACrC,UAAU;CACX;;ACvoBD;;;;;;AAMG;AAuDU,MAAA,mCAAoC,SAAQN,qBAAU,CAAC,aAAa,CAAA;AAI/E;;;;;AAKG;AACH,IAAA,WAAA,CACE,WAAqC,EACrC,cAAsB,EACtB,OAA2D,EAAA;;QAE3D,IAAI,WAAW,KAAK,SAAS,EAAE;AAC7B,YAAA,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACjD,SAAA;QACD,IAAI,cAAc,KAAK,SAAS,EAAE;AAChC,YAAA,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;AACpD,SAAA;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;AACd,SAAA;AACD,QAAA,MAAM,QAAQ,GAAsD;AAClE,YAAA,kBAAkB,EAAE,iCAAiC;AACrD,YAAA,UAAU,EAAE,WAAW;SACxB,CAAC;QAEF,MAAM,cAAc,GAAG,CAAA,sCAAA,CAAwC,CAAC;QAChE,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;cAChE,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,CAAI,CAAA,EAAA,cAAc,CAAE,CAAA;AACjE,cAAE,CAAA,EAAG,cAAc,CAAA,CAAE,CAAC;AAE1B,QAAA,MAAM,mBAAmB,GACpB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,GACR,OAAO,CAAA,EAAA,EACV,gBAAgB,EAAE;gBAChB,eAAe;AAChB,aAAA,EACD,QAAQ,EACN,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,CAAC,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,OAAO,CAAC,OAAO,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,8BAA8B,GACxE,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAE3B,IAAI,oCAAoC,GAAY,KAAK,CAAC;AAC1D,QAAA,IAAI,CAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,QAAQ,KAAI,OAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YACzE,MAAM,gBAAgB,GAAsC,OAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;AAClG,YAAA,oCAAoC,GAAG,gBAAgB,CAAC,IAAI,CAC1D,CAAC,cAAc,KACb,cAAc,CAAC,IAAI;gBACnByF,2BAAgB,CAAC,mCAAmC,CACvD,CAAC;AACH,SAAA;AACD,QAAA,IACE,CAAC,OAAO;YACR,CAAC,OAAO,CAAC,QAAQ;YACjB,OAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,MAAM,IAAI,CAAC;AACjD,YAAA,CAAC,oCAAoC,EACrC;AACA,YAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBACzB,IAAI,EAAEA,2BAAgB,CAAC,mCAAmC;AAC3D,aAAA,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,SAAS,CACrBA,2BAAgB,CAAC,+BAA+B,CAAC;AAC/C,gBAAA,UAAU,EAAE,WAAW;gBACvB,MAAM,EACJ,CAAA,EAAA,GAAA,mBAAmB,CAAC,gBAAgB,mCACpC,CAAG,EAAA,mBAAmB,CAAC,QAAQ,CAAW,SAAA,CAAA;AAC5C,gBAAA,kBAAkB,EAAE;oBAClB,2BAA2B,EACzBzF,qBAAU,CAAC,gCAAgC;AAC9C,iBAAA;AACF,aAAA,CAAC,CACH,CAAC;AACH,SAAA;;AAED,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;QAGrC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,8BAA8B,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,iBAAiB,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,qBAAqB,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,gBAAgB,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,iBAAiB,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,oBAAoB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,qBAAqB,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,qBAAqB,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,iBAAiB,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;KACpC;AAwBF;;;;;"}