/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { Extension as ExtensionMapper, PatchExtension as PatchExtensionMapper, FluxConfiguration as FluxConfigurationMapper, FluxConfigurationPatch as FluxConfigurationPatchMapper, SourceControlConfiguration as SourceControlConfigurationMapper } from "../models/mappers";
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const extension = {
    parameterPath: "extension",
    mapper: ExtensionMapper
};
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const clusterRp = {
    parameterPath: "clusterRp",
    mapper: {
        serializedName: "clusterRp",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const clusterResourceName = {
    parameterPath: "clusterResourceName",
    mapper: {
        serializedName: "clusterResourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const clusterName = {
    parameterPath: "clusterName",
    mapper: {
        serializedName: "clusterName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const extensionName = {
    parameterPath: "extensionName",
    mapper: {
        serializedName: "extensionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2023-05-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const forceDelete = {
    parameterPath: ["options", "forceDelete"],
    mapper: {
        serializedName: "forceDelete",
        type: {
            name: "Boolean"
        }
    }
};
export const patchExtension = {
    parameterPath: "patchExtension",
    mapper: PatchExtensionMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const operationId = {
    parameterPath: "operationId",
    mapper: {
        serializedName: "operationId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const fluxConfigurationName = {
    parameterPath: "fluxConfigurationName",
    mapper: {
        serializedName: "fluxConfigurationName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const fluxConfiguration = {
    parameterPath: "fluxConfiguration",
    mapper: FluxConfigurationMapper
};
export const fluxConfigurationPatch = {
    parameterPath: "fluxConfigurationPatch",
    mapper: FluxConfigurationPatchMapper
};
export const sourceControlConfigurationName = {
    parameterPath: "sourceControlConfigurationName",
    mapper: {
        serializedName: "sourceControlConfigurationName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const sourceControlConfiguration = {
    parameterPath: "sourceControlConfiguration",
    mapper: SourceControlConfigurationMapper
};
//# sourceMappingURL=parameters.js.map