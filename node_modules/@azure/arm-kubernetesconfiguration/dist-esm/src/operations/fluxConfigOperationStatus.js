/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing FluxConfigOperationStatus operations. */
export class FluxConfigOperationStatusImpl {
    /**
     * Initialize a new instance of the class FluxConfigOperationStatus class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Get Async Operation status
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterRp The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes,
     *                  Microsoft.HybridContainerService.
     * @param clusterResourceName The Kubernetes cluster resource name - i.e. managedClusters,
     *                            connectedClusters, provisionedClusters.
     * @param clusterName The name of the kubernetes cluster.
     * @param fluxConfigurationName Name of the Flux Configuration.
     * @param operationId operation Id
     * @param options The options parameters.
     */
    get(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, operationId, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            clusterRp,
            clusterResourceName,
            clusterName,
            fluxConfigurationName,
            operationId,
            options
        }, getOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/fluxConfigurations/{fluxConfigurationName}/operations/{operationId}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatusResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.clusterRp,
        Parameters.clusterResourceName,
        Parameters.clusterName,
        Parameters.operationId,
        Parameters.fluxConfigurationName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
//# sourceMappingURL=fluxConfigOperationStatus.js.map