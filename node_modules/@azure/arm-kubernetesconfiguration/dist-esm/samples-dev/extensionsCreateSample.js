/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SourceControlConfigurationClient } from "@azure/arm-kubernetesconfiguration";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Create a new Kubernetes Cluster Extension.
 *
 * @summary Create a new Kubernetes Cluster Extension.
 * x-ms-original-file: specification/kubernetesconfiguration/resource-manager/Microsoft.KubernetesConfiguration/stable/2023-05-01/examples/CreateExtension.json
 */
function createExtension() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["KUBERNETESCONFIGURATION_SUBSCRIPTION_ID"] || "subId1";
        const resourceGroupName = process.env["KUBERNETESCONFIGURATION_RESOURCE_GROUP"] || "rg1";
        const clusterRp = "Microsoft.Kubernetes";
        const clusterResourceName = "connectedClusters";
        const clusterName = "clusterName1";
        const extensionName = "ClusterMonitor";
        const extension = {
            autoUpgradeMinorVersion: true,
            configurationProtectedSettings: { omsagentSecretKey: "secretKeyValue01" },
            configurationSettings: {
                omsagentEnvClusterName: "clusterName1",
                omsagentSecretWsid: "a38cef99-5a89-52ed-b6db-22095c23664b"
            },
            extensionType: "azuremonitor-containers",
            releaseTrain: "Preview",
            scope: { cluster: { releaseNamespace: "kube-system" } }
        };
        const credential = new DefaultAzureCredential();
        const client = new SourceControlConfigurationClient(credential, subscriptionId);
        const result = yield client.extensions.beginCreateAndWait(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionName, extension);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create a new Kubernetes Cluster Extension.
 *
 * @summary Create a new Kubernetes Cluster Extension.
 * x-ms-original-file: specification/kubernetesconfiguration/resource-manager/Microsoft.KubernetesConfiguration/stable/2023-05-01/examples/CreateExtensionWithPlan.json
 */
function createExtensionWithPlan() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["KUBERNETESCONFIGURATION_SUBSCRIPTION_ID"] || "subId1";
        const resourceGroupName = process.env["KUBERNETESCONFIGURATION_RESOURCE_GROUP"] || "rg1";
        const clusterRp = "Microsoft.Kubernetes";
        const clusterResourceName = "connectedClusters";
        const clusterName = "clusterName1";
        const extensionName = "azureVote";
        const extension = {
            autoUpgradeMinorVersion: true,
            extensionType: "azure-vote",
            plan: {
                name: "azure-vote-standard",
                product: "azure-vote-standard-offer-id",
                publisher: "Microsoft"
            },
            releaseTrain: "Preview"
        };
        const credential = new DefaultAzureCredential();
        const client = new SourceControlConfigurationClient(credential, subscriptionId);
        const result = yield client.extensions.beginCreateAndWait(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionName, extension);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createExtension();
        createExtensionWithPlan();
    });
}
main().catch(console.error);
//# sourceMappingURL=extensionsCreateSample.js.map