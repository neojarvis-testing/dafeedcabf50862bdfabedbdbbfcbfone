import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DeletedBackupInstances } from "../operationsInterfaces";
import { DataProtectionClient } from "../dataProtectionClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { DeletedBackupInstanceResource, DeletedBackupInstancesListOptionalParams, DeletedBackupInstancesGetOptionalParams, DeletedBackupInstancesGetResponse, DeletedBackupInstancesUndeleteOptionalParams } from "../models";
/** Class containing DeletedBackupInstances operations. */
export declare class DeletedBackupInstancesImpl implements DeletedBackupInstances {
    private readonly client;
    /**
     * Initialize a new instance of the class DeletedBackupInstances class.
     * @param client Reference to the service client
     */
    constructor(client: DataProtectionClient);
    /**
     * Gets deleted backup instances belonging to a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, vaultName: string, options?: DeletedBackupInstancesListOptionalParams): PagedAsyncIterableIterator<DeletedBackupInstanceResource>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets deleted backup instances belonging to a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets a deleted backup instance with name in a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the deleted backup instance
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: DeletedBackupInstancesGetOptionalParams): Promise<DeletedBackupInstancesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the deleted backup instance
     * @param options The options parameters.
     */
    beginUndelete(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: DeletedBackupInstancesUndeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the deleted backup instance
     * @param options The options parameters.
     */
    beginUndeleteAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: DeletedBackupInstancesUndeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=deletedBackupInstances.d.ts.map