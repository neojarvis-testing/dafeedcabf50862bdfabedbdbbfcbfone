import { ExportJobsOperationResult } from "../operationsInterfaces";
import { DataProtectionClient } from "../dataProtectionClient";
import { ExportJobsOperationResultGetOptionalParams, ExportJobsOperationResultGetResponse } from "../models";
/** Class containing ExportJobsOperationResult operations. */
export declare class ExportJobsOperationResultImpl implements ExportJobsOperationResult {
    private readonly client;
    /**
     * Initialize a new instance of the class ExportJobsOperationResult class.
     * @param client Reference to the service client
     */
    constructor(client: DataProtectionClient);
    /**
     * Gets the operation result of operation triggered by Export Jobs API. If the operation is successful,
     * then it also contains URL of a Blob and a SAS key to access the same. The blob contains exported
     * jobs in JSON serialized format.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param operationId OperationID which represents the export job.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, operationId: string, options?: ExportJobsOperationResultGetOptionalParams): Promise<ExportJobsOperationResultGetResponse>;
}
//# sourceMappingURL=exportJobsOperationResult.d.ts.map