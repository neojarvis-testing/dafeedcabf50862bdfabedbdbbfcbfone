import { OperationStatusResourceGroupContext } from "../operationsInterfaces";
import { DataProtectionClient } from "../dataProtectionClient";
import { OperationStatusResourceGroupContextGetOptionalParams, OperationStatusResourceGroupContextGetResponse } from "../models";
/** Class containing OperationStatusResourceGroupContext operations. */
export declare class OperationStatusResourceGroupContextImpl implements OperationStatusResourceGroupContext {
    private readonly client;
    /**
     * Initialize a new instance of the class OperationStatusResourceGroupContext class.
     * @param client Reference to the service client
     */
    constructor(client: DataProtectionClient);
    /**
     * Gets the operation status for an operation over a ResourceGroup's context.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param operationId
     * @param options The options parameters.
     */
    get(resourceGroupName: string, operationId: string, options?: OperationStatusResourceGroupContextGetOptionalParams): Promise<OperationStatusResourceGroupContextGetResponse>;
}
//# sourceMappingURL=operationStatusResourceGroupContext.d.ts.map