/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link AlertsState} that the service accepts. */
export var KnownAlertsState;
(function (KnownAlertsState) {
    /** Enabled */
    KnownAlertsState["Enabled"] = "Enabled";
    /** Disabled */
    KnownAlertsState["Disabled"] = "Disabled";
})(KnownAlertsState || (KnownAlertsState = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
export var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Failed */
    KnownProvisioningState["Failed"] = "Failed";
    /** Provisioning */
    KnownProvisioningState["Provisioning"] = "Provisioning";
    /** Succeeded */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** Unknown */
    KnownProvisioningState["Unknown"] = "Unknown";
    /** Updating */
    KnownProvisioningState["Updating"] = "Updating";
})(KnownProvisioningState || (KnownProvisioningState = {}));
/** Known values of {@link ResourceMoveState} that the service accepts. */
export var KnownResourceMoveState;
(function (KnownResourceMoveState) {
    /** Unknown */
    KnownResourceMoveState["Unknown"] = "Unknown";
    /** InProgress */
    KnownResourceMoveState["InProgress"] = "InProgress";
    /** PrepareFailed */
    KnownResourceMoveState["PrepareFailed"] = "PrepareFailed";
    /** CommitFailed */
    KnownResourceMoveState["CommitFailed"] = "CommitFailed";
    /** Failed */
    KnownResourceMoveState["Failed"] = "Failed";
    /** PrepareTimedout */
    KnownResourceMoveState["PrepareTimedout"] = "PrepareTimedout";
    /** CommitTimedout */
    KnownResourceMoveState["CommitTimedout"] = "CommitTimedout";
    /** CriticalFailure */
    KnownResourceMoveState["CriticalFailure"] = "CriticalFailure";
    /** PartialSuccess */
    KnownResourceMoveState["PartialSuccess"] = "PartialSuccess";
    /** MoveSucceeded */
    KnownResourceMoveState["MoveSucceeded"] = "MoveSucceeded";
})(KnownResourceMoveState || (KnownResourceMoveState = {}));
/** Known values of {@link SoftDeleteState} that the service accepts. */
export var KnownSoftDeleteState;
(function (KnownSoftDeleteState) {
    /** Soft Delete is turned off for the BackupVault */
    KnownSoftDeleteState["Off"] = "Off";
    /** Soft Delete is enabled for the BackupVault but can be turned off */
    KnownSoftDeleteState["On"] = "On";
    /** Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed */
    KnownSoftDeleteState["AlwaysOn"] = "AlwaysOn";
})(KnownSoftDeleteState || (KnownSoftDeleteState = {}));
/** Known values of {@link ImmutabilityState} that the service accepts. */
export var KnownImmutabilityState;
(function (KnownImmutabilityState) {
    /** Disabled */
    KnownImmutabilityState["Disabled"] = "Disabled";
    /** Unlocked */
    KnownImmutabilityState["Unlocked"] = "Unlocked";
    /** Locked */
    KnownImmutabilityState["Locked"] = "Locked";
})(KnownImmutabilityState || (KnownImmutabilityState = {}));
/** Known values of {@link StorageSettingStoreTypes} that the service accepts. */
export var KnownStorageSettingStoreTypes;
(function (KnownStorageSettingStoreTypes) {
    /** ArchiveStore */
    KnownStorageSettingStoreTypes["ArchiveStore"] = "ArchiveStore";
    /** OperationalStore */
    KnownStorageSettingStoreTypes["OperationalStore"] = "OperationalStore";
    /** VaultStore */
    KnownStorageSettingStoreTypes["VaultStore"] = "VaultStore";
})(KnownStorageSettingStoreTypes || (KnownStorageSettingStoreTypes = {}));
/** Known values of {@link StorageSettingTypes} that the service accepts. */
export var KnownStorageSettingTypes;
(function (KnownStorageSettingTypes) {
    /** GeoRedundant */
    KnownStorageSettingTypes["GeoRedundant"] = "GeoRedundant";
    /** LocallyRedundant */
    KnownStorageSettingTypes["LocallyRedundant"] = "LocallyRedundant";
    /** ZoneRedundant */
    KnownStorageSettingTypes["ZoneRedundant"] = "ZoneRedundant";
})(KnownStorageSettingTypes || (KnownStorageSettingTypes = {}));
/** Known values of {@link CrossSubscriptionRestoreState} that the service accepts. */
export var KnownCrossSubscriptionRestoreState;
(function (KnownCrossSubscriptionRestoreState) {
    /** Disabled */
    KnownCrossSubscriptionRestoreState["Disabled"] = "Disabled";
    /** PermanentlyDisabled */
    KnownCrossSubscriptionRestoreState["PermanentlyDisabled"] = "PermanentlyDisabled";
    /** Enabled */
    KnownCrossSubscriptionRestoreState["Enabled"] = "Enabled";
})(KnownCrossSubscriptionRestoreState || (KnownCrossSubscriptionRestoreState = {}));
/** Known values of {@link CrossRegionRestoreState} that the service accepts. */
export var KnownCrossRegionRestoreState;
(function (KnownCrossRegionRestoreState) {
    /** Disabled */
    KnownCrossRegionRestoreState["Disabled"] = "Disabled";
    /** Enabled */
    KnownCrossRegionRestoreState["Enabled"] = "Enabled";
})(KnownCrossRegionRestoreState || (KnownCrossRegionRestoreState = {}));
/** Known values of {@link SecureScoreLevel} that the service accepts. */
export var KnownSecureScoreLevel;
(function (KnownSecureScoreLevel) {
    /** None */
    KnownSecureScoreLevel["None"] = "None";
    /** Minimum */
    KnownSecureScoreLevel["Minimum"] = "Minimum";
    /** Adequate */
    KnownSecureScoreLevel["Adequate"] = "Adequate";
    /** Maximum */
    KnownSecureScoreLevel["Maximum"] = "Maximum";
    /** NotSupported */
    KnownSecureScoreLevel["NotSupported"] = "NotSupported";
})(KnownSecureScoreLevel || (KnownSecureScoreLevel = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link DataStoreTypes} that the service accepts. */
export var KnownDataStoreTypes;
(function (KnownDataStoreTypes) {
    /** OperationalStore */
    KnownDataStoreTypes["OperationalStore"] = "OperationalStore";
    /** VaultStore */
    KnownDataStoreTypes["VaultStore"] = "VaultStore";
    /** ArchiveStore */
    KnownDataStoreTypes["ArchiveStore"] = "ArchiveStore";
})(KnownDataStoreTypes || (KnownDataStoreTypes = {}));
/** Known values of {@link Status} that the service accepts. */
export var KnownStatus;
(function (KnownStatus) {
    /** ConfiguringProtection */
    KnownStatus["ConfiguringProtection"] = "ConfiguringProtection";
    /** ConfiguringProtectionFailed */
    KnownStatus["ConfiguringProtectionFailed"] = "ConfiguringProtectionFailed";
    /** ProtectionConfigured */
    KnownStatus["ProtectionConfigured"] = "ProtectionConfigured";
    /** ProtectionStopped */
    KnownStatus["ProtectionStopped"] = "ProtectionStopped";
    /** SoftDeleted */
    KnownStatus["SoftDeleted"] = "SoftDeleted";
    /** SoftDeleting */
    KnownStatus["SoftDeleting"] = "SoftDeleting";
})(KnownStatus || (KnownStatus = {}));
/** Known values of {@link CurrentProtectionState} that the service accepts. */
export var KnownCurrentProtectionState;
(function (KnownCurrentProtectionState) {
    /** Invalid */
    KnownCurrentProtectionState["Invalid"] = "Invalid";
    /** NotProtected */
    KnownCurrentProtectionState["NotProtected"] = "NotProtected";
    /** ConfiguringProtection */
    KnownCurrentProtectionState["ConfiguringProtection"] = "ConfiguringProtection";
    /** ProtectionConfigured */
    KnownCurrentProtectionState["ProtectionConfigured"] = "ProtectionConfigured";
    /** BackupSchedulesSuspended */
    KnownCurrentProtectionState["BackupSchedulesSuspended"] = "BackupSchedulesSuspended";
    /** RetentionSchedulesSuspended */
    KnownCurrentProtectionState["RetentionSchedulesSuspended"] = "RetentionSchedulesSuspended";
    /** ProtectionStopped */
    KnownCurrentProtectionState["ProtectionStopped"] = "ProtectionStopped";
    /** ProtectionError */
    KnownCurrentProtectionState["ProtectionError"] = "ProtectionError";
    /** ConfiguringProtectionFailed */
    KnownCurrentProtectionState["ConfiguringProtectionFailed"] = "ConfiguringProtectionFailed";
    /** SoftDeleting */
    KnownCurrentProtectionState["SoftDeleting"] = "SoftDeleting";
    /** SoftDeleted */
    KnownCurrentProtectionState["SoftDeleted"] = "SoftDeleted";
    /** UpdatingProtection */
    KnownCurrentProtectionState["UpdatingProtection"] = "UpdatingProtection";
})(KnownCurrentProtectionState || (KnownCurrentProtectionState = {}));
/** Known values of {@link ValidationType} that the service accepts. */
export var KnownValidationType;
(function (KnownValidationType) {
    /** ShallowValidation */
    KnownValidationType["ShallowValidation"] = "ShallowValidation";
    /** DeepValidation */
    KnownValidationType["DeepValidation"] = "DeepValidation";
})(KnownValidationType || (KnownValidationType = {}));
/** Known values of {@link RehydrationPriority} that the service accepts. */
export var KnownRehydrationPriority;
(function (KnownRehydrationPriority) {
    /** Invalid */
    KnownRehydrationPriority["Invalid"] = "Invalid";
    /** High */
    KnownRehydrationPriority["High"] = "High";
    /** Standard */
    KnownRehydrationPriority["Standard"] = "Standard";
})(KnownRehydrationPriority || (KnownRehydrationPriority = {}));
/** Known values of {@link RecoveryOption} that the service accepts. */
export var KnownRecoveryOption;
(function (KnownRecoveryOption) {
    /** FailIfExists */
    KnownRecoveryOption["FailIfExists"] = "FailIfExists";
})(KnownRecoveryOption || (KnownRecoveryOption = {}));
/** Known values of {@link SourceDataStoreType} that the service accepts. */
export var KnownSourceDataStoreType;
(function (KnownSourceDataStoreType) {
    /** ArchiveStore */
    KnownSourceDataStoreType["ArchiveStore"] = "ArchiveStore";
    /** SnapshotStore */
    KnownSourceDataStoreType["SnapshotStore"] = "SnapshotStore";
    /** OperationalStore */
    KnownSourceDataStoreType["OperationalStore"] = "OperationalStore";
    /** VaultStore */
    KnownSourceDataStoreType["VaultStore"] = "VaultStore";
})(KnownSourceDataStoreType || (KnownSourceDataStoreType = {}));
/** Known values of {@link SyncType} that the service accepts. */
export var KnownSyncType;
(function (KnownSyncType) {
    /** Default */
    KnownSyncType["Default"] = "Default";
    /** ForceResync */
    KnownSyncType["ForceResync"] = "ForceResync";
})(KnownSyncType || (KnownSyncType = {}));
/** Known values of {@link RestoreSourceDataStoreType} that the service accepts. */
export var KnownRestoreSourceDataStoreType;
(function (KnownRestoreSourceDataStoreType) {
    /** OperationalStore */
    KnownRestoreSourceDataStoreType["OperationalStore"] = "OperationalStore";
    /** VaultStore */
    KnownRestoreSourceDataStoreType["VaultStore"] = "VaultStore";
    /** ArchiveStore */
    KnownRestoreSourceDataStoreType["ArchiveStore"] = "ArchiveStore";
})(KnownRestoreSourceDataStoreType || (KnownRestoreSourceDataStoreType = {}));
/** Known values of {@link RehydrationStatus} that the service accepts. */
export var KnownRehydrationStatus;
(function (KnownRehydrationStatus) {
    /** CreateINProgress */
    KnownRehydrationStatus["CreateINProgress"] = "CREATE_IN_PROGRESS";
    /** Completed */
    KnownRehydrationStatus["Completed"] = "COMPLETED";
    /** DeleteINProgress */
    KnownRehydrationStatus["DeleteINProgress"] = "DELETE_IN_PROGRESS";
    /** Deleted */
    KnownRehydrationStatus["Deleted"] = "DELETED";
    /** Failed */
    KnownRehydrationStatus["Failed"] = "FAILED";
})(KnownRehydrationStatus || (KnownRehydrationStatus = {}));
/** Known values of {@link FeatureType} that the service accepts. */
export var KnownFeatureType;
(function (KnownFeatureType) {
    /** Invalid */
    KnownFeatureType["Invalid"] = "Invalid";
    /** DataSourceType */
    KnownFeatureType["DataSourceType"] = "DataSourceType";
})(KnownFeatureType || (KnownFeatureType = {}));
/** Known values of {@link FeatureSupportStatus} that the service accepts. */
export var KnownFeatureSupportStatus;
(function (KnownFeatureSupportStatus) {
    /** Invalid */
    KnownFeatureSupportStatus["Invalid"] = "Invalid";
    /** NotSupported */
    KnownFeatureSupportStatus["NotSupported"] = "NotSupported";
    /** AlphaPreview */
    KnownFeatureSupportStatus["AlphaPreview"] = "AlphaPreview";
    /** PrivatePreview */
    KnownFeatureSupportStatus["PrivatePreview"] = "PrivatePreview";
    /** PublicPreview */
    KnownFeatureSupportStatus["PublicPreview"] = "PublicPreview";
    /** GenerallyAvailable */
    KnownFeatureSupportStatus["GenerallyAvailable"] = "GenerallyAvailable";
})(KnownFeatureSupportStatus || (KnownFeatureSupportStatus = {}));
/** Known values of {@link PersistentVolumeRestoreMode} that the service accepts. */
export var KnownPersistentVolumeRestoreMode;
(function (KnownPersistentVolumeRestoreMode) {
    /** RestoreWithVolumeData */
    KnownPersistentVolumeRestoreMode["RestoreWithVolumeData"] = "RestoreWithVolumeData";
    /** RestoreWithoutVolumeData */
    KnownPersistentVolumeRestoreMode["RestoreWithoutVolumeData"] = "RestoreWithoutVolumeData";
})(KnownPersistentVolumeRestoreMode || (KnownPersistentVolumeRestoreMode = {}));
/** Known values of {@link ExistingResourcePolicy} that the service accepts. */
export var KnownExistingResourcePolicy;
(function (KnownExistingResourcePolicy) {
    /** Skip */
    KnownExistingResourcePolicy["Skip"] = "Skip";
    /** Patch */
    KnownExistingResourcePolicy["Patch"] = "Patch";
})(KnownExistingResourcePolicy || (KnownExistingResourcePolicy = {}));
/** Known values of {@link RestoreTargetLocationType} that the service accepts. */
export var KnownRestoreTargetLocationType;
(function (KnownRestoreTargetLocationType) {
    /** Invalid */
    KnownRestoreTargetLocationType["Invalid"] = "Invalid";
    /** AzureBlobs */
    KnownRestoreTargetLocationType["AzureBlobs"] = "AzureBlobs";
    /** AzureFiles */
    KnownRestoreTargetLocationType["AzureFiles"] = "AzureFiles";
})(KnownRestoreTargetLocationType || (KnownRestoreTargetLocationType = {}));
/** Known values of {@link AbsoluteMarker} that the service accepts. */
export var KnownAbsoluteMarker;
(function (KnownAbsoluteMarker) {
    /** AllBackup */
    KnownAbsoluteMarker["AllBackup"] = "AllBackup";
    /** FirstOfDay */
    KnownAbsoluteMarker["FirstOfDay"] = "FirstOfDay";
    /** FirstOfMonth */
    KnownAbsoluteMarker["FirstOfMonth"] = "FirstOfMonth";
    /** FirstOfWeek */
    KnownAbsoluteMarker["FirstOfWeek"] = "FirstOfWeek";
    /** FirstOfYear */
    KnownAbsoluteMarker["FirstOfYear"] = "FirstOfYear";
})(KnownAbsoluteMarker || (KnownAbsoluteMarker = {}));
/** Known values of {@link DayOfWeek} that the service accepts. */
export var KnownDayOfWeek;
(function (KnownDayOfWeek) {
    /** Friday */
    KnownDayOfWeek["Friday"] = "Friday";
    /** Monday */
    KnownDayOfWeek["Monday"] = "Monday";
    /** Saturday */
    KnownDayOfWeek["Saturday"] = "Saturday";
    /** Sunday */
    KnownDayOfWeek["Sunday"] = "Sunday";
    /** Thursday */
    KnownDayOfWeek["Thursday"] = "Thursday";
    /** Tuesday */
    KnownDayOfWeek["Tuesday"] = "Tuesday";
    /** Wednesday */
    KnownDayOfWeek["Wednesday"] = "Wednesday";
})(KnownDayOfWeek || (KnownDayOfWeek = {}));
/** Known values of {@link Month} that the service accepts. */
export var KnownMonth;
(function (KnownMonth) {
    /** April */
    KnownMonth["April"] = "April";
    /** August */
    KnownMonth["August"] = "August";
    /** December */
    KnownMonth["December"] = "December";
    /** February */
    KnownMonth["February"] = "February";
    /** January */
    KnownMonth["January"] = "January";
    /** July */
    KnownMonth["July"] = "July";
    /** June */
    KnownMonth["June"] = "June";
    /** March */
    KnownMonth["March"] = "March";
    /** May */
    KnownMonth["May"] = "May";
    /** November */
    KnownMonth["November"] = "November";
    /** October */
    KnownMonth["October"] = "October";
    /** September */
    KnownMonth["September"] = "September";
})(KnownMonth || (KnownMonth = {}));
/** Known values of {@link WeekNumber} that the service accepts. */
export var KnownWeekNumber;
(function (KnownWeekNumber) {
    /** First */
    KnownWeekNumber["First"] = "First";
    /** Fourth */
    KnownWeekNumber["Fourth"] = "Fourth";
    /** Last */
    KnownWeekNumber["Last"] = "Last";
    /** Second */
    KnownWeekNumber["Second"] = "Second";
    /** Third */
    KnownWeekNumber["Third"] = "Third";
})(KnownWeekNumber || (KnownWeekNumber = {}));
/** Known values of {@link SecretStoreType} that the service accepts. */
export var KnownSecretStoreType;
(function (KnownSecretStoreType) {
    /** Invalid */
    KnownSecretStoreType["Invalid"] = "Invalid";
    /** AzureKeyVault */
    KnownSecretStoreType["AzureKeyVault"] = "AzureKeyVault";
})(KnownSecretStoreType || (KnownSecretStoreType = {}));
//# sourceMappingURL=index.js.map