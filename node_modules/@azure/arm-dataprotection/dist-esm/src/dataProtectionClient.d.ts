import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { BackupVaults, OperationResult, OperationStatus, OperationStatusBackupVaultContext, OperationStatusResourceGroupContext, BackupVaultOperationResults, DataProtection, DataProtectionOperations, BackupPolicies, BackupInstances, RecoveryPoints, Jobs, RestorableTimeRanges, ExportJobs, ExportJobsOperationResult, DeletedBackupInstances, ResourceGuards, DppResourceGuardProxy } from "./operationsInterfaces";
import { DataProtectionClientOptionalParams } from "./models";
export declare class DataProtectionClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId?: string;
    /**
     * Initializes a new instance of the DataProtectionClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: DataProtectionClientOptionalParams);
    constructor(credentials: coreAuth.TokenCredential, options?: DataProtectionClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    backupVaults: BackupVaults;
    operationResult: OperationResult;
    operationStatus: OperationStatus;
    operationStatusBackupVaultContext: OperationStatusBackupVaultContext;
    operationStatusResourceGroupContext: OperationStatusResourceGroupContext;
    backupVaultOperationResults: BackupVaultOperationResults;
    dataProtection: DataProtection;
    dataProtectionOperations: DataProtectionOperations;
    backupPolicies: BackupPolicies;
    backupInstances: BackupInstances;
    recoveryPoints: RecoveryPoints;
    jobs: Jobs;
    restorableTimeRanges: RestorableTimeRanges;
    exportJobs: ExportJobs;
    exportJobsOperationResult: ExportJobsOperationResult;
    deletedBackupInstances: DeletedBackupInstances;
    resourceGuards: ResourceGuards;
    dppResourceGuardProxy: DppResourceGuardProxy;
}
//# sourceMappingURL=dataProtectionClient.d.ts.map