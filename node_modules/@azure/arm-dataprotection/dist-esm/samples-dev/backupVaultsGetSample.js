/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { DataProtectionClient } from "@azure/arm-dataprotection";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Returns a resource belonging to a resource group.
 *
 * @summary Returns a resource belonging to a resource group.
 * x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2023-05-01/examples/VaultCRUD/GetBackupVault.json
 */
function getBackupVault() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["DATAPROTECTION_SUBSCRIPTION_ID"] ||
            "0b352192-dcac-4cc7-992e-a96190ccc68c";
        const resourceGroupName = process.env["DATAPROTECTION_RESOURCE_GROUP"] || "SampleResourceGroup";
        const vaultName = "swaggerExample";
        const credential = new DefaultAzureCredential();
        const client = new DataProtectionClient(credential, subscriptionId);
        const result = yield client.backupVaults.get(resourceGroupName, vaultName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Returns a resource belonging to a resource group.
 *
 * @summary Returns a resource belonging to a resource group.
 * x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2023-05-01/examples/VaultCRUD/GetBackupVaultWithMSI.json
 */
function getBackupVaultWithMsi() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["DATAPROTECTION_SUBSCRIPTION_ID"] ||
            "0b352192-dcac-4cc7-992e-a96190ccc68c";
        const resourceGroupName = process.env["DATAPROTECTION_RESOURCE_GROUP"] || "SampleResourceGroup";
        const vaultName = "swaggerExample";
        const credential = new DefaultAzureCredential();
        const client = new DataProtectionClient(credential, subscriptionId);
        const result = yield client.backupVaults.get(resourceGroupName, vaultName);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        getBackupVault();
        getBackupVaultWithMsi();
    });
}
main().catch(console.error);
//# sourceMappingURL=backupVaultsGetSample.js.map