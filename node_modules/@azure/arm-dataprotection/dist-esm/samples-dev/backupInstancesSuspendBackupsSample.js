/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { DataProtectionClient } from "@azure/arm-dataprotection";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to This operation will stop backup for a backup instance and retains the backup data as per the policy (except latest Recovery point, which will be retained forever)
 *
 * @summary This operation will stop backup for a backup instance and retains the backup data as per the policy (except latest Recovery point, which will be retained forever)
 * x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2023-05-01/examples/BackupInstanceOperations/SuspendBackups.json
 */
function suspendBackups() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["DATAPROTECTION_SUBSCRIPTION_ID"] ||
            "04cf684a-d41f-4550-9f70-7708a3a2283b";
        const resourceGroupName = process.env["DATAPROTECTION_RESOURCE_GROUP"] || "testrg";
        const vaultName = "testvault";
        const backupInstanceName = "testbi";
        const credential = new DefaultAzureCredential();
        const client = new DataProtectionClient(credential, subscriptionId);
        const result = yield client.backupInstances.beginSuspendBackupsAndWait(resourceGroupName, vaultName, backupInstanceName);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        suspendBackups();
    });
}
main().catch(console.error);
//# sourceMappingURL=backupInstancesSuspendBackupsSample.js.map