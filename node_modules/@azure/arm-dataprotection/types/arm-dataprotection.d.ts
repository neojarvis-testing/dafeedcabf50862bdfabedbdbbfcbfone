import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { OperationState } from '@azure/core-lro';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { SimplePollerLike } from '@azure/core-lro';

/** Delete option with duration */
export declare interface AbsoluteDeleteOption extends DeleteOption {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AbsoluteDeleteOption";
}

/**
 * Defines values for AbsoluteMarker. \
 * {@link KnownAbsoluteMarker} can be used interchangeably with AbsoluteMarker,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AllBackup** \
 * **FirstOfDay** \
 * **FirstOfMonth** \
 * **FirstOfWeek** \
 * **FirstOfYear**
 */
export declare type AbsoluteMarker = string;

/** Adhoc backup rules */
export declare interface AdHocBackupRuleOptions {
    ruleName: string;
    /** Adhoc backup trigger option */
    triggerOption: AdhocBackupTriggerOption;
}

/** Adhoc backup trigger option */
export declare interface AdhocBackupTriggerOption {
    retentionTagOverride?: string;
}

/** Adhoc backup tagging criteria */
export declare interface AdhocBasedTaggingCriteria {
    /** Retention tag information */
    tagInfo?: RetentionTag;
}

/** Adhoc trigger context */
export declare interface AdhocBasedTriggerContext extends TriggerContext {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AdhocBasedTriggerContext";
    /** Tagging Criteria containing retention tag for adhoc backup. */
    taggingCriteria: AdhocBasedTaggingCriteria;
}

/**
 * Defines values for AlertsState. \
 * {@link KnownAlertsState} can be used interchangeably with AlertsState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type AlertsState = string;

/** Base class for different types of authentication credentials. */
export declare interface AuthCredentials {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "SecretStoreBasedAuthCredentials";
}

export declare type AuthCredentialsUnion = AuthCredentials | SecretStoreBasedAuthCredentials;

/** Azure backup discrete RecoveryPoint */
export declare interface AzureBackupDiscreteRecoveryPoint extends AzureBackupRecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupDiscreteRecoveryPoint";
    friendlyName?: string;
    recoveryPointDataStoresDetails?: RecoveryPointDataStoreDetails[];
    recoveryPointTime: Date;
    policyName?: string;
    policyVersion?: string;
    recoveryPointId?: string;
    recoveryPointType?: string;
    retentionTagName?: string;
    retentionTagVersion?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly expiryTime?: Date;
}

/** List Restore Ranges Request */
export declare interface AzureBackupFindRestorableTimeRangesRequest {
    /** Gets or sets the type of the source data store. */
    sourceDataStoreType: RestoreSourceDataStoreType;
    /** Start time for the List Restore Ranges request. ISO 8601 format. */
    startTime?: string;
    /** End time for the List Restore Ranges request. ISO 8601 format. */
    endTime?: string;
}

/** List Restore Ranges Request */
export declare interface AzureBackupFindRestorableTimeRangesRequestResource extends DppWorkerRequest {
    /** AzureBackupFindRestorableTimeRangesRequestResource content */
    content?: AzureBackupFindRestorableTimeRangesRequest;
}

/** List Restore Ranges Response */
export declare interface AzureBackupFindRestorableTimeRangesResponse {
    /** Returns the Restore Ranges available on the Backup Instance. */
    restorableTimeRanges?: RestorableTimeRange[];
    objectType?: string;
}

/** List Restore Ranges Response */
export declare interface AzureBackupFindRestorableTimeRangesResponseResource extends DppResource {
    /** AzureBackupFindRestorableTimeRangesResponseResource properties */
    properties?: AzureBackupFindRestorableTimeRangesResponse;
}

/** AzureBackup Job Class */
export declare interface AzureBackupJob {
    /** Job Activity Id */
    activityID: string;
    /** Name of the Backup Instance */
    backupInstanceFriendlyName: string;
    /**
     * ARM ID of the Backup Instance
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly backupInstanceId?: string;
    /** ARM ID of the DataSource */
    dataSourceId: string;
    /** Location of the DataSource */
    dataSourceLocation: string;
    /** User Friendly Name of the DataSource */
    dataSourceName: string;
    /** Data Source Set Name of the DataSource */
    dataSourceSetName?: string;
    /** Type of DataSource */
    dataSourceType: string;
    /** Total run time of the job. ISO 8601 format. */
    duration?: string;
    /**
     * EndTime of the job(in UTC)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endTime?: Date;
    /**
     * A List, detailing the errors related to the job
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly errorDetails?: UserFacingError[];
    /**
     * Extended Information about the job
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly extendedInfo?: JobExtendedInfo;
    /** Indicated that whether the job is adhoc(true) or scheduled(false) */
    isUserTriggered: boolean;
    /** It indicates the type of Job i.e. Backup:full/log/diff ;Restore:ALR/OLR; Tiering:Backup/Archive ; Management:ConfigureProtection/UnConfigure */
    operation: string;
    /** It indicates the type of Job i.e. Backup/Restore/Tiering/Management */
    operationCategory: string;
    /**
     * ARM ID of the policy
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly policyId?: string;
    /**
     * Name of the policy
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly policyName?: string;
    /** Indicated whether progress is enabled for the job */
    progressEnabled: boolean;
    /**
     * Url which contains job's progress
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly progressUrl?: string;
    /**
     * Priority to be used for rehydration
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly rehydrationPriority?: string;
    /**
     * It indicates the sub type of operation i.e. in case of Restore it can be ALR/OLR
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly restoreType?: string;
    /** Resource Group Name of the Datasource */
    sourceResourceGroup: string;
    /** SubscriptionId corresponding to the DataSource */
    sourceSubscriptionID: string;
    /** StartTime of the job(in UTC) */
    startTime: Date;
    /** Status of the job like InProgress/Success/Failed/Cancelled/SuccessWithWarning */
    status: string;
    /** Subscription Id of the corresponding backup vault */
    subscriptionId: string;
    /** List of supported actions */
    supportedActions: string[];
    /** Name of the vault */
    vaultName: string;
    etag?: string;
    sourceDataStoreName?: string;
    destinationDataStoreName?: string;
}

/** AzureBackup Job Resource Class */
export declare interface AzureBackupJobResource extends DppResource {
    /** AzureBackupJobResource properties */
    properties?: AzureBackupJob;
}

/** List of AzureBackup Job resources */
export declare interface AzureBackupJobResourceList extends DppResourceList {
    /** List of resources. */
    value?: AzureBackupJobResource[];
}

/** Azure backup parameters */
export declare interface AzureBackupParams extends BackupParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupParams";
    /** BackupType ; Full/Incremental etc */
    backupType: string;
}

/** Azure backup recoveryPoint */
export declare interface AzureBackupRecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupDiscreteRecoveryPoint";
}

/** Azure backup recoveryPoint based restore request */
export declare interface AzureBackupRecoveryPointBasedRestoreRequest extends AzureBackupRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupRecoveryPointBasedRestoreRequest" | "AzureBackupRestoreWithRehydrationRequest";
    recoveryPointId: string;
}

export declare type AzureBackupRecoveryPointBasedRestoreRequestUnion = AzureBackupRecoveryPointBasedRestoreRequest | AzureBackupRestoreWithRehydrationRequest;

/** Azure backup recoveryPoint resource */
export declare interface AzureBackupRecoveryPointResource extends DppResource {
    /** AzureBackupRecoveryPointResource properties */
    properties?: AzureBackupRecoveryPointUnion;
}

/** Azure backup recoveryPoint resource list */
export declare interface AzureBackupRecoveryPointResourceList extends DppResourceList {
    /** List of resources. */
    value?: AzureBackupRecoveryPointResource[];
}

export declare type AzureBackupRecoveryPointUnion = AzureBackupRecoveryPoint | AzureBackupDiscreteRecoveryPoint;

/** AzureBackup RecoveryPointTime Based Restore Request */
export declare interface AzureBackupRecoveryTimeBasedRestoreRequest extends AzureBackupRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupRecoveryTimeBasedRestoreRequest";
    /** The recovery time in ISO 8601 format example - 2020-08-14T17:30:00.0000000Z. */
    recoveryPointTime: string;
}

/** Azure Backup Rehydrate Request */
export declare interface AzureBackupRehydrationRequest {
    /** Id of the recovery point to be recovered */
    recoveryPointId: string;
    /** Priority to be used for rehydration. Values High or Standard */
    rehydrationPriority?: RehydrationPriority;
    /** Retention duration in ISO 8601 format i.e P10D . */
    rehydrationRetentionDuration: string;
}

/** Azure backup restore request */
export declare interface AzureBackupRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupRecoveryPointBasedRestoreRequest" | "AzureBackupRestoreWithRehydrationRequest" | "AzureBackupRecoveryTimeBasedRestoreRequest";
    /** Gets or sets the restore target information. */
    restoreTargetInfo: RestoreTargetInfoBaseUnion;
    /** Gets or sets the type of the source data store. */
    sourceDataStoreType: SourceDataStoreType;
    /** Fully qualified Azure Resource Manager ID of the datasource which is being recovered. */
    sourceResourceId?: string;
    /**
     * Contains information of the Identity Details for the BI.
     * If it is null, default will be considered as System Assigned.
     */
    identityDetails?: IdentityDetails;
}

export declare type AzureBackupRestoreRequestUnion = AzureBackupRestoreRequest | AzureBackupRecoveryPointBasedRestoreRequestUnion | AzureBackupRecoveryTimeBasedRestoreRequest;

/** AzureBackup Restore with Rehydration Request */
export declare interface AzureBackupRestoreWithRehydrationRequest extends AzureBackupRecoveryPointBasedRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupRestoreWithRehydrationRequest";
    /** Priority to be used for rehydration. Values High or Standard */
    rehydrationPriority: RehydrationPriority;
    /** Retention duration in ISO 8601 format i.e P10D . */
    rehydrationRetentionDuration: string;
}

/** Azure backup rule */
export declare interface AzureBackupRule extends BasePolicyRule {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupRule";
    /** BackupParameters base */
    backupParameters?: BackupParametersUnion;
    /** DataStoreInfo base */
    dataStore: DataStoreInfoBase;
    /** Trigger context */
    trigger: TriggerContextUnion;
}

/** Settings for Azure Monitor based alerts */
export declare interface AzureMonitorAlertSettings {
    alertsForAllJobFailures?: AlertsState;
}

/** Parameters for Operational-Tier DataStore */
export declare interface AzureOperationalStoreParameters extends DataStoreParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureOperationalStoreParameters";
    /** Gets or sets the Snapshot Resource Group Uri. */
    resourceGroupId?: string;
}

/** Azure retention rule */
export declare interface AzureRetentionRule extends BasePolicyRule {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureRetentionRule";
    isDefault?: boolean;
    lifecycles: SourceLifeCycle[];
}

/** BackupCriteria base class */
export declare interface BackupCriteria {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ScheduleBasedBackupCriteria";
}

export declare type BackupCriteriaUnion = BackupCriteria | ScheduleBasedBackupCriteria;

/** Parameters for Backup Datasource */
export declare interface BackupDatasourceParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "KubernetesClusterBackupDatasourceParameters" | "BlobBackupDatasourceParameters";
}

export declare type BackupDatasourceParametersUnion = BackupDatasourceParameters | KubernetesClusterBackupDatasourceParameters | BlobBackupDatasourceParameters;

/** Backup Instance */
export declare interface BackupInstance {
    /** Gets or sets the Backup Instance friendly name. */
    friendlyName?: string;
    /** Gets or sets the data source information. */
    dataSourceInfo: Datasource;
    /** Gets or sets the data source set information. */
    dataSourceSetInfo?: DatasourceSet;
    /** Gets or sets the policy information. */
    policyInfo: PolicyInfo;
    /**
     * Specifies the protection status of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly protectionStatus?: ProtectionStatusDetails;
    /**
     * Specifies the current protection state of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly currentProtectionState?: CurrentProtectionState;
    /**
     * Specifies the protection error of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly protectionErrorDetails?: UserFacingError;
    /**
     * Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /** Credentials to use to authenticate with data source provider. */
    datasourceAuthCredentials?: AuthCredentialsUnion;
    /** Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again. */
    validationType?: ValidationType;
    /**
     * Contains information of the Identity Details for the BI.
     * If it is null, default will be considered as System Assigned.
     */
    identityDetails?: IdentityDetails;
    objectType: string;
}

/** BackupInstance Resource */
export declare interface BackupInstanceResource extends DppProxyResource {
    /** BackupInstanceResource properties */
    properties?: BackupInstance;
}

/** BackupInstance Resource list response */
export declare interface BackupInstanceResourceList extends DppResourceList {
    /** List of resources. */
    value?: BackupInstanceResource[];
}

/** Interface representing a BackupInstances. */
export declare interface BackupInstances {
    /**
     * Gets a backup instances belonging to a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, vaultName: string, options?: BackupInstancesListOptionalParams): PagedAsyncIterableIterator<BackupInstanceResource>;
    /**
     * Gets a backup instance with name in a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesGetOptionalParams): Promise<BackupInstancesGetResponse>;
    /**
     * Create or update a backup instance in a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: BackupInstanceResource, options?: BackupInstancesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<BackupInstancesCreateOrUpdateResponse>, BackupInstancesCreateOrUpdateResponse>>;
    /**
     * Create or update a backup instance in a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: BackupInstanceResource, options?: BackupInstancesCreateOrUpdateOptionalParams): Promise<BackupInstancesCreateOrUpdateResponse>;
    /**
     * Delete a backup instance in a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete a backup instance in a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesDeleteOptionalParams): Promise<void>;
    /**
     * Trigger adhoc backup
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginAdhocBackup(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: TriggerBackupRequest, options?: BackupInstancesAdhocBackupOptionalParams): Promise<SimplePollerLike<OperationState<BackupInstancesAdhocBackupResponse>, BackupInstancesAdhocBackupResponse>>;
    /**
     * Trigger adhoc backup
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginAdhocBackupAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: TriggerBackupRequest, options?: BackupInstancesAdhocBackupOptionalParams): Promise<BackupInstancesAdhocBackupResponse>;
    /**
     * Validate whether adhoc backup will be successful or not
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginValidateForBackup(resourceGroupName: string, vaultName: string, parameters: ValidateForBackupRequest, options?: BackupInstancesValidateForBackupOptionalParams): Promise<SimplePollerLike<OperationState<BackupInstancesValidateForBackupResponse>, BackupInstancesValidateForBackupResponse>>;
    /**
     * Validate whether adhoc backup will be successful or not
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginValidateForBackupAndWait(resourceGroupName: string, vaultName: string, parameters: ValidateForBackupRequest, options?: BackupInstancesValidateForBackupOptionalParams): Promise<BackupInstancesValidateForBackupResponse>;
    /**
     * Get result of backup instance creation operation
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param operationId
     * @param options The options parameters.
     */
    getBackupInstanceOperationResult(resourceGroupName: string, vaultName: string, backupInstanceName: string, operationId: string, options?: BackupInstancesGetBackupInstanceOperationResultOptionalParams): Promise<BackupInstancesGetBackupInstanceOperationResultResponse>;
    /**
     * rehydrate recovery point for restore for a BackupInstance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginTriggerRehydrate(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: AzureBackupRehydrationRequest, options?: BackupInstancesTriggerRehydrateOptionalParams): Promise<SimplePollerLike<OperationState<BackupInstancesTriggerRehydrateResponse>, BackupInstancesTriggerRehydrateResponse>>;
    /**
     * rehydrate recovery point for restore for a BackupInstance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginTriggerRehydrateAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: AzureBackupRehydrationRequest, options?: BackupInstancesTriggerRehydrateOptionalParams): Promise<BackupInstancesTriggerRehydrateResponse>;
    /**
     * Triggers restore for a BackupInstance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginTriggerRestore(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: AzureBackupRestoreRequestUnion, options?: BackupInstancesTriggerRestoreOptionalParams): Promise<SimplePollerLike<OperationState<BackupInstancesTriggerRestoreResponse>, BackupInstancesTriggerRestoreResponse>>;
    /**
     * Triggers restore for a BackupInstance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginTriggerRestoreAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: AzureBackupRestoreRequestUnion, options?: BackupInstancesTriggerRestoreOptionalParams): Promise<BackupInstancesTriggerRestoreResponse>;
    /**
     * This operation will resume backups for backup instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginResumeBackups(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesResumeBackupsOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * This operation will resume backups for backup instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginResumeBackupsAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesResumeBackupsOptionalParams): Promise<void>;
    /**
     * This operation will resume protection for a stopped backup instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginResumeProtection(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesResumeProtectionOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * This operation will resume protection for a stopped backup instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginResumeProtectionAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesResumeProtectionOptionalParams): Promise<void>;
    /**
     * This operation will stop protection of a backup instance and data will be held forever
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginStopProtection(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesStopProtectionOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * This operation will stop protection of a backup instance and data will be held forever
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginStopProtectionAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesStopProtectionOptionalParams): Promise<void>;
    /**
     * This operation will stop backup for a backup instance and retains the backup data as per the policy
     * (except latest Recovery point, which will be retained forever)
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginSuspendBackups(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesSuspendBackupsOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * This operation will stop backup for a backup instance and retains the backup data as per the policy
     * (except latest Recovery point, which will be retained forever)
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    beginSuspendBackupsAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: BackupInstancesSuspendBackupsOptionalParams): Promise<void>;
    /**
     * Sync backup instance again in case of failure
     * This action will retry last failed operation and will bring backup instance to valid state
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginSyncBackupInstance(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: SyncBackupInstanceRequest, options?: BackupInstancesSyncBackupInstanceOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Sync backup instance again in case of failure
     * This action will retry last failed operation and will bring backup instance to valid state
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginSyncBackupInstanceAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: SyncBackupInstanceRequest, options?: BackupInstancesSyncBackupInstanceOptionalParams): Promise<void>;
    /**
     * Validates if Restore can be triggered for a DataSource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginValidateForRestore(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: ValidateRestoreRequestObject, options?: BackupInstancesValidateForRestoreOptionalParams): Promise<SimplePollerLike<OperationState<BackupInstancesValidateForRestoreResponse>, BackupInstancesValidateForRestoreResponse>>;
    /**
     * Validates if Restore can be triggered for a DataSource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginValidateForRestoreAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: ValidateRestoreRequestObject, options?: BackupInstancesValidateForRestoreOptionalParams): Promise<BackupInstancesValidateForRestoreResponse>;
}

/** Defines headers for BackupInstances_adhocBackup operation. */
export declare interface BackupInstancesAdhocBackupHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesAdhocBackupOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the adhocBackup operation. */
export declare type BackupInstancesAdhocBackupResponse = OperationJobExtendedInfo;

/** Defines headers for BackupInstances_createOrUpdate operation. */
export declare interface BackupInstancesCreateOrUpdateHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface BackupInstancesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type BackupInstancesCreateOrUpdateResponse = BackupInstanceResource;

/** Defines headers for BackupInstances_delete operation. */
export declare interface BackupInstancesDeleteHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface BackupInstancesGetBackupInstanceOperationResultOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getBackupInstanceOperationResult operation. */
export declare type BackupInstancesGetBackupInstanceOperationResultResponse = BackupInstanceResource;

/** Optional parameters. */
export declare interface BackupInstancesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BackupInstancesGetResponse = BackupInstanceResource;

/** Optional parameters. */
export declare interface BackupInstancesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupInstancesListNextResponse = BackupInstanceResourceList;

/** Optional parameters. */
export declare interface BackupInstancesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type BackupInstancesListResponse = BackupInstanceResourceList;

/** Defines headers for BackupInstances_resumeBackups operation. */
export declare interface BackupInstancesResumeBackupsHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesResumeBackupsOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for BackupInstances_resumeProtection operation. */
export declare interface BackupInstancesResumeProtectionHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesResumeProtectionOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for BackupInstances_stopProtection operation. */
export declare interface BackupInstancesStopProtectionHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesStopProtectionOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for BackupInstances_suspendBackups operation. */
export declare interface BackupInstancesSuspendBackupsHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesSuspendBackupsOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for BackupInstances_syncBackupInstance operation. */
export declare interface BackupInstancesSyncBackupInstanceHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesSyncBackupInstanceOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for BackupInstances_triggerRehydrate operation. */
export declare interface BackupInstancesTriggerRehydrateHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesTriggerRehydrateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the triggerRehydrate operation. */
export declare type BackupInstancesTriggerRehydrateResponse = BackupInstancesTriggerRehydrateHeaders;

/** Defines headers for BackupInstances_triggerRestore operation. */
export declare interface BackupInstancesTriggerRestoreHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesTriggerRestoreOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the triggerRestore operation. */
export declare type BackupInstancesTriggerRestoreResponse = OperationJobExtendedInfo;

/** Defines headers for BackupInstances_validateForBackup operation. */
export declare interface BackupInstancesValidateForBackupHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesValidateForBackupOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the validateForBackup operation. */
export declare type BackupInstancesValidateForBackupResponse = OperationJobExtendedInfo;

/** Defines headers for BackupInstances_validateForRestore operation. */
export declare interface BackupInstancesValidateForRestoreHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupInstancesValidateForRestoreOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the validateForRestore operation. */
export declare type BackupInstancesValidateForRestoreResponse = OperationJobExtendedInfo;

/** BackupParameters base */
export declare interface BackupParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupParams";
}

export declare type BackupParametersUnion = BackupParameters | AzureBackupParams;

/** Interface representing a BackupPolicies. */
export declare interface BackupPolicies {
    /**
     * Returns list of backup policies belonging to a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, vaultName: string, options?: BackupPoliciesListOptionalParams): PagedAsyncIterableIterator<BaseBackupPolicyResource>;
    /**
     * Gets a backup policy belonging to a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupPolicyName
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, backupPolicyName: string, options?: BackupPoliciesGetOptionalParams): Promise<BackupPoliciesGetResponse>;
    /**
     * Creates or Updates a backup policy belonging to a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupPolicyName Name of the policy
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, vaultName: string, backupPolicyName: string, parameters: BaseBackupPolicyResource, options?: BackupPoliciesCreateOrUpdateOptionalParams): Promise<BackupPoliciesCreateOrUpdateResponse>;
    /**
     * Deletes a backup policy belonging to a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupPolicyName
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, vaultName: string, backupPolicyName: string, options?: BackupPoliciesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface BackupPoliciesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type BackupPoliciesCreateOrUpdateResponse = BaseBackupPolicyResource;

/** Optional parameters. */
export declare interface BackupPoliciesDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface BackupPoliciesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BackupPoliciesGetResponse = BaseBackupPolicyResource;

/** Optional parameters. */
export declare interface BackupPoliciesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupPoliciesListNextResponse = BaseBackupPolicyResourceList;

/** Optional parameters. */
export declare interface BackupPoliciesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type BackupPoliciesListResponse = BaseBackupPolicyResourceList;

/** Rule based backup policy */
export declare interface BackupPolicy extends BaseBackupPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "BackupPolicy";
    /** Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc */
    policyRules: BasePolicyRuleUnion[];
}

/** Schedule for backup */
export declare interface BackupSchedule {
    /** ISO 8601 repeating time interval format */
    repeatingTimeIntervals: string[];
    /** Time zone for a schedule. Example: Pacific Standard Time */
    timeZone?: string;
}

/** Backup Vault */
export declare interface BackupVault {
    /** Monitoring Settings */
    monitoringSettings?: MonitoringSettings;
    /**
     * Provisioning state of the BackupVault resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * Resource move state for backup vault
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceMoveState?: ResourceMoveState;
    /**
     * Resource move details for backup vault
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceMoveDetails?: ResourceMoveDetails;
    /** Security Settings */
    securitySettings?: SecuritySettings;
    /** Storage Settings */
    storageSettings: StorageSetting[];
    /**
     * Is vault protected by resource guard
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isVaultProtectedByResourceGuard?: boolean;
    /** Feature Settings */
    featureSettings?: FeatureSettings;
    /**
     * Secure Score of Backup Vault
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly secureScore?: SecureScoreLevel;
}

/** Interface representing a BackupVaultOperationResults. */
export declare interface BackupVaultOperationResults {
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param operationId
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, operationId: string, options?: BackupVaultOperationResultsGetOptionalParams): Promise<BackupVaultOperationResultsGetResponse>;
}

/** Defines headers for BackupVaultOperationResults_get operation. */
export declare interface BackupVaultOperationResultsGetHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface BackupVaultOperationResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BackupVaultOperationResultsGetResponse = BackupVaultResource;

/** Backup Vault Resource */
export declare interface BackupVaultResource extends DppTrackedResource {
    /** BackupVaultResource properties */
    properties: BackupVault;
}

/** List of BackupVault resources */
export declare interface BackupVaultResourceList extends DppResourceList {
    /** List of resources. */
    value?: BackupVaultResource[];
}

/** Interface representing a BackupVaults. */
export declare interface BackupVaults {
    /**
     * Returns resource collection belonging to a subscription.
     * @param options The options parameters.
     */
    listInSubscription(options?: BackupVaultsGetInSubscriptionOptionalParams): PagedAsyncIterableIterator<BackupVaultResource>;
    /**
     * Returns resource collection belonging to a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listInResourceGroup(resourceGroupName: string, options?: BackupVaultsGetInResourceGroupOptionalParams): PagedAsyncIterableIterator<BackupVaultResource>;
    /**
     * Returns a resource belonging to a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, options?: BackupVaultsGetOptionalParams): Promise<BackupVaultsGetResponse>;
    /**
     * Creates or updates a BackupVault resource belonging to a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, vaultName: string, parameters: BackupVaultResource, options?: BackupVaultsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<BackupVaultsCreateOrUpdateResponse>, BackupVaultsCreateOrUpdateResponse>>;
    /**
     * Creates or updates a BackupVault resource belonging to a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, vaultName: string, parameters: BackupVaultResource, options?: BackupVaultsCreateOrUpdateOptionalParams): Promise<BackupVaultsCreateOrUpdateResponse>;
    /**
     * Deletes a BackupVault resource from the resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, vaultName: string, options?: BackupVaultsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a BackupVault resource from the resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, vaultName: string, options?: BackupVaultsDeleteOptionalParams): Promise<void>;
    /**
     * Updates a BackupVault resource belonging to a resource group. For example, updating tags for a
     * resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, vaultName: string, parameters: PatchResourceRequestInput, options?: BackupVaultsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<BackupVaultsUpdateResponse>, BackupVaultsUpdateResponse>>;
    /**
     * Updates a BackupVault resource belonging to a resource group. For example, updating tags for a
     * resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, vaultName: string, parameters: PatchResourceRequestInput, options?: BackupVaultsUpdateOptionalParams): Promise<BackupVaultsUpdateResponse>;
    /**
     * API to check for resource name availability
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param location The location in which uniqueness will be verified.
     * @param parameters Check name availability request
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, location: string, parameters: CheckNameAvailabilityRequest, options?: BackupVaultsCheckNameAvailabilityOptionalParams): Promise<BackupVaultsCheckNameAvailabilityResponse>;
}

/** Optional parameters. */
export declare interface BackupVaultsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type BackupVaultsCheckNameAvailabilityResponse = CheckNameAvailabilityResult;

/** Optional parameters. */
export declare interface BackupVaultsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type BackupVaultsCreateOrUpdateResponse = BackupVaultResource;

/** Optional parameters. */
export declare interface BackupVaultsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface BackupVaultsGetInResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getInResourceGroupNext operation. */
export declare type BackupVaultsGetInResourceGroupNextResponse = BackupVaultResourceList;

/** Optional parameters. */
export declare interface BackupVaultsGetInResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getInResourceGroup operation. */
export declare type BackupVaultsGetInResourceGroupResponse = BackupVaultResourceList;

/** Optional parameters. */
export declare interface BackupVaultsGetInSubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getInSubscriptionNext operation. */
export declare type BackupVaultsGetInSubscriptionNextResponse = BackupVaultResourceList;

/** Optional parameters. */
export declare interface BackupVaultsGetInSubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getInSubscription operation. */
export declare type BackupVaultsGetInSubscriptionResponse = BackupVaultResourceList;

/** Optional parameters. */
export declare interface BackupVaultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BackupVaultsGetResponse = BackupVaultResource;

/** Optional parameters. */
export declare interface BackupVaultsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type BackupVaultsUpdateResponse = BackupVaultResource;

/** BackupPolicy base */
export declare interface BaseBackupPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "BackupPolicy";
    /** Type of datasource for the backup management */
    datasourceTypes: string[];
}

/** BaseBackupPolicy resource */
export declare interface BaseBackupPolicyResource extends DppResource {
    /** BaseBackupPolicyResource properties */
    properties?: BaseBackupPolicyUnion;
}

/** List of BaseBackupPolicy resources */
export declare interface BaseBackupPolicyResourceList extends DppResourceList {
    /** List of resources. */
    value?: BaseBackupPolicyResource[];
}

export declare type BaseBackupPolicyUnion = BaseBackupPolicy | BackupPolicy;

/** BasePolicy Rule */
export declare interface BasePolicyRule {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureBackupRule" | "AzureRetentionRule";
    name: string;
}

export declare type BasePolicyRuleUnion = BasePolicyRule | AzureBackupRule | AzureRetentionRule;

/** Properties which are specific to datasource/datasourceSets */
export declare interface BaseResourceProperties {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "BaseResourceProperties";
}

/** Parameters to be used during configuration of backup of blobs */
export declare interface BlobBackupDatasourceParameters extends BackupDatasourceParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "BlobBackupDatasourceParameters";
    /** List of containers to be backed up during configuration of backup of blobs */
    containersList: string[];
}

/** CheckNameAvailability Request */
export declare interface CheckNameAvailabilityRequest {
    /** Resource name for which availability needs to be checked */
    name?: string;
    /** Describes the Resource type: Microsoft.DataProtection/BackupVaults */
    type?: string;
}

/** CheckNameAvailability Result */
export declare interface CheckNameAvailabilityResult {
    /** Gets or sets the message. */
    message?: string;
    /** Gets or sets a value indicating whether [name available]. */
    nameAvailable?: boolean;
    /** Gets or sets the reason. */
    reason?: string;
}

/** Localized display information of an operation. */
export declare interface ClientDiscoveryDisplay {
    /** Description of the operation having details of what operation is about. */
    description?: string;
    /** Operations Name itself. */
    operation?: string;
    /** Name of the provider for display purposes */
    provider?: string;
    /** ResourceType for which this Operation can be performed. */
    resource?: string;
}

/** Class to represent shoebox log specification in json client discovery. */
export declare interface ClientDiscoveryForLogSpecification {
    /** blob duration of shoebox log specification */
    blobDuration?: string;
    /** Localized display name */
    displayName?: string;
    /** Name for shoebox log specification. */
    name?: string;
}

/** Class to represent shoebox properties in json client discovery. */
export declare interface ClientDiscoveryForProperties {
    /** Operation properties. */
    serviceSpecification?: ClientDiscoveryForServiceSpecification;
}

/** Class to represent shoebox service specification in json client discovery. */
export declare interface ClientDiscoveryForServiceSpecification {
    /** List of log specifications of this operation. */
    logSpecifications?: ClientDiscoveryForLogSpecification[];
}

/** Operations List response which contains list of available APIs. */
export declare interface ClientDiscoveryResponse {
    /** Link to the next chunk of Response. */
    nextLink?: string;
    /** List of available operations. */
    value?: ClientDiscoveryValueForSingleApi[];
}

/** Available operation details. */
export declare interface ClientDiscoveryValueForSingleApi {
    /** Contains the localized display information for this particular operation */
    display?: ClientDiscoveryDisplay;
    /** Name of the Operation. */
    name?: string;
    /** Indicates whether the operation is a data action */
    isDataAction?: boolean;
    /** The intended executor of the operation;governs the display of the operation in the RBAC UX and the audit logs UX */
    origin?: string;
    /** Properties for the given operation. */
    properties?: ClientDiscoveryForProperties;
}

/** An error response from Azure Backup. */
export declare interface CloudError {
    /** The resource management error response. */
    error?: ErrorModel;
}

/** Copy on Expiry Option */
export declare interface CopyOnExpiryOption extends CopyOption {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "CopyOnExpiryOption";
}

/** Options to copy */
export declare interface CopyOption {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "CopyOnExpiryOption" | "CustomCopyOption" | "ImmediateCopyOption";
}

export declare type CopyOptionUnion = CopyOption | CopyOnExpiryOption | CustomCopyOption | ImmediateCopyOption;

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

export declare interface CrossRegionRestoreSettings {
    /** CrossRegionRestore state */
    state?: CrossRegionRestoreState;
}

/**
 * Defines values for CrossRegionRestoreState. \
 * {@link KnownCrossRegionRestoreState} can be used interchangeably with CrossRegionRestoreState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export declare type CrossRegionRestoreState = string;

/** CrossSubscriptionRestore Settings */
export declare interface CrossSubscriptionRestoreSettings {
    /** CrossSubscriptionRestore state */
    state?: CrossSubscriptionRestoreState;
}

/**
 * Defines values for CrossSubscriptionRestoreState. \
 * {@link KnownCrossSubscriptionRestoreState} can be used interchangeably with CrossSubscriptionRestoreState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **PermanentlyDisabled** \
 * **Enabled**
 */
export declare type CrossSubscriptionRestoreState = string;

/**
 * Defines values for CurrentProtectionState. \
 * {@link KnownCurrentProtectionState} can be used interchangeably with CurrentProtectionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **NotProtected** \
 * **ConfiguringProtection** \
 * **ProtectionConfigured** \
 * **BackupSchedulesSuspended** \
 * **RetentionSchedulesSuspended** \
 * **ProtectionStopped** \
 * **ProtectionError** \
 * **ConfiguringProtectionFailed** \
 * **SoftDeleting** \
 * **SoftDeleted** \
 * **UpdatingProtection**
 */
export declare type CurrentProtectionState = string;

/** Duration based custom options to copy */
export declare interface CustomCopyOption extends CopyOption {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "CustomCopyOption";
    /** Data copied after given timespan */
    duration?: string;
}

/** Interface representing a DataProtection. */
export declare interface DataProtection {
    /**
     * Validates if a feature is supported
     * @param location
     * @param parameters Feature support request object
     * @param options The options parameters.
     */
    checkFeatureSupport(location: string, parameters: FeatureValidationRequestBaseUnion, options?: DataProtectionCheckFeatureSupportOptionalParams): Promise<DataProtectionCheckFeatureSupportResponse>;
}

/** Optional parameters. */
export declare interface DataProtectionCheckFeatureSupportOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkFeatureSupport operation. */
export declare type DataProtectionCheckFeatureSupportResponse = FeatureValidationResponseBaseUnion;

export declare class DataProtectionClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId?: string;
    /**
     * Initializes a new instance of the DataProtectionClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: DataProtectionClientOptionalParams);
    constructor(credentials: coreAuth.TokenCredential, options?: DataProtectionClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    backupVaults: BackupVaults;
    operationResult: OperationResult;
    operationStatus: OperationStatus;
    operationStatusBackupVaultContext: OperationStatusBackupVaultContext;
    operationStatusResourceGroupContext: OperationStatusResourceGroupContext;
    backupVaultOperationResults: BackupVaultOperationResults;
    dataProtection: DataProtection;
    dataProtectionOperations: DataProtectionOperations;
    backupPolicies: BackupPolicies;
    backupInstances: BackupInstances;
    recoveryPoints: RecoveryPoints;
    jobs: Jobs;
    restorableTimeRanges: RestorableTimeRanges;
    exportJobs: ExportJobs;
    exportJobsOperationResult: ExportJobsOperationResult;
    deletedBackupInstances: DeletedBackupInstances;
    resourceGuards: ResourceGuards;
    dppResourceGuardProxy: DppResourceGuardProxy;
}

/** Optional parameters. */
export declare interface DataProtectionClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Interface representing a DataProtectionOperations. */
export declare interface DataProtectionOperations {
    /**
     * Returns the list of available operations.
     * @param options The options parameters.
     */
    list(options?: DataProtectionOperationsListOptionalParams): PagedAsyncIterableIterator<ClientDiscoveryValueForSingleApi>;
}

/** Optional parameters. */
export declare interface DataProtectionOperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type DataProtectionOperationsListNextResponse = ClientDiscoveryResponse;

/** Optional parameters. */
export declare interface DataProtectionOperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type DataProtectionOperationsListResponse = ClientDiscoveryResponse;

/** Datasource to be backed up */
export declare interface Datasource {
    /** DatasourceType of the resource. */
    datasourceType?: string;
    /** Type of Datasource object, used to initialize the right inherited type */
    objectType?: string;
    /** Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault. */
    resourceID: string;
    /** Location of datasource. */
    resourceLocation?: string;
    /** Unique identifier of the resource in the context of parent. */
    resourceName?: string;
    /** Resource Type of Datasource. */
    resourceType?: string;
    /** Uri of the resource. */
    resourceUri?: string;
    /** Properties specific to data source */
    resourceProperties?: BaseResourceProperties;
}

/** DatasourceSet details of datasource to be backed up */
export declare interface DatasourceSet {
    /** DatasourceType of the resource. */
    datasourceType?: string;
    /** Type of Datasource object, used to initialize the right inherited type */
    objectType?: string;
    /** Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault. */
    resourceID: string;
    /** Location of datasource. */
    resourceLocation?: string;
    /** Unique identifier of the resource in the context of parent. */
    resourceName?: string;
    /** Resource Type of Datasource. */
    resourceType?: string;
    /** Uri of the resource. */
    resourceUri?: string;
    /** Properties specific to data source set */
    resourceProperties?: BaseResourceProperties;
}

/** DataStoreInfo base */
export declare interface DataStoreInfoBase {
    /** type of datastore; Operational/Vault/Archive */
    dataStoreType: DataStoreTypes;
    /** Type of Datasource object, used to initialize the right inherited type */
    objectType: string;
}

/** Parameters for DataStore */
export declare interface DataStoreParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureOperationalStoreParameters";
    /** type of datastore; Operational/Vault/Archive */
    dataStoreType: DataStoreTypes;
}

export declare type DataStoreParametersUnion = DataStoreParameters | AzureOperationalStoreParameters;

/**
 * Defines values for DataStoreTypes. \
 * {@link KnownDataStoreTypes} can be used interchangeably with DataStoreTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OperationalStore** \
 * **VaultStore** \
 * **ArchiveStore**
 */
export declare type DataStoreTypes = string;

/** Day of the week */
export declare interface Day {
    /** Date of the month */
    date?: number;
    /** Whether Date is last date of month */
    isLast?: boolean;
}

/**
 * Defines values for DayOfWeek. \
 * {@link KnownDayOfWeek} can be used interchangeably with DayOfWeek,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Friday** \
 * **Monday** \
 * **Saturday** \
 * **Sunday** \
 * **Thursday** \
 * **Tuesday** \
 * **Wednesday**
 */
export declare type DayOfWeek = string;

/** Deleted Backup Instance */
export declare interface DeletedBackupInstance extends BackupInstance {
    /**
     * Deletion info of Backup Instance
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly deletionInfo?: DeletionInfo;
}

/** Deleted Backup Instance */
export declare interface DeletedBackupInstanceResource extends DppResource {
    /** DeletedBackupInstanceResource properties */
    properties?: DeletedBackupInstance;
}

/** List of DeletedBackupInstance resources */
export declare interface DeletedBackupInstanceResourceList extends DppResourceList {
    /** List of resources. */
    value?: DeletedBackupInstanceResource[];
}

/** Interface representing a DeletedBackupInstances. */
export declare interface DeletedBackupInstances {
    /**
     * Gets deleted backup instances belonging to a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, vaultName: string, options?: DeletedBackupInstancesListOptionalParams): PagedAsyncIterableIterator<DeletedBackupInstanceResource>;
    /**
     * Gets a deleted backup instance with name in a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the deleted backup instance
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: DeletedBackupInstancesGetOptionalParams): Promise<DeletedBackupInstancesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the deleted backup instance
     * @param options The options parameters.
     */
    beginUndelete(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: DeletedBackupInstancesUndeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the deleted backup instance
     * @param options The options parameters.
     */
    beginUndeleteAndWait(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: DeletedBackupInstancesUndeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface DeletedBackupInstancesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DeletedBackupInstancesGetResponse = DeletedBackupInstanceResource;

/** Optional parameters. */
export declare interface DeletedBackupInstancesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type DeletedBackupInstancesListNextResponse = DeletedBackupInstanceResourceList;

/** Optional parameters. */
export declare interface DeletedBackupInstancesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type DeletedBackupInstancesListResponse = DeletedBackupInstanceResourceList;

/** Optional parameters. */
export declare interface DeletedBackupInstancesUndeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Delete Option */
export declare interface DeleteOption {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AbsoluteDeleteOption";
    /** Duration of deletion after given timespan */
    duration: string;
}

export declare type DeleteOptionUnion = DeleteOption | AbsoluteDeleteOption;

/** Deletion Info */
export declare interface DeletionInfo {
    /**
     * Specifies time of deletion
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly deletionTime?: string;
    /**
     * Specifies billing end date
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly billingEndDate?: string;
    /**
     * Specifies purge time
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly scheduledPurgeTime?: string;
    /**
     * Delete activity ID for troubleshooting purpose
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly deleteActivityID?: string;
}

/** Base resource under Microsoft.DataProtection provider namespace */
export declare interface DppBaseResource {
    /**
     * Resource Id represents the complete path to the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Resource name associated with the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Base for all lists of V2 resources. */
export declare interface DppBaseResourceList {
    /** List of Dpp resources. */
    value?: DppBaseResource[];
    /** The uri to fetch the next page of resources. Call ListNext() fetches next page of resources. */
    nextLink?: string;
}

export declare interface DppBaseTrackedResource {
    /** Optional ETag. */
    eTag?: string;
    /**
     * Resource Id represents the complete path to the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /** Resource location. */
    location?: string;
    /**
     * Resource name associated with the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /**
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/** Identity details */
export declare interface DppIdentityDetails {
    /**
     * The object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** The identityType which can be either SystemAssigned, UserAssigned, 'SystemAssigned,UserAssigned' or None */
    type?: string;
    /** Gets or sets the user assigned identities. */
    userAssignedIdentities?: {
        [propertyName: string]: UserAssignedIdentity;
    };
}

export declare interface DppProxyResource {
    /**
     * Proxy Resource Id represents the complete path to the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Proxy Resource name associated with the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Proxy Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** Proxy Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/** Resource class */
export declare interface DppResource {
    /**
     * Resource Id represents the complete path to the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Resource name associated with the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/** Interface representing a DppResourceGuardProxy. */
export declare interface DppResourceGuardProxy {
    /**
     * Returns the list of ResourceGuardProxies associated with the vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, vaultName: string, options?: DppResourceGuardProxyListOptionalParams): PagedAsyncIterableIterator<ResourceGuardProxyBaseResource>;
    /**
     * Returns the ResourceGuardProxy object associated with the vault, and that matches the name in the
     * request
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param resourceGuardProxyName name of the resource guard proxy
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, resourceGuardProxyName: string, options?: DppResourceGuardProxyGetOptionalParams): Promise<DppResourceGuardProxyGetResponse>;
    /**
     * Creates or Updates a ResourceGuardProxy
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param resourceGuardProxyName name of the resource guard proxy
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, vaultName: string, resourceGuardProxyName: string, parameters: ResourceGuardProxyBaseResource, options?: DppResourceGuardProxyCreateOrUpdateOptionalParams): Promise<DppResourceGuardProxyCreateOrUpdateResponse>;
    /**
     * Deletes the ResourceGuardProxy
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param resourceGuardProxyName name of the resource guard proxy
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, vaultName: string, resourceGuardProxyName: string, options?: DppResourceGuardProxyDeleteOptionalParams): Promise<void>;
    /**
     * UnlockDelete call for ResourceGuardProxy, executed before one can delete it
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param resourceGuardProxyName name of the resource guard proxy
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    unlockDelete(resourceGroupName: string, vaultName: string, resourceGuardProxyName: string, parameters: UnlockDeleteRequest, options?: DppResourceGuardProxyUnlockDeleteOptionalParams): Promise<DppResourceGuardProxyUnlockDeleteResponse>;
}

/** Optional parameters. */
export declare interface DppResourceGuardProxyCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type DppResourceGuardProxyCreateOrUpdateResponse = ResourceGuardProxyBaseResource;

/** Optional parameters. */
export declare interface DppResourceGuardProxyDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface DppResourceGuardProxyGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DppResourceGuardProxyGetResponse = ResourceGuardProxyBaseResource;

/** Optional parameters. */
export declare interface DppResourceGuardProxyListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type DppResourceGuardProxyListNextResponse = ResourceGuardProxyBaseResourceList;

/** Optional parameters. */
export declare interface DppResourceGuardProxyListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type DppResourceGuardProxyListResponse = ResourceGuardProxyBaseResourceList;

/** Optional parameters. */
export declare interface DppResourceGuardProxyUnlockDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the unlockDelete operation. */
export declare type DppResourceGuardProxyUnlockDeleteResponse = UnlockDeleteResponse;

/** ListResource */
export declare interface DppResourceList {
    /** The uri to fetch the next page of resources. Call ListNext() fetches next page of resources. */
    nextLink?: string;
}

export declare interface DppTrackedResource extends DppBaseTrackedResource {
    /** Input Managed Identity Details */
    identity?: DppIdentityDetails;
}

export declare interface DppTrackedResourceList {
    /** The uri to fetch the next page of resources. Call ListNext() fetches next page of resources. */
    nextLink?: string;
}

export declare interface DppWorkerRequest {
    subscriptionId?: string;
    uri?: string;
    /** Dictionary of <components·ikn5y4·schemas·dppworkerrequest·properties·headers·additionalproperties> */
    headers?: {
        [propertyName: string]: string[];
    };
    supportedGroupVersions?: string[];
    cultureInfo?: string;
    /** Dictionary of <string> */
    parameters?: {
        [propertyName: string]: string;
    };
    httpMethod?: string;
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** The resource management error response. */
export declare interface ErrorModel {
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorModel[];
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
}

/**
 * Defines values for ExistingResourcePolicy. \
 * {@link KnownExistingResourcePolicy} can be used interchangeably with ExistingResourcePolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Skip** \
 * **Patch**
 */
export declare type ExistingResourcePolicy = string;

/** Interface representing a ExportJobs. */
export declare interface ExportJobs {
    /**
     * Triggers export of jobs and returns an OperationID to track.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    beginTrigger(resourceGroupName: string, vaultName: string, options?: ExportJobsTriggerOptionalParams): Promise<SimplePollerLike<OperationState<ExportJobsTriggerResponse>, ExportJobsTriggerResponse>>;
    /**
     * Triggers export of jobs and returns an OperationID to track.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    beginTriggerAndWait(resourceGroupName: string, vaultName: string, options?: ExportJobsTriggerOptionalParams): Promise<ExportJobsTriggerResponse>;
}

/** Interface representing a ExportJobsOperationResult. */
export declare interface ExportJobsOperationResult {
    /**
     * Gets the operation result of operation triggered by Export Jobs API. If the operation is successful,
     * then it also contains URL of a Blob and a SAS key to access the same. The blob contains exported
     * jobs in JSON serialized format.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param operationId OperationID which represents the export job.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, operationId: string, options?: ExportJobsOperationResultGetOptionalParams): Promise<ExportJobsOperationResultGetResponse>;
}

/** Optional parameters. */
export declare interface ExportJobsOperationResultGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ExportJobsOperationResultGetResponse = ExportJobsResult;

/** The result for export jobs containing blob details. */
export declare interface ExportJobsResult {
    /**
     * URL of the blob into which the serialized string of list of jobs is exported.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly blobUrl?: string;
    /**
     * SAS key to access the blob.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly blobSasKey?: string;
    /**
     * URL of the blob into which the ExcelFile is uploaded.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly excelFileBlobUrl?: string;
    /**
     * SAS key to access the ExcelFile blob.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly excelFileBlobSasKey?: string;
}

/** Defines headers for ExportJobs_trigger operation. */
export declare interface ExportJobsTriggerHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface ExportJobsTriggerOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the trigger operation. */
export declare type ExportJobsTriggerResponse = ExportJobsTriggerHeaders;

/** Class containing feature settings of vault */
export declare interface FeatureSettings {
    /** CrossSubscriptionRestore Settings */
    crossSubscriptionRestoreSettings?: CrossSubscriptionRestoreSettings;
    crossRegionRestoreSettings?: CrossRegionRestoreSettings;
}

/**
 * Defines values for FeatureSupportStatus. \
 * {@link KnownFeatureSupportStatus} can be used interchangeably with FeatureSupportStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **NotSupported** \
 * **AlphaPreview** \
 * **PrivatePreview** \
 * **PublicPreview** \
 * **GenerallyAvailable**
 */
export declare type FeatureSupportStatus = string;

/**
 * Defines values for FeatureType. \
 * {@link KnownFeatureType} can be used interchangeably with FeatureType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **DataSourceType**
 */
export declare type FeatureType = string;

/** Base class for feature object */
export declare interface FeatureValidationRequest extends FeatureValidationRequestBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "FeatureValidationRequest";
    /** backup support feature type. */
    featureType?: FeatureType;
    /** backup support feature name. */
    featureName?: string;
}

/** Base class for Backup Feature support */
export declare interface FeatureValidationRequestBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "FeatureValidationRequest";
}

export declare type FeatureValidationRequestBaseUnion = FeatureValidationRequestBase | FeatureValidationRequest;

/** Feature Validation Response */
export declare interface FeatureValidationResponse extends FeatureValidationResponseBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "FeatureValidationResponse";
    /** backup support feature type. */
    featureType?: FeatureType;
    /** Response features */
    features?: SupportedFeature[];
}

/** Base class for Backup Feature support */
export declare interface FeatureValidationResponseBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "FeatureValidationResponse";
}

export declare type FeatureValidationResponseBaseUnion = FeatureValidationResponseBase | FeatureValidationResponse;

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

export declare interface IdentityDetails {
    /** Specifies if the BI is protected by System Identity. */
    useSystemAssignedIdentity?: boolean;
    /** ARM URL for User Assigned Identity. */
    userAssignedIdentityArmUrl?: string;
}

/** Immediate copy Option */
export declare interface ImmediateCopyOption extends CopyOption {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ImmediateCopyOption";
}

/** Immutability Settings at vault level */
export declare interface ImmutabilitySettings {
    /** Immutability state */
    state?: ImmutabilityState;
}

/**
 * Defines values for ImmutabilityState. \
 * {@link KnownImmutabilityState} can be used interchangeably with ImmutabilityState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Unlocked** \
 * **Locked**
 */
export declare type ImmutabilityState = string;

/** Inner Error */
export declare interface InnerError {
    /** Any Key value pairs that can be provided to the client for additional  verbose information. */
    additionalInfo?: {
        [propertyName: string]: string;
    };
    /** Unique code for this error */
    code?: string;
    /** Child Inner Error, to allow Nesting. */
    embeddedInnerError?: InnerError;
}

/** Class to contain criteria for item level restore */
export declare interface ItemLevelRestoreCriteria {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ItemPathBasedRestoreCriteria" | "RangeBasedItemLevelRestoreCriteria" | "KubernetesStorageClassRestoreCriteria" | "KubernetesPVRestoreCriteria" | "KubernetesClusterRestoreCriteria";
}

export declare type ItemLevelRestoreCriteriaUnion = ItemLevelRestoreCriteria | ItemPathBasedRestoreCriteria | RangeBasedItemLevelRestoreCriteria | KubernetesStorageClassRestoreCriteria | KubernetesPVRestoreCriteria | KubernetesClusterRestoreCriteria;

/** Restore target info for Item level restore operation */
export declare interface ItemLevelRestoreTargetInfo extends RestoreTargetInfoBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ItemLevelRestoreTargetInfo";
    /** Restore Criteria */
    restoreCriteria: ItemLevelRestoreCriteriaUnion[];
    /** Information of target DS */
    datasourceInfo: Datasource;
    /** Information of target DS Set */
    datasourceSetInfo?: DatasourceSet;
    /** Credentials to use to authenticate with data source provider. */
    datasourceAuthCredentials?: AuthCredentialsUnion;
}

/** Prefix criteria to be used to during restore */
export declare interface ItemPathBasedRestoreCriteria extends ItemLevelRestoreCriteria {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ItemPathBasedRestoreCriteria";
    /** The path of the item to be restored. It could be the full path of the item or the path relative to the backup item */
    itemPath: string;
    /** Flag to specify if the path is relative to backup item or full path */
    isPathRelativeToBackupItem: boolean;
    /** The list of prefix strings to be used as filter criteria during restore. These are relative to the item path specified. */
    subItemPathPrefix?: string[];
}

/** Extended Information about the job */
export declare interface JobExtendedInfo {
    /** Job's Additional Details */
    additionalDetails?: {
        [propertyName: string]: string;
    };
    /**
     * State of the Backup Instance
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly backupInstanceState?: string;
    /**
     * Number of bytes transferred
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly dataTransferredInBytes?: number;
    /**
     * Destination where restore is done
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recoveryDestination?: string;
    /**
     * Details of the Source Recovery Point
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sourceRecoverPoint?: RestoreJobRecoveryPointDetails;
    /**
     * List of Sub Tasks of the job
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly subTasks?: JobSubTask[];
    /**
     * Details of the Target Recovery Point
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly targetRecoverPoint?: RestoreJobRecoveryPointDetails;
}

/** Interface representing a Jobs. */
export declare interface Jobs {
    /**
     * Returns list of jobs belonging to a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, vaultName: string, options?: JobsListOptionalParams): PagedAsyncIterableIterator<AzureBackupJobResource>;
    /**
     * Gets a job with id in a backup vault
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param jobId The Job ID. This is a GUID-formatted string (e.g.
     *              00000000-0000-0000-0000-000000000000).
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, jobId: string, options?: JobsGetOptionalParams): Promise<JobsGetResponse>;
}

/** Optional parameters. */
export declare interface JobsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type JobsGetResponse = AzureBackupJobResource;

/** Optional parameters. */
export declare interface JobsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type JobsListNextResponse = AzureBackupJobResourceList;

/** Optional parameters. */
export declare interface JobsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type JobsListResponse = AzureBackupJobResourceList;

/** Details of Job's Sub Task */
export declare interface JobSubTask {
    /** Additional details of Sub Tasks */
    additionalDetails?: {
        [propertyName: string]: string;
    };
    /** Task Id of the Sub Task */
    taskId: number;
    /** Name of the Sub Task */
    taskName: string;
    /**
     * Progress of the Sub Task
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly taskProgress?: string;
    /** Status of the Sub Task */
    taskStatus: string;
}

/** Known values of {@link AbsoluteMarker} that the service accepts. */
export declare enum KnownAbsoluteMarker {
    /** AllBackup */
    AllBackup = "AllBackup",
    /** FirstOfDay */
    FirstOfDay = "FirstOfDay",
    /** FirstOfMonth */
    FirstOfMonth = "FirstOfMonth",
    /** FirstOfWeek */
    FirstOfWeek = "FirstOfWeek",
    /** FirstOfYear */
    FirstOfYear = "FirstOfYear"
}

/** Known values of {@link AlertsState} that the service accepts. */
export declare enum KnownAlertsState {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link CrossRegionRestoreState} that the service accepts. */
export declare enum KnownCrossRegionRestoreState {
    /** Disabled */
    Disabled = "Disabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** Known values of {@link CrossSubscriptionRestoreState} that the service accepts. */
export declare enum KnownCrossSubscriptionRestoreState {
    /** Disabled */
    Disabled = "Disabled",
    /** PermanentlyDisabled */
    PermanentlyDisabled = "PermanentlyDisabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** Known values of {@link CurrentProtectionState} that the service accepts. */
export declare enum KnownCurrentProtectionState {
    /** Invalid */
    Invalid = "Invalid",
    /** NotProtected */
    NotProtected = "NotProtected",
    /** ConfiguringProtection */
    ConfiguringProtection = "ConfiguringProtection",
    /** ProtectionConfigured */
    ProtectionConfigured = "ProtectionConfigured",
    /** BackupSchedulesSuspended */
    BackupSchedulesSuspended = "BackupSchedulesSuspended",
    /** RetentionSchedulesSuspended */
    RetentionSchedulesSuspended = "RetentionSchedulesSuspended",
    /** ProtectionStopped */
    ProtectionStopped = "ProtectionStopped",
    /** ProtectionError */
    ProtectionError = "ProtectionError",
    /** ConfiguringProtectionFailed */
    ConfiguringProtectionFailed = "ConfiguringProtectionFailed",
    /** SoftDeleting */
    SoftDeleting = "SoftDeleting",
    /** SoftDeleted */
    SoftDeleted = "SoftDeleted",
    /** UpdatingProtection */
    UpdatingProtection = "UpdatingProtection"
}

/** Known values of {@link DataStoreTypes} that the service accepts. */
export declare enum KnownDataStoreTypes {
    /** OperationalStore */
    OperationalStore = "OperationalStore",
    /** VaultStore */
    VaultStore = "VaultStore",
    /** ArchiveStore */
    ArchiveStore = "ArchiveStore"
}

/** Known values of {@link DayOfWeek} that the service accepts. */
export declare enum KnownDayOfWeek {
    /** Friday */
    Friday = "Friday",
    /** Monday */
    Monday = "Monday",
    /** Saturday */
    Saturday = "Saturday",
    /** Sunday */
    Sunday = "Sunday",
    /** Thursday */
    Thursday = "Thursday",
    /** Tuesday */
    Tuesday = "Tuesday",
    /** Wednesday */
    Wednesday = "Wednesday"
}

/** Known values of {@link ExistingResourcePolicy} that the service accepts. */
export declare enum KnownExistingResourcePolicy {
    /** Skip */
    Skip = "Skip",
    /** Patch */
    Patch = "Patch"
}

/** Known values of {@link FeatureSupportStatus} that the service accepts. */
export declare enum KnownFeatureSupportStatus {
    /** Invalid */
    Invalid = "Invalid",
    /** NotSupported */
    NotSupported = "NotSupported",
    /** AlphaPreview */
    AlphaPreview = "AlphaPreview",
    /** PrivatePreview */
    PrivatePreview = "PrivatePreview",
    /** PublicPreview */
    PublicPreview = "PublicPreview",
    /** GenerallyAvailable */
    GenerallyAvailable = "GenerallyAvailable"
}

/** Known values of {@link FeatureType} that the service accepts. */
export declare enum KnownFeatureType {
    /** Invalid */
    Invalid = "Invalid",
    /** DataSourceType */
    DataSourceType = "DataSourceType"
}

/** Known values of {@link ImmutabilityState} that the service accepts. */
export declare enum KnownImmutabilityState {
    /** Disabled */
    Disabled = "Disabled",
    /** Unlocked */
    Unlocked = "Unlocked",
    /** Locked */
    Locked = "Locked"
}

/** Known values of {@link Month} that the service accepts. */
export declare enum KnownMonth {
    /** April */
    April = "April",
    /** August */
    August = "August",
    /** December */
    December = "December",
    /** February */
    February = "February",
    /** January */
    January = "January",
    /** July */
    July = "July",
    /** June */
    June = "June",
    /** March */
    March = "March",
    /** May */
    May = "May",
    /** November */
    November = "November",
    /** October */
    October = "October",
    /** September */
    September = "September"
}

/** Known values of {@link PersistentVolumeRestoreMode} that the service accepts. */
export declare enum KnownPersistentVolumeRestoreMode {
    /** RestoreWithVolumeData */
    RestoreWithVolumeData = "RestoreWithVolumeData",
    /** RestoreWithoutVolumeData */
    RestoreWithoutVolumeData = "RestoreWithoutVolumeData"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Failed */
    Failed = "Failed",
    /** Provisioning */
    Provisioning = "Provisioning",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Unknown */
    Unknown = "Unknown",
    /** Updating */
    Updating = "Updating"
}

/** Known values of {@link RecoveryOption} that the service accepts. */
export declare enum KnownRecoveryOption {
    /** FailIfExists */
    FailIfExists = "FailIfExists"
}

/** Known values of {@link RehydrationPriority} that the service accepts. */
export declare enum KnownRehydrationPriority {
    /** Invalid */
    Invalid = "Invalid",
    /** High */
    High = "High",
    /** Standard */
    Standard = "Standard"
}

/** Known values of {@link RehydrationStatus} that the service accepts. */
export declare enum KnownRehydrationStatus {
    /** CreateINProgress */
    CreateINProgress = "CREATE_IN_PROGRESS",
    /** Completed */
    Completed = "COMPLETED",
    /** DeleteINProgress */
    DeleteINProgress = "DELETE_IN_PROGRESS",
    /** Deleted */
    Deleted = "DELETED",
    /** Failed */
    Failed = "FAILED"
}

/** Known values of {@link ResourceMoveState} that the service accepts. */
export declare enum KnownResourceMoveState {
    /** Unknown */
    Unknown = "Unknown",
    /** InProgress */
    InProgress = "InProgress",
    /** PrepareFailed */
    PrepareFailed = "PrepareFailed",
    /** CommitFailed */
    CommitFailed = "CommitFailed",
    /** Failed */
    Failed = "Failed",
    /** PrepareTimedout */
    PrepareTimedout = "PrepareTimedout",
    /** CommitTimedout */
    CommitTimedout = "CommitTimedout",
    /** CriticalFailure */
    CriticalFailure = "CriticalFailure",
    /** PartialSuccess */
    PartialSuccess = "PartialSuccess",
    /** MoveSucceeded */
    MoveSucceeded = "MoveSucceeded"
}

/** Known values of {@link RestoreSourceDataStoreType} that the service accepts. */
export declare enum KnownRestoreSourceDataStoreType {
    /** OperationalStore */
    OperationalStore = "OperationalStore",
    /** VaultStore */
    VaultStore = "VaultStore",
    /** ArchiveStore */
    ArchiveStore = "ArchiveStore"
}

/** Known values of {@link RestoreTargetLocationType} that the service accepts. */
export declare enum KnownRestoreTargetLocationType {
    /** Invalid */
    Invalid = "Invalid",
    /** AzureBlobs */
    AzureBlobs = "AzureBlobs",
    /** AzureFiles */
    AzureFiles = "AzureFiles"
}

/** Known values of {@link SecretStoreType} that the service accepts. */
export declare enum KnownSecretStoreType {
    /** Invalid */
    Invalid = "Invalid",
    /** AzureKeyVault */
    AzureKeyVault = "AzureKeyVault"
}

/** Known values of {@link SecureScoreLevel} that the service accepts. */
export declare enum KnownSecureScoreLevel {
    /** None */
    None = "None",
    /** Minimum */
    Minimum = "Minimum",
    /** Adequate */
    Adequate = "Adequate",
    /** Maximum */
    Maximum = "Maximum",
    /** NotSupported */
    NotSupported = "NotSupported"
}

/** Known values of {@link SoftDeleteState} that the service accepts. */
export declare enum KnownSoftDeleteState {
    /** Soft Delete is turned off for the BackupVault */
    Off = "Off",
    /** Soft Delete is enabled for the BackupVault but can be turned off */
    On = "On",
    /** Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed */
    AlwaysOn = "AlwaysOn"
}

/** Known values of {@link SourceDataStoreType} that the service accepts. */
export declare enum KnownSourceDataStoreType {
    /** ArchiveStore */
    ArchiveStore = "ArchiveStore",
    /** SnapshotStore */
    SnapshotStore = "SnapshotStore",
    /** OperationalStore */
    OperationalStore = "OperationalStore",
    /** VaultStore */
    VaultStore = "VaultStore"
}

/** Known values of {@link Status} that the service accepts. */
export declare enum KnownStatus {
    /** ConfiguringProtection */
    ConfiguringProtection = "ConfiguringProtection",
    /** ConfiguringProtectionFailed */
    ConfiguringProtectionFailed = "ConfiguringProtectionFailed",
    /** ProtectionConfigured */
    ProtectionConfigured = "ProtectionConfigured",
    /** ProtectionStopped */
    ProtectionStopped = "ProtectionStopped",
    /** SoftDeleted */
    SoftDeleted = "SoftDeleted",
    /** SoftDeleting */
    SoftDeleting = "SoftDeleting"
}

/** Known values of {@link StorageSettingStoreTypes} that the service accepts. */
export declare enum KnownStorageSettingStoreTypes {
    /** ArchiveStore */
    ArchiveStore = "ArchiveStore",
    /** OperationalStore */
    OperationalStore = "OperationalStore",
    /** VaultStore */
    VaultStore = "VaultStore"
}

/** Known values of {@link StorageSettingTypes} that the service accepts. */
export declare enum KnownStorageSettingTypes {
    /** GeoRedundant */
    GeoRedundant = "GeoRedundant",
    /** LocallyRedundant */
    LocallyRedundant = "LocallyRedundant",
    /** ZoneRedundant */
    ZoneRedundant = "ZoneRedundant"
}

/** Known values of {@link SyncType} that the service accepts. */
export declare enum KnownSyncType {
    /** Default */
    Default = "Default",
    /** ForceResync */
    ForceResync = "ForceResync"
}

/** Known values of {@link ValidationType} that the service accepts. */
export declare enum KnownValidationType {
    /** ShallowValidation */
    ShallowValidation = "ShallowValidation",
    /** DeepValidation */
    DeepValidation = "DeepValidation"
}

/** Known values of {@link WeekNumber} that the service accepts. */
export declare enum KnownWeekNumber {
    /** First */
    First = "First",
    /** Fourth */
    Fourth = "Fourth",
    /** Last */
    Last = "Last",
    /** Second */
    Second = "Second",
    /** Third */
    Third = "Third"
}

/** Parameters for Kubernetes Cluster Backup Datasource */
export declare interface KubernetesClusterBackupDatasourceParameters extends BackupDatasourceParameters {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "KubernetesClusterBackupDatasourceParameters";
    /** Gets or sets the volume snapshot property. This property if enabled will take volume snapshots during backup. */
    snapshotVolumes: boolean;
    /** Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during backup. */
    includeClusterScopeResources: boolean;
    /** Gets or sets the include namespaces property. This property sets the namespaces to be included during backup. */
    includedNamespaces?: string[];
    /** Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during backup. */
    excludedNamespaces?: string[];
    /** Gets or sets the include resource types property. This property sets the resource types to be included during backup. */
    includedResourceTypes?: string[];
    /** Gets or sets the exclude resource types property. This property sets the resource types to be excluded during backup. */
    excludedResourceTypes?: string[];
    /** Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during backup. */
    labelSelectors?: string[];
    /** Gets or sets the backup hook references. This property sets the hook reference to be executed during backup. */
    backupHookReferences?: NamespacedNameResource[];
}

/** kubernetes Cluster Backup target info for restore operation */
export declare interface KubernetesClusterRestoreCriteria extends ItemLevelRestoreCriteria {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "KubernetesClusterRestoreCriteria";
    /** Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during restore. */
    includeClusterScopeResources: boolean;
    /** Gets or sets the include namespaces property. This property sets the namespaces to be included during restore. */
    includedNamespaces?: string[];
    /** Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during restore. */
    excludedNamespaces?: string[];
    /** Gets or sets the include resource types property. This property sets the resource types to be included during restore. */
    includedResourceTypes?: string[];
    /** Gets or sets the exclude resource types property. This property sets the resource types to be excluded during restore. */
    excludedResourceTypes?: string[];
    /** Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during restore. */
    labelSelectors?: string[];
    /** Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored. */
    persistentVolumeRestoreMode?: PersistentVolumeRestoreMode;
    /** Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore. */
    conflictPolicy?: ExistingResourcePolicy;
    /** Gets or sets the Namespace Mappings property. This property sets if namespace needs to be change during restore. */
    namespaceMappings?: {
        [propertyName: string]: string;
    };
    /** Gets or sets the restore hook references. This property sets the hook reference to be executed during restore. */
    restoreHookReferences?: NamespacedNameResource[];
}

/** Item Level kubernetes persistent volume target info for restore operation */
export declare interface KubernetesPVRestoreCriteria extends ItemLevelRestoreCriteria {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "KubernetesPVRestoreCriteria";
    /** Selected persistent volume claim name */
    name?: string;
    /** Selected storage class name for restore operation */
    storageClassName?: string;
}

/** Item Level kubernetes storage class target info for restore operation */
export declare interface KubernetesStorageClassRestoreCriteria extends ItemLevelRestoreCriteria {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "KubernetesStorageClassRestoreCriteria";
    /** Selected storage class name */
    selectedStorageClassName?: string;
    /** Provisioner of the storage class */
    provisioner?: string;
}

/** Monitoring Settings */
export declare interface MonitoringSettings {
    /** Settings for Azure Monitor based alerts */
    azureMonitorAlertSettings?: AzureMonitorAlertSettings;
}

/**
 * Defines values for Month. \
 * {@link KnownMonth} can be used interchangeably with Month,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **April** \
 * **August** \
 * **December** \
 * **February** \
 * **January** \
 * **July** \
 * **June** \
 * **March** \
 * **May** \
 * **November** \
 * **October** \
 * **September**
 */
export declare type Month = string;

/** Class to refer resources which contains namespace and name */
export declare interface NamespacedNameResource {
    /** Name of the resource */
    name?: string;
    /** Namespace in which the resource exists */
    namespace?: string;
}

/** Operation Extended Info */
export declare interface OperationExtendedInfo {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "OperationJobExtendedInfo";
}

export declare type OperationExtendedInfoUnion = OperationExtendedInfo | OperationJobExtendedInfo;

/** Operation Job Extended Info */
export declare interface OperationJobExtendedInfo extends OperationExtendedInfo {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "OperationJobExtendedInfo";
    /** Arm Id of the job created for this operation. */
    jobId?: string;
}

/** Operation Resource */
export declare interface OperationResource {
    /** End time of the operation */
    endTime?: Date;
    /**
     * Required if status == failed or status == canceled. This is the OData v4 error format, used by the RPC and will go into the v2.2 Azure REST API guidelines.
     * The full set of optional properties (e.g. inner errors / details) can be found in the "Error Response" section.
     */
    error?: ErrorModel;
    /** It should match what is used to GET the operation result */
    id?: string;
    /** It must match the last segment of the "id" field, and will typically be a GUID / system generated value */
    name?: string;
    /** End time of the operation */
    properties?: OperationExtendedInfoUnion;
    /** Start time of the operation */
    startTime?: Date;
    status?: string;
}

/** Interface representing a OperationResult. */
export declare interface OperationResult {
    /**
     * Gets the operation result for a resource
     * @param operationId
     * @param location
     * @param options The options parameters.
     */
    get(operationId: string, location: string, options?: OperationResultGetOptionalParams): Promise<OperationResultGetResponse>;
}

/** Defines headers for OperationResult_get operation. */
export declare interface OperationResultGetHeaders {
    /** The URL of the resource used to check the status of the asynchronous operation. */
    location?: string;
    /** The URL of the resource used to check the status of the asynchronous operation. */
    azureAsyncOperation?: string;
    /** Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface OperationResultGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OperationResultGetResponse = OperationJobExtendedInfo;

/** Interface representing a OperationStatus. */
export declare interface OperationStatus {
    /**
     * Gets the operation status for a resource.
     * @param location
     * @param operationId
     * @param options The options parameters.
     */
    get(location: string, operationId: string, options?: OperationStatusGetOptionalParams): Promise<OperationStatusGetResponse>;
}

/** Interface representing a OperationStatusBackupVaultContext. */
export declare interface OperationStatusBackupVaultContext {
    /**
     * Gets the operation status for an operation over a BackupVault's context.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param operationId
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, operationId: string, options?: OperationStatusBackupVaultContextGetOptionalParams): Promise<OperationStatusBackupVaultContextGetResponse>;
}

/** Optional parameters. */
export declare interface OperationStatusBackupVaultContextGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OperationStatusBackupVaultContextGetResponse = OperationResource;

/** Optional parameters. */
export declare interface OperationStatusGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OperationStatusGetResponse = OperationResource;

/** Interface representing a OperationStatusResourceGroupContext. */
export declare interface OperationStatusResourceGroupContext {
    /**
     * Gets the operation status for an operation over a ResourceGroup's context.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param operationId
     * @param options The options parameters.
     */
    get(resourceGroupName: string, operationId: string, options?: OperationStatusResourceGroupContextGetOptionalParams): Promise<OperationStatusResourceGroupContextGetResponse>;
}

/** Optional parameters. */
export declare interface OperationStatusResourceGroupContextGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OperationStatusResourceGroupContextGetResponse = OperationResource;

/** Backup Vault Contract for Patch Backup Vault API. */
export declare interface PatchBackupVaultInput {
    /** Monitoring Settings */
    monitoringSettings?: MonitoringSettings;
    /** Security Settings */
    securitySettings?: SecuritySettings;
    /** Feature Settings */
    featureSettings?: FeatureSettings;
}

/** Patch Request content for Microsoft.DataProtection Resource Guard resources */
export declare interface PatchResourceGuardInput {
    /** Resource Guard tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Patch Request content for Microsoft.DataProtection resources */
export declare interface PatchResourceRequestInput {
    /** Input Managed Identity Details */
    identity?: DppIdentityDetails;
    /** Resource properties. */
    properties?: PatchBackupVaultInput;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

/**
 * Defines values for PersistentVolumeRestoreMode. \
 * {@link KnownPersistentVolumeRestoreMode} can be used interchangeably with PersistentVolumeRestoreMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RestoreWithVolumeData** \
 * **RestoreWithoutVolumeData**
 */
export declare type PersistentVolumeRestoreMode = string;

/** Policy Info in backupInstance */
export declare interface PolicyInfo {
    policyId: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly policyVersion?: string;
    /** Policy parameters for the backup instance */
    policyParameters?: PolicyParameters;
}

/** Parameters in Policy */
export declare interface PolicyParameters {
    /** Gets or sets the DataStore Parameters */
    dataStoreParametersList?: DataStoreParametersUnion[];
    /** Gets or sets the Backup Data Source Parameters */
    backupDatasourceParametersList?: BackupDatasourceParametersUnion[];
}

/** Protection status details */
export declare interface ProtectionStatusDetails {
    /** Specifies the protection status error of the resource */
    errorDetails?: UserFacingError;
    /** Specifies the protection status of the resource */
    status?: Status;
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Failed** \
 * **Provisioning** \
 * **Succeeded** \
 * **Unknown** \
 * **Updating**
 */
export declare type ProvisioningState = string;

/** Item Level target info for restore operation */
export declare interface RangeBasedItemLevelRestoreCriteria extends ItemLevelRestoreCriteria {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "RangeBasedItemLevelRestoreCriteria";
    /** minimum value for range prefix match */
    minMatchingValue?: string;
    /** maximum value for range prefix match */
    maxMatchingValue?: string;
}

/**
 * Defines values for RecoveryOption. \
 * {@link KnownRecoveryOption} can be used interchangeably with RecoveryOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **FailIfExists**
 */
export declare type RecoveryOption = string;

/** RecoveryPoint datastore details */
export declare interface RecoveryPointDataStoreDetails {
    creationTime?: Date;
    expiryTime?: Date;
    id?: string;
    metaData?: string;
    state?: string;
    type?: string;
    visible?: boolean;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly rehydrationExpiryTime?: Date;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly rehydrationStatus?: RehydrationStatus;
}

/** Interface representing a RecoveryPoints. */
export declare interface RecoveryPoints {
    /**
     * Returns a list of Recovery Points for a DataSource in a vault.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, vaultName: string, backupInstanceName: string, options?: RecoveryPointsListOptionalParams): PagedAsyncIterableIterator<AzureBackupRecoveryPointResource>;
    /**
     * Gets a Recovery Point using recoveryPointId for a Datasource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param recoveryPointId
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, backupInstanceName: string, recoveryPointId: string, options?: RecoveryPointsGetOptionalParams): Promise<RecoveryPointsGetResponse>;
}

export declare interface RecoveryPointsFilters {
    restorePointDataStoreId?: string;
    isVisible?: boolean;
    startDate?: string;
    endDate?: string;
    extendedInfo?: boolean;
    restorePointState?: string;
}

/** Optional parameters. */
export declare interface RecoveryPointsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type RecoveryPointsGetResponse = AzureBackupRecoveryPointResource;

/** Optional parameters. */
export declare interface RecoveryPointsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type RecoveryPointsListNextResponse = AzureBackupRecoveryPointResourceList;

/** Optional parameters. */
export declare interface RecoveryPointsListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
    /** skipToken Filter. */
    skipToken?: string;
}

/** Contains response data for the list operation. */
export declare type RecoveryPointsListResponse = AzureBackupRecoveryPointResourceList;

/**
 * Defines values for RehydrationPriority. \
 * {@link KnownRehydrationPriority} can be used interchangeably with RehydrationPriority,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **High** \
 * **Standard**
 */
export declare type RehydrationPriority = string;

/**
 * Defines values for RehydrationStatus. \
 * {@link KnownRehydrationStatus} can be used interchangeably with RehydrationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CREATE_IN_PROGRESS** \
 * **COMPLETED** \
 * **DELETE_IN_PROGRESS** \
 * **DELETED** \
 * **FAILED**
 */
export declare type RehydrationStatus = string;

export declare interface ResourceGuard {
    /**
     * Provisioning state of the BackupVault resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * This flag indicates whether auto approval is allowed or not.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly allowAutoApprovals?: boolean;
    /**
     * {readonly} List of operation details those are protected by the ResourceGuard resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceGuardOperations?: ResourceGuardOperation[];
    /** List of critical operations which are not protected by this resourceGuard */
    vaultCriticalOperationExclusionList?: string[];
    /**
     * Description about the pre-req steps to perform all the critical operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** This class contains all the details about a critical operation. */
export declare interface ResourceGuardOperation {
    /**
     * Name of the critical operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly vaultCriticalOperation?: string;
    /**
     * Type of resource request.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requestResourceType?: string;
}

/** VaultCritical Operation protected by a resource guard */
export declare interface ResourceGuardOperationDetail {
    vaultCriticalOperation?: string;
    defaultResourceRequest?: string;
}

/** ResourceGuardProxyBase object, used in ResourceGuardProxyBaseResource */
export declare interface ResourceGuardProxyBase {
    resourceGuardResourceId?: string;
    resourceGuardOperationDetails?: ResourceGuardOperationDetail[];
    lastUpdatedTime?: string;
    description?: string;
}

/** ResourceGuardProxyBaseResource object, used for response and request bodies for ResourceGuardProxy APIs */
export declare interface ResourceGuardProxyBaseResource extends DppResource {
    /** ResourceGuardProxyBaseResource properties */
    properties?: ResourceGuardProxyBase;
}

/** List of ResourceGuardProxyBase resources */
export declare interface ResourceGuardProxyBaseResourceList extends DppResourceList {
    /** List of resources. */
    value?: ResourceGuardProxyBaseResource[];
}

export declare interface ResourceGuardResource extends DppBaseTrackedResource {
    /** ResourceGuardResource properties */
    properties?: ResourceGuard;
}

/** List of ResourceGuard resources */
export declare interface ResourceGuardResourceList extends DppTrackedResourceList {
    /** List of resources. */
    value?: ResourceGuardResource[];
}

/** Interface representing a ResourceGuards. */
export declare interface ResourceGuards {
    /**
     * Returns ResourceGuards collection belonging to a subscription.
     * @param options The options parameters.
     */
    listResourcesInSubscription(options?: ResourceGuardsGetResourcesInSubscriptionOptionalParams): PagedAsyncIterableIterator<ResourceGuardResource>;
    /**
     * Returns ResourceGuards collection belonging to a ResourceGroup.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listResourcesInResourceGroup(resourceGroupName: string, options?: ResourceGuardsGetResourcesInResourceGroupOptionalParams): PagedAsyncIterableIterator<ResourceGuardResource>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param options The options parameters.
     */
    listDisableSoftDeleteRequestsObjects(resourceGroupName: string, resourceGuardsName: string, options?: ResourceGuardsGetDisableSoftDeleteRequestsObjectsOptionalParams): PagedAsyncIterableIterator<DppBaseResource>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param options The options parameters.
     */
    listDeleteResourceGuardProxyRequestsObjects(resourceGroupName: string, resourceGuardsName: string, options?: ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsOptionalParams): PagedAsyncIterableIterator<DppBaseResource>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param options The options parameters.
     */
    listBackupSecurityPINRequestsObjects(resourceGroupName: string, resourceGuardsName: string, options?: ResourceGuardsGetBackupSecurityPINRequestsObjectsOptionalParams): PagedAsyncIterableIterator<DppBaseResource>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param options The options parameters.
     */
    listDeleteProtectedItemRequestsObjects(resourceGroupName: string, resourceGuardsName: string, options?: ResourceGuardsGetDeleteProtectedItemRequestsObjectsOptionalParams): PagedAsyncIterableIterator<DppBaseResource>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param options The options parameters.
     */
    listUpdateProtectionPolicyRequestsObjects(resourceGroupName: string, resourceGuardsName: string, options?: ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsOptionalParams): PagedAsyncIterableIterator<DppBaseResource>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param options The options parameters.
     */
    listUpdateProtectedItemRequestsObjects(resourceGroupName: string, resourceGuardsName: string, options?: ResourceGuardsGetUpdateProtectedItemRequestsObjectsOptionalParams): PagedAsyncIterableIterator<DppBaseResource>;
    /**
     * Creates or updates a ResourceGuard resource belonging to a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName The name of ResourceGuard
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    put(resourceGroupName: string, resourceGuardsName: string, parameters: ResourceGuardResource, options?: ResourceGuardsPutOptionalParams): Promise<ResourceGuardsPutResponse>;
    /**
     * Returns a ResourceGuard belonging to a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName The name of ResourceGuard
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceGuardsName: string, options?: ResourceGuardsGetOptionalParams): Promise<ResourceGuardsGetResponse>;
    /**
     * Deletes a ResourceGuard resource from the resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName The name of ResourceGuard
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceGuardsName: string, options?: ResourceGuardsDeleteOptionalParams): Promise<void>;
    /**
     * Updates a ResourceGuard resource belonging to a resource group. For example, updating tags for a
     * resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName The name of ResourceGuard
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    patch(resourceGroupName: string, resourceGuardsName: string, parameters: PatchResourceGuardInput, options?: ResourceGuardsPatchOptionalParams): Promise<ResourceGuardsPatchResponse>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param requestName
     * @param options The options parameters.
     */
    getDefaultDisableSoftDeleteRequestsObject(resourceGroupName: string, resourceGuardsName: string, requestName: string, options?: ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectOptionalParams): Promise<ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectResponse>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param requestName
     * @param options The options parameters.
     */
    getDefaultDeleteResourceGuardProxyRequestsObject(resourceGroupName: string, resourceGuardsName: string, requestName: string, options?: ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectOptionalParams): Promise<ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectResponse>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param requestName
     * @param options The options parameters.
     */
    getDefaultBackupSecurityPINRequestsObject(resourceGroupName: string, resourceGuardsName: string, requestName: string, options?: ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectOptionalParams): Promise<ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectResponse>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param requestName
     * @param options The options parameters.
     */
    getDefaultDeleteProtectedItemRequestsObject(resourceGroupName: string, resourceGuardsName: string, requestName: string, options?: ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectOptionalParams): Promise<ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectResponse>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param requestName
     * @param options The options parameters.
     */
    getDefaultUpdateProtectionPolicyRequestsObject(resourceGroupName: string, resourceGuardsName: string, requestName: string, options?: ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectOptionalParams): Promise<ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectResponse>;
    /**
     * Returns collection of operation request objects for a critical operation protected by the given
     * ResourceGuard resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceGuardsName
     * @param requestName
     * @param options The options parameters.
     */
    getDefaultUpdateProtectedItemRequestsObject(resourceGroupName: string, resourceGuardsName: string, requestName: string, options?: ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectOptionalParams): Promise<ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectResponse>;
}

/** Optional parameters. */
export declare interface ResourceGuardsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ResourceGuardsGetBackupSecurityPINRequestsObjectsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getBackupSecurityPINRequestsObjectsNext operation. */
export declare type ResourceGuardsGetBackupSecurityPINRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetBackupSecurityPINRequestsObjectsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getBackupSecurityPINRequestsObjects operation. */
export declare type ResourceGuardsGetBackupSecurityPINRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDefaultBackupSecurityPINRequestsObject operation. */
export declare type ResourceGuardsGetDefaultBackupSecurityPINRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export declare interface ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDefaultDeleteProtectedItemRequestsObject operation. */
export declare type ResourceGuardsGetDefaultDeleteProtectedItemRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export declare interface ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDefaultDeleteResourceGuardProxyRequestsObject operation. */
export declare type ResourceGuardsGetDefaultDeleteResourceGuardProxyRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export declare interface ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDefaultDisableSoftDeleteRequestsObject operation. */
export declare type ResourceGuardsGetDefaultDisableSoftDeleteRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export declare interface ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDefaultUpdateProtectedItemRequestsObject operation. */
export declare type ResourceGuardsGetDefaultUpdateProtectedItemRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export declare interface ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDefaultUpdateProtectionPolicyRequestsObject operation. */
export declare type ResourceGuardsGetDefaultUpdateProtectionPolicyRequestsObjectResponse = DppBaseResource;

/** Optional parameters. */
export declare interface ResourceGuardsGetDeleteProtectedItemRequestsObjectsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDeleteProtectedItemRequestsObjectsNext operation. */
export declare type ResourceGuardsGetDeleteProtectedItemRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetDeleteProtectedItemRequestsObjectsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDeleteProtectedItemRequestsObjects operation. */
export declare type ResourceGuardsGetDeleteProtectedItemRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDeleteResourceGuardProxyRequestsObjectsNext operation. */
export declare type ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDeleteResourceGuardProxyRequestsObjects operation. */
export declare type ResourceGuardsGetDeleteResourceGuardProxyRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetDisableSoftDeleteRequestsObjectsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDisableSoftDeleteRequestsObjectsNext operation. */
export declare type ResourceGuardsGetDisableSoftDeleteRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetDisableSoftDeleteRequestsObjectsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getDisableSoftDeleteRequestsObjects operation. */
export declare type ResourceGuardsGetDisableSoftDeleteRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ResourceGuardsGetResourcesInResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getResourcesInResourceGroupNext operation. */
export declare type ResourceGuardsGetResourcesInResourceGroupNextResponse = ResourceGuardResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetResourcesInResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getResourcesInResourceGroup operation. */
export declare type ResourceGuardsGetResourcesInResourceGroupResponse = ResourceGuardResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetResourcesInSubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getResourcesInSubscriptionNext operation. */
export declare type ResourceGuardsGetResourcesInSubscriptionNextResponse = ResourceGuardResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetResourcesInSubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getResourcesInSubscription operation. */
export declare type ResourceGuardsGetResourcesInSubscriptionResponse = ResourceGuardResourceList;

/** Contains response data for the get operation. */
export declare type ResourceGuardsGetResponse = ResourceGuardResource;

/** Optional parameters. */
export declare interface ResourceGuardsGetUpdateProtectedItemRequestsObjectsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getUpdateProtectedItemRequestsObjectsNext operation. */
export declare type ResourceGuardsGetUpdateProtectedItemRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetUpdateProtectedItemRequestsObjectsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getUpdateProtectedItemRequestsObjects operation. */
export declare type ResourceGuardsGetUpdateProtectedItemRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getUpdateProtectionPolicyRequestsObjectsNext operation. */
export declare type ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsNextResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getUpdateProtectionPolicyRequestsObjects operation. */
export declare type ResourceGuardsGetUpdateProtectionPolicyRequestsObjectsResponse = DppBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardsPatchOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the patch operation. */
export declare type ResourceGuardsPatchResponse = ResourceGuardResource;

/** Optional parameters. */
export declare interface ResourceGuardsPutOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the put operation. */
export declare type ResourceGuardsPutResponse = ResourceGuardResource;

/** ResourceMoveDetails will be returned in response to GetResource call from ARM */
export declare interface ResourceMoveDetails {
    /** CorrelationId of latest ResourceMove operation attempted */
    operationId?: string;
    /** Start time in UTC of latest ResourceMove operation attempted. ISO 8601 format. */
    startTimeUtc?: string;
    /** Completion time in UTC of latest ResourceMove operation attempted. ISO 8601 format. */
    completionTimeUtc?: string;
    /** ARM resource path of source resource */
    sourceResourcePath?: string;
    /** ARM resource path of target resource used in latest ResourceMove operation */
    targetResourcePath?: string;
}

/**
 * Defines values for ResourceMoveState. \
 * {@link KnownResourceMoveState} can be used interchangeably with ResourceMoveState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **InProgress** \
 * **PrepareFailed** \
 * **CommitFailed** \
 * **Failed** \
 * **PrepareTimedout** \
 * **CommitTimedout** \
 * **CriticalFailure** \
 * **PartialSuccess** \
 * **MoveSucceeded**
 */
export declare type ResourceMoveState = string;

export declare interface RestorableTimeRange {
    /** Start time for the available restore range */
    startTime: string;
    /** End time for the available restore range */
    endTime: string;
    objectType?: string;
}

/** Interface representing a RestorableTimeRanges. */
export declare interface RestorableTimeRanges {
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vaultName The name of the backup vault.
     * @param backupInstanceName The name of the backup instance.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    find(resourceGroupName: string, vaultName: string, backupInstanceName: string, parameters: AzureBackupFindRestorableTimeRangesRequest, options?: RestorableTimeRangesFindOptionalParams): Promise<RestorableTimeRangesFindResponse>;
}

/** Optional parameters. */
export declare interface RestorableTimeRangesFindOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the find operation. */
export declare type RestorableTimeRangesFindResponse = AzureBackupFindRestorableTimeRangesResponseResource;

/** Class encapsulating restore as files target parameters */
export declare interface RestoreFilesTargetInfo extends RestoreTargetInfoBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "RestoreFilesTargetInfo";
    /** Destination of RestoreAsFiles operation, when destination is not a datasource */
    targetDetails: TargetDetails;
}

export declare interface RestoreJobRecoveryPointDetails {
    recoveryPointID?: string;
    recoveryPointTime?: Date;
}

/**
 * Defines values for RestoreSourceDataStoreType. \
 * {@link KnownRestoreSourceDataStoreType} can be used interchangeably with RestoreSourceDataStoreType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OperationalStore** \
 * **VaultStore** \
 * **ArchiveStore**
 */
export declare type RestoreSourceDataStoreType = string;

/** Class encapsulating restore target parameters */
export declare interface RestoreTargetInfo extends RestoreTargetInfoBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "RestoreTargetInfo";
    /** Information of target DS */
    datasourceInfo: Datasource;
    /** Information of target DS Set */
    datasourceSetInfo?: DatasourceSet;
    /** Credentials to use to authenticate with data source provider. */
    datasourceAuthCredentials?: AuthCredentialsUnion;
}

/** Base class common to RestoreTargetInfo and RestoreFilesTargetInfo */
export declare interface RestoreTargetInfoBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ItemLevelRestoreTargetInfo" | "RestoreFilesTargetInfo" | "RestoreTargetInfo";
    /** Recovery Option */
    recoveryOption: RecoveryOption;
    /** Target Restore region */
    restoreLocation?: string;
}

export declare type RestoreTargetInfoBaseUnion = RestoreTargetInfoBase | ItemLevelRestoreTargetInfo | RestoreFilesTargetInfo | RestoreTargetInfo;

/**
 * Defines values for RestoreTargetLocationType. \
 * {@link KnownRestoreTargetLocationType} can be used interchangeably with RestoreTargetLocationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AzureBlobs** \
 * **AzureFiles**
 */
export declare type RestoreTargetLocationType = string;

/** Retention tag */
export declare interface RetentionTag {
    /**
     * Retention Tag version.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly eTag?: string;
    /**
     * Retention Tag version.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /** Retention Tag Name to relate it to retention rule. */
    tagName: string;
}

/** Schedule based backup criteria */
export declare interface ScheduleBasedBackupCriteria extends BackupCriteria {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ScheduleBasedBackupCriteria";
    /**
     * it contains absolute values like "AllBackup" / "FirstOfDay" / "FirstOfWeek" / "FirstOfMonth"
     * and should be part of AbsoluteMarker enum
     */
    absoluteCriteria?: AbsoluteMarker[];
    /** This is day of the month from 1 to 28 other wise last of month */
    daysOfMonth?: Day[];
    /** It should be Sunday/Monday/T..../Saturday */
    daysOfTheWeek?: DayOfWeek[];
    /** It should be January/February/....../December */
    monthsOfYear?: Month[];
    /** List of schedule times for backup */
    scheduleTimes?: Date[];
    /** It should be First/Second/Third/Fourth/Last */
    weeksOfTheMonth?: WeekNumber[];
}

/** Schedule based trigger context */
export declare interface ScheduleBasedTriggerContext extends TriggerContext {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ScheduleBasedTriggerContext";
    /** Schedule for this backup */
    schedule: BackupSchedule;
    /** List of tags that can be applicable for given schedule. */
    taggingCriteria: TaggingCriteria[];
}

/** Secret store based authentication credentials. */
export declare interface SecretStoreBasedAuthCredentials extends AuthCredentials {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "SecretStoreBasedAuthCredentials";
    /** Secret store resource */
    secretStoreResource?: SecretStoreResource;
}

/** Class representing a secret store resource. */
export declare interface SecretStoreResource {
    /** Uri to get to the resource */
    uri?: string;
    /** Gets or sets the type of secret store */
    secretStoreType: SecretStoreType;
    /** Gets or sets value stored in secret store resource */
    value?: string;
}

/**
 * Defines values for SecretStoreType. \
 * {@link KnownSecretStoreType} can be used interchangeably with SecretStoreType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AzureKeyVault**
 */
export declare type SecretStoreType = string;

/**
 * Defines values for SecureScoreLevel. \
 * {@link KnownSecureScoreLevel} can be used interchangeably with SecureScoreLevel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Minimum** \
 * **Adequate** \
 * **Maximum** \
 * **NotSupported**
 */
export declare type SecureScoreLevel = string;

/** Class containing security settings of vault */
export declare interface SecuritySettings {
    /** Soft delete related settings */
    softDeleteSettings?: SoftDeleteSettings;
    /** Immutability Settings at vault level */
    immutabilitySettings?: ImmutabilitySettings;
}

/** Soft delete related settings */
export declare interface SoftDeleteSettings {
    /** State of soft delete */
    state?: SoftDeleteState;
    /** Soft delete retention duration */
    retentionDurationInDays?: number;
}

/**
 * Defines values for SoftDeleteState. \
 * {@link KnownSoftDeleteState} can be used interchangeably with SoftDeleteState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Off**: Soft Delete is turned off for the BackupVault \
 * **On**: Soft Delete is enabled for the BackupVault but can be turned off \
 * **AlwaysOn**: Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed
 */
export declare type SoftDeleteState = string;

/**
 * Defines values for SourceDataStoreType. \
 * {@link KnownSourceDataStoreType} can be used interchangeably with SourceDataStoreType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ArchiveStore** \
 * **SnapshotStore** \
 * **OperationalStore** \
 * **VaultStore**
 */
export declare type SourceDataStoreType = string;

/** Source LifeCycle */
export declare interface SourceLifeCycle {
    /** Delete Option */
    deleteAfter: DeleteOptionUnion;
    /** DataStoreInfo base */
    sourceDataStore: DataStoreInfoBase;
    targetDataStoreCopySettings?: TargetCopySetting[];
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ConfiguringProtection** \
 * **ConfiguringProtectionFailed** \
 * **ProtectionConfigured** \
 * **ProtectionStopped** \
 * **SoftDeleted** \
 * **SoftDeleting**
 */
export declare type Status = string;

/** Storage setting */
export declare interface StorageSetting {
    /** Gets or sets the type of the datastore. */
    datastoreType?: StorageSettingStoreTypes;
    /** Gets or sets the type. */
    type?: StorageSettingTypes;
}

/**
 * Defines values for StorageSettingStoreTypes. \
 * {@link KnownStorageSettingStoreTypes} can be used interchangeably with StorageSettingStoreTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ArchiveStore** \
 * **OperationalStore** \
 * **VaultStore**
 */
export declare type StorageSettingStoreTypes = string;

/**
 * Defines values for StorageSettingTypes. \
 * {@link KnownStorageSettingTypes} can be used interchangeably with StorageSettingTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GeoRedundant** \
 * **LocallyRedundant** \
 * **ZoneRedundant**
 */
export declare type StorageSettingTypes = string;

/** Elements class for feature request */
export declare interface SupportedFeature {
    /** support feature type. */
    featureName?: string;
    /** feature support status */
    supportStatus?: FeatureSupportStatus;
    /** support feature type. */
    exposureControlledFeatures?: string[];
}

/** Sync BackupInstance Request */
export declare interface SyncBackupInstanceRequest {
    /** Field indicating sync type e.g. to sync only in case of failure or in all cases */
    syncType?: SyncType;
}

/**
 * Defines values for SyncType. \
 * {@link KnownSyncType} can be used interchangeably with SyncType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default** \
 * **ForceResync**
 */
export declare type SyncType = string;

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** Tagging criteria */
export declare interface TaggingCriteria {
    /** Criteria which decides whether the tag can be applied to a triggered backup. */
    criteria?: BackupCriteriaUnion[];
    /** Specifies if tag is default. */
    isDefault: boolean;
    /** Retention Tag priority. */
    taggingPriority: number;
    /** Retention tag information */
    tagInfo: RetentionTag;
}

/** Target copy settings */
export declare interface TargetCopySetting {
    /** It can be CustomCopyOption or ImmediateCopyOption. */
    copyAfter: CopyOptionUnion;
    /** Info of target datastore */
    dataStore: DataStoreInfoBase;
}

/** Class encapsulating target details, used where the destination is not a datasource */
export declare interface TargetDetails {
    /**
     * Restore operation may create multiple files inside location pointed by Url
     * Below will be the common prefix for all of them
     */
    filePrefix: string;
    /**
     * Denotes the target location where the data will be restored,
     * string value for the enum {Microsoft.Internal.AzureBackup.DataProtection.Common.Interface.RestoreTargetLocationType}
     */
    restoreTargetLocationType: RestoreTargetLocationType;
    /** Url denoting the restore destination. It can point to container / file share etc */
    url: string;
    /**
     * Full ARM Id denoting the restore destination. It is the ARM Id pointing to container / file share
     * This is optional if the target subscription can be identified with the URL field. If not
     * then this is needed if CrossSubscriptionRestore field of BackupVault is in any of the disabled states
     */
    targetResourceArmId?: string;
}

/** Trigger backup request */
export declare interface TriggerBackupRequest {
    /** Name for the Rule of the Policy which needs to be applied for this backup */
    backupRuleOptions: AdHocBackupRuleOptions;
}

/** Trigger context */
export declare interface TriggerContext {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AdhocBasedTriggerContext" | "ScheduleBasedTriggerContext";
}

export declare type TriggerContextUnion = TriggerContext | AdhocBasedTriggerContext | ScheduleBasedTriggerContext;

/** Request body of unlock delete API. */
export declare interface UnlockDeleteRequest {
    resourceGuardOperationRequests?: string[];
    resourceToBeDeleted?: string;
}

/** Response of Unlock Delete API. */
export declare interface UnlockDeleteResponse {
    /** This is the time when unlock delete privileges will get expired. */
    unlockDeleteExpiryTime?: string;
}

/** User assigned identity properties */
export declare interface UserAssignedIdentity {
    /**
     * The principal ID of the assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The client ID of the assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
}

/** Error object used by layers that have access to localized content, and propagate that to user */
export declare interface UserFacingError {
    /** Unique code for this error */
    code?: string;
    /** Additional related Errors */
    details?: UserFacingError[];
    /** Inner Error */
    innerError?: InnerError;
    /** Whether the operation will be retryable or not */
    isRetryable?: boolean;
    /** Whether the operation is due to a user error or service error */
    isUserError?: boolean;
    /** Any key value pairs that can be injected inside error object */
    properties?: {
        [propertyName: string]: string;
    };
    message?: string;
    /** RecommendedAction � localized. */
    recommendedAction?: string[];
    /** Target of the error. */
    target?: string;
}

/** Validate for backup request */
export declare interface ValidateForBackupRequest {
    /** Backup Instance */
    backupInstance: BackupInstance;
}

/** Validate restore request object */
export declare interface ValidateRestoreRequestObject {
    /** Gets or sets the restore request object. */
    restoreRequestObject: AzureBackupRestoreRequestUnion;
}

/**
 * Defines values for ValidationType. \
 * {@link KnownValidationType} can be used interchangeably with ValidationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ShallowValidation** \
 * **DeepValidation**
 */
export declare type ValidationType = string;

/**
 * Defines values for WeekNumber. \
 * {@link KnownWeekNumber} can be used interchangeably with WeekNumber,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **First** \
 * **Fourth** \
 * **Last** \
 * **Second** \
 * **Third**
 */
export declare type WeekNumber = string;

export { }
