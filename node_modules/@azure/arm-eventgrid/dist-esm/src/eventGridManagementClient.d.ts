import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Channels, Domains, DomainTopics, TopicEventSubscriptions, DomainEventSubscriptions, EventSubscriptions, DomainTopicEventSubscriptions, SystemTopicEventSubscriptions, PartnerTopicEventSubscriptions, Operations, Topics, PartnerConfigurations, PartnerNamespaces, PartnerRegistrations, PartnerTopics, PrivateEndpointConnections, PrivateLinkResources, SystemTopics, ExtensionTopics, TopicTypes, VerifiedPartners } from "./operationsInterfaces";
import { EventGridManagementClientOptionalParams } from "./models";
export declare class EventGridManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the EventGridManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Subscription credentials that uniquely identify a Microsoft Azure
     *                       subscription. The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: EventGridManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    channels: Channels;
    domains: Domains;
    domainTopics: DomainTopics;
    topicEventSubscriptions: TopicEventSubscriptions;
    domainEventSubscriptions: DomainEventSubscriptions;
    eventSubscriptions: EventSubscriptions;
    domainTopicEventSubscriptions: DomainTopicEventSubscriptions;
    systemTopicEventSubscriptions: SystemTopicEventSubscriptions;
    partnerTopicEventSubscriptions: PartnerTopicEventSubscriptions;
    operations: Operations;
    topics: Topics;
    partnerConfigurations: PartnerConfigurations;
    partnerNamespaces: PartnerNamespaces;
    partnerRegistrations: PartnerRegistrations;
    partnerTopics: PartnerTopics;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    systemTopics: SystemTopics;
    extensionTopics: ExtensionTopics;
    topicTypes: TopicTypes;
    verifiedPartners: VerifiedPartners;
}
//# sourceMappingURL=eventGridManagementClient.d.ts.map