import { ExtensionTopics } from "../operationsInterfaces";
import { EventGridManagementClient } from "../eventGridManagementClient";
import { ExtensionTopicsGetOptionalParams, ExtensionTopicsGetResponse } from "../models";
/** Class containing ExtensionTopics operations. */
export declare class ExtensionTopicsImpl implements ExtensionTopics {
    private readonly client;
    /**
     * Initialize a new instance of the class ExtensionTopics class.
     * @param client Reference to the service client
     */
    constructor(client: EventGridManagementClient);
    /**
     * Get the properties of an extension topic.
     * @param scope The identifier of the resource to which extension topic is queried. The scope can be a
     *              subscription, or a resource group, or a top level resource belonging to a resource provider
     *              namespace. For example, use '/subscriptions/{subscriptionId}/' for a subscription,
     *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and
     *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
     *              for Azure resource.
     * @param options The options parameters.
     */
    get(scope: string, options?: ExtensionTopicsGetOptionalParams): Promise<ExtensionTopicsGetResponse>;
}
//# sourceMappingURL=extensionTopics.d.ts.map