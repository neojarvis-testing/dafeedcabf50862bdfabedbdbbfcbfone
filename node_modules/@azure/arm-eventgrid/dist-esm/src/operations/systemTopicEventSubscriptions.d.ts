import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SystemTopicEventSubscriptions } from "../operationsInterfaces";
import { EventGridManagementClient } from "../eventGridManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { EventSubscription, SystemTopicEventSubscriptionsListBySystemTopicOptionalParams, SystemTopicEventSubscriptionsGetOptionalParams, SystemTopicEventSubscriptionsGetResponse, SystemTopicEventSubscriptionsCreateOrUpdateOptionalParams, SystemTopicEventSubscriptionsCreateOrUpdateResponse, SystemTopicEventSubscriptionsDeleteOptionalParams, EventSubscriptionUpdateParameters, SystemTopicEventSubscriptionsUpdateOptionalParams, SystemTopicEventSubscriptionsUpdateResponse, SystemTopicEventSubscriptionsGetFullUrlOptionalParams, SystemTopicEventSubscriptionsGetFullUrlResponse, SystemTopicEventSubscriptionsGetDeliveryAttributesOptionalParams, SystemTopicEventSubscriptionsGetDeliveryAttributesResponse } from "../models";
/** Class containing SystemTopicEventSubscriptions operations. */
export declare class SystemTopicEventSubscriptionsImpl implements SystemTopicEventSubscriptions {
    private readonly client;
    /**
     * Initialize a new instance of the class SystemTopicEventSubscriptions class.
     * @param client Reference to the service client
     */
    constructor(client: EventGridManagementClient);
    /**
     * List event subscriptions that belong to a specific system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param options The options parameters.
     */
    listBySystemTopic(resourceGroupName: string, systemTopicName: string, options?: SystemTopicEventSubscriptionsListBySystemTopicOptionalParams): PagedAsyncIterableIterator<EventSubscription>;
    private listBySystemTopicPagingPage;
    private listBySystemTopicPagingAll;
    /**
     * Get an event subscription.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param eventSubscriptionName Name of the event subscription to be created. Event subscription names
     *                              must be between 3 and 100 characters in length and use alphanumeric letters only.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, systemTopicName: string, eventSubscriptionName: string, options?: SystemTopicEventSubscriptionsGetOptionalParams): Promise<SystemTopicEventSubscriptionsGetResponse>;
    /**
     * Asynchronously creates or updates an event subscription with the specified parameters. Existing
     * event subscriptions will be updated with this API.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param eventSubscriptionName Name of the event subscription to be created. Event subscription names
     *                              must be between 3 and 100 characters in length and use alphanumeric letters only.
     * @param eventSubscriptionInfo Event subscription properties containing the destination and filter
     *                              information.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, systemTopicName: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: SystemTopicEventSubscriptionsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<SystemTopicEventSubscriptionsCreateOrUpdateResponse>, SystemTopicEventSubscriptionsCreateOrUpdateResponse>>;
    /**
     * Asynchronously creates or updates an event subscription with the specified parameters. Existing
     * event subscriptions will be updated with this API.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param eventSubscriptionName Name of the event subscription to be created. Event subscription names
     *                              must be between 3 and 100 characters in length and use alphanumeric letters only.
     * @param eventSubscriptionInfo Event subscription properties containing the destination and filter
     *                              information.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, systemTopicName: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: SystemTopicEventSubscriptionsCreateOrUpdateOptionalParams): Promise<SystemTopicEventSubscriptionsCreateOrUpdateResponse>;
    /**
     * Delete an existing event subscription of a system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param eventSubscriptionName Name of the event subscription to be created. Event subscription names
     *                              must be between 3 and 100 characters in length and use alphanumeric letters only.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, systemTopicName: string, eventSubscriptionName: string, options?: SystemTopicEventSubscriptionsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete an existing event subscription of a system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param eventSubscriptionName Name of the event subscription to be created. Event subscription names
     *                              must be between 3 and 100 characters in length and use alphanumeric letters only.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, systemTopicName: string, eventSubscriptionName: string, options?: SystemTopicEventSubscriptionsDeleteOptionalParams): Promise<void>;
    /**
     * Update an existing event subscription of a system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param eventSubscriptionName Name of the event subscription to be created. Event subscription names
     *                              must be between 3 and 100 characters in length and use alphanumeric letters only.
     * @param eventSubscriptionUpdateParameters Updated event subscription information.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, systemTopicName: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: SystemTopicEventSubscriptionsUpdateOptionalParams): Promise<PollerLike<PollOperationState<SystemTopicEventSubscriptionsUpdateResponse>, SystemTopicEventSubscriptionsUpdateResponse>>;
    /**
     * Update an existing event subscription of a system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param eventSubscriptionName Name of the event subscription to be created. Event subscription names
     *                              must be between 3 and 100 characters in length and use alphanumeric letters only.
     * @param eventSubscriptionUpdateParameters Updated event subscription information.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, systemTopicName: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: SystemTopicEventSubscriptionsUpdateOptionalParams): Promise<SystemTopicEventSubscriptionsUpdateResponse>;
    /**
     * Get the full endpoint URL for an event subscription of a system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param eventSubscriptionName Name of the event subscription to be created. Event subscription names
     *                              must be between 3 and 100 characters in length and use alphanumeric letters only.
     * @param options The options parameters.
     */
    getFullUrl(resourceGroupName: string, systemTopicName: string, eventSubscriptionName: string, options?: SystemTopicEventSubscriptionsGetFullUrlOptionalParams): Promise<SystemTopicEventSubscriptionsGetFullUrlResponse>;
    /**
     * List event subscriptions that belong to a specific system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param options The options parameters.
     */
    private _listBySystemTopic;
    /**
     * Get all delivery attributes for an event subscription.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param eventSubscriptionName Name of the event subscription to be created. Event subscription names
     *                              must be between 3 and 100 characters in length and use alphanumeric letters only.
     * @param options The options parameters.
     */
    getDeliveryAttributes(resourceGroupName: string, systemTopicName: string, eventSubscriptionName: string, options?: SystemTopicEventSubscriptionsGetDeliveryAttributesOptionalParams): Promise<SystemTopicEventSubscriptionsGetDeliveryAttributesResponse>;
    /**
     * ListBySystemTopicNext
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param nextLink The nextLink from the previous successful call to the ListBySystemTopic method.
     * @param options The options parameters.
     */
    private _listBySystemTopicNext;
}
//# sourceMappingURL=systemTopicEventSubscriptions.d.ts.map