import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SystemTopics } from "../operationsInterfaces";
import { EventGridManagementClient } from "../eventGridManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { SystemTopic, SystemTopicsListBySubscriptionOptionalParams, SystemTopicsListByResourceGroupOptionalParams, SystemTopicsGetOptionalParams, SystemTopicsGetResponse, SystemTopicsCreateOrUpdateOptionalParams, SystemTopicsCreateOrUpdateResponse, SystemTopicsDeleteOptionalParams, SystemTopicUpdateParameters, SystemTopicsUpdateOptionalParams, SystemTopicsUpdateResponse } from "../models";
/** Class containing SystemTopics operations. */
export declare class SystemTopicsImpl implements SystemTopics {
    private readonly client;
    /**
     * Initialize a new instance of the class SystemTopics class.
     * @param client Reference to the service client
     */
    constructor(client: EventGridManagementClient);
    /**
     * List all the system topics under an Azure subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: SystemTopicsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<SystemTopic>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * List all the system topics under a resource group.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: SystemTopicsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<SystemTopic>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Get properties of a system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, systemTopicName: string, options?: SystemTopicsGetOptionalParams): Promise<SystemTopicsGetResponse>;
    /**
     * Asynchronously creates a new system topic with the specified parameters.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param systemTopicInfo System Topic information.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, systemTopicName: string, systemTopicInfo: SystemTopic, options?: SystemTopicsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<SystemTopicsCreateOrUpdateResponse>, SystemTopicsCreateOrUpdateResponse>>;
    /**
     * Asynchronously creates a new system topic with the specified parameters.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param systemTopicInfo System Topic information.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, systemTopicName: string, systemTopicInfo: SystemTopic, options?: SystemTopicsCreateOrUpdateOptionalParams): Promise<SystemTopicsCreateOrUpdateResponse>;
    /**
     * Delete existing system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, systemTopicName: string, options?: SystemTopicsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete existing system topic.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, systemTopicName: string, options?: SystemTopicsDeleteOptionalParams): Promise<void>;
    /**
     * Asynchronously updates a system topic with the specified parameters.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param systemTopicUpdateParameters SystemTopic update information.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, systemTopicName: string, systemTopicUpdateParameters: SystemTopicUpdateParameters, options?: SystemTopicsUpdateOptionalParams): Promise<PollerLike<PollOperationState<SystemTopicsUpdateResponse>, SystemTopicsUpdateResponse>>;
    /**
     * Asynchronously updates a system topic with the specified parameters.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param systemTopicName Name of the system topic.
     * @param systemTopicUpdateParameters SystemTopic update information.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, systemTopicName: string, systemTopicUpdateParameters: SystemTopicUpdateParameters, options?: SystemTopicsUpdateOptionalParams): Promise<SystemTopicsUpdateResponse>;
    /**
     * List all the system topics under an Azure subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * List all the system topics under a resource group.
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=systemTopics.d.ts.map