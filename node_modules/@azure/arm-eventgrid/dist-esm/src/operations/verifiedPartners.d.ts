import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { VerifiedPartners } from "../operationsInterfaces";
import { EventGridManagementClient } from "../eventGridManagementClient";
import { VerifiedPartner, VerifiedPartnersListOptionalParams, VerifiedPartnersGetOptionalParams, VerifiedPartnersGetResponse } from "../models";
/** Class containing VerifiedPartners operations. */
export declare class VerifiedPartnersImpl implements VerifiedPartners {
    private readonly client;
    /**
     * Initialize a new instance of the class VerifiedPartners class.
     * @param client Reference to the service client
     */
    constructor(client: EventGridManagementClient);
    /**
     * Get a list of all verified partners.
     * @param options The options parameters.
     */
    list(options?: VerifiedPartnersListOptionalParams): PagedAsyncIterableIterator<VerifiedPartner>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get properties of a verified partner.
     * @param verifiedPartnerName Name of the verified partner.
     * @param options The options parameters.
     */
    get(verifiedPartnerName: string, options?: VerifiedPartnersGetOptionalParams): Promise<VerifiedPartnersGetResponse>;
    /**
     * Get a list of all verified partners.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=verifiedPartners.d.ts.map