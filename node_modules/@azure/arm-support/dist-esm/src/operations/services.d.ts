import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Services } from "../operationsInterfaces";
import { MicrosoftSupport } from "../microsoftSupport";
import { Service, ServicesListOptionalParams, ServicesGetOptionalParams, ServicesGetResponse } from "../models";
/** Class containing Services operations. */
export declare class ServicesImpl implements Services {
    private readonly client;
    /**
     * Initialize a new instance of the class Services class.
     * @param client Reference to the service client
     */
    constructor(client: MicrosoftSupport);
    /**
     * Lists all the Azure services available for support ticket creation. For **Technical** issues, select
     * the Service Id that maps to the Azure service/product as displayed in the **Services** drop-down
     * list on the Azure portal's [New support
     * request](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/overview) page.
     * Always use the service and its corresponding problem classification(s) obtained programmatically for
     * support ticket creation. This practice ensures that you always have the most recent set of service
     * and problem classification Ids.
     * @param options The options parameters.
     */
    list(options?: ServicesListOptionalParams): PagedAsyncIterableIterator<Service>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all the Azure services available for support ticket creation. For **Technical** issues, select
     * the Service Id that maps to the Azure service/product as displayed in the **Services** drop-down
     * list on the Azure portal's [New support
     * request](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/overview) page.
     * Always use the service and its corresponding problem classification(s) obtained programmatically for
     * support ticket creation. This practice ensures that you always have the most recent set of service
     * and problem classification Ids.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets a specific Azure service for support ticket creation.
     * @param serviceName Name of the Azure service.
     * @param options The options parameters.
     */
    get(serviceName: string, options?: ServicesGetOptionalParams): Promise<ServicesGetResponse>;
}
//# sourceMappingURL=services.d.ts.map