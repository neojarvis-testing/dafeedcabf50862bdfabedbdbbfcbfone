import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { OperationState } from '@azure/core-lro';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { SimplePollerLike } from '@azure/core-lro';

/** For schedules like: 'recur every month on the 15th' or 'recur every 3 months on the 20th'. */
export declare interface AbsoluteMonthlySchedule {
    /** Specifies the number of months between each set of occurrences. */
    intervalMonths: number;
    /** The date of the month. */
    dayOfMonth: number;
}

/** Agent Pool. */
export declare interface AgentPool extends SubResource {
    /** Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1. */
    count?: number;
    /** VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions */
    vmSize?: string;
    /** OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. */
    osDiskSizeGB?: number;
    /** The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). */
    osDiskType?: OSDiskType;
    /** Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. */
    kubeletDiskType?: KubeletDiskType;
    /** Determines the type of workload a node can run. */
    workloadRuntime?: WorkloadRuntime;
    /** If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName} */
    vnetSubnetID?: string;
    /** If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName} */
    podSubnetID?: string;
    /** The maximum number of pods that can run on a node. */
    maxPods?: number;
    /** The operating system type. The default is Linux. */
    osType?: OSType;
    /** Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows. */
    osSKU?: Ossku;
    /** The maximum number of nodes for auto-scaling */
    maxCount?: number;
    /** The minimum number of nodes for auto-scaling */
    minCount?: number;
    /** Whether to enable auto-scaler */
    enableAutoScaling?: boolean;
    /** This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete. */
    scaleDownMode?: ScaleDownMode;
    /** The type of Agent Pool. */
    typePropertiesType?: AgentPoolType;
    /** A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools */
    mode?: AgentPoolMode;
    /** Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool). */
    orchestratorVersion?: string;
    /**
     * If orchestratorVersion is a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion is <major.minor>, this field will contain the full <major.minor.patch> version being used.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly currentOrchestratorVersion?: string;
    /**
     * The version of node image
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nodeImageVersion?: string;
    /** Settings for upgrading the agentpool */
    upgradeSettings?: AgentPoolUpgradeSettings;
    /**
     * The current deployment or provisioning state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /** When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded */
    powerState?: PowerState;
    /** The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'. */
    availabilityZones?: string[];
    /** Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false. */
    enableNodePublicIP?: boolean;
    /** This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName} */
    nodePublicIPPrefixID?: string;
    /** The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. */
    scaleSetPriority?: ScaleSetPriority;
    /** This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. */
    scaleSetEvictionPolicy?: ScaleSetEvictionPolicy;
    /** Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing) */
    spotMaxPrice?: number;
    /** The tags to be persisted on the agent pool virtual machine scale set. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The node labels to be persisted across all nodes in agent pool. */
    nodeLabels?: {
        [propertyName: string]: string;
    };
    /** The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. */
    nodeTaints?: string[];
    /** The ID for Proximity Placement Group. */
    proximityPlacementGroupID?: string;
    /** The Kubelet configuration on the agent pool nodes. */
    kubeletConfig?: KubeletConfig;
    /** The OS configuration of Linux agent nodes. */
    linuxOSConfig?: LinuxOSConfig;
    /** This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption */
    enableEncryptionAtHost?: boolean;
    /** Whether to enable UltraSSD */
    enableUltraSSD?: boolean;
    /** See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details. */
    enableFips?: boolean;
    /** GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. */
    gpuInstanceProfile?: GPUInstanceProfile;
    /** CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot. */
    creationData?: CreationData;
    /** AKS will associate the specified agent pool with the Capacity Reservation Group. */
    capacityReservationGroupID?: string;
    /** This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts). */
    hostGroupID?: string;
    /** Network-related settings of an agent pool. */
    networkProfile?: AgentPoolNetworkProfile;
}

/** The list of available versions for an agent pool. */
export declare interface AgentPoolAvailableVersions {
    /**
     * The ID of the agent pool version list.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the agent pool version list.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Type of the agent pool version list.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** List of versions available for agent pool. */
    agentPoolVersions?: AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem[];
}

export declare interface AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem {
    /** Whether this version is the default agent pool version. */
    default?: boolean;
    /** The Kubernetes version (major.minor.patch). */
    kubernetesVersion?: string;
    /** Whether Kubernetes version is currently in preview. */
    isPreview?: boolean;
}

/** The response from the List Agent Pools operation. */
export declare interface AgentPoolListResult {
    /** The list of agent pools. */
    value?: AgentPool[];
    /**
     * The URL to get the next set of agent pool results.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for AgentPoolMode. \
 * {@link KnownAgentPoolMode} can be used interchangeably with AgentPoolMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **System**: System agent pools are primarily for hosting critical system pods such as CoreDNS and metrics-server. System agent pools osType must be Linux. System agent pools VM SKU must have at least 2vCPUs and 4GB of memory. \
 * **User**: User agent pools are primarily for hosting your application pods.
 */
export declare type AgentPoolMode = string;

/** Network settings of an agent pool. */
export declare interface AgentPoolNetworkProfile {
    /** IPTags of instance-level public IPs. */
    nodePublicIPTags?: IPTag[];
    /** The port ranges that are allowed to access. The specified ranges are allowed to overlap. */
    allowedHostPorts?: PortRange[];
    /** The IDs of the application security groups which agent pool will associate when created. */
    applicationSecurityGroups?: string[];
}

/** Interface representing a AgentPools. */
export declare interface AgentPools {
    /**
     * Gets a list of agent pools in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: AgentPoolsListOptionalParams): PagedAsyncIterableIterator<AgentPool>;
    /**
     * Aborts the currently running operation on the agent pool. The Agent Pool will be moved to a
     * Canceling state and eventually to a Canceled state when cancellation finishes. If the operation
     * completes before cancellation can take place, a 409 error code is returned.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    beginAbortLatestOperation(resourceGroupName: string, resourceName: string, agentPoolName: string, options?: AgentPoolsAbortLatestOperationOptionalParams): Promise<SimplePollerLike<OperationState<AgentPoolsAbortLatestOperationResponse>, AgentPoolsAbortLatestOperationResponse>>;
    /**
     * Aborts the currently running operation on the agent pool. The Agent Pool will be moved to a
     * Canceling state and eventually to a Canceled state when cancellation finishes. If the operation
     * completes before cancellation can take place, a 409 error code is returned.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    beginAbortLatestOperationAndWait(resourceGroupName: string, resourceName: string, agentPoolName: string, options?: AgentPoolsAbortLatestOperationOptionalParams): Promise<AgentPoolsAbortLatestOperationResponse>;
    /**
     * Gets the specified managed cluster agent pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, agentPoolName: string, options?: AgentPoolsGetOptionalParams): Promise<AgentPoolsGetResponse>;
    /**
     * Creates or updates an agent pool in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param parameters The agent pool to create or update.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, agentPoolName: string, parameters: AgentPool, options?: AgentPoolsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<AgentPoolsCreateOrUpdateResponse>, AgentPoolsCreateOrUpdateResponse>>;
    /**
     * Creates or updates an agent pool in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param parameters The agent pool to create or update.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, agentPoolName: string, parameters: AgentPool, options?: AgentPoolsCreateOrUpdateOptionalParams): Promise<AgentPoolsCreateOrUpdateResponse>;
    /**
     * Deletes an agent pool in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, agentPoolName: string, options?: AgentPoolsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<AgentPoolsDeleteResponse>, AgentPoolsDeleteResponse>>;
    /**
     * Deletes an agent pool in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, agentPoolName: string, options?: AgentPoolsDeleteOptionalParams): Promise<AgentPoolsDeleteResponse>;
    /**
     * Gets the upgrade profile for an agent pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    getUpgradeProfile(resourceGroupName: string, resourceName: string, agentPoolName: string, options?: AgentPoolsGetUpgradeProfileOptionalParams): Promise<AgentPoolsGetUpgradeProfileResponse>;
    /**
     * See [supported Kubernetes
     * versions](https://docs.microsoft.com/azure/aks/supported-kubernetes-versions) for more details about
     * the version lifecycle.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    getAvailableAgentPoolVersions(resourceGroupName: string, resourceName: string, options?: AgentPoolsGetAvailableAgentPoolVersionsOptionalParams): Promise<AgentPoolsGetAvailableAgentPoolVersionsResponse>;
    /**
     * Upgrading the node image version of an agent pool applies the newest OS and runtime updates to the
     * nodes. AKS provides one new image per week with the latest updates. For more details on node image
     * versions, see: https://docs.microsoft.com/azure/aks/node-image-upgrade
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    beginUpgradeNodeImageVersion(resourceGroupName: string, resourceName: string, agentPoolName: string, options?: AgentPoolsUpgradeNodeImageVersionOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Upgrading the node image version of an agent pool applies the newest OS and runtime updates to the
     * nodes. AKS provides one new image per week with the latest updates. For more details on node image
     * versions, see: https://docs.microsoft.com/azure/aks/node-image-upgrade
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The options parameters.
     */
    beginUpgradeNodeImageVersionAndWait(resourceGroupName: string, resourceName: string, agentPoolName: string, options?: AgentPoolsUpgradeNodeImageVersionOptionalParams): Promise<void>;
}

/** Defines headers for AgentPools_abortLatestOperation operation. */
export declare interface AgentPoolsAbortLatestOperationHeaders {
    /** URL to query for status of the operation. */
    location?: string;
    /** URL to query for status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface AgentPoolsAbortLatestOperationOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the abortLatestOperation operation. */
export declare type AgentPoolsAbortLatestOperationResponse = AgentPoolsAbortLatestOperationHeaders;

/** Optional parameters. */
export declare interface AgentPoolsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type AgentPoolsCreateOrUpdateResponse = AgentPool;

/** Defines headers for AgentPools_delete operation. */
export declare interface AgentPoolsDeleteHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface AgentPoolsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export declare type AgentPoolsDeleteResponse = AgentPoolsDeleteHeaders;

/** Optional parameters. */
export declare interface AgentPoolsGetAvailableAgentPoolVersionsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getAvailableAgentPoolVersions operation. */
export declare type AgentPoolsGetAvailableAgentPoolVersionsResponse = AgentPoolAvailableVersions;

/** Optional parameters. */
export declare interface AgentPoolsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AgentPoolsGetResponse = AgentPool;

/** Optional parameters. */
export declare interface AgentPoolsGetUpgradeProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getUpgradeProfile operation. */
export declare type AgentPoolsGetUpgradeProfileResponse = AgentPoolUpgradeProfile;

/** Optional parameters. */
export declare interface AgentPoolsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type AgentPoolsListNextResponse = AgentPoolListResult;

/** Optional parameters. */
export declare interface AgentPoolsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type AgentPoolsListResponse = AgentPoolListResult;

/** Defines headers for AgentPools_upgradeNodeImageVersion operation. */
export declare interface AgentPoolsUpgradeNodeImageVersionHeaders {
    /** URL to query for status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface AgentPoolsUpgradeNodeImageVersionOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/**
 * Defines values for AgentPoolType. \
 * {@link KnownAgentPoolType} can be used interchangeably with AgentPoolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **VirtualMachineScaleSets**: Create an Agent Pool backed by a Virtual Machine Scale Set. \
 * **AvailabilitySet**: Use of this is strongly discouraged.
 */
export declare type AgentPoolType = string;

/** The list of available upgrades for an agent pool. */
export declare interface AgentPoolUpgradeProfile {
    /**
     * The ID of the agent pool upgrade profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the agent pool upgrade profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the agent pool upgrade profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** The Kubernetes version (major.minor.patch). */
    kubernetesVersion: string;
    /** The operating system type. The default is Linux. */
    osType: OSType;
    /** List of orchestrator types and versions available for upgrade. */
    upgrades?: AgentPoolUpgradeProfilePropertiesUpgradesItem[];
    /** The latest AKS supported node image version. */
    latestNodeImageVersion?: string;
}

export declare interface AgentPoolUpgradeProfilePropertiesUpgradesItem {
    /** The Kubernetes version (major.minor.patch). */
    kubernetesVersion?: string;
    /** Whether the Kubernetes version is currently in preview. */
    isPreview?: boolean;
}

/** Settings for upgrading an agentpool */
export declare interface AgentPoolUpgradeSettings {
    /** This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade */
    maxSurge?: string;
    /** The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is 30 minutes. */
    drainTimeoutInMinutes?: number;
    /** The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not specified, the default is 0 minutes. */
    nodeSoakDurationInMinutes?: number;
}

/** Azure Key Vault key management service settings for the security profile. */
export declare interface AzureKeyVaultKms {
    /** Whether to enable Azure Key Vault key management service. The default is false. */
    enabled?: boolean;
    /** Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty. */
    keyId?: string;
    /** Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link. The default value is `Public`. */
    keyVaultNetworkAccess?: KeyVaultNetworkAccessTypes;
    /** Resource ID of key vault. When keyVaultNetworkAccess is `Private`, this field is required and must be a valid resource ID. When keyVaultNetworkAccess is `Public`, leave the field empty. */
    keyVaultResourceId?: string;
}

/**
 * Defines values for BackendPoolType. \
 * {@link KnownBackendPoolType} can be used interchangeably with BackendPoolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NodeIPConfiguration**: The type of the managed inbound Load Balancer BackendPool. https:\/\/cloud-provider-azure.sigs.k8s.io\/topics\/loadbalancer\/#configure-load-balancer-backend. \
 * **NodeIP**: The type of the managed inbound Load Balancer BackendPool. https:\/\/cloud-provider-azure.sigs.k8s.io\/topics\/loadbalancer\/#configure-load-balancer-backend.
 */
export declare type BackendPoolType = string;

/** An error response from the Container service. */
export declare interface CloudError {
    /** Details about the error. */
    error?: CloudErrorBody;
}

/** An error response from the Container service. */
export declare interface CloudErrorBody {
    /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
    code?: string;
    /** A message describing the error, intended to be suitable for display in a user interface. */
    message?: string;
    /** The target of the particular error. For example, the name of the property in error. */
    target?: string;
    /** A list of additional details about the error. */
    details?: CloudErrorBody[];
}

/** Settings for upgrading a cluster. */
export declare interface ClusterUpgradeSettings {
    /** Settings for overrides. */
    overrideSettings?: UpgradeOverrideSettings;
}

/**
 * Defines values for Code. \
 * {@link KnownCode} can be used interchangeably with Code,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Running**: The cluster is running. \
 * **Stopped**: The cluster is stopped.
 */
export declare type Code = string;

/** Version information about a product/service that is compatible with a service mesh revision. */
export declare interface CompatibleVersions {
    /** The product/service name. */
    name?: string;
    /** Product/service versions compatible with a service mesh add-on revision. */
    versions?: string[];
}

/**
 * Defines values for ConnectionStatus. \
 * {@link KnownConnectionStatus} can be used interchangeably with ConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export declare type ConnectionStatus = string;

export declare class ContainerServiceClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the ContainerServiceClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ContainerServiceClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    managedClusters: ManagedClusters;
    maintenanceConfigurations: MaintenanceConfigurations;
    agentPools: AgentPools;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    resolvePrivateLinkServiceId: ResolvePrivateLinkServiceId;
    snapshots: Snapshots;
    trustedAccessRoleBindings: TrustedAccessRoleBindings;
    trustedAccessRoles: TrustedAccessRoles;
}

/** Optional parameters. */
export declare interface ContainerServiceClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Profile for Linux VMs in the container service cluster. */
export declare interface ContainerServiceLinuxProfile {
    /** The administrator username to use for Linux VMs. */
    adminUsername: string;
    /** The SSH configuration for Linux-based VMs running on Azure. */
    ssh: ContainerServiceSshConfiguration;
}

/** Profile of network configuration. */
export declare interface ContainerServiceNetworkProfile {
    /** Network plugin used for building the Kubernetes network. */
    networkPlugin?: NetworkPlugin;
    /** The mode the network plugin should use. */
    networkPluginMode?: NetworkPluginMode;
    /** Network policy used for building the Kubernetes network. */
    networkPolicy?: NetworkPolicy;
    /** This cannot be specified if networkPlugin is anything other than 'azure'. */
    networkMode?: NetworkMode;
    /** Network dataplane used in the Kubernetes cluster. */
    networkDataplane?: NetworkDataplane;
    /** A CIDR notation IP range from which to assign pod IPs when kubenet is used. */
    podCidr?: string;
    /** A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges. */
    serviceCidr?: string;
    /** An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr. */
    dnsServiceIP?: string;
    /** This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype). */
    outboundType?: OutboundType;
    /** The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs. */
    loadBalancerSku?: LoadBalancerSku;
    /** Profile of the cluster load balancer. */
    loadBalancerProfile?: ManagedClusterLoadBalancerProfile;
    /** Profile of the cluster NAT gateway. */
    natGatewayProfile?: ManagedClusterNATGatewayProfile;
    /** One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. */
    podCidrs?: string[];
    /** One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges. */
    serviceCidrs?: string[];
    /** IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6. */
    ipFamilies?: IpFamily[];
}

/** SSH configuration for Linux-based VMs running on Azure. */
export declare interface ContainerServiceSshConfiguration {
    /** The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified. */
    publicKeys: ContainerServiceSshPublicKey[];
}

/** Contains information about SSH certificate public key data. */
export declare interface ContainerServiceSshPublicKey {
    /** Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers. */
    keyData: string;
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** Data used when creating a target resource from a source resource. */
export declare interface CreationData {
    /** This is the ARM ID of the source object to be used to create the target object. */
    sourceResourceId?: string;
}

/** The credential result response. */
export declare interface CredentialResult {
    /**
     * The name of the credential.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Base64-encoded Kubernetes configuration file.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Uint8Array;
}

/** The list credential result response. */
export declare interface CredentialResults {
    /**
     * Base64-encoded Kubernetes configuration file.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly kubeconfigs?: CredentialResult[];
}

/** For schedules like: 'recur every day' or 'recur every 3 days'. */
export declare interface DailySchedule {
    /** Specifies the number of days between each set of occurrences. */
    intervalDays: number;
}

/** For example, between '2022-12-23' and '2023-01-05'. */
export declare interface DateSpan {
    /** The start date of the date span. */
    start: Date;
    /** The end date of the date span. */
    end: Date;
}

/** Delegated resource properties - internal use only. */
export declare interface DelegatedResource {
    /** The ARM resource id of the delegated resource - internal use only. */
    resourceId?: string;
    /** The tenant id of the delegated resource - internal use only. */
    tenantId?: string;
    /** The delegation id of the referral delegation (optional) - internal use only. */
    referralResource?: string;
    /** The source resource location - internal use only. */
    location?: string;
}

/** A domain name that AKS agent nodes are reaching at. */
export declare interface EndpointDependency {
    /** The domain name of the dependency. */
    domainName?: string;
    /** The Ports and Protocols used when connecting to domainName. */
    endpointDetails?: EndpointDetail[];
}

/** connect information from the AKS agent nodes to a single endpoint. */
export declare interface EndpointDetail {
    /** An IP Address that Domain Name currently resolves to. */
    ipAddress?: string;
    /** The port an endpoint is connected to. */
    port?: number;
    /** The protocol used for connection */
    protocol?: string;
    /** Description of the detail */
    description?: string;
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/**
 * Defines values for Expander. \
 * {@link KnownExpander} can be used interchangeably with Expander,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **least-waste**: Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources. \
 * **most-pods**: Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once. \
 * **priority**: Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https:\/\/github.com\/kubernetes\/autoscaler\/blob\/master\/cluster-autoscaler\/expander\/priority\/readme.md). \
 * **random**: Used when you don't have a particular need for the node groups to scale differently.
 */
export declare type Expander = string;

/** The complex type of the extended location. */
export declare interface ExtendedLocation {
    /** The name of the extended location. */
    name?: string;
    /** The type of the extended location. */
    type?: ExtendedLocationTypes;
}

/**
 * Defines values for ExtendedLocationTypes. \
 * {@link KnownExtendedLocationTypes} can be used interchangeably with ExtendedLocationTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EdgeZone**
 */
export declare type ExtendedLocationTypes = string;

/**
 * Defines values for Format. \
 * {@link KnownFormat} can be used interchangeably with Format,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **azure**: Return azure auth-provider kubeconfig. This format is deprecated in v1.22 and will be fully removed in v1.26. See: https:\/\/aka.ms\/k8s\/changes-1-26. \
 * **exec**: Return exec format kubeconfig. This format requires kubelogin binary in the path.
 */
export declare type Format = string;

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/**
 * Defines values for GPUInstanceProfile. \
 * {@link KnownGPUInstanceProfile} can be used interchangeably with GPUInstanceProfile,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MIG1g** \
 * **MIG2g** \
 * **MIG3g** \
 * **MIG4g** \
 * **MIG7g**
 */
export declare type GPUInstanceProfile = string;

/**
 * Defines values for IpFamily. \
 * {@link KnownIpFamily} can be used interchangeably with IpFamily,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IPv4** \
 * **IPv6**
 */
export declare type IpFamily = string;

/** Contains the IPTag associated with the object. */
export declare interface IPTag {
    /** The IP tag type. Example: RoutingPreference. */
    ipTagType?: string;
    /** The value of the IP tag associated with the public IP. Example: Internet. */
    tag?: string;
}

/** Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described here https://aka.ms/asm-plugin-ca */
export declare interface IstioCertificateAuthority {
    /** Plugin certificates information for Service Mesh. */
    plugin?: IstioPluginCertificateAuthority;
}

/** Istio components configuration. */
export declare interface IstioComponents {
    /** Istio ingress gateways. */
    ingressGateways?: IstioIngressGateway[];
    /** Istio egress gateways. */
    egressGateways?: IstioEgressGateway[];
}

/** Istio egress gateway configuration. */
export declare interface IstioEgressGateway {
    /** Whether to enable the egress gateway. */
    enabled: boolean;
    /** NodeSelector for scheduling the egress gateway. */
    nodeSelector?: {
        [propertyName: string]: string;
    };
}

/** Istio ingress gateway configuration. For now, we support up to one external ingress gateway named `aks-istio-ingressgateway-external` and one internal ingress gateway named `aks-istio-ingressgateway-internal`. */
export declare interface IstioIngressGateway {
    /** Mode of an ingress gateway. */
    mode: IstioIngressGatewayMode;
    /** Whether to enable the ingress gateway. */
    enabled: boolean;
}

/**
 * Defines values for IstioIngressGatewayMode. \
 * {@link KnownIstioIngressGatewayMode} can be used interchangeably with IstioIngressGatewayMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **External**: The ingress gateway is assigned a public IP address and is publicly accessible. \
 * **Internal**: The ingress gateway is assigned an internal IP address and cannot is accessed publicly.
 */
export declare type IstioIngressGatewayMode = string;

/** Plugin certificates information for Service Mesh. */
export declare interface IstioPluginCertificateAuthority {
    /** The resource ID of the Key Vault. */
    keyVaultId?: string;
    /** Intermediate certificate object name in Azure Key Vault. */
    certObjectName?: string;
    /** Intermediate certificate private key object name in Azure Key Vault. */
    keyObjectName?: string;
    /** Root certificate object name in Azure Key Vault. */
    rootCertObjectName?: string;
    /** Certificate chain object name in Azure Key Vault. */
    certChainObjectName?: string;
}

/** Istio service mesh configuration. */
export declare interface IstioServiceMesh {
    /** Istio components configuration. */
    components?: IstioComponents;
    /** Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described here https://aka.ms/asm-plugin-ca */
    certificateAuthority?: IstioCertificateAuthority;
    /** The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade */
    revisions?: string[];
}

/**
 * Defines values for KeyVaultNetworkAccessTypes. \
 * {@link KnownKeyVaultNetworkAccessTypes} can be used interchangeably with KeyVaultNetworkAccessTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Public** \
 * **Private**
 */
export declare type KeyVaultNetworkAccessTypes = string;

/** Known values of {@link AgentPoolMode} that the service accepts. */
export declare enum KnownAgentPoolMode {
    /** System agent pools are primarily for hosting critical system pods such as CoreDNS and metrics-server. System agent pools osType must be Linux. System agent pools VM SKU must have at least 2vCPUs and 4GB of memory. */
    System = "System",
    /** User agent pools are primarily for hosting your application pods. */
    User = "User"
}

/** Known values of {@link AgentPoolType} that the service accepts. */
export declare enum KnownAgentPoolType {
    /** Create an Agent Pool backed by a Virtual Machine Scale Set. */
    VirtualMachineScaleSets = "VirtualMachineScaleSets",
    /** Use of this is strongly discouraged. */
    AvailabilitySet = "AvailabilitySet"
}

/** Known values of {@link BackendPoolType} that the service accepts. */
export declare enum KnownBackendPoolType {
    /** The type of the managed inbound Load Balancer BackendPool. https:\//cloud-provider-azure.sigs.k8s.io\/topics\/loadbalancer\/#configure-load-balancer-backend. */
    NodeIPConfiguration = "NodeIPConfiguration",
    /** The type of the managed inbound Load Balancer BackendPool. https:\//cloud-provider-azure.sigs.k8s.io\/topics\/loadbalancer\/#configure-load-balancer-backend. */
    NodeIP = "NodeIP"
}

/** Known values of {@link Code} that the service accepts. */
export declare enum KnownCode {
    /** The cluster is running. */
    Running = "Running",
    /** The cluster is stopped. */
    Stopped = "Stopped"
}

/** Known values of {@link ConnectionStatus} that the service accepts. */
export declare enum KnownConnectionStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected",
    /** Disconnected */
    Disconnected = "Disconnected"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link Expander} that the service accepts. */
export declare enum KnownExpander {
    /** Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources. */
    LeastWaste = "least-waste",
    /** Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once. */
    MostPods = "most-pods",
    /** Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https:\//github.com\/kubernetes\/autoscaler\/blob\/master\/cluster-autoscaler\/expander\/priority\/readme.md). */
    Priority = "priority",
    /** Used when you don't have a particular need for the node groups to scale differently. */
    Random = "random"
}

/** Known values of {@link ExtendedLocationTypes} that the service accepts. */
export declare enum KnownExtendedLocationTypes {
    /** EdgeZone */
    EdgeZone = "EdgeZone"
}

/** Known values of {@link Format} that the service accepts. */
export declare enum KnownFormat {
    /** Return azure auth-provider kubeconfig. This format is deprecated in v1.22 and will be fully removed in v1.26. See: https:\//aka.ms\/k8s\/changes-1-26. */
    Azure = "azure",
    /** Return exec format kubeconfig. This format requires kubelogin binary in the path. */
    Exec = "exec"
}

/** Known values of {@link GPUInstanceProfile} that the service accepts. */
export declare enum KnownGPUInstanceProfile {
    /** MIG1G */
    MIG1G = "MIG1g",
    /** MIG2G */
    MIG2G = "MIG2g",
    /** MIG3G */
    MIG3G = "MIG3g",
    /** MIG4G */
    MIG4G = "MIG4g",
    /** MIG7G */
    MIG7G = "MIG7g"
}

/** Known values of {@link IpFamily} that the service accepts. */
export declare enum KnownIpFamily {
    /** IPv4 */
    IPv4 = "IPv4",
    /** IPv6 */
    IPv6 = "IPv6"
}

/** Known values of {@link IstioIngressGatewayMode} that the service accepts. */
export declare enum KnownIstioIngressGatewayMode {
    /** The ingress gateway is assigned a public IP address and is publicly accessible. */
    External = "External",
    /** The ingress gateway is assigned an internal IP address and cannot is accessed publicly. */
    Internal = "Internal"
}

/** Known values of {@link KeyVaultNetworkAccessTypes} that the service accepts. */
export declare enum KnownKeyVaultNetworkAccessTypes {
    /** Public */
    Public = "Public",
    /** Private */
    Private = "Private"
}

/** Known values of {@link KubeletDiskType} that the service accepts. */
export declare enum KnownKubeletDiskType {
    /** Kubelet will use the OS disk for its data. */
    OS = "OS",
    /** Kubelet will use the temporary disk for its data. */
    Temporary = "Temporary"
}

/** Known values of {@link KubernetesSupportPlan} that the service accepts. */
export declare enum KnownKubernetesSupportPlan {
    /** Support for the version is the same as for the open source Kubernetes offering. Official Kubernetes open source community support versions for 1 year after release. */
    KubernetesOfficial = "KubernetesOfficial",
    /** Support for the version extended past the KubernetesOfficial support of 1 year. AKS continues to patch CVEs for another 1 year, for a total of 2 years of support. */
    AKSLongTermSupport = "AKSLongTermSupport"
}

/** Known values of {@link LicenseType} that the service accepts. */
export declare enum KnownLicenseType {
    /** No additional licensing is applied. */
    None = "None",
    /** Enables Azure Hybrid User Benefits for Windows VMs. */
    WindowsServer = "Windows_Server"
}

/** Known values of {@link LoadBalancerSku} that the service accepts. */
export declare enum KnownLoadBalancerSku {
    /** Use a a standard Load Balancer. This is the recommended Load Balancer SKU. For more information about on working with the load balancer in the managed cluster, see the [standard Load Balancer](https:\//docs.microsoft.com\/azure\/aks\/load-balancer-standard) article. */
    Standard = "standard",
    /** Use a basic Load Balancer with limited functionality. */
    Basic = "basic"
}

/** Known values of {@link ManagedClusterPodIdentityProvisioningState} that the service accepts. */
export declare enum KnownManagedClusterPodIdentityProvisioningState {
    /** Assigned */
    Assigned = "Assigned",
    /** Canceled */
    Canceled = "Canceled",
    /** Deleting */
    Deleting = "Deleting",
    /** Failed */
    Failed = "Failed",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Updating */
    Updating = "Updating"
}

/** Known values of {@link ManagedClusterSKUName} that the service accepts. */
export declare enum KnownManagedClusterSKUName {
    /** Base option for the AKS control plane. */
    Base = "Base"
}

/** Known values of {@link ManagedClusterSKUTier} that the service accepts. */
export declare enum KnownManagedClusterSKUTier {
    /** Cluster has premium capabilities in addition to all of the capabilities included in 'Standard'. Premium enables selection of LongTermSupport (aka.ms\/aks\/lts) for certain Kubernetes versions. */
    Premium = "Premium",
    /** Recommended for mission-critical and production workloads. Includes Kubernetes control plane autoscaling, workload-intensive testing, and up to 5,000 nodes per cluster. Guarantees 99.95% availability of the Kubernetes API server endpoint for clusters that use Availability Zones and 99.9% of availability for clusters that don't use Availability Zones. */
    Standard = "Standard",
    /** The cluster management is free, but charged for VM, storage, and networking usage. Best for experimenting, learning, simple testing, or workloads with fewer than 10 nodes. Not recommended for production use cases. */
    Free = "Free"
}

/** Known values of {@link NetworkDataplane} that the service accepts. */
export declare enum KnownNetworkDataplane {
    /** Use Azure network dataplane. */
    Azure = "azure",
    /** Use Cilium network dataplane. See [Azure CNI Powered by Cilium](https:\//learn.microsoft.com\/azure\/aks\/azure-cni-powered-by-cilium) for more information. */
    Cilium = "cilium"
}

/** Known values of {@link NetworkMode} that the service accepts. */
export declare enum KnownNetworkMode {
    /** No bridge is created. Intra-VM Pod to Pod communication is through IP routes created by Azure CNI. See [Transparent Mode](https:\//docs.microsoft.com\/azure\/aks\/faq#transparent-mode) for more information. */
    Transparent = "transparent",
    /** This is no longer supported */
    Bridge = "bridge"
}

/** Known values of {@link NetworkPlugin} that the service accepts. */
export declare enum KnownNetworkPlugin {
    /** Use the Azure CNI network plugin. See [Azure CNI (advanced) networking](https:\//docs.microsoft.com\/azure\/aks\/concepts-network#azure-cni-advanced-networking) for more information. */
    Azure = "azure",
    /** Use the Kubenet network plugin. See [Kubenet (basic) networking](https:\//docs.microsoft.com\/azure\/aks\/concepts-network#kubenet-basic-networking) for more information. */
    Kubenet = "kubenet",
    /** No CNI plugin is pre-installed. See [BYO CNI](https:\//docs.microsoft.com\/en-us\/azure\/aks\/use-byo-cni) for more information. */
    None = "none"
}

/** Known values of {@link NetworkPluginMode} that the service accepts. */
export declare enum KnownNetworkPluginMode {
    /** Used with networkPlugin=azure, pods are given IPs from the PodCIDR address space but use Azure Routing Domains rather than Kubenet's method of route tables. For more information visit https:\//aka.ms\/aks\/azure-cni-overlay. */
    Overlay = "overlay"
}

/** Known values of {@link NetworkPolicy} that the service accepts. */
export declare enum KnownNetworkPolicy {
    /** Use Calico network policies. See [differences between Azure and Calico policies](https:\//docs.microsoft.com\/azure\/aks\/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information. */
    Calico = "calico",
    /** Use Azure network policies. See [differences between Azure and Calico policies](https:\//docs.microsoft.com\/azure\/aks\/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information. */
    Azure = "azure",
    /** Use Cilium to enforce network policies. This requires networkDataplane to be 'cilium'. */
    Cilium = "cilium"
}

/** Known values of {@link NodeOSUpgradeChannel} that the service accepts. */
export declare enum KnownNodeOSUpgradeChannel {
    /** No attempt to update your machines OS will be made either by OS or by rolling VHDs. This means you are responsible for your security updates */
    None = "None",
    /** OS updates will be applied automatically through the OS built-in patching infrastructure. Newly scaled in machines will be unpatched initially and will be patched at some point by the OS's infrastructure. Behavior of this option depends on the OS in question. Ubuntu and Mariner apply security patches through unattended upgrade roughly once a day around 06:00 UTC. Windows does not apply security patches automatically and so for them this option is equivalent to None till further notice */
    Unmanaged = "Unmanaged",
    /** AKS will update the nodes with a newly patched VHD containing security fixes and bugfixes on a weekly cadence. With the VHD update machines will be rolling reimaged to that VHD following maintenance windows and surge settings. No extra VHD cost is incurred when choosing this option as AKS hosts the images. */
    NodeImage = "NodeImage"
}

/** Known values of {@link OSDiskType} that the service accepts. */
export declare enum KnownOSDiskType {
    /** Azure replicates the operating system disk for a virtual machine to Azure storage to avoid data loss should the VM need to be relocated to another host. Since containers aren't designed to have local state persisted, this behavior offers limited value while providing some drawbacks, including slower node provisioning and higher read\/write latency. */
    Managed = "Managed",
    /** Ephemeral OS disks are stored only on the host machine, just like a temporary disk. This provides lower read\/write latency, along with faster node scaling and cluster upgrades. */
    Ephemeral = "Ephemeral"
}

/** Known values of {@link Ossku} that the service accepts. */
export declare enum KnownOssku {
    /** Use Ubuntu as the OS for node images. */
    Ubuntu = "Ubuntu",
    /** Use AzureLinux as the OS for node images. Azure Linux is a container-optimized Linux distro built by Microsoft, visit https:\//aka.ms\/azurelinux for more information. */
    AzureLinux = "AzureLinux",
    /** Deprecated OSSKU. Microsoft recommends that new deployments choose 'AzureLinux' instead. */
    CBLMariner = "CBLMariner",
    /** Use Windows2019 as the OS for node images. Unsupported for system node pools. Windows2019 only supports Windows2019 containers; it cannot run Windows2022 containers and vice versa. */
    Windows2019 = "Windows2019",
    /** Use Windows2022 as the OS for node images. Unsupported for system node pools. Windows2022 only supports Windows2022 containers; it cannot run Windows2019 containers and vice versa. */
    Windows2022 = "Windows2022"
}

/** Known values of {@link OSType} that the service accepts. */
export declare enum KnownOSType {
    /** Use Linux. */
    Linux = "Linux",
    /** Use Windows. */
    Windows = "Windows"
}

/** Known values of {@link OutboundType} that the service accepts. */
export declare enum KnownOutboundType {
    /** The load balancer is used for egress through an AKS assigned public IP. This supports Kubernetes services of type 'loadBalancer'. For more information see [outbound type loadbalancer](https:\//docs.microsoft.com\/azure\/aks\/egress-outboundtype#outbound-type-of-loadbalancer). */
    LoadBalancer = "loadBalancer",
    /** Egress paths must be defined by the user. This is an advanced scenario and requires proper network configuration. For more information see [outbound type userDefinedRouting](https:\//docs.microsoft.com\/azure\/aks\/egress-outboundtype#outbound-type-of-userdefinedrouting). */
    UserDefinedRouting = "userDefinedRouting",
    /** The AKS-managed NAT gateway is used for egress. */
    ManagedNATGateway = "managedNATGateway",
    /** The user-assigned NAT gateway associated to the cluster subnet is used for egress. This is an advanced scenario and requires proper network configuration. */
    UserAssignedNATGateway = "userAssignedNATGateway"
}

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export declare enum KnownPrivateEndpointConnectionProvisioningState {
    /** Canceled */
    Canceled = "Canceled",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Failed */
    Failed = "Failed",
    /** Succeeded */
    Succeeded = "Succeeded"
}

/** Known values of {@link Protocol} that the service accepts. */
export declare enum KnownProtocol {
    /** TCP protocol. */
    TCP = "TCP",
    /** UDP protocol. */
    UDP = "UDP"
}

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export declare enum KnownPublicNetworkAccess {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link ScaleDownMode} that the service accepts. */
export declare enum KnownScaleDownMode {
    /** Create new instances during scale up and remove instances during scale down. */
    Delete = "Delete",
    /** Attempt to start deallocated instances (if they exist) during scale up and deallocate instances during scale down. */
    Deallocate = "Deallocate"
}

/** Known values of {@link ScaleSetEvictionPolicy} that the service accepts. */
export declare enum KnownScaleSetEvictionPolicy {
    /** Nodes in the underlying Scale Set of the node pool are deleted when they're evicted. */
    Delete = "Delete",
    /** Nodes in the underlying Scale Set of the node pool are set to the stopped-deallocated state upon eviction. Nodes in the stopped-deallocated state count against your compute quota and can cause issues with cluster scaling or upgrading. */
    Deallocate = "Deallocate"
}

/** Known values of {@link ScaleSetPriority} that the service accepts. */
export declare enum KnownScaleSetPriority {
    /** Spot priority VMs will be used. There is no SLA for spot nodes. See [spot on AKS](https:\//docs.microsoft.com\/azure\/aks\/spot-node-pool) for more information. */
    Spot = "Spot",
    /** Regular VMs will be used. */
    Regular = "Regular"
}

/** Known values of {@link ServiceMeshMode} that the service accepts. */
export declare enum KnownServiceMeshMode {
    /** Istio deployed as an AKS addon. */
    Istio = "Istio",
    /** Mesh is disabled. */
    Disabled = "Disabled"
}

/** Known values of {@link SnapshotType} that the service accepts. */
export declare enum KnownSnapshotType {
    /** The snapshot is a snapshot of a node pool. */
    NodePool = "NodePool"
}

/** Known values of {@link TrustedAccessRoleBindingProvisioningState} that the service accepts. */
export declare enum KnownTrustedAccessRoleBindingProvisioningState {
    /** Canceled */
    Canceled = "Canceled",
    /** Deleting */
    Deleting = "Deleting",
    /** Failed */
    Failed = "Failed",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Updating */
    Updating = "Updating"
}

/** Known values of {@link Type} that the service accepts. */
export declare enum KnownType {
    /** First week of the month. */
    First = "First",
    /** Second week of the month. */
    Second = "Second",
    /** Third week of the month. */
    Third = "Third",
    /** Fourth week of the month. */
    Fourth = "Fourth",
    /** Last week of the month. */
    Last = "Last"
}

/** Known values of {@link UpgradeChannel} that the service accepts. */
export declare enum KnownUpgradeChannel {
    /** Automatically upgrade the cluster to the latest supported patch release on the latest supported minor version. In cases where the cluster is at a version of Kubernetes that is at an N-2 minor version where N is the latest supported minor version, the cluster first upgrades to the latest supported patch version on N-1 minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster first is upgraded to 1.18.6, then is upgraded to 1.19.1. */
    Rapid = "rapid",
    /** Automatically upgrade the cluster to the latest supported patch release on minor version N-1, where N is the latest supported minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.18.6. */
    Stable = "stable",
    /** Automatically upgrade the cluster to the latest supported patch version when it becomes available while keeping the minor version the same. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.17.9. */
    Patch = "patch",
    /** Automatically upgrade the node image to the latest version available. Consider using nodeOSUpgradeChannel instead as that allows you to configure node OS patching separate from Kubernetes version patching */
    NodeImage = "node-image",
    /** Disables auto-upgrades and keeps the cluster at its current version of Kubernetes. */
    None = "none"
}

/** Known values of {@link WeekDay} that the service accepts. */
export declare enum KnownWeekDay {
    /** Sunday */
    Sunday = "Sunday",
    /** Monday */
    Monday = "Monday",
    /** Tuesday */
    Tuesday = "Tuesday",
    /** Wednesday */
    Wednesday = "Wednesday",
    /** Thursday */
    Thursday = "Thursday",
    /** Friday */
    Friday = "Friday",
    /** Saturday */
    Saturday = "Saturday"
}

/** Known values of {@link WorkloadRuntime} that the service accepts. */
export declare enum KnownWorkloadRuntime {
    /** Nodes will use Kubelet to run standard OCI container workloads. */
    OCIContainer = "OCIContainer",
    /** Nodes will use Krustlet to run WASM workloads using the WASI provider (Preview). */
    WasmWasi = "WasmWasi"
}

/** See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details. */
export declare interface KubeletConfig {
    /** The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'. */
    cpuManagerPolicy?: string;
    /** The default is true. */
    cpuCfsQuota?: boolean;
    /** The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'. */
    cpuCfsQuotaPeriod?: string;
    /** To disable image garbage collection, set to 100. The default is 85% */
    imageGcHighThreshold?: number;
    /** This cannot be set higher than imageGcHighThreshold. The default is 80% */
    imageGcLowThreshold?: number;
    /** For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'. */
    topologyManagerPolicy?: string;
    /** Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`). */
    allowedUnsafeSysctls?: string[];
    /** If set to true it will make the Kubelet fail to start if swap is enabled on the node. */
    failSwapOn?: boolean;
    /** The maximum size (e.g. 10Mi) of container log file before it is rotated. */
    containerLogMaxSizeMB?: number;
    /** The maximum number of container log files that can be present for a container. The number must be ≥ 2. */
    containerLogMaxFiles?: number;
    /** The maximum number of processes per pod. */
    podMaxPids?: number;
}

/**
 * Defines values for KubeletDiskType. \
 * {@link KnownKubeletDiskType} can be used interchangeably with KubeletDiskType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OS**: Kubelet will use the OS disk for its data. \
 * **Temporary**: Kubelet will use the temporary disk for its data.
 */
export declare type KubeletDiskType = string;

/** Kubernetes patch version profile */
export declare interface KubernetesPatchVersion {
    /** Possible upgrade path for given patch version */
    upgrades?: string[];
}

/**
 * Defines values for KubernetesSupportPlan. \
 * {@link KnownKubernetesSupportPlan} can be used interchangeably with KubernetesSupportPlan,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **KubernetesOfficial**: Support for the version is the same as for the open source Kubernetes offering. Official Kubernetes open source community support versions for 1 year after release. \
 * **AKSLongTermSupport**: Support for the version extended past the KubernetesOfficial support of 1 year. AKS continues to patch CVEs for another 1 year, for a total of 2 years of support.
 */
export declare type KubernetesSupportPlan = string;

/** Kubernetes version profile for given major.minor release. */
export declare interface KubernetesVersion {
    /** major.minor version of Kubernetes release */
    version?: string;
    /** Capabilities on this Kubernetes version. */
    capabilities?: KubernetesVersionCapabilities;
    /** Whether this version is in preview mode. */
    isPreview?: boolean;
    /** Patch versions of Kubernetes release */
    patchVersions?: {
        [propertyName: string]: KubernetesPatchVersion;
    };
}

/** Capabilities on this Kubernetes version. */
export declare interface KubernetesVersionCapabilities {
    supportPlan?: KubernetesSupportPlan[];
}

/** Hold values properties, which is array of KubernetesVersion */
export declare interface KubernetesVersionListResult {
    /** Array of AKS supported Kubernetes versions. */
    values?: KubernetesVersion[];
}

/**
 * Defines values for LicenseType. \
 * {@link KnownLicenseType} can be used interchangeably with LicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: No additional licensing is applied. \
 * **Windows_Server**: Enables Azure Hybrid User Benefits for Windows VMs.
 */
export declare type LicenseType = string;

/** See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details. */
export declare interface LinuxOSConfig {
    /** Sysctl settings for Linux agent nodes. */
    sysctls?: SysctlConfig;
    /** Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge). */
    transparentHugePageEnabled?: string;
    /** Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge). */
    transparentHugePageDefrag?: string;
    /** The size in MB of a swap file that will be created on each node. */
    swapFileSizeMB?: number;
}

/**
 * Defines values for LoadBalancerSku. \
 * {@link KnownLoadBalancerSku} can be used interchangeably with LoadBalancerSku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **standard**: Use a a standard Load Balancer. This is the recommended Load Balancer SKU. For more information about on working with the load balancer in the managed cluster, see the [standard Load Balancer](https:\/\/docs.microsoft.com\/azure\/aks\/load-balancer-standard) article. \
 * **basic**: Use a basic Load Balancer with limited functionality.
 */
export declare type LoadBalancerSku = string;

/** See [planned maintenance](https://docs.microsoft.com/azure/aks/planned-maintenance) for more information about planned maintenance. */
export declare interface MaintenanceConfiguration extends SubResource {
    /**
     * The system metadata relating to this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** If two array entries specify the same day of the week, the applied configuration is the union of times in both entries. */
    timeInWeek?: TimeInWeek[];
    /** Time slots on which upgrade is not allowed. */
    notAllowedTime?: TimeSpan[];
    /** Maintenance window for the maintenance configuration. */
    maintenanceWindow?: MaintenanceWindow;
}

/** The response from the List maintenance configurations operation. */
export declare interface MaintenanceConfigurationListResult {
    /** The list of maintenance configurations. */
    value?: MaintenanceConfiguration[];
    /**
     * The URL to get the next set of maintenance configuration results.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a MaintenanceConfigurations. */
export declare interface MaintenanceConfigurations {
    /**
     * Gets a list of maintenance configurations in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    listByManagedCluster(resourceGroupName: string, resourceName: string, options?: MaintenanceConfigurationsListByManagedClusterOptionalParams): PagedAsyncIterableIterator<MaintenanceConfiguration>;
    /**
     * Gets the specified maintenance configuration of a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param configName The name of the maintenance configuration.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, configName: string, options?: MaintenanceConfigurationsGetOptionalParams): Promise<MaintenanceConfigurationsGetResponse>;
    /**
     * Creates or updates a maintenance configuration in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param configName The name of the maintenance configuration.
     * @param parameters The maintenance configuration to create or update.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, configName: string, parameters: MaintenanceConfiguration, options?: MaintenanceConfigurationsCreateOrUpdateOptionalParams): Promise<MaintenanceConfigurationsCreateOrUpdateResponse>;
    /**
     * Deletes a maintenance configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param configName The name of the maintenance configuration.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceName: string, configName: string, options?: MaintenanceConfigurationsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface MaintenanceConfigurationsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type MaintenanceConfigurationsCreateOrUpdateResponse = MaintenanceConfiguration;

/** Optional parameters. */
export declare interface MaintenanceConfigurationsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface MaintenanceConfigurationsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type MaintenanceConfigurationsGetResponse = MaintenanceConfiguration;

/** Optional parameters. */
export declare interface MaintenanceConfigurationsListByManagedClusterNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByManagedClusterNext operation. */
export declare type MaintenanceConfigurationsListByManagedClusterNextResponse = MaintenanceConfigurationListResult;

/** Optional parameters. */
export declare interface MaintenanceConfigurationsListByManagedClusterOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByManagedCluster operation. */
export declare type MaintenanceConfigurationsListByManagedClusterResponse = MaintenanceConfigurationListResult;

/** Maintenance window used to configure scheduled auto-upgrade for a Managed Cluster. */
export declare interface MaintenanceWindow {
    /** Recurrence schedule for the maintenance window. */
    schedule: Schedule;
    /** Length of maintenance window range from 4 to 24 hours. */
    durationHours: number;
    /** The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is '+00:00'. */
    utcOffset?: string;
    /** The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive and will not be used for upgrades. If not specified, the maintenance window will be active right away. */
    startDate?: Date;
    /** The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field. For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'. */
    startTime: string;
    /** Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00' and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03 22:00' in UTC time. */
    notAllowedDates?: DateSpan[];
}

/** Managed cluster. */
export declare interface ManagedCluster extends TrackedResource {
    /** The managed cluster SKU. */
    sku?: ManagedClusterSKU;
    /** The extended location of the Virtual Machine. */
    extendedLocation?: ExtendedLocation;
    /** The identity of the managed cluster, if configured. */
    identity?: ManagedClusterIdentity;
    /**
     * The current provisioning state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /**
     * The Power State of the cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly powerState?: PowerState;
    /**
     * The max number of agent pools for the managed cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly maxAgentPools?: number;
    /** Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details. */
    kubernetesVersion?: string;
    /**
     * If kubernetesVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If kubernetesVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly currentKubernetesVersion?: string;
    /** This cannot be updated once the Managed Cluster has been created. */
    dnsPrefix?: string;
    /** This cannot be updated once the Managed Cluster has been created. */
    fqdnSubdomain?: string;
    /**
     * The FQDN of the master pool.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly fqdn?: string;
    /**
     * The FQDN of private cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateFqdn?: string;
    /**
     * The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly azurePortalFqdn?: string;
    /** The agent pool properties. */
    agentPoolProfiles?: ManagedClusterAgentPoolProfile[];
    /** The profile for Linux VMs in the Managed Cluster. */
    linuxProfile?: ContainerServiceLinuxProfile;
    /** The profile for Windows VMs in the Managed Cluster. */
    windowsProfile?: ManagedClusterWindowsProfile;
    /** Information about a service principal identity for the cluster to use for manipulating Azure APIs. */
    servicePrincipalProfile?: ManagedClusterServicePrincipalProfile;
    /** The profile of managed cluster add-on. */
    addonProfiles?: {
        [propertyName: string]: ManagedClusterAddonProfile;
    };
    /** See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration. */
    podIdentityProfile?: ManagedClusterPodIdentityProfile;
    /** The OIDC issuer profile of the Managed Cluster. */
    oidcIssuerProfile?: ManagedClusterOidcIssuerProfile;
    /** The name of the resource group containing agent pool nodes. */
    nodeResourceGroup?: string;
    /** Whether to enable Kubernetes Role-Based Access Control. */
    enableRbac?: boolean;
    /** The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'. */
    supportPlan?: KubernetesSupportPlan;
    /** (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp. */
    enablePodSecurityPolicy?: boolean;
    /** The network configuration profile. */
    networkProfile?: ContainerServiceNetworkProfile;
    /** The Azure Active Directory configuration. */
    aadProfile?: ManagedClusterAADProfile;
    /** The auto upgrade configuration. */
    autoUpgradeProfile?: ManagedClusterAutoUpgradeProfile;
    /** Settings for upgrading a cluster. */
    upgradeSettings?: ClusterUpgradeSettings;
    /** Parameters to be applied to the cluster-autoscaler when enabled */
    autoScalerProfile?: ManagedClusterPropertiesAutoScalerProfile;
    /** The access profile for managed cluster API server. */
    apiServerAccessProfile?: ManagedClusterAPIServerAccessProfile;
    /** This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}' */
    diskEncryptionSetID?: string;
    /** Identities associated with the cluster. */
    identityProfile?: {
        [propertyName: string]: UserAssignedIdentity;
    };
    /** Private link resources associated with the cluster. */
    privateLinkResources?: PrivateLinkResource[];
    /** If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview). */
    disableLocalAccounts?: boolean;
    /** Configurations for provisioning the cluster with HTTP proxy servers. */
    httpProxyConfig?: ManagedClusterHttpProxyConfig;
    /** Security profile for the managed cluster. */
    securityProfile?: ManagedClusterSecurityProfile;
    /** Storage profile for the managed cluster. */
    storageProfile?: ManagedClusterStorageProfile;
    /** Ingress profile for the managed cluster. */
    ingressProfile?: ManagedClusterIngressProfile;
    /** Allow or deny public network access for AKS */
    publicNetworkAccess?: PublicNetworkAccess;
    /** Workload Auto-scaler profile for the managed cluster. */
    workloadAutoScalerProfile?: ManagedClusterWorkloadAutoScalerProfile;
    /** Azure Monitor addon profiles for monitoring the managed cluster. */
    azureMonitorProfile?: ManagedClusterAzureMonitorProfile;
    /** Service mesh profile for a managed cluster. */
    serviceMeshProfile?: ServiceMeshProfile;
    /**
     * The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceUID?: string;
}

/** For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad). */
export declare interface ManagedClusterAADProfile {
    /** Whether to enable managed AAD. */
    managed?: boolean;
    /** Whether to enable Azure RBAC for Kubernetes authorization. */
    enableAzureRbac?: boolean;
    /** The list of AAD group object IDs that will have admin role of the cluster. */
    adminGroupObjectIDs?: string[];
    /** (DEPRECATED) The client AAD application ID. Learn more at https://aka.ms/aks/aad-legacy. */
    clientAppID?: string;
    /** (DEPRECATED) The server AAD application ID. Learn more at https://aka.ms/aks/aad-legacy. */
    serverAppID?: string;
    /** (DEPRECATED) The server AAD application secret. Learn more at https://aka.ms/aks/aad-legacy. */
    serverAppSecret?: string;
    /** The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription. */
    tenantID?: string;
}

/** Managed cluster Access Profile. */
export declare interface ManagedClusterAccessProfile extends TrackedResource {
    /** Base64-encoded Kubernetes configuration file. */
    kubeConfig?: Uint8Array;
}

/** A Kubernetes add-on profile for a managed cluster. */
export declare interface ManagedClusterAddonProfile {
    /** Whether the add-on is enabled or not. */
    enabled: boolean;
    /** Key-value pairs for configuring an add-on. */
    config?: {
        [propertyName: string]: string;
    };
    /**
     * Information of user assigned identity used by this add-on.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly identity?: ManagedClusterAddonProfileIdentity;
}

/** Information of user assigned identity used by this add-on. */
export declare interface ManagedClusterAddonProfileIdentity extends UserAssignedIdentity {
}

/** Profile for the container service agent pool. */
export declare interface ManagedClusterAgentPoolProfile extends ManagedClusterAgentPoolProfileProperties {
    /** Windows agent pool names must be 6 characters or less. */
    name: string;
}

/** Properties for the container service agent pool profile. */
export declare interface ManagedClusterAgentPoolProfileProperties {
    /** Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1. */
    count?: number;
    /** VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions */
    vmSize?: string;
    /** OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. */
    osDiskSizeGB?: number;
    /** The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). */
    osDiskType?: OSDiskType;
    /** Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. */
    kubeletDiskType?: KubeletDiskType;
    /** Determines the type of workload a node can run. */
    workloadRuntime?: WorkloadRuntime;
    /** If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName} */
    vnetSubnetID?: string;
    /** If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName} */
    podSubnetID?: string;
    /** The maximum number of pods that can run on a node. */
    maxPods?: number;
    /** The operating system type. The default is Linux. */
    osType?: OSType;
    /** Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows. */
    osSKU?: Ossku;
    /** The maximum number of nodes for auto-scaling */
    maxCount?: number;
    /** The minimum number of nodes for auto-scaling */
    minCount?: number;
    /** Whether to enable auto-scaler */
    enableAutoScaling?: boolean;
    /** This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete. */
    scaleDownMode?: ScaleDownMode;
    /** The type of Agent Pool. */
    type?: AgentPoolType;
    /** A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools */
    mode?: AgentPoolMode;
    /** Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool). */
    orchestratorVersion?: string;
    /**
     * If orchestratorVersion is a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion is <major.minor>, this field will contain the full <major.minor.patch> version being used.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly currentOrchestratorVersion?: string;
    /**
     * The version of node image
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nodeImageVersion?: string;
    /** Settings for upgrading the agentpool */
    upgradeSettings?: AgentPoolUpgradeSettings;
    /**
     * The current deployment or provisioning state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /** When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded */
    powerState?: PowerState;
    /** The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'. */
    availabilityZones?: string[];
    /** Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false. */
    enableNodePublicIP?: boolean;
    /** This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName} */
    nodePublicIPPrefixID?: string;
    /** The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. */
    scaleSetPriority?: ScaleSetPriority;
    /** This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. */
    scaleSetEvictionPolicy?: ScaleSetEvictionPolicy;
    /** Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing) */
    spotMaxPrice?: number;
    /** The tags to be persisted on the agent pool virtual machine scale set. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The node labels to be persisted across all nodes in agent pool. */
    nodeLabels?: {
        [propertyName: string]: string;
    };
    /** The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. */
    nodeTaints?: string[];
    /** The ID for Proximity Placement Group. */
    proximityPlacementGroupID?: string;
    /** The Kubelet configuration on the agent pool nodes. */
    kubeletConfig?: KubeletConfig;
    /** The OS configuration of Linux agent nodes. */
    linuxOSConfig?: LinuxOSConfig;
    /** This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption */
    enableEncryptionAtHost?: boolean;
    /** Whether to enable UltraSSD */
    enableUltraSSD?: boolean;
    /** See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details. */
    enableFips?: boolean;
    /** GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. */
    gpuInstanceProfile?: GPUInstanceProfile;
    /** CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot. */
    creationData?: CreationData;
    /** AKS will associate the specified agent pool with the Capacity Reservation Group. */
    capacityReservationGroupID?: string;
    /** This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts). */
    hostGroupID?: string;
    /** Network-related settings of an agent pool. */
    networkProfile?: AgentPoolNetworkProfile;
}

/** Access profile for managed cluster API server. */
export declare interface ManagedClusterAPIServerAccessProfile {
    /** IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges). */
    authorizedIPRanges?: string[];
    /** For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters). */
    enablePrivateCluster?: boolean;
    /** The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'. */
    privateDNSZone?: string;
    /** Whether to create additional public FQDN for private cluster or not. */
    enablePrivateClusterPublicFqdn?: boolean;
    /** Whether to disable run command for the cluster or not. */
    disableRunCommand?: boolean;
}

/** Auto upgrade profile for a managed cluster. */
export declare interface ManagedClusterAutoUpgradeProfile {
    /** For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel). */
    upgradeChannel?: UpgradeChannel;
    /** Manner in which the OS on your nodes is updated. The default is NodeImage. */
    nodeOSUpgradeChannel?: NodeOSUpgradeChannel;
}

/** Azure Monitor addon profiles for monitoring the managed cluster. */
export declare interface ManagedClusterAzureMonitorProfile {
    /** Metrics profile for the Azure Monitor managed service for Prometheus addon. Collect out-of-the-box Kubernetes infrastructure metrics to send to an Azure Monitor Workspace and configure additional scraping for custom targets. See aka.ms/AzureManagedPrometheus for an overview. */
    metrics?: ManagedClusterAzureMonitorProfileMetrics;
}

/** Kube State Metrics profile for the Azure Managed Prometheus addon. These optional settings are for the kube-state-metrics pod that is deployed with the addon. See aka.ms/AzureManagedPrometheus-optional-parameters for details. */
export declare interface ManagedClusterAzureMonitorProfileKubeStateMetrics {
    /** Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric (Example: 'namespaces=[k8s-label-1,k8s-label-n,...],pods=[app],...'). By default the metric contains only resource name and namespace labels. */
    metricLabelsAllowlist?: string;
    /** Comma-separated list of Kubernetes annotation keys that will be used in the resource's labels metric (Example: 'namespaces=[kubernetes.io/team,...],pods=[kubernetes.io/team],...'). By default the metric contains only resource name and namespace labels. */
    metricAnnotationsAllowList?: string;
}

/** Metrics profile for the Azure Monitor managed service for Prometheus addon. Collect out-of-the-box Kubernetes infrastructure metrics to send to an Azure Monitor Workspace and configure additional scraping for custom targets. See aka.ms/AzureManagedPrometheus for an overview. */
export declare interface ManagedClusterAzureMonitorProfileMetrics {
    /** Whether to enable or disable the Azure Managed Prometheus addon for Prometheus monitoring. See aka.ms/AzureManagedPrometheus-aks-enable for details on enabling and disabling. */
    enabled: boolean;
    /** Kube State Metrics profile for the Azure Managed Prometheus addon. These optional settings are for the kube-state-metrics pod that is deployed with the addon. See aka.ms/AzureManagedPrometheus-optional-parameters for details. */
    kubeStateMetrics?: ManagedClusterAzureMonitorProfileKubeStateMetrics;
}

/** Cluster HTTP proxy configuration. */
export declare interface ManagedClusterHttpProxyConfig {
    /** The HTTP proxy server endpoint to use. */
    httpProxy?: string;
    /** The HTTPS proxy server endpoint to use. */
    httpsProxy?: string;
    /** The endpoints that should not go through proxy. */
    noProxy?: string[];
    /** Alternative CA cert to use for connecting to proxy servers. */
    trustedCa?: string;
}

/** Identity for the managed cluster. */
export declare interface ManagedClusterIdentity {
    /**
     * The principal id of the system assigned identity which is used by master components.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant id of the system assigned identity which is used by master components.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity). */
    type?: ResourceIdentityType;
    /** The delegated identity resources assigned to this managed cluster. This can only be set by another Azure Resource Provider, and managed cluster only accept one delegated identity resource. Internal use only. */
    delegatedResources?: {
        [propertyName: string]: DelegatedResource;
    };
    /** The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */
    userAssignedIdentities?: {
        [propertyName: string]: ManagedServiceIdentityUserAssignedIdentitiesValue;
    };
}

/** Ingress profile for the container service cluster. */
export declare interface ManagedClusterIngressProfile {
    /** App Routing settings for the ingress profile. You can find an overview and onboarding guide for this feature at https://learn.microsoft.com/en-us/azure/aks/app-routing?tabs=default%2Cdeploy-app-default. */
    webAppRouting?: ManagedClusterIngressProfileWebAppRouting;
}

/** Application Routing add-on settings for the ingress profile. */
export declare interface ManagedClusterIngressProfileWebAppRouting {
    /** Whether to enable the Application Routing add-on. */
    enabled?: boolean;
    /** Resource IDs of the DNS zones to be associated with the Application Routing add-on. Used only when Application Routing add-on is enabled. Public and private DNS zones can be in different resource groups, but all public DNS zones must be in the same resource group and all private DNS zones must be in the same resource group. */
    dnsZoneResourceIds?: string[];
    /**
     * Managed identity of the Application Routing add-on. This is the identity that should be granted permissions, for example, to manage the associated Azure DNS resource and get certificates from Azure Key Vault. See [this overview of the add-on](https://learn.microsoft.com/en-us/azure/aks/web-app-routing?tabs=with-osm) for more instructions.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly identity?: UserAssignedIdentity;
}

/** The response from the List Managed Clusters operation. */
export declare interface ManagedClusterListResult {
    /** The list of managed clusters. */
    value?: ManagedCluster[];
    /**
     * The URL to get the next set of managed cluster results.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Profile of the managed cluster load balancer. */
export declare interface ManagedClusterLoadBalancerProfile {
    /** Desired managed outbound IPs for the cluster load balancer. */
    managedOutboundIPs?: ManagedClusterLoadBalancerProfileManagedOutboundIPs;
    /** Desired outbound IP Prefix resources for the cluster load balancer. */
    outboundIPPrefixes?: ManagedClusterLoadBalancerProfileOutboundIPPrefixes;
    /** Desired outbound IP resources for the cluster load balancer. */
    outboundIPs?: ManagedClusterLoadBalancerProfileOutboundIPs;
    /** The effective outbound IP resources of the cluster load balancer. */
    effectiveOutboundIPs?: ResourceReference[];
    /** The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports. */
    allocatedOutboundPorts?: number;
    /** Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes. */
    idleTimeoutInMinutes?: number;
    /** Enable multiple standard load balancers per AKS cluster or not. */
    enableMultipleStandardLoadBalancers?: boolean;
    /** The type of the managed inbound Load Balancer BackendPool. */
    backendPoolType?: BackendPoolType;
}

/** Desired managed outbound IPs for the cluster load balancer. */
export declare interface ManagedClusterLoadBalancerProfileManagedOutboundIPs {
    /** The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. */
    count?: number;
    /** The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack. */
    countIPv6?: number;
}

/** Desired outbound IP Prefix resources for the cluster load balancer. */
export declare interface ManagedClusterLoadBalancerProfileOutboundIPPrefixes {
    /** A list of public IP prefix resources. */
    publicIPPrefixes?: ResourceReference[];
}

/** Desired outbound IP resources for the cluster load balancer. */
export declare interface ManagedClusterLoadBalancerProfileOutboundIPs {
    /** A list of public IP resources. */
    publicIPs?: ResourceReference[];
}

/** Profile of the managed outbound IP resources of the managed cluster. */
export declare interface ManagedClusterManagedOutboundIPProfile {
    /** The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1. */
    count?: number;
}

/** Profile of the managed cluster NAT gateway. */
export declare interface ManagedClusterNATGatewayProfile {
    /** Profile of the managed outbound IP resources of the cluster NAT gateway. */
    managedOutboundIPProfile?: ManagedClusterManagedOutboundIPProfile;
    /** The effective outbound IP resources of the cluster NAT gateway. */
    effectiveOutboundIPs?: ResourceReference[];
    /** Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes. */
    idleTimeoutInMinutes?: number;
}

/** The OIDC issuer profile of the Managed Cluster. */
export declare interface ManagedClusterOidcIssuerProfile {
    /**
     * The OIDC issuer url of the Managed Cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly issuerURL?: string;
    /** Whether the OIDC issuer is enabled. */
    enabled?: boolean;
}

/** Details about the pod identity assigned to the Managed Cluster. */
export declare interface ManagedClusterPodIdentity {
    /** The name of the pod identity. */
    name: string;
    /** The namespace of the pod identity. */
    namespace: string;
    /** The binding selector to use for the AzureIdentityBinding resource. */
    bindingSelector?: string;
    /** The user assigned identity details. */
    identity: UserAssignedIdentity;
    /**
     * The current provisioning state of the pod identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ManagedClusterPodIdentityProvisioningState;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly provisioningInfo?: ManagedClusterPodIdentityProvisioningInfo;
}

/** See [disable AAD Pod Identity for a specific Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/) for more details. */
export declare interface ManagedClusterPodIdentityException {
    /** The name of the pod identity exception. */
    name: string;
    /** The namespace of the pod identity exception. */
    namespace: string;
    /** The pod labels to match. */
    podLabels: {
        [propertyName: string]: string;
    };
}

/** See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration. */
export declare interface ManagedClusterPodIdentityProfile {
    /** Whether the pod identity addon is enabled. */
    enabled?: boolean;
    /** Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information. */
    allowNetworkPluginKubenet?: boolean;
    /** The pod identities to use in the cluster. */
    userAssignedIdentities?: ManagedClusterPodIdentity[];
    /** The pod identity exceptions to allow. */
    userAssignedIdentityExceptions?: ManagedClusterPodIdentityException[];
}

/** An error response from the pod identity provisioning. */
export declare interface ManagedClusterPodIdentityProvisioningError {
    /** Details about the error. */
    error?: ManagedClusterPodIdentityProvisioningErrorBody;
}

/** An error response from the pod identity provisioning. */
export declare interface ManagedClusterPodIdentityProvisioningErrorBody {
    /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
    code?: string;
    /** A message describing the error, intended to be suitable for display in a user interface. */
    message?: string;
    /** The target of the particular error. For example, the name of the property in error. */
    target?: string;
    /** A list of additional details about the error. */
    details?: ManagedClusterPodIdentityProvisioningErrorBody[];
}

export declare interface ManagedClusterPodIdentityProvisioningInfo {
    /** Pod identity assignment error (if any). */
    error?: ManagedClusterPodIdentityProvisioningError;
}

/**
 * Defines values for ManagedClusterPodIdentityProvisioningState. \
 * {@link KnownManagedClusterPodIdentityProvisioningState} can be used interchangeably with ManagedClusterPodIdentityProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Assigned** \
 * **Canceled** \
 * **Deleting** \
 * **Failed** \
 * **Succeeded** \
 * **Updating**
 */
export declare type ManagedClusterPodIdentityProvisioningState = string;

/** The list of available upgrade versions. */
export declare interface ManagedClusterPoolUpgradeProfile {
    /** The Kubernetes version (major.minor.patch). */
    kubernetesVersion: string;
    /** The Agent Pool name. */
    name?: string;
    /** The operating system type. The default is Linux. */
    osType: OSType;
    /** List of orchestrator types and versions available for upgrade. */
    upgrades?: ManagedClusterPoolUpgradeProfileUpgradesItem[];
}

export declare interface ManagedClusterPoolUpgradeProfileUpgradesItem {
    /** The Kubernetes version (major.minor.patch). */
    kubernetesVersion?: string;
    /** Whether the Kubernetes version is currently in preview. */
    isPreview?: boolean;
}

/** Parameters to be applied to the cluster-autoscaler when enabled */
export declare interface ManagedClusterPropertiesAutoScalerProfile {
    /** Valid values are 'true' and 'false' */
    balanceSimilarNodeGroups?: string;
    /** If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information. */
    expander?: Expander;
    /** The default is 10. */
    maxEmptyBulkDelete?: string;
    /** The default is 600. */
    maxGracefulTerminationSec?: string;
    /** The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
    maxNodeProvisionTime?: string;
    /** The default is 45. The maximum is 100 and the minimum is 0. */
    maxTotalUnreadyPercentage?: string;
    /** For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc). */
    newPodScaleUpDelay?: string;
    /** This must be an integer. The default is 3. */
    okTotalUnreadyCount?: string;
    /** The default is '10'. Values must be an integer number of seconds. */
    scanInterval?: string;
    /** The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
    scaleDownDelayAfterAdd?: string;
    /** The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
    scaleDownDelayAfterDelete?: string;
    /** The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
    scaleDownDelayAfterFailure?: string;
    /** The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
    scaleDownUnneededTime?: string;
    /** The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
    scaleDownUnreadyTime?: string;
    /** The default is '0.5'. */
    scaleDownUtilizationThreshold?: string;
    /** The default is true. */
    skipNodesWithLocalStorage?: string;
    /** The default is true. */
    skipNodesWithSystemPods?: string;
}

/** Interface representing a ManagedClusters. */
export declare interface ManagedClusters {
    /**
     * Gets a list of managed clusters in the specified subscription.
     * @param options The options parameters.
     */
    list(options?: ManagedClustersListOptionalParams): PagedAsyncIterableIterator<ManagedCluster>;
    /**
     * Lists managed clusters in the specified subscription and resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ManagedClustersListByResourceGroupOptionalParams): PagedAsyncIterableIterator<ManagedCluster>;
    /**
     * Gets a list of egress endpoints (network endpoints of all outbound dependencies) in the specified
     * managed cluster. The operation returns properties of each egress endpoint.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    listOutboundNetworkDependenciesEndpoints(resourceGroupName: string, resourceName: string, options?: ManagedClustersListOutboundNetworkDependenciesEndpointsOptionalParams): PagedAsyncIterableIterator<OutboundEnvironmentEndpoint>;
    /**
     * Contains extra metadata on each revision, including supported revisions, cluster compatibility and
     * available upgrades
     * @param location The name of the Azure region.
     * @param options The options parameters.
     */
    listMeshRevisionProfiles(location: string, options?: ManagedClustersListMeshRevisionProfilesOptionalParams): PagedAsyncIterableIterator<MeshRevisionProfile>;
    /**
     * Lists available upgrades for all service meshes in a specific cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    listMeshUpgradeProfiles(resourceGroupName: string, resourceName: string, options?: ManagedClustersListMeshUpgradeProfilesOptionalParams): PagedAsyncIterableIterator<MeshUpgradeProfile>;
    /**
     * Gets supported OS options in the specified subscription.
     * @param location The name of the Azure region.
     * @param options The options parameters.
     */
    getOSOptions(location: string, options?: ManagedClustersGetOSOptionsOptionalParams): Promise<ManagedClustersGetOSOptionsResponse>;
    /**
     * Contains extra metadata on the version, including supported patch versions, capabilities, available
     * upgrades, and details on preview status of the version
     * @param location The name of the Azure region.
     * @param options The options parameters.
     */
    listKubernetesVersions(location: string, options?: ManagedClustersListKubernetesVersionsOptionalParams): Promise<ManagedClustersListKubernetesVersionsResponse>;
    /**
     * Gets the upgrade profile of a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    getUpgradeProfile(resourceGroupName: string, resourceName: string, options?: ManagedClustersGetUpgradeProfileOptionalParams): Promise<ManagedClustersGetUpgradeProfileResponse>;
    /**
     * **WARNING**: This API will be deprecated. Instead use
     * [ListClusterUserCredentials](https://docs.microsoft.com/rest/api/aks/managedclusters/listclusterusercredentials)
     * or
     * [ListClusterAdminCredentials](https://docs.microsoft.com/rest/api/aks/managedclusters/listclusteradmincredentials)
     * .
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param roleName The name of the role for managed cluster accessProfile resource.
     * @param options The options parameters.
     */
    getAccessProfile(resourceGroupName: string, resourceName: string, roleName: string, options?: ManagedClustersGetAccessProfileOptionalParams): Promise<ManagedClustersGetAccessProfileResponse>;
    /**
     * Lists the admin credentials of a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    listClusterAdminCredentials(resourceGroupName: string, resourceName: string, options?: ManagedClustersListClusterAdminCredentialsOptionalParams): Promise<ManagedClustersListClusterAdminCredentialsResponse>;
    /**
     * Lists the user credentials of a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    listClusterUserCredentials(resourceGroupName: string, resourceName: string, options?: ManagedClustersListClusterUserCredentialsOptionalParams): Promise<ManagedClustersListClusterUserCredentialsResponse>;
    /**
     * Lists the cluster monitoring user credentials of a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    listClusterMonitoringUserCredentials(resourceGroupName: string, resourceName: string, options?: ManagedClustersListClusterMonitoringUserCredentialsOptionalParams): Promise<ManagedClustersListClusterMonitoringUserCredentialsResponse>;
    /**
     * Gets a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: ManagedClustersGetOptionalParams): Promise<ManagedClustersGetResponse>;
    /**
     * Creates or updates a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters The managed cluster to create or update.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, parameters: ManagedCluster, options?: ManagedClustersCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ManagedClustersCreateOrUpdateResponse>, ManagedClustersCreateOrUpdateResponse>>;
    /**
     * Creates or updates a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters The managed cluster to create or update.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, parameters: ManagedCluster, options?: ManagedClustersCreateOrUpdateOptionalParams): Promise<ManagedClustersCreateOrUpdateResponse>;
    /**
     * Updates tags on a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters Parameters supplied to the Update Managed Cluster Tags operation.
     * @param options The options parameters.
     */
    beginUpdateTags(resourceGroupName: string, resourceName: string, parameters: TagsObject, options?: ManagedClustersUpdateTagsOptionalParams): Promise<SimplePollerLike<OperationState<ManagedClustersUpdateTagsResponse>, ManagedClustersUpdateTagsResponse>>;
    /**
     * Updates tags on a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters Parameters supplied to the Update Managed Cluster Tags operation.
     * @param options The options parameters.
     */
    beginUpdateTagsAndWait(resourceGroupName: string, resourceName: string, parameters: TagsObject, options?: ManagedClustersUpdateTagsOptionalParams): Promise<ManagedClustersUpdateTagsResponse>;
    /**
     * Deletes a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: ManagedClustersDeleteOptionalParams): Promise<SimplePollerLike<OperationState<ManagedClustersDeleteResponse>, ManagedClustersDeleteResponse>>;
    /**
     * Deletes a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: ManagedClustersDeleteOptionalParams): Promise<ManagedClustersDeleteResponse>;
    /**
     * This action cannot be performed on a cluster that is not using a service principal
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters The service principal profile to set on the managed cluster.
     * @param options The options parameters.
     */
    beginResetServicePrincipalProfile(resourceGroupName: string, resourceName: string, parameters: ManagedClusterServicePrincipalProfile, options?: ManagedClustersResetServicePrincipalProfileOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * This action cannot be performed on a cluster that is not using a service principal
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters The service principal profile to set on the managed cluster.
     * @param options The options parameters.
     */
    beginResetServicePrincipalProfileAndWait(resourceGroupName: string, resourceName: string, parameters: ManagedClusterServicePrincipalProfile, options?: ManagedClustersResetServicePrincipalProfileOptionalParams): Promise<void>;
    /**
     * **WARNING**: This API will be deprecated. Please see [AKS-managed Azure Active Directory
     * integration](https://aka.ms/aks-managed-aad) to update your cluster with AKS-managed Azure AD.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters The AAD profile to set on the Managed Cluster
     * @param options The options parameters.
     */
    beginResetAADProfile(resourceGroupName: string, resourceName: string, parameters: ManagedClusterAADProfile, options?: ManagedClustersResetAADProfileOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * **WARNING**: This API will be deprecated. Please see [AKS-managed Azure Active Directory
     * integration](https://aka.ms/aks-managed-aad) to update your cluster with AKS-managed Azure AD.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters The AAD profile to set on the Managed Cluster
     * @param options The options parameters.
     */
    beginResetAADProfileAndWait(resourceGroupName: string, resourceName: string, parameters: ManagedClusterAADProfile, options?: ManagedClustersResetAADProfileOptionalParams): Promise<void>;
    /**
     * See [Certificate rotation](https://docs.microsoft.com/azure/aks/certificate-rotation) for more
     * details about rotating managed cluster certificates.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginRotateClusterCertificates(resourceGroupName: string, resourceName: string, options?: ManagedClustersRotateClusterCertificatesOptionalParams): Promise<SimplePollerLike<OperationState<ManagedClustersRotateClusterCertificatesResponse>, ManagedClustersRotateClusterCertificatesResponse>>;
    /**
     * See [Certificate rotation](https://docs.microsoft.com/azure/aks/certificate-rotation) for more
     * details about rotating managed cluster certificates.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginRotateClusterCertificatesAndWait(resourceGroupName: string, resourceName: string, options?: ManagedClustersRotateClusterCertificatesOptionalParams): Promise<ManagedClustersRotateClusterCertificatesResponse>;
    /**
     * Aborts the currently running operation on the managed cluster. The Managed Cluster will be moved to
     * a Canceling state and eventually to a Canceled state when cancellation finishes. If the operation
     * completes before cancellation can take place, a 409 error code is returned.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginAbortLatestOperation(resourceGroupName: string, resourceName: string, options?: ManagedClustersAbortLatestOperationOptionalParams): Promise<SimplePollerLike<OperationState<ManagedClustersAbortLatestOperationResponse>, ManagedClustersAbortLatestOperationResponse>>;
    /**
     * Aborts the currently running operation on the managed cluster. The Managed Cluster will be moved to
     * a Canceling state and eventually to a Canceled state when cancellation finishes. If the operation
     * completes before cancellation can take place, a 409 error code is returned.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginAbortLatestOperationAndWait(resourceGroupName: string, resourceName: string, options?: ManagedClustersAbortLatestOperationOptionalParams): Promise<ManagedClustersAbortLatestOperationResponse>;
    /**
     * Rotates the service account signing keys of a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginRotateServiceAccountSigningKeys(resourceGroupName: string, resourceName: string, options?: ManagedClustersRotateServiceAccountSigningKeysOptionalParams): Promise<SimplePollerLike<OperationState<ManagedClustersRotateServiceAccountSigningKeysResponse>, ManagedClustersRotateServiceAccountSigningKeysResponse>>;
    /**
     * Rotates the service account signing keys of a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginRotateServiceAccountSigningKeysAndWait(resourceGroupName: string, resourceName: string, options?: ManagedClustersRotateServiceAccountSigningKeysOptionalParams): Promise<ManagedClustersRotateServiceAccountSigningKeysResponse>;
    /**
     * This can only be performed on Azure Virtual Machine Scale set backed clusters. Stopping a cluster
     * stops the control plane and agent nodes entirely, while maintaining all object and cluster state. A
     * cluster does not accrue charges while it is stopped. See [stopping a
     * cluster](https://docs.microsoft.com/azure/aks/start-stop-cluster) for more details about stopping a
     * cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginStop(resourceGroupName: string, resourceName: string, options?: ManagedClustersStopOptionalParams): Promise<SimplePollerLike<OperationState<ManagedClustersStopResponse>, ManagedClustersStopResponse>>;
    /**
     * This can only be performed on Azure Virtual Machine Scale set backed clusters. Stopping a cluster
     * stops the control plane and agent nodes entirely, while maintaining all object and cluster state. A
     * cluster does not accrue charges while it is stopped. See [stopping a
     * cluster](https://docs.microsoft.com/azure/aks/start-stop-cluster) for more details about stopping a
     * cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginStopAndWait(resourceGroupName: string, resourceName: string, options?: ManagedClustersStopOptionalParams): Promise<ManagedClustersStopResponse>;
    /**
     * See [starting a cluster](https://docs.microsoft.com/azure/aks/start-stop-cluster) for more details
     * about starting a cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginStart(resourceGroupName: string, resourceName: string, options?: ManagedClustersStartOptionalParams): Promise<SimplePollerLike<OperationState<ManagedClustersStartResponse>, ManagedClustersStartResponse>>;
    /**
     * See [starting a cluster](https://docs.microsoft.com/azure/aks/start-stop-cluster) for more details
     * about starting a cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    beginStartAndWait(resourceGroupName: string, resourceName: string, options?: ManagedClustersStartOptionalParams): Promise<ManagedClustersStartResponse>;
    /**
     * AKS will create a pod to run the command. This is primarily useful for private clusters. For more
     * information see [AKS Run
     * Command](https://docs.microsoft.com/azure/aks/private-clusters#aks-run-command-preview).
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param requestPayload The run command request
     * @param options The options parameters.
     */
    beginRunCommand(resourceGroupName: string, resourceName: string, requestPayload: RunCommandRequest, options?: ManagedClustersRunCommandOptionalParams): Promise<SimplePollerLike<OperationState<ManagedClustersRunCommandResponse>, ManagedClustersRunCommandResponse>>;
    /**
     * AKS will create a pod to run the command. This is primarily useful for private clusters. For more
     * information see [AKS Run
     * Command](https://docs.microsoft.com/azure/aks/private-clusters#aks-run-command-preview).
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param requestPayload The run command request
     * @param options The options parameters.
     */
    beginRunCommandAndWait(resourceGroupName: string, resourceName: string, requestPayload: RunCommandRequest, options?: ManagedClustersRunCommandOptionalParams): Promise<ManagedClustersRunCommandResponse>;
    /**
     * Gets the results of a command which has been run on the Managed Cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param commandId Id of the command.
     * @param options The options parameters.
     */
    getCommandResult(resourceGroupName: string, resourceName: string, commandId: string, options?: ManagedClustersGetCommandResultOptionalParams): Promise<ManagedClustersGetCommandResultResponse>;
    /**
     * Contains extra metadata on the revision, including supported revisions, cluster compatibility and
     * available upgrades
     * @param location The name of the Azure region.
     * @param mode The mode of the mesh.
     * @param options The options parameters.
     */
    getMeshRevisionProfile(location: string, mode: string, options?: ManagedClustersGetMeshRevisionProfileOptionalParams): Promise<ManagedClustersGetMeshRevisionProfileResponse>;
    /**
     * Gets available upgrades for a service mesh in a cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param mode The mode of the mesh.
     * @param options The options parameters.
     */
    getMeshUpgradeProfile(resourceGroupName: string, resourceName: string, mode: string, options?: ManagedClustersGetMeshUpgradeProfileOptionalParams): Promise<ManagedClustersGetMeshUpgradeProfileResponse>;
}

/** Defines headers for ManagedClusters_abortLatestOperation operation. */
export declare interface ManagedClustersAbortLatestOperationHeaders {
    /** URL to query for status of the operation. */
    location?: string;
    /** URL to query for status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersAbortLatestOperationOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the abortLatestOperation operation. */
export declare type ManagedClustersAbortLatestOperationResponse = ManagedClustersAbortLatestOperationHeaders;

/** Optional parameters. */
export declare interface ManagedClustersCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type ManagedClustersCreateOrUpdateResponse = ManagedCluster;

/** Defines headers for ManagedClusters_delete operation. */
export declare interface ManagedClustersDeleteHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export declare type ManagedClustersDeleteResponse = ManagedClustersDeleteHeaders;

/** Security profile for the container service cluster. */
export declare interface ManagedClusterSecurityProfile {
    /** Microsoft Defender settings for the security profile. */
    defender?: ManagedClusterSecurityProfileDefender;
    /** Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile. */
    azureKeyVaultKms?: AzureKeyVaultKms;
    /** Workload identity settings for the security profile. Workload identity enables Kubernetes applications to access Azure cloud resources securely with Azure AD. See https://aka.ms/aks/wi for more details. */
    workloadIdentity?: ManagedClusterSecurityProfileWorkloadIdentity;
    /** Image Cleaner settings for the security profile. */
    imageCleaner?: ManagedClusterSecurityProfileImageCleaner;
}

/** Microsoft Defender settings for the security profile. */
export declare interface ManagedClusterSecurityProfileDefender {
    /** Resource ID of the Log Analytics workspace to be associated with Microsoft Defender. When Microsoft Defender is enabled, this field is required and must be a valid workspace resource ID. When Microsoft Defender is disabled, leave the field empty. */
    logAnalyticsWorkspaceResourceId?: string;
    /** Microsoft Defender threat detection for Cloud settings for the security profile. */
    securityMonitoring?: ManagedClusterSecurityProfileDefenderSecurityMonitoring;
}

/** Microsoft Defender settings for the security profile threat detection. */
export declare interface ManagedClusterSecurityProfileDefenderSecurityMonitoring {
    /** Whether to enable Defender threat detection */
    enabled?: boolean;
}

/** Image Cleaner removes unused images from nodes, freeing up disk space and helping to reduce attack surface area. Here are settings for the security profile. */
export declare interface ManagedClusterSecurityProfileImageCleaner {
    /** Whether to enable Image Cleaner on AKS cluster. */
    enabled?: boolean;
    /** Image Cleaner scanning interval in hours. */
    intervalHours?: number;
}

/** Workload identity settings for the security profile. */
export declare interface ManagedClusterSecurityProfileWorkloadIdentity {
    /** Whether to enable workload identity. */
    enabled?: boolean;
}

/** Information about a service principal identity for the cluster to use for manipulating Azure APIs. */
export declare interface ManagedClusterServicePrincipalProfile {
    /** The ID for the service principal. */
    clientId: string;
    /** The secret password associated with the service principal in plain text. */
    secret?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersGetAccessProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getAccessProfile operation. */
export declare type ManagedClustersGetAccessProfileResponse = ManagedClusterAccessProfile;

/** Defines headers for ManagedClusters_getCommandResult operation. */
export declare interface ManagedClustersGetCommandResultHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersGetCommandResultOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getCommandResult operation. */
export declare type ManagedClustersGetCommandResultResponse = RunCommandResult;

/** Optional parameters. */
export declare interface ManagedClustersGetMeshRevisionProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getMeshRevisionProfile operation. */
export declare type ManagedClustersGetMeshRevisionProfileResponse = MeshRevisionProfile;

/** Optional parameters. */
export declare interface ManagedClustersGetMeshUpgradeProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getMeshUpgradeProfile operation. */
export declare type ManagedClustersGetMeshUpgradeProfileResponse = MeshUpgradeProfile;

/** Optional parameters. */
export declare interface ManagedClustersGetOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ManagedClustersGetOSOptionsOptionalParams extends coreClient.OperationOptions {
    /** The resource type for which the OS options needs to be returned */
    resourceType?: string;
}

/** Contains response data for the getOSOptions operation. */
export declare type ManagedClustersGetOSOptionsResponse = OSOptionProfile;

/** Contains response data for the get operation. */
export declare type ManagedClustersGetResponse = ManagedCluster;

/** Optional parameters. */
export declare interface ManagedClustersGetUpgradeProfileOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getUpgradeProfile operation. */
export declare type ManagedClustersGetUpgradeProfileResponse = ManagedClusterUpgradeProfile;

/** The SKU of a Managed Cluster. */
export declare interface ManagedClusterSKU {
    /** The name of a managed cluster SKU. */
    name?: ManagedClusterSKUName;
    /** If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers) for more details. */
    tier?: ManagedClusterSKUTier;
}

/**
 * Defines values for ManagedClusterSKUName. \
 * {@link KnownManagedClusterSKUName} can be used interchangeably with ManagedClusterSKUName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Base**: Base option for the AKS control plane.
 */
export declare type ManagedClusterSKUName = string;

/**
 * Defines values for ManagedClusterSKUTier. \
 * {@link KnownManagedClusterSKUTier} can be used interchangeably with ManagedClusterSKUTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Premium**: Cluster has premium capabilities in addition to all of the capabilities included in 'Standard'. Premium enables selection of LongTermSupport (aka.ms\/aks\/lts) for certain Kubernetes versions. \
 * **Standard**: Recommended for mission-critical and production workloads. Includes Kubernetes control plane autoscaling, workload-intensive testing, and up to 5,000 nodes per cluster. Guarantees 99.95% availability of the Kubernetes API server endpoint for clusters that use Availability Zones and 99.9% of availability for clusters that don't use Availability Zones. \
 * **Free**: The cluster management is free, but charged for VM, storage, and networking usage. Best for experimenting, learning, simple testing, or workloads with fewer than 10 nodes. Not recommended for production use cases.
 */
export declare type ManagedClusterSKUTier = string;

/** Optional parameters. */
export declare interface ManagedClustersListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type ManagedClustersListByResourceGroupNextResponse = ManagedClusterListResult;

/** Optional parameters. */
export declare interface ManagedClustersListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type ManagedClustersListByResourceGroupResponse = ManagedClusterListResult;

/** Optional parameters. */
export declare interface ManagedClustersListClusterAdminCredentialsOptionalParams extends coreClient.OperationOptions {
    /** server fqdn type for credentials to be returned */
    serverFqdn?: string;
}

/** Contains response data for the listClusterAdminCredentials operation. */
export declare type ManagedClustersListClusterAdminCredentialsResponse = CredentialResults;

/** Optional parameters. */
export declare interface ManagedClustersListClusterMonitoringUserCredentialsOptionalParams extends coreClient.OperationOptions {
    /** server fqdn type for credentials to be returned */
    serverFqdn?: string;
}

/** Contains response data for the listClusterMonitoringUserCredentials operation. */
export declare type ManagedClustersListClusterMonitoringUserCredentialsResponse = CredentialResults;

/** Optional parameters. */
export declare interface ManagedClustersListClusterUserCredentialsOptionalParams extends coreClient.OperationOptions {
    /** server fqdn type for credentials to be returned */
    serverFqdn?: string;
    /** Only apply to AAD clusters, specifies the format of returned kubeconfig. Format 'azure' will return azure auth-provider kubeconfig; format 'exec' will return exec format kubeconfig, which requires kubelogin binary in the path. */
    format?: Format;
}

/** Contains response data for the listClusterUserCredentials operation. */
export declare type ManagedClustersListClusterUserCredentialsResponse = CredentialResults;

/** Optional parameters. */
export declare interface ManagedClustersListKubernetesVersionsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listKubernetesVersions operation. */
export declare type ManagedClustersListKubernetesVersionsResponse = KubernetesVersionListResult;

/** Optional parameters. */
export declare interface ManagedClustersListMeshRevisionProfilesNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listMeshRevisionProfilesNext operation. */
export declare type ManagedClustersListMeshRevisionProfilesNextResponse = MeshRevisionProfileList;

/** Optional parameters. */
export declare interface ManagedClustersListMeshRevisionProfilesOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listMeshRevisionProfiles operation. */
export declare type ManagedClustersListMeshRevisionProfilesResponse = MeshRevisionProfileList;

/** Optional parameters. */
export declare interface ManagedClustersListMeshUpgradeProfilesNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listMeshUpgradeProfilesNext operation. */
export declare type ManagedClustersListMeshUpgradeProfilesNextResponse = MeshUpgradeProfileList;

/** Optional parameters. */
export declare interface ManagedClustersListMeshUpgradeProfilesOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listMeshUpgradeProfiles operation. */
export declare type ManagedClustersListMeshUpgradeProfilesResponse = MeshUpgradeProfileList;

/** Optional parameters. */
export declare interface ManagedClustersListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ManagedClustersListNextResponse = ManagedClusterListResult;

/** Optional parameters. */
export declare interface ManagedClustersListOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ManagedClustersListOutboundNetworkDependenciesEndpointsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listOutboundNetworkDependenciesEndpointsNext operation. */
export declare type ManagedClustersListOutboundNetworkDependenciesEndpointsNextResponse = OutboundEnvironmentEndpointCollection;

/** Optional parameters. */
export declare interface ManagedClustersListOutboundNetworkDependenciesEndpointsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listOutboundNetworkDependenciesEndpoints operation. */
export declare type ManagedClustersListOutboundNetworkDependenciesEndpointsResponse = OutboundEnvironmentEndpointCollection;

/** Contains response data for the list operation. */
export declare type ManagedClustersListResponse = ManagedClusterListResult;

/** Defines headers for ManagedClusters_resetAADProfile operation. */
export declare interface ManagedClustersResetAADProfileHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersResetAADProfileOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for ManagedClusters_resetServicePrincipalProfile operation. */
export declare interface ManagedClustersResetServicePrincipalProfileHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersResetServicePrincipalProfileOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for ManagedClusters_rotateClusterCertificates operation. */
export declare interface ManagedClustersRotateClusterCertificatesHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersRotateClusterCertificatesOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the rotateClusterCertificates operation. */
export declare type ManagedClustersRotateClusterCertificatesResponse = ManagedClustersRotateClusterCertificatesHeaders;

/** Defines headers for ManagedClusters_rotateServiceAccountSigningKeys operation. */
export declare interface ManagedClustersRotateServiceAccountSigningKeysHeaders {
    location?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersRotateServiceAccountSigningKeysOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the rotateServiceAccountSigningKeys operation. */
export declare type ManagedClustersRotateServiceAccountSigningKeysResponse = ManagedClustersRotateServiceAccountSigningKeysHeaders;

/** Defines headers for ManagedClusters_runCommand operation. */
export declare interface ManagedClustersRunCommandHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersRunCommandOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the runCommand operation. */
export declare type ManagedClustersRunCommandResponse = RunCommandResult;

/** Defines headers for ManagedClusters_start operation. */
export declare interface ManagedClustersStartHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersStartOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the start operation. */
export declare type ManagedClustersStartResponse = ManagedClustersStartHeaders;

/** Defines headers for ManagedClusters_stop operation. */
export declare interface ManagedClustersStopHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface ManagedClustersStopOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the stop operation. */
export declare type ManagedClustersStopResponse = ManagedClustersStopHeaders;

/** Storage profile for the container service cluster. */
export declare interface ManagedClusterStorageProfile {
    /** AzureDisk CSI Driver settings for the storage profile. */
    diskCSIDriver?: ManagedClusterStorageProfileDiskCSIDriver;
    /** AzureFile CSI Driver settings for the storage profile. */
    fileCSIDriver?: ManagedClusterStorageProfileFileCSIDriver;
    /** Snapshot Controller settings for the storage profile. */
    snapshotController?: ManagedClusterStorageProfileSnapshotController;
    /** AzureBlob CSI Driver settings for the storage profile. */
    blobCSIDriver?: ManagedClusterStorageProfileBlobCSIDriver;
}

/** AzureBlob CSI Driver settings for the storage profile. */
export declare interface ManagedClusterStorageProfileBlobCSIDriver {
    /** Whether to enable AzureBlob CSI Driver. The default value is false. */
    enabled?: boolean;
}

/** AzureDisk CSI Driver settings for the storage profile. */
export declare interface ManagedClusterStorageProfileDiskCSIDriver {
    /** Whether to enable AzureDisk CSI Driver. The default value is true. */
    enabled?: boolean;
}

/** AzureFile CSI Driver settings for the storage profile. */
export declare interface ManagedClusterStorageProfileFileCSIDriver {
    /** Whether to enable AzureFile CSI Driver. The default value is true. */
    enabled?: boolean;
}

/** Snapshot Controller settings for the storage profile. */
export declare interface ManagedClusterStorageProfileSnapshotController {
    /** Whether to enable Snapshot Controller. The default value is true. */
    enabled?: boolean;
}

/** Optional parameters. */
export declare interface ManagedClustersUpdateTagsOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the updateTags operation. */
export declare type ManagedClustersUpdateTagsResponse = ManagedCluster;

/** The list of available upgrades for compute pools. */
export declare interface ManagedClusterUpgradeProfile {
    /**
     * The ID of the upgrade profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the upgrade profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the upgrade profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** The list of available upgrade versions for the control plane. */
    controlPlaneProfile: ManagedClusterPoolUpgradeProfile;
    /** The list of available upgrade versions for agent pools. */
    agentPoolProfiles: ManagedClusterPoolUpgradeProfile[];
}

/** Profile for Windows VMs in the managed cluster. */
export declare interface ManagedClusterWindowsProfile {
    /** Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters */
    adminUsername: string;
    /** Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" */
    adminPassword?: string;
    /** The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details. */
    licenseType?: LicenseType;
    /** For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy). */
    enableCSIProxy?: boolean;
    /** The Windows gMSA Profile in the Managed Cluster. */
    gmsaProfile?: WindowsGmsaProfile;
}

/** Workload Auto-scaler profile for the managed cluster. */
export declare interface ManagedClusterWorkloadAutoScalerProfile {
    /** KEDA (Kubernetes Event-driven Autoscaling) settings for the workload auto-scaler profile. */
    keda?: ManagedClusterWorkloadAutoScalerProfileKeda;
    /** VPA (Vertical Pod Autoscaler) settings for the workload auto-scaler profile. */
    verticalPodAutoscaler?: ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler;
}

/** KEDA (Kubernetes Event-driven Autoscaling) settings for the workload auto-scaler profile. */
export declare interface ManagedClusterWorkloadAutoScalerProfileKeda {
    /** Whether to enable KEDA. */
    enabled: boolean;
}

/** VPA (Vertical Pod Autoscaler) settings for the workload auto-scaler profile. */
export declare interface ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler {
    /** Whether to enable VPA. Default value is false. */
    enabled: boolean;
}

export declare interface ManagedServiceIdentityUserAssignedIdentitiesValue {
    /**
     * The principal id of user assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The client id of user assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
}

/** Holds information on upgrades and compatibility for given major.minor mesh release. */
export declare interface MeshRevision {
    /** The revision of the mesh release. */
    revision?: string;
    /** List of revisions available for upgrade of a specific mesh revision */
    upgrades?: string[];
    /** List of items this revision of service mesh is compatible with, and their associated versions. */
    compatibleWith?: CompatibleVersions[];
}

/** Mesh revision profile for a mesh. */
export declare interface MeshRevisionProfile extends ProxyResource {
    /** Mesh revision profile properties for a mesh */
    properties?: MeshRevisionProfileProperties;
}

/** Holds an array of MeshRevisionsProfiles */
export declare interface MeshRevisionProfileList {
    /** Array of service mesh add-on revision profiles for all supported mesh modes. */
    value?: MeshRevisionProfile[];
    /**
     * The URL to get the next set of mesh revision profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Mesh revision profile properties for a mesh */
export declare interface MeshRevisionProfileProperties {
    meshRevisions?: MeshRevision[];
}

/** Upgrade profile for given mesh. */
export declare interface MeshUpgradeProfile extends ProxyResource {
    /** Mesh upgrade profile properties for a major.minor release. */
    properties?: MeshUpgradeProfileProperties;
}

/** Holds an array of MeshUpgradeProfiles */
export declare interface MeshUpgradeProfileList {
    /** Array of supported service mesh add-on upgrade profiles. */
    value?: MeshUpgradeProfile[];
    /**
     * The URL to get the next set of mesh upgrade profile.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Mesh upgrade profile properties for a major.minor release. */
export declare interface MeshUpgradeProfileProperties extends MeshRevision {
}

/**
 * Defines values for NetworkDataplane. \
 * {@link KnownNetworkDataplane} can be used interchangeably with NetworkDataplane,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **azure**: Use Azure network dataplane. \
 * **cilium**: Use Cilium network dataplane. See [Azure CNI Powered by Cilium](https:\/\/learn.microsoft.com\/azure\/aks\/azure-cni-powered-by-cilium) for more information.
 */
export declare type NetworkDataplane = string;

/**
 * Defines values for NetworkMode. \
 * {@link KnownNetworkMode} can be used interchangeably with NetworkMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **transparent**: No bridge is created. Intra-VM Pod to Pod communication is through IP routes created by Azure CNI. See [Transparent Mode](https:\/\/docs.microsoft.com\/azure\/aks\/faq#transparent-mode) for more information. \
 * **bridge**: This is no longer supported
 */
export declare type NetworkMode = string;

/**
 * Defines values for NetworkPlugin. \
 * {@link KnownNetworkPlugin} can be used interchangeably with NetworkPlugin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **azure**: Use the Azure CNI network plugin. See [Azure CNI (advanced) networking](https:\/\/docs.microsoft.com\/azure\/aks\/concepts-network#azure-cni-advanced-networking) for more information. \
 * **kubenet**: Use the Kubenet network plugin. See [Kubenet (basic) networking](https:\/\/docs.microsoft.com\/azure\/aks\/concepts-network#kubenet-basic-networking) for more information. \
 * **none**: No CNI plugin is pre-installed. See [BYO CNI](https:\/\/docs.microsoft.com\/en-us\/azure\/aks\/use-byo-cni) for more information.
 */
export declare type NetworkPlugin = string;

/**
 * Defines values for NetworkPluginMode. \
 * {@link KnownNetworkPluginMode} can be used interchangeably with NetworkPluginMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **overlay**: Used with networkPlugin=azure, pods are given IPs from the PodCIDR address space but use Azure Routing Domains rather than Kubenet's method of route tables. For more information visit https:\/\/aka.ms\/aks\/azure-cni-overlay.
 */
export declare type NetworkPluginMode = string;

/**
 * Defines values for NetworkPolicy. \
 * {@link KnownNetworkPolicy} can be used interchangeably with NetworkPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **calico**: Use Calico network policies. See [differences between Azure and Calico policies](https:\/\/docs.microsoft.com\/azure\/aks\/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information. \
 * **azure**: Use Azure network policies. See [differences between Azure and Calico policies](https:\/\/docs.microsoft.com\/azure\/aks\/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information. \
 * **cilium**: Use Cilium to enforce network policies. This requires networkDataplane to be 'cilium'.
 */
export declare type NetworkPolicy = string;

/**
 * Defines values for NodeOSUpgradeChannel. \
 * {@link KnownNodeOSUpgradeChannel} can be used interchangeably with NodeOSUpgradeChannel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: No attempt to update your machines OS will be made either by OS or by rolling VHDs. This means you are responsible for your security updates \
 * **Unmanaged**: OS updates will be applied automatically through the OS built-in patching infrastructure. Newly scaled in machines will be unpatched initially and will be patched at some point by the OS's infrastructure. Behavior of this option depends on the OS in question. Ubuntu and Mariner apply security patches through unattended upgrade roughly once a day around 06:00 UTC. Windows does not apply security patches automatically and so for them this option is equivalent to None till further notice \
 * **NodeImage**: AKS will update the nodes with a newly patched VHD containing security fixes and bugfixes on a weekly cadence. With the VHD update machines will be rolling reimaged to that VHD following maintenance windows and surge settings. No extra VHD cost is incurred when choosing this option as AKS hosts the images.
 */
export declare type NodeOSUpgradeChannel = string;

/** The List Operation response. */
export declare interface OperationListResult {
    /**
     * The list of operations
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: OperationValue[];
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Gets a list of operations.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<OperationValue>;
}

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/** Describes the properties of a Operation value. */
export declare interface OperationValue {
    /**
     * The origin of the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: string;
    /**
     * The name of the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The display name of the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * The display name of the resource the operation applies to.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * The description of the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * The resource provider for the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
}

/**
 * Defines values for OSDiskType. \
 * {@link KnownOSDiskType} can be used interchangeably with OSDiskType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Managed**: Azure replicates the operating system disk for a virtual machine to Azure storage to avoid data loss should the VM need to be relocated to another host. Since containers aren't designed to have local state persisted, this behavior offers limited value while providing some drawbacks, including slower node provisioning and higher read\/write latency. \
 * **Ephemeral**: Ephemeral OS disks are stored only on the host machine, just like a temporary disk. This provides lower read\/write latency, along with faster node scaling and cluster upgrades.
 */
export declare type OSDiskType = string;

/** The OS option profile. */
export declare interface OSOptionProfile {
    /**
     * The ID of the OS option resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the OS option resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the OS option resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** The list of OS options. */
    osOptionPropertyList: OSOptionProperty[];
}

/** OS option property. */
export declare interface OSOptionProperty {
    /** The OS type. */
    osType: string;
    /** Whether the image is FIPS-enabled. */
    enableFipsImage: boolean;
}

/**
 * Defines values for Ossku. \
 * {@link KnownOssku} can be used interchangeably with Ossku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Ubuntu**: Use Ubuntu as the OS for node images. \
 * **AzureLinux**: Use AzureLinux as the OS for node images. Azure Linux is a container-optimized Linux distro built by Microsoft, visit https:\/\/aka.ms\/azurelinux for more information. \
 * **CBLMariner**: Deprecated OSSKU. Microsoft recommends that new deployments choose 'AzureLinux' instead. \
 * **Windows2019**: Use Windows2019 as the OS for node images. Unsupported for system node pools. Windows2019 only supports Windows2019 containers; it cannot run Windows2022 containers and vice versa. \
 * **Windows2022**: Use Windows2022 as the OS for node images. Unsupported for system node pools. Windows2022 only supports Windows2022 containers; it cannot run Windows2019 containers and vice versa.
 */
export declare type Ossku = string;

/**
 * Defines values for OSType. \
 * {@link KnownOSType} can be used interchangeably with OSType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Linux**: Use Linux. \
 * **Windows**: Use Windows.
 */
export declare type OSType = string;

/** Egress endpoints which AKS agent nodes connect to for common purpose. */
export declare interface OutboundEnvironmentEndpoint {
    /** The category of endpoints accessed by the AKS agent node, e.g. azure-resource-management, apiserver, etc. */
    category?: string;
    /** The endpoints that AKS agent nodes connect to */
    endpoints?: EndpointDependency[];
}

/** Collection of OutboundEnvironmentEndpoint */
export declare interface OutboundEnvironmentEndpointCollection {
    /** Collection of resources. */
    value: OutboundEnvironmentEndpoint[];
    /**
     * Link to next page of resources.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for OutboundType. \
 * {@link KnownOutboundType} can be used interchangeably with OutboundType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **loadBalancer**: The load balancer is used for egress through an AKS assigned public IP. This supports Kubernetes services of type 'loadBalancer'. For more information see [outbound type loadbalancer](https:\/\/docs.microsoft.com\/azure\/aks\/egress-outboundtype#outbound-type-of-loadbalancer). \
 * **userDefinedRouting**: Egress paths must be defined by the user. This is an advanced scenario and requires proper network configuration. For more information see [outbound type userDefinedRouting](https:\/\/docs.microsoft.com\/azure\/aks\/egress-outboundtype#outbound-type-of-userdefinedrouting). \
 * **managedNATGateway**: The AKS-managed NAT gateway is used for egress. \
 * **userAssignedNATGateway**: The user-assigned NAT gateway associated to the cluster subnet is used for egress. This is an advanced scenario and requires proper network configuration.
 */
export declare type OutboundType = string;

/** The port range. */
export declare interface PortRange {
    /** The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or equal to portEnd. */
    portStart?: number;
    /** The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or equal to portStart. */
    portEnd?: number;
    /** The network protocol of the port. */
    protocol?: Protocol;
}

/** Describes the Power State of the cluster */
export declare interface PowerState {
    /** Tells whether the cluster is Running or Stopped */
    code?: Code;
}

/** Private endpoint which a connection belongs to. */
export declare interface PrivateEndpoint {
    /** The resource ID of the private endpoint */
    id?: string;
}

/** A private endpoint connection */
export declare interface PrivateEndpointConnection {
    /**
     * The ID of the private endpoint connection.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the private endpoint connection.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The current provisioning state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
    /** The resource of private endpoint. */
    privateEndpoint?: PrivateEndpoint;
    /** A collection of information about the state of the connection between service consumer and provider. */
    privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
}

/** A list of private endpoint connections */
export declare interface PrivateEndpointConnectionListResult {
    /** The collection value. */
    value?: PrivateEndpointConnection[];
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Canceled** \
 * **Creating** \
 * **Deleting** \
 * **Failed** \
 * **Succeeded**
 */
export declare type PrivateEndpointConnectionProvisioningState = string;

/** Interface representing a PrivateEndpointConnections. */
export declare interface PrivateEndpointConnections {
    /**
     * To learn more about private clusters, see: https://docs.microsoft.com/azure/aks/private-clusters
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: PrivateEndpointConnectionsListOptionalParams): Promise<PrivateEndpointConnectionsListResponse>;
    /**
     * To learn more about private clusters, see: https://docs.microsoft.com/azure/aks/private-clusters
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Updates a private endpoint connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param parameters The updated private endpoint connection.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, parameters: PrivateEndpointConnection, options?: PrivateEndpointConnectionsUpdateOptionalParams): Promise<PrivateEndpointConnectionsUpdateResponse>;
    /**
     * Deletes a private endpoint connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a private endpoint connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type PrivateEndpointConnectionsUpdateResponse = PrivateEndpointConnection;

/** A private link resource */
export declare interface PrivateLinkResource {
    /** The ID of the private link resource. */
    id?: string;
    /** The name of the private link resource. */
    name?: string;
    /** The resource type. */
    type?: string;
    /** The group ID of the resource. */
    groupId?: string;
    /** The RequiredMembers of the resource */
    requiredMembers?: string[];
    /**
     * The private link service ID of the resource, this field is exposed only to NRP internally.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateLinkServiceID?: string;
}

/** Interface representing a PrivateLinkResources. */
export declare interface PrivateLinkResources {
    /**
     * To learn more about private clusters, see: https://docs.microsoft.com/azure/aks/private-clusters
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: PrivateLinkResourcesListOptionalParams): Promise<PrivateLinkResourcesListResponse>;
}

/** Optional parameters. */
export declare interface PrivateLinkResourcesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateLinkResourcesListResponse = PrivateLinkResourcesListResult;

/** A list of private link resources */
export declare interface PrivateLinkResourcesListResult {
    /** The collection value. */
    value?: PrivateLinkResource[];
}

/** The state of a private link service connection. */
export declare interface PrivateLinkServiceConnectionState {
    /** The private link service connection status. */
    status?: ConnectionStatus;
    /** The private link service connection description. */
    description?: string;
}

/**
 * Defines values for Protocol. \
 * {@link KnownProtocol} can be used interchangeably with Protocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TCP**: TCP protocol. \
 * **UDP**: UDP protocol.
 */
export declare type Protocol = string;

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export declare interface ProxyResource extends Resource {
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type PublicNetworkAccess = string;

/** For schedules like: 'recur every month on the first Monday' or 'recur every 3 months on last Friday'. */
export declare interface RelativeMonthlySchedule {
    /** Specifies the number of months between each set of occurrences. */
    intervalMonths: number;
    /** Specifies on which week of the month the dayOfWeek applies. */
    weekIndex: Type;
    /** Specifies on which day of the week the maintenance occurs. */
    dayOfWeek: WeekDay;
}

/** Interface representing a ResolvePrivateLinkServiceId. */
export declare interface ResolvePrivateLinkServiceId {
    /**
     * Gets the private link service ID for the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters Parameters required in order to resolve a private link service ID.
     * @param options The options parameters.
     */
    post(resourceGroupName: string, resourceName: string, parameters: PrivateLinkResource, options?: ResolvePrivateLinkServiceIdPostOptionalParams): Promise<ResolvePrivateLinkServiceIdPostResponse>;
}

/** Optional parameters. */
export declare interface ResolvePrivateLinkServiceIdPostOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the post operation. */
export declare type ResolvePrivateLinkServiceIdPostResponse = PrivateLinkResource;

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/** Defines values for ResourceIdentityType. */
export declare type ResourceIdentityType = "SystemAssigned" | "UserAssigned" | "None";

/** A reference to an Azure resource. */
export declare interface ResourceReference {
    /** The fully qualified Azure resource id. */
    id?: string;
}

/** A run command request */
export declare interface RunCommandRequest {
    /** The command to run. */
    command: string;
    /** A base64 encoded zip file containing the files required by the command. */
    context?: string;
    /** AuthToken issued for AKS AAD Server App. */
    clusterToken?: string;
}

/** run command result. */
export declare interface RunCommandResult {
    /**
     * The command id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * provisioning State
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /**
     * The exit code of the command
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly exitCode?: number;
    /**
     * The time when the command started.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly startedAt?: Date;
    /**
     * The time when the command finished.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly finishedAt?: Date;
    /**
     * The command output.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly logs?: string;
    /**
     * An explanation of why provisioningState is set to failed (if so).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reason?: string;
}

/**
 * Defines values for ScaleDownMode. \
 * {@link KnownScaleDownMode} can be used interchangeably with ScaleDownMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Delete**: Create new instances during scale up and remove instances during scale down. \
 * **Deallocate**: Attempt to start deallocated instances (if they exist) during scale up and deallocate instances during scale down.
 */
export declare type ScaleDownMode = string;

/**
 * Defines values for ScaleSetEvictionPolicy. \
 * {@link KnownScaleSetEvictionPolicy} can be used interchangeably with ScaleSetEvictionPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Delete**: Nodes in the underlying Scale Set of the node pool are deleted when they're evicted. \
 * **Deallocate**: Nodes in the underlying Scale Set of the node pool are set to the stopped-deallocated state upon eviction. Nodes in the stopped-deallocated state count against your compute quota and can cause issues with cluster scaling or upgrading.
 */
export declare type ScaleSetEvictionPolicy = string;

/**
 * Defines values for ScaleSetPriority. \
 * {@link KnownScaleSetPriority} can be used interchangeably with ScaleSetPriority,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Spot**: Spot priority VMs will be used. There is no SLA for spot nodes. See [spot on AKS](https:\/\/docs.microsoft.com\/azure\/aks\/spot-node-pool) for more information. \
 * **Regular**: Regular VMs will be used.
 */
export declare type ScaleSetPriority = string;

/** One and only one of the schedule types should be specified. Choose either 'daily', 'weekly', 'absoluteMonthly' or 'relativeMonthly' for your maintenance schedule. */
export declare interface Schedule {
    /** For schedules like: 'recur every day' or 'recur every 3 days'. */
    daily?: DailySchedule;
    /** For schedules like: 'recur every Monday' or 'recur every 3 weeks on Wednesday'. */
    weekly?: WeeklySchedule;
    /** For schedules like: 'recur every month on the 15th' or 'recur every 3 months on the 20th'. */
    absoluteMonthly?: AbsoluteMonthlySchedule;
    /** For schedules like: 'recur every month on the first Monday' or 'recur every 3 months on last Friday'. */
    relativeMonthly?: RelativeMonthlySchedule;
}

/**
 * Defines values for ServiceMeshMode. \
 * {@link KnownServiceMeshMode} can be used interchangeably with ServiceMeshMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Istio**: Istio deployed as an AKS addon. \
 * **Disabled**: Mesh is disabled.
 */
export declare type ServiceMeshMode = string;

/** Service mesh profile for a managed cluster. */
export declare interface ServiceMeshProfile {
    /** Mode of the service mesh. */
    mode: ServiceMeshMode;
    /** Istio service mesh configuration. */
    istio?: IstioServiceMesh;
}

/** A node pool snapshot resource. */
export declare interface Snapshot extends TrackedResource {
    /** CreationData to be used to specify the source agent pool resource ID to create this snapshot. */
    creationData?: CreationData;
    /** The type of a snapshot. The default is NodePool. */
    snapshotType?: SnapshotType;
    /**
     * The version of Kubernetes.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly kubernetesVersion?: string;
    /**
     * The version of node image.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nodeImageVersion?: string;
    /**
     * The operating system type. The default is Linux.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly osType?: OSType;
    /**
     * Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly osSku?: Ossku;
    /**
     * The size of the VM.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly vmSize?: string;
    /**
     * Whether to use a FIPS-enabled OS.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly enableFips?: boolean;
}

/** The response from the List Snapshots operation. */
export declare interface SnapshotListResult {
    /** The list of snapshots. */
    value?: Snapshot[];
    /**
     * The URL to get the next set of snapshot results.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a Snapshots. */
export declare interface Snapshots {
    /**
     * Gets a list of snapshots in the specified subscription.
     * @param options The options parameters.
     */
    list(options?: SnapshotsListOptionalParams): PagedAsyncIterableIterator<Snapshot>;
    /**
     * Lists snapshots in the specified subscription and resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: SnapshotsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Snapshot>;
    /**
     * Gets a snapshot.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: SnapshotsGetOptionalParams): Promise<SnapshotsGetResponse>;
    /**
     * Creates or updates a snapshot.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters The snapshot to create or update.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, parameters: Snapshot, options?: SnapshotsCreateOrUpdateOptionalParams): Promise<SnapshotsCreateOrUpdateResponse>;
    /**
     * Updates tags on a snapshot.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param parameters Parameters supplied to the Update snapshot Tags operation.
     * @param options The options parameters.
     */
    updateTags(resourceGroupName: string, resourceName: string, parameters: TagsObject, options?: SnapshotsUpdateTagsOptionalParams): Promise<SnapshotsUpdateTagsResponse>;
    /**
     * Deletes a snapshot.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceName: string, options?: SnapshotsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface SnapshotsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type SnapshotsCreateOrUpdateResponse = Snapshot;

/** Optional parameters. */
export declare interface SnapshotsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface SnapshotsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SnapshotsGetResponse = Snapshot;

/** Optional parameters. */
export declare interface SnapshotsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type SnapshotsListByResourceGroupNextResponse = SnapshotListResult;

/** Optional parameters. */
export declare interface SnapshotsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type SnapshotsListByResourceGroupResponse = SnapshotListResult;

/** Optional parameters. */
export declare interface SnapshotsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type SnapshotsListNextResponse = SnapshotListResult;

/** Optional parameters. */
export declare interface SnapshotsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SnapshotsListResponse = SnapshotListResult;

/** Optional parameters. */
export declare interface SnapshotsUpdateTagsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the updateTags operation. */
export declare type SnapshotsUpdateTagsResponse = Snapshot;

/**
 * Defines values for SnapshotType. \
 * {@link KnownSnapshotType} can be used interchangeably with SnapshotType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NodePool**: The snapshot is a snapshot of a node pool.
 */
export declare type SnapshotType = string;

/** Reference to another subresource. */
export declare interface SubResource {
    /**
     * Resource ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Resource type
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Sysctl settings for Linux agent nodes. */
export declare interface SysctlConfig {
    /** Sysctl setting net.core.somaxconn. */
    netCoreSomaxconn?: number;
    /** Sysctl setting net.core.netdev_max_backlog. */
    netCoreNetdevMaxBacklog?: number;
    /** Sysctl setting net.core.rmem_default. */
    netCoreRmemDefault?: number;
    /** Sysctl setting net.core.rmem_max. */
    netCoreRmemMax?: number;
    /** Sysctl setting net.core.wmem_default. */
    netCoreWmemDefault?: number;
    /** Sysctl setting net.core.wmem_max. */
    netCoreWmemMax?: number;
    /** Sysctl setting net.core.optmem_max. */
    netCoreOptmemMax?: number;
    /** Sysctl setting net.ipv4.tcp_max_syn_backlog. */
    netIpv4TcpMaxSynBacklog?: number;
    /** Sysctl setting net.ipv4.tcp_max_tw_buckets. */
    netIpv4TcpMaxTwBuckets?: number;
    /** Sysctl setting net.ipv4.tcp_fin_timeout. */
    netIpv4TcpFinTimeout?: number;
    /** Sysctl setting net.ipv4.tcp_keepalive_time. */
    netIpv4TcpKeepaliveTime?: number;
    /** Sysctl setting net.ipv4.tcp_keepalive_probes. */
    netIpv4TcpKeepaliveProbes?: number;
    /** Sysctl setting net.ipv4.tcp_keepalive_intvl. */
    netIpv4TcpkeepaliveIntvl?: number;
    /** Sysctl setting net.ipv4.tcp_tw_reuse. */
    netIpv4TcpTwReuse?: boolean;
    /** Sysctl setting net.ipv4.ip_local_port_range. */
    netIpv4IpLocalPortRange?: string;
    /** Sysctl setting net.ipv4.neigh.default.gc_thresh1. */
    netIpv4NeighDefaultGcThresh1?: number;
    /** Sysctl setting net.ipv4.neigh.default.gc_thresh2. */
    netIpv4NeighDefaultGcThresh2?: number;
    /** Sysctl setting net.ipv4.neigh.default.gc_thresh3. */
    netIpv4NeighDefaultGcThresh3?: number;
    /** Sysctl setting net.netfilter.nf_conntrack_max. */
    netNetfilterNfConntrackMax?: number;
    /** Sysctl setting net.netfilter.nf_conntrack_buckets. */
    netNetfilterNfConntrackBuckets?: number;
    /** Sysctl setting fs.inotify.max_user_watches. */
    fsInotifyMaxUserWatches?: number;
    /** Sysctl setting fs.file-max. */
    fsFileMax?: number;
    /** Sysctl setting fs.aio-max-nr. */
    fsAioMaxNr?: number;
    /** Sysctl setting fs.nr_open. */
    fsNrOpen?: number;
    /** Sysctl setting kernel.threads-max. */
    kernelThreadsMax?: number;
    /** Sysctl setting vm.max_map_count. */
    vmMaxMapCount?: number;
    /** Sysctl setting vm.swappiness. */
    vmSwappiness?: number;
    /** Sysctl setting vm.vfs_cache_pressure. */
    vmVfsCachePressure?: number;
}

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** Tags object for patch operations. */
export declare interface TagsObject {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Time in a week. */
export declare interface TimeInWeek {
    /** The day of the week. */
    day?: WeekDay;
    /** Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range. */
    hourSlots?: number[];
}

/** For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z. */
export declare interface TimeSpan {
    /** The start of a time span */
    start?: Date;
    /** The end of a time span */
    end?: Date;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export declare interface TrackedResource extends Resource {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location: string;
}

/** Trusted access role definition. */
export declare interface TrustedAccessRole {
    /**
     * Resource type of Azure resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sourceResourceType?: string;
    /**
     * Name of role, name is unique under a source resource type
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * List of rules for the role. This maps to 'rules' property of [Kubernetes Cluster Role](https://kubernetes.io/docs/reference/kubernetes-api/authorization-resources/cluster-role-v1/#ClusterRole).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly rules?: TrustedAccessRoleRule[];
}

/** Defines binding between a resource and role */
export declare interface TrustedAccessRoleBinding extends Resource {
    /**
     * The current provisioning state of trusted access role binding.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: TrustedAccessRoleBindingProvisioningState;
    /** The ARM resource ID of source resource that trusted access is configured for. */
    sourceResourceId: string;
    /** A list of roles to bind, each item is a resource type qualified role name. For example: 'Microsoft.MachineLearningServices/workspaces/reader'. */
    roles: string[];
}

/** List of trusted access role bindings */
export declare interface TrustedAccessRoleBindingListResult {
    /** Role binding list */
    value?: TrustedAccessRoleBinding[];
    /**
     * Link to next page of resources.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for TrustedAccessRoleBindingProvisioningState. \
 * {@link KnownTrustedAccessRoleBindingProvisioningState} can be used interchangeably with TrustedAccessRoleBindingProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Canceled** \
 * **Deleting** \
 * **Failed** \
 * **Succeeded** \
 * **Updating**
 */
export declare type TrustedAccessRoleBindingProvisioningState = string;

/** Interface representing a TrustedAccessRoleBindings. */
export declare interface TrustedAccessRoleBindings {
    /**
     * List trusted access role bindings.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: TrustedAccessRoleBindingsListOptionalParams): PagedAsyncIterableIterator<TrustedAccessRoleBinding>;
    /**
     * Get a trusted access role binding.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param trustedAccessRoleBindingName The name of trusted access role binding.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, trustedAccessRoleBindingName: string, options?: TrustedAccessRoleBindingsGetOptionalParams): Promise<TrustedAccessRoleBindingsGetResponse>;
    /**
     * Create or update a trusted access role binding
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param trustedAccessRoleBindingName The name of trusted access role binding.
     * @param trustedAccessRoleBinding A trusted access role binding
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, trustedAccessRoleBindingName: string, trustedAccessRoleBinding: TrustedAccessRoleBinding, options?: TrustedAccessRoleBindingsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<TrustedAccessRoleBindingsCreateOrUpdateResponse>, TrustedAccessRoleBindingsCreateOrUpdateResponse>>;
    /**
     * Create or update a trusted access role binding
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param trustedAccessRoleBindingName The name of trusted access role binding.
     * @param trustedAccessRoleBinding A trusted access role binding
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, trustedAccessRoleBindingName: string, trustedAccessRoleBinding: TrustedAccessRoleBinding, options?: TrustedAccessRoleBindingsCreateOrUpdateOptionalParams): Promise<TrustedAccessRoleBindingsCreateOrUpdateResponse>;
    /**
     * Delete a trusted access role binding.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param trustedAccessRoleBindingName The name of trusted access role binding.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, trustedAccessRoleBindingName: string, options?: TrustedAccessRoleBindingsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<TrustedAccessRoleBindingsDeleteResponse>, TrustedAccessRoleBindingsDeleteResponse>>;
    /**
     * Delete a trusted access role binding.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param trustedAccessRoleBindingName The name of trusted access role binding.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, trustedAccessRoleBindingName: string, options?: TrustedAccessRoleBindingsDeleteOptionalParams): Promise<TrustedAccessRoleBindingsDeleteResponse>;
}

/** Optional parameters. */
export declare interface TrustedAccessRoleBindingsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type TrustedAccessRoleBindingsCreateOrUpdateResponse = TrustedAccessRoleBinding;

/** Defines headers for TrustedAccessRoleBindings_delete operation. */
export declare interface TrustedAccessRoleBindingsDeleteHeaders {
    /** URL to query for status of the operation. */
    location?: string;
}

/** Optional parameters. */
export declare interface TrustedAccessRoleBindingsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export declare type TrustedAccessRoleBindingsDeleteResponse = TrustedAccessRoleBindingsDeleteHeaders;

/** Optional parameters. */
export declare interface TrustedAccessRoleBindingsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type TrustedAccessRoleBindingsGetResponse = TrustedAccessRoleBinding;

/** Optional parameters. */
export declare interface TrustedAccessRoleBindingsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type TrustedAccessRoleBindingsListNextResponse = TrustedAccessRoleBindingListResult;

/** Optional parameters. */
export declare interface TrustedAccessRoleBindingsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type TrustedAccessRoleBindingsListResponse = TrustedAccessRoleBindingListResult;

/** List of trusted access roles */
export declare interface TrustedAccessRoleListResult {
    /**
     * Role list
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: TrustedAccessRole[];
    /**
     * Link to next page of resources.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Rule for trusted access role */
export declare interface TrustedAccessRoleRule {
    /**
     * List of allowed verbs
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly verbs?: string[];
    /**
     * List of allowed apiGroups
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly apiGroups?: string[];
    /**
     * List of allowed resources
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resources?: string[];
    /**
     * List of allowed names
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceNames?: string[];
    /**
     * List of allowed nonResourceURLs
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nonResourceURLs?: string[];
}

/** Interface representing a TrustedAccessRoles. */
export declare interface TrustedAccessRoles {
    /**
     * List supported trusted access roles.
     * @param location The name of the Azure region.
     * @param options The options parameters.
     */
    list(location: string, options?: TrustedAccessRolesListOptionalParams): PagedAsyncIterableIterator<TrustedAccessRole>;
}

/** Optional parameters. */
export declare interface TrustedAccessRolesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type TrustedAccessRolesListNextResponse = TrustedAccessRoleListResult;

/** Optional parameters. */
export declare interface TrustedAccessRolesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type TrustedAccessRolesListResponse = TrustedAccessRoleListResult;

/**
 * Defines values for Type. \
 * {@link KnownType} can be used interchangeably with Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **First**: First week of the month. \
 * **Second**: Second week of the month. \
 * **Third**: Third week of the month. \
 * **Fourth**: Fourth week of the month. \
 * **Last**: Last week of the month.
 */
export declare type Type = string;

/**
 * Defines values for UpgradeChannel. \
 * {@link KnownUpgradeChannel} can be used interchangeably with UpgradeChannel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **rapid**: Automatically upgrade the cluster to the latest supported patch release on the latest supported minor version. In cases where the cluster is at a version of Kubernetes that is at an N-2 minor version where N is the latest supported minor version, the cluster first upgrades to the latest supported patch version on N-1 minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster first is upgraded to 1.18.6, then is upgraded to 1.19.1. \
 * **stable**: Automatically upgrade the cluster to the latest supported patch release on minor version N-1, where N is the latest supported minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.18.6. \
 * **patch**: Automatically upgrade the cluster to the latest supported patch version when it becomes available while keeping the minor version the same. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.17.9. \
 * **node-image**: Automatically upgrade the node image to the latest version available. Consider using nodeOSUpgradeChannel instead as that allows you to configure node OS patching separate from Kubernetes version patching \
 * **none**: Disables auto-upgrades and keeps the cluster at its current version of Kubernetes.
 */
export declare type UpgradeChannel = string;

/** Settings for overrides when upgrading a cluster. */
export declare interface UpgradeOverrideSettings {
    /** Whether to force upgrade the cluster. Note that this option instructs upgrade operation to bypass upgrade protections such as checking for deprecated API usage. Enable this option only with caution. */
    forceUpgrade?: boolean;
    /** Until when the overrides are effective. Note that this only matches the start time of an upgrade, and the effectiveness won't change once an upgrade starts even if the `until` expires as upgrade proceeds. This field is not set by default. It must be set for the overrides to take effect. */
    until?: Date;
}

/** Details about a user assigned identity. */
export declare interface UserAssignedIdentity {
    /** The resource ID of the user assigned identity. */
    resourceId?: string;
    /** The client ID of the user assigned identity. */
    clientId?: string;
    /** The object ID of the user assigned identity. */
    objectId?: string;
}

/**
 * Defines values for WeekDay. \
 * {@link KnownWeekDay} can be used interchangeably with WeekDay,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Sunday** \
 * **Monday** \
 * **Tuesday** \
 * **Wednesday** \
 * **Thursday** \
 * **Friday** \
 * **Saturday**
 */
export declare type WeekDay = string;

/** For schedules like: 'recur every Monday' or 'recur every 3 weeks on Wednesday'. */
export declare interface WeeklySchedule {
    /** Specifies the number of weeks between each set of occurrences. */
    intervalWeeks: number;
    /** Specifies on which day of the week the maintenance occurs. */
    dayOfWeek: WeekDay;
}

/** Windows gMSA Profile in the managed cluster. */
export declare interface WindowsGmsaProfile {
    /** Specifies whether to enable Windows gMSA in the managed cluster. */
    enabled?: boolean;
    /** Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster. */
    dnsServer?: string;
    /** Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster. */
    rootDomainName?: string;
}

/**
 * Defines values for WorkloadRuntime. \
 * {@link KnownWorkloadRuntime} can be used interchangeably with WorkloadRuntime,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OCIContainer**: Nodes will use Kubelet to run standard OCI container workloads. \
 * **WasmWasi**: Nodes will use Krustlet to run WASM workloads using the WASI provider (Preview).
 */
export declare type WorkloadRuntime = string;

export { }
