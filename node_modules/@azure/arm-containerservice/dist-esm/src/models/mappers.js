/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OperationValue",
                        },
                    },
                },
            },
        },
    },
};
export const OperationValue = {
    type: {
        name: "Composite",
        className: "OperationValue",
        modelProperties: {
            origin: {
                serializedName: "origin",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            operation: {
                serializedName: "display.operation",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            resource: {
                serializedName: "display.resource",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            description: {
                serializedName: "display.description",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            provider: {
                serializedName: "display.provider",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const CloudError = {
    type: {
        name: "Composite",
        className: "CloudError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "CloudErrorBody",
                },
            },
        },
    },
};
export const CloudErrorBody = {
    type: {
        name: "Composite",
        className: "CloudErrorBody",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String",
                },
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String",
                },
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CloudErrorBody",
                        },
                    },
                },
            },
        },
    },
};
export const OSOptionProfile = {
    type: {
        name: "Composite",
        className: "OSOptionProfile",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            osOptionPropertyList: {
                serializedName: "properties.osOptionPropertyList",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OSOptionProperty",
                        },
                    },
                },
            },
        },
    },
};
export const OSOptionProperty = {
    type: {
        name: "Composite",
        className: "OSOptionProperty",
        modelProperties: {
            osType: {
                serializedName: "os-type",
                required: true,
                type: {
                    name: "String",
                },
            },
            enableFipsImage: {
                serializedName: "enable-fips-image",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const KubernetesVersionListResult = {
    type: {
        name: "Composite",
        className: "KubernetesVersionListResult",
        modelProperties: {
            values: {
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "KubernetesVersion",
                        },
                    },
                },
            },
        },
    },
};
export const KubernetesVersion = {
    type: {
        name: "Composite",
        className: "KubernetesVersion",
        modelProperties: {
            version: {
                serializedName: "version",
                type: {
                    name: "String",
                },
            },
            capabilities: {
                serializedName: "capabilities",
                type: {
                    name: "Composite",
                    className: "KubernetesVersionCapabilities",
                },
            },
            isPreview: {
                serializedName: "isPreview",
                type: {
                    name: "Boolean",
                },
            },
            patchVersions: {
                serializedName: "patchVersions",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "KubernetesPatchVersion" },
                    },
                },
            },
        },
    },
};
export const KubernetesVersionCapabilities = {
    type: {
        name: "Composite",
        className: "KubernetesVersionCapabilities",
        modelProperties: {
            supportPlan: {
                serializedName: "supportPlan",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const KubernetesPatchVersion = {
    type: {
        name: "Composite",
        className: "KubernetesPatchVersion",
        modelProperties: {
            upgrades: {
                serializedName: "upgrades",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const ManagedClusterListResult = {
    type: {
        name: "Composite",
        className: "ManagedClusterListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedCluster",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterSKU = {
    type: {
        name: "Composite",
        className: "ManagedClusterSKU",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ExtendedLocation = {
    type: {
        name: "Composite",
        className: "ExtendedLocation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterIdentity = {
    type: {
        name: "Composite",
        className: "ManagedClusterIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: ["SystemAssigned", "UserAssigned", "None"],
                },
            },
            delegatedResources: {
                serializedName: "delegatedResources",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "DelegatedResource" },
                    },
                },
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "ManagedServiceIdentityUserAssignedIdentitiesValue",
                        },
                    },
                },
            },
        },
    },
};
export const DelegatedResource = {
    type: {
        name: "Composite",
        className: "DelegatedResource",
        modelProperties: {
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String",
                },
            },
            tenantId: {
                serializedName: "tenantId",
                type: {
                    name: "Uuid",
                },
            },
            referralResource: {
                serializedName: "referralResource",
                type: {
                    name: "String",
                },
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedServiceIdentityUserAssignedIdentitiesValue = {
    type: {
        name: "Composite",
        className: "ManagedServiceIdentityUserAssignedIdentitiesValue",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const PowerState = {
    type: {
        name: "Composite",
        className: "PowerState",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterAgentPoolProfileProperties = {
    type: {
        name: "Composite",
        className: "ManagedClusterAgentPoolProfileProperties",
        modelProperties: {
            count: {
                serializedName: "count",
                type: {
                    name: "Number",
                },
            },
            vmSize: {
                serializedName: "vmSize",
                type: {
                    name: "String",
                },
            },
            osDiskSizeGB: {
                constraints: {
                    InclusiveMaximum: 2048,
                    InclusiveMinimum: 0,
                },
                serializedName: "osDiskSizeGB",
                type: {
                    name: "Number",
                },
            },
            osDiskType: {
                serializedName: "osDiskType",
                type: {
                    name: "String",
                },
            },
            kubeletDiskType: {
                serializedName: "kubeletDiskType",
                type: {
                    name: "String",
                },
            },
            workloadRuntime: {
                serializedName: "workloadRuntime",
                type: {
                    name: "String",
                },
            },
            vnetSubnetID: {
                serializedName: "vnetSubnetID",
                type: {
                    name: "String",
                },
            },
            podSubnetID: {
                serializedName: "podSubnetID",
                type: {
                    name: "String",
                },
            },
            maxPods: {
                serializedName: "maxPods",
                type: {
                    name: "Number",
                },
            },
            osType: {
                defaultValue: "Linux",
                serializedName: "osType",
                type: {
                    name: "String",
                },
            },
            osSKU: {
                serializedName: "osSKU",
                type: {
                    name: "String",
                },
            },
            maxCount: {
                serializedName: "maxCount",
                type: {
                    name: "Number",
                },
            },
            minCount: {
                serializedName: "minCount",
                type: {
                    name: "Number",
                },
            },
            enableAutoScaling: {
                serializedName: "enableAutoScaling",
                type: {
                    name: "Boolean",
                },
            },
            scaleDownMode: {
                serializedName: "scaleDownMode",
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String",
                },
            },
            mode: {
                serializedName: "mode",
                type: {
                    name: "String",
                },
            },
            orchestratorVersion: {
                serializedName: "orchestratorVersion",
                type: {
                    name: "String",
                },
            },
            currentOrchestratorVersion: {
                serializedName: "currentOrchestratorVersion",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            nodeImageVersion: {
                serializedName: "nodeImageVersion",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            upgradeSettings: {
                serializedName: "upgradeSettings",
                type: {
                    name: "Composite",
                    className: "AgentPoolUpgradeSettings",
                },
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            powerState: {
                serializedName: "powerState",
                type: {
                    name: "Composite",
                    className: "PowerState",
                },
            },
            availabilityZones: {
                serializedName: "availabilityZones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            enableNodePublicIP: {
                serializedName: "enableNodePublicIP",
                type: {
                    name: "Boolean",
                },
            },
            nodePublicIPPrefixID: {
                serializedName: "nodePublicIPPrefixID",
                type: {
                    name: "String",
                },
            },
            scaleSetPriority: {
                defaultValue: "Regular",
                serializedName: "scaleSetPriority",
                type: {
                    name: "String",
                },
            },
            scaleSetEvictionPolicy: {
                defaultValue: "Delete",
                serializedName: "scaleSetEvictionPolicy",
                type: {
                    name: "String",
                },
            },
            spotMaxPrice: {
                defaultValue: -1,
                serializedName: "spotMaxPrice",
                type: {
                    name: "Number",
                },
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
            nodeLabels: {
                serializedName: "nodeLabels",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
            nodeTaints: {
                serializedName: "nodeTaints",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            proximityPlacementGroupID: {
                serializedName: "proximityPlacementGroupID",
                type: {
                    name: "String",
                },
            },
            kubeletConfig: {
                serializedName: "kubeletConfig",
                type: {
                    name: "Composite",
                    className: "KubeletConfig",
                },
            },
            linuxOSConfig: {
                serializedName: "linuxOSConfig",
                type: {
                    name: "Composite",
                    className: "LinuxOSConfig",
                },
            },
            enableEncryptionAtHost: {
                serializedName: "enableEncryptionAtHost",
                type: {
                    name: "Boolean",
                },
            },
            enableUltraSSD: {
                serializedName: "enableUltraSSD",
                type: {
                    name: "Boolean",
                },
            },
            enableFips: {
                serializedName: "enableFIPS",
                type: {
                    name: "Boolean",
                },
            },
            gpuInstanceProfile: {
                serializedName: "gpuInstanceProfile",
                type: {
                    name: "String",
                },
            },
            creationData: {
                serializedName: "creationData",
                type: {
                    name: "Composite",
                    className: "CreationData",
                },
            },
            capacityReservationGroupID: {
                serializedName: "capacityReservationGroupID",
                type: {
                    name: "String",
                },
            },
            hostGroupID: {
                serializedName: "hostGroupID",
                type: {
                    name: "String",
                },
            },
            networkProfile: {
                serializedName: "networkProfile",
                type: {
                    name: "Composite",
                    className: "AgentPoolNetworkProfile",
                },
            },
        },
    },
};
export const AgentPoolUpgradeSettings = {
    type: {
        name: "Composite",
        className: "AgentPoolUpgradeSettings",
        modelProperties: {
            maxSurge: {
                serializedName: "maxSurge",
                type: {
                    name: "String",
                },
            },
            drainTimeoutInMinutes: {
                constraints: {
                    InclusiveMaximum: 1440,
                    InclusiveMinimum: 1,
                },
                serializedName: "drainTimeoutInMinutes",
                type: {
                    name: "Number",
                },
            },
            nodeSoakDurationInMinutes: {
                constraints: {
                    InclusiveMaximum: 30,
                    InclusiveMinimum: 0,
                },
                serializedName: "nodeSoakDurationInMinutes",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const KubeletConfig = {
    type: {
        name: "Composite",
        className: "KubeletConfig",
        modelProperties: {
            cpuManagerPolicy: {
                serializedName: "cpuManagerPolicy",
                type: {
                    name: "String",
                },
            },
            cpuCfsQuota: {
                serializedName: "cpuCfsQuota",
                type: {
                    name: "Boolean",
                },
            },
            cpuCfsQuotaPeriod: {
                serializedName: "cpuCfsQuotaPeriod",
                type: {
                    name: "String",
                },
            },
            imageGcHighThreshold: {
                serializedName: "imageGcHighThreshold",
                type: {
                    name: "Number",
                },
            },
            imageGcLowThreshold: {
                serializedName: "imageGcLowThreshold",
                type: {
                    name: "Number",
                },
            },
            topologyManagerPolicy: {
                serializedName: "topologyManagerPolicy",
                type: {
                    name: "String",
                },
            },
            allowedUnsafeSysctls: {
                serializedName: "allowedUnsafeSysctls",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            failSwapOn: {
                serializedName: "failSwapOn",
                type: {
                    name: "Boolean",
                },
            },
            containerLogMaxSizeMB: {
                serializedName: "containerLogMaxSizeMB",
                type: {
                    name: "Number",
                },
            },
            containerLogMaxFiles: {
                constraints: {
                    InclusiveMinimum: 2,
                },
                serializedName: "containerLogMaxFiles",
                type: {
                    name: "Number",
                },
            },
            podMaxPids: {
                serializedName: "podMaxPids",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const LinuxOSConfig = {
    type: {
        name: "Composite",
        className: "LinuxOSConfig",
        modelProperties: {
            sysctls: {
                serializedName: "sysctls",
                type: {
                    name: "Composite",
                    className: "SysctlConfig",
                },
            },
            transparentHugePageEnabled: {
                serializedName: "transparentHugePageEnabled",
                type: {
                    name: "String",
                },
            },
            transparentHugePageDefrag: {
                serializedName: "transparentHugePageDefrag",
                type: {
                    name: "String",
                },
            },
            swapFileSizeMB: {
                serializedName: "swapFileSizeMB",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const SysctlConfig = {
    type: {
        name: "Composite",
        className: "SysctlConfig",
        modelProperties: {
            netCoreSomaxconn: {
                serializedName: "netCoreSomaxconn",
                type: {
                    name: "Number",
                },
            },
            netCoreNetdevMaxBacklog: {
                serializedName: "netCoreNetdevMaxBacklog",
                type: {
                    name: "Number",
                },
            },
            netCoreRmemDefault: {
                serializedName: "netCoreRmemDefault",
                type: {
                    name: "Number",
                },
            },
            netCoreRmemMax: {
                serializedName: "netCoreRmemMax",
                type: {
                    name: "Number",
                },
            },
            netCoreWmemDefault: {
                serializedName: "netCoreWmemDefault",
                type: {
                    name: "Number",
                },
            },
            netCoreWmemMax: {
                serializedName: "netCoreWmemMax",
                type: {
                    name: "Number",
                },
            },
            netCoreOptmemMax: {
                serializedName: "netCoreOptmemMax",
                type: {
                    name: "Number",
                },
            },
            netIpv4TcpMaxSynBacklog: {
                serializedName: "netIpv4TcpMaxSynBacklog",
                type: {
                    name: "Number",
                },
            },
            netIpv4TcpMaxTwBuckets: {
                serializedName: "netIpv4TcpMaxTwBuckets",
                type: {
                    name: "Number",
                },
            },
            netIpv4TcpFinTimeout: {
                serializedName: "netIpv4TcpFinTimeout",
                type: {
                    name: "Number",
                },
            },
            netIpv4TcpKeepaliveTime: {
                serializedName: "netIpv4TcpKeepaliveTime",
                type: {
                    name: "Number",
                },
            },
            netIpv4TcpKeepaliveProbes: {
                serializedName: "netIpv4TcpKeepaliveProbes",
                type: {
                    name: "Number",
                },
            },
            netIpv4TcpkeepaliveIntvl: {
                constraints: {
                    InclusiveMaximum: 90,
                    InclusiveMinimum: 10,
                },
                serializedName: "netIpv4TcpkeepaliveIntvl",
                type: {
                    name: "Number",
                },
            },
            netIpv4TcpTwReuse: {
                serializedName: "netIpv4TcpTwReuse",
                type: {
                    name: "Boolean",
                },
            },
            netIpv4IpLocalPortRange: {
                serializedName: "netIpv4IpLocalPortRange",
                type: {
                    name: "String",
                },
            },
            netIpv4NeighDefaultGcThresh1: {
                serializedName: "netIpv4NeighDefaultGcThresh1",
                type: {
                    name: "Number",
                },
            },
            netIpv4NeighDefaultGcThresh2: {
                serializedName: "netIpv4NeighDefaultGcThresh2",
                type: {
                    name: "Number",
                },
            },
            netIpv4NeighDefaultGcThresh3: {
                serializedName: "netIpv4NeighDefaultGcThresh3",
                type: {
                    name: "Number",
                },
            },
            netNetfilterNfConntrackMax: {
                constraints: {
                    InclusiveMaximum: 2097152,
                    InclusiveMinimum: 131072,
                },
                serializedName: "netNetfilterNfConntrackMax",
                type: {
                    name: "Number",
                },
            },
            netNetfilterNfConntrackBuckets: {
                constraints: {
                    InclusiveMaximum: 524288,
                    InclusiveMinimum: 65536,
                },
                serializedName: "netNetfilterNfConntrackBuckets",
                type: {
                    name: "Number",
                },
            },
            fsInotifyMaxUserWatches: {
                serializedName: "fsInotifyMaxUserWatches",
                type: {
                    name: "Number",
                },
            },
            fsFileMax: {
                serializedName: "fsFileMax",
                type: {
                    name: "Number",
                },
            },
            fsAioMaxNr: {
                serializedName: "fsAioMaxNr",
                type: {
                    name: "Number",
                },
            },
            fsNrOpen: {
                serializedName: "fsNrOpen",
                type: {
                    name: "Number",
                },
            },
            kernelThreadsMax: {
                serializedName: "kernelThreadsMax",
                type: {
                    name: "Number",
                },
            },
            vmMaxMapCount: {
                serializedName: "vmMaxMapCount",
                type: {
                    name: "Number",
                },
            },
            vmSwappiness: {
                serializedName: "vmSwappiness",
                type: {
                    name: "Number",
                },
            },
            vmVfsCachePressure: {
                serializedName: "vmVfsCachePressure",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const CreationData = {
    type: {
        name: "Composite",
        className: "CreationData",
        modelProperties: {
            sourceResourceId: {
                serializedName: "sourceResourceId",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AgentPoolNetworkProfile = {
    type: {
        name: "Composite",
        className: "AgentPoolNetworkProfile",
        modelProperties: {
            nodePublicIPTags: {
                serializedName: "nodePublicIPTags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IPTag",
                        },
                    },
                },
            },
            allowedHostPorts: {
                serializedName: "allowedHostPorts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PortRange",
                        },
                    },
                },
            },
            applicationSecurityGroups: {
                serializedName: "applicationSecurityGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const IPTag = {
    type: {
        name: "Composite",
        className: "IPTag",
        modelProperties: {
            ipTagType: {
                serializedName: "ipTagType",
                type: {
                    name: "String",
                },
            },
            tag: {
                serializedName: "tag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const PortRange = {
    type: {
        name: "Composite",
        className: "PortRange",
        modelProperties: {
            portStart: {
                constraints: {
                    InclusiveMaximum: 65535,
                    InclusiveMinimum: 1,
                },
                serializedName: "portStart",
                type: {
                    name: "Number",
                },
            },
            portEnd: {
                constraints: {
                    InclusiveMaximum: 65535,
                    InclusiveMinimum: 1,
                },
                serializedName: "portEnd",
                type: {
                    name: "Number",
                },
            },
            protocol: {
                serializedName: "protocol",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ContainerServiceLinuxProfile = {
    type: {
        name: "Composite",
        className: "ContainerServiceLinuxProfile",
        modelProperties: {
            adminUsername: {
                constraints: {
                    Pattern: new RegExp("^[A-Za-z][-A-Za-z0-9_]*$"),
                },
                serializedName: "adminUsername",
                required: true,
                type: {
                    name: "String",
                },
            },
            ssh: {
                serializedName: "ssh",
                type: {
                    name: "Composite",
                    className: "ContainerServiceSshConfiguration",
                },
            },
        },
    },
};
export const ContainerServiceSshConfiguration = {
    type: {
        name: "Composite",
        className: "ContainerServiceSshConfiguration",
        modelProperties: {
            publicKeys: {
                serializedName: "publicKeys",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ContainerServiceSshPublicKey",
                        },
                    },
                },
            },
        },
    },
};
export const ContainerServiceSshPublicKey = {
    type: {
        name: "Composite",
        className: "ContainerServiceSshPublicKey",
        modelProperties: {
            keyData: {
                serializedName: "keyData",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterWindowsProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterWindowsProfile",
        modelProperties: {
            adminUsername: {
                serializedName: "adminUsername",
                required: true,
                type: {
                    name: "String",
                },
            },
            adminPassword: {
                serializedName: "adminPassword",
                type: {
                    name: "String",
                },
            },
            licenseType: {
                serializedName: "licenseType",
                type: {
                    name: "String",
                },
            },
            enableCSIProxy: {
                serializedName: "enableCSIProxy",
                type: {
                    name: "Boolean",
                },
            },
            gmsaProfile: {
                serializedName: "gmsaProfile",
                type: {
                    name: "Composite",
                    className: "WindowsGmsaProfile",
                },
            },
        },
    },
};
export const WindowsGmsaProfile = {
    type: {
        name: "Composite",
        className: "WindowsGmsaProfile",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            dnsServer: {
                serializedName: "dnsServer",
                type: {
                    name: "String",
                },
            },
            rootDomainName: {
                serializedName: "rootDomainName",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterServicePrincipalProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterServicePrincipalProfile",
        modelProperties: {
            clientId: {
                serializedName: "clientId",
                required: true,
                type: {
                    name: "String",
                },
            },
            secret: {
                serializedName: "secret",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterAddonProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterAddonProfile",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            config: {
                serializedName: "config",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedClusterAddonProfileIdentity",
                },
            },
        },
    },
};
export const UserAssignedIdentity = {
    type: {
        name: "Composite",
        className: "UserAssignedIdentity",
        modelProperties: {
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String",
                },
            },
            clientId: {
                serializedName: "clientId",
                type: {
                    name: "String",
                },
            },
            objectId: {
                serializedName: "objectId",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterPodIdentityProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterPodIdentityProfile",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            allowNetworkPluginKubenet: {
                serializedName: "allowNetworkPluginKubenet",
                type: {
                    name: "Boolean",
                },
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedClusterPodIdentity",
                        },
                    },
                },
            },
            userAssignedIdentityExceptions: {
                serializedName: "userAssignedIdentityExceptions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedClusterPodIdentityException",
                        },
                    },
                },
            },
        },
    },
};
export const ManagedClusterPodIdentity = {
    type: {
        name: "Composite",
        className: "ManagedClusterPodIdentity",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            namespace: {
                serializedName: "namespace",
                required: true,
                type: {
                    name: "String",
                },
            },
            bindingSelector: {
                serializedName: "bindingSelector",
                type: {
                    name: "String",
                },
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "UserAssignedIdentity",
                },
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            provisioningInfo: {
                serializedName: "provisioningInfo",
                type: {
                    name: "Composite",
                    className: "ManagedClusterPodIdentityProvisioningInfo",
                },
            },
        },
    },
};
export const ManagedClusterPodIdentityProvisioningInfo = {
    type: {
        name: "Composite",
        className: "ManagedClusterPodIdentityProvisioningInfo",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ManagedClusterPodIdentityProvisioningError",
                },
            },
        },
    },
};
export const ManagedClusterPodIdentityProvisioningError = {
    type: {
        name: "Composite",
        className: "ManagedClusterPodIdentityProvisioningError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ManagedClusterPodIdentityProvisioningErrorBody",
                },
            },
        },
    },
};
export const ManagedClusterPodIdentityProvisioningErrorBody = {
    type: {
        name: "Composite",
        className: "ManagedClusterPodIdentityProvisioningErrorBody",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String",
                },
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String",
                },
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedClusterPodIdentityProvisioningErrorBody",
                        },
                    },
                },
            },
        },
    },
};
export const ManagedClusterPodIdentityException = {
    type: {
        name: "Composite",
        className: "ManagedClusterPodIdentityException",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            namespace: {
                serializedName: "namespace",
                required: true,
                type: {
                    name: "String",
                },
            },
            podLabels: {
                serializedName: "podLabels",
                required: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
        },
    },
};
export const ManagedClusterOidcIssuerProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterOidcIssuerProfile",
        modelProperties: {
            issuerURL: {
                serializedName: "issuerURL",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ContainerServiceNetworkProfile = {
    type: {
        name: "Composite",
        className: "ContainerServiceNetworkProfile",
        modelProperties: {
            networkPlugin: {
                defaultValue: "kubenet",
                serializedName: "networkPlugin",
                type: {
                    name: "String",
                },
            },
            networkPluginMode: {
                serializedName: "networkPluginMode",
                type: {
                    name: "String",
                },
            },
            networkPolicy: {
                serializedName: "networkPolicy",
                type: {
                    name: "String",
                },
            },
            networkMode: {
                serializedName: "networkMode",
                type: {
                    name: "String",
                },
            },
            networkDataplane: {
                serializedName: "networkDataplane",
                type: {
                    name: "String",
                },
            },
            podCidr: {
                defaultValue: "10.244.0.0/16",
                constraints: {
                    Pattern: new RegExp("^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"),
                },
                serializedName: "podCidr",
                type: {
                    name: "String",
                },
            },
            serviceCidr: {
                defaultValue: "10.0.0.0/16",
                constraints: {
                    Pattern: new RegExp("^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"),
                },
                serializedName: "serviceCidr",
                type: {
                    name: "String",
                },
            },
            dnsServiceIP: {
                defaultValue: "10.0.0.10",
                constraints: {
                    Pattern: new RegExp("^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"),
                },
                serializedName: "dnsServiceIP",
                type: {
                    name: "String",
                },
            },
            outboundType: {
                defaultValue: "loadBalancer",
                serializedName: "outboundType",
                type: {
                    name: "String",
                },
            },
            loadBalancerSku: {
                serializedName: "loadBalancerSku",
                type: {
                    name: "String",
                },
            },
            loadBalancerProfile: {
                serializedName: "loadBalancerProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterLoadBalancerProfile",
                },
            },
            natGatewayProfile: {
                serializedName: "natGatewayProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterNATGatewayProfile",
                },
            },
            podCidrs: {
                serializedName: "podCidrs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            serviceCidrs: {
                serializedName: "serviceCidrs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            ipFamilies: {
                serializedName: "ipFamilies",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const ManagedClusterLoadBalancerProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterLoadBalancerProfile",
        modelProperties: {
            managedOutboundIPs: {
                serializedName: "managedOutboundIPs",
                type: {
                    name: "Composite",
                    className: "ManagedClusterLoadBalancerProfileManagedOutboundIPs",
                },
            },
            outboundIPPrefixes: {
                serializedName: "outboundIPPrefixes",
                type: {
                    name: "Composite",
                    className: "ManagedClusterLoadBalancerProfileOutboundIPPrefixes",
                },
            },
            outboundIPs: {
                serializedName: "outboundIPs",
                type: {
                    name: "Composite",
                    className: "ManagedClusterLoadBalancerProfileOutboundIPs",
                },
            },
            effectiveOutboundIPs: {
                serializedName: "effectiveOutboundIPs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceReference",
                        },
                    },
                },
            },
            allocatedOutboundPorts: {
                defaultValue: 0,
                constraints: {
                    InclusiveMaximum: 64000,
                    InclusiveMinimum: 0,
                },
                serializedName: "allocatedOutboundPorts",
                type: {
                    name: "Number",
                },
            },
            idleTimeoutInMinutes: {
                defaultValue: 30,
                constraints: {
                    InclusiveMaximum: 120,
                    InclusiveMinimum: 4,
                },
                serializedName: "idleTimeoutInMinutes",
                type: {
                    name: "Number",
                },
            },
            enableMultipleStandardLoadBalancers: {
                serializedName: "enableMultipleStandardLoadBalancers",
                type: {
                    name: "Boolean",
                },
            },
            backendPoolType: {
                defaultValue: "NodeIPConfiguration",
                serializedName: "backendPoolType",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterLoadBalancerProfileManagedOutboundIPs = {
    type: {
        name: "Composite",
        className: "ManagedClusterLoadBalancerProfileManagedOutboundIPs",
        modelProperties: {
            count: {
                defaultValue: 1,
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 1,
                },
                serializedName: "count",
                type: {
                    name: "Number",
                },
            },
            countIPv6: {
                defaultValue: 0,
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 0,
                },
                serializedName: "countIPv6",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const ManagedClusterLoadBalancerProfileOutboundIPPrefixes = {
    type: {
        name: "Composite",
        className: "ManagedClusterLoadBalancerProfileOutboundIPPrefixes",
        modelProperties: {
            publicIPPrefixes: {
                serializedName: "publicIPPrefixes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceReference",
                        },
                    },
                },
            },
        },
    },
};
export const ResourceReference = {
    type: {
        name: "Composite",
        className: "ResourceReference",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterLoadBalancerProfileOutboundIPs = {
    type: {
        name: "Composite",
        className: "ManagedClusterLoadBalancerProfileOutboundIPs",
        modelProperties: {
            publicIPs: {
                serializedName: "publicIPs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceReference",
                        },
                    },
                },
            },
        },
    },
};
export const ManagedClusterNATGatewayProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterNATGatewayProfile",
        modelProperties: {
            managedOutboundIPProfile: {
                serializedName: "managedOutboundIPProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterManagedOutboundIPProfile",
                },
            },
            effectiveOutboundIPs: {
                serializedName: "effectiveOutboundIPs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceReference",
                        },
                    },
                },
            },
            idleTimeoutInMinutes: {
                defaultValue: 4,
                constraints: {
                    InclusiveMaximum: 120,
                    InclusiveMinimum: 4,
                },
                serializedName: "idleTimeoutInMinutes",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const ManagedClusterManagedOutboundIPProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterManagedOutboundIPProfile",
        modelProperties: {
            count: {
                defaultValue: 1,
                constraints: {
                    InclusiveMaximum: 16,
                    InclusiveMinimum: 1,
                },
                serializedName: "count",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const ManagedClusterAADProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterAADProfile",
        modelProperties: {
            managed: {
                serializedName: "managed",
                type: {
                    name: "Boolean",
                },
            },
            enableAzureRbac: {
                serializedName: "enableAzureRBAC",
                type: {
                    name: "Boolean",
                },
            },
            adminGroupObjectIDs: {
                serializedName: "adminGroupObjectIDs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            clientAppID: {
                serializedName: "clientAppID",
                type: {
                    name: "String",
                },
            },
            serverAppID: {
                serializedName: "serverAppID",
                type: {
                    name: "String",
                },
            },
            serverAppSecret: {
                serializedName: "serverAppSecret",
                type: {
                    name: "String",
                },
            },
            tenantID: {
                serializedName: "tenantID",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterAutoUpgradeProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterAutoUpgradeProfile",
        modelProperties: {
            upgradeChannel: {
                serializedName: "upgradeChannel",
                type: {
                    name: "String",
                },
            },
            nodeOSUpgradeChannel: {
                serializedName: "nodeOSUpgradeChannel",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ClusterUpgradeSettings = {
    type: {
        name: "Composite",
        className: "ClusterUpgradeSettings",
        modelProperties: {
            overrideSettings: {
                serializedName: "overrideSettings",
                type: {
                    name: "Composite",
                    className: "UpgradeOverrideSettings",
                },
            },
        },
    },
};
export const UpgradeOverrideSettings = {
    type: {
        name: "Composite",
        className: "UpgradeOverrideSettings",
        modelProperties: {
            forceUpgrade: {
                serializedName: "forceUpgrade",
                type: {
                    name: "Boolean",
                },
            },
            until: {
                serializedName: "until",
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const ManagedClusterPropertiesAutoScalerProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterPropertiesAutoScalerProfile",
        modelProperties: {
            balanceSimilarNodeGroups: {
                serializedName: "balance-similar-node-groups",
                type: {
                    name: "String",
                },
            },
            expander: {
                serializedName: "expander",
                type: {
                    name: "String",
                },
            },
            maxEmptyBulkDelete: {
                serializedName: "max-empty-bulk-delete",
                type: {
                    name: "String",
                },
            },
            maxGracefulTerminationSec: {
                serializedName: "max-graceful-termination-sec",
                type: {
                    name: "String",
                },
            },
            maxNodeProvisionTime: {
                serializedName: "max-node-provision-time",
                type: {
                    name: "String",
                },
            },
            maxTotalUnreadyPercentage: {
                serializedName: "max-total-unready-percentage",
                type: {
                    name: "String",
                },
            },
            newPodScaleUpDelay: {
                serializedName: "new-pod-scale-up-delay",
                type: {
                    name: "String",
                },
            },
            okTotalUnreadyCount: {
                serializedName: "ok-total-unready-count",
                type: {
                    name: "String",
                },
            },
            scanInterval: {
                serializedName: "scan-interval",
                type: {
                    name: "String",
                },
            },
            scaleDownDelayAfterAdd: {
                serializedName: "scale-down-delay-after-add",
                type: {
                    name: "String",
                },
            },
            scaleDownDelayAfterDelete: {
                serializedName: "scale-down-delay-after-delete",
                type: {
                    name: "String",
                },
            },
            scaleDownDelayAfterFailure: {
                serializedName: "scale-down-delay-after-failure",
                type: {
                    name: "String",
                },
            },
            scaleDownUnneededTime: {
                serializedName: "scale-down-unneeded-time",
                type: {
                    name: "String",
                },
            },
            scaleDownUnreadyTime: {
                serializedName: "scale-down-unready-time",
                type: {
                    name: "String",
                },
            },
            scaleDownUtilizationThreshold: {
                serializedName: "scale-down-utilization-threshold",
                type: {
                    name: "String",
                },
            },
            skipNodesWithLocalStorage: {
                serializedName: "skip-nodes-with-local-storage",
                type: {
                    name: "String",
                },
            },
            skipNodesWithSystemPods: {
                serializedName: "skip-nodes-with-system-pods",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterAPIServerAccessProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterAPIServerAccessProfile",
        modelProperties: {
            authorizedIPRanges: {
                serializedName: "authorizedIPRanges",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            enablePrivateCluster: {
                serializedName: "enablePrivateCluster",
                type: {
                    name: "Boolean",
                },
            },
            privateDNSZone: {
                serializedName: "privateDNSZone",
                type: {
                    name: "String",
                },
            },
            enablePrivateClusterPublicFqdn: {
                serializedName: "enablePrivateClusterPublicFQDN",
                type: {
                    name: "Boolean",
                },
            },
            disableRunCommand: {
                serializedName: "disableRunCommand",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const PrivateLinkResource = {
    type: {
        name: "Composite",
        className: "PrivateLinkResource",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String",
                },
            },
            groupId: {
                serializedName: "groupId",
                type: {
                    name: "String",
                },
            },
            requiredMembers: {
                serializedName: "requiredMembers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            privateLinkServiceID: {
                serializedName: "privateLinkServiceID",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterHttpProxyConfig = {
    type: {
        name: "Composite",
        className: "ManagedClusterHttpProxyConfig",
        modelProperties: {
            httpProxy: {
                serializedName: "httpProxy",
                type: {
                    name: "String",
                },
            },
            httpsProxy: {
                serializedName: "httpsProxy",
                type: {
                    name: "String",
                },
            },
            noProxy: {
                serializedName: "noProxy",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            trustedCa: {
                serializedName: "trustedCa",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterSecurityProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterSecurityProfile",
        modelProperties: {
            defender: {
                serializedName: "defender",
                type: {
                    name: "Composite",
                    className: "ManagedClusterSecurityProfileDefender",
                },
            },
            azureKeyVaultKms: {
                serializedName: "azureKeyVaultKms",
                type: {
                    name: "Composite",
                    className: "AzureKeyVaultKms",
                },
            },
            workloadIdentity: {
                serializedName: "workloadIdentity",
                type: {
                    name: "Composite",
                    className: "ManagedClusterSecurityProfileWorkloadIdentity",
                },
            },
            imageCleaner: {
                serializedName: "imageCleaner",
                type: {
                    name: "Composite",
                    className: "ManagedClusterSecurityProfileImageCleaner",
                },
            },
        },
    },
};
export const ManagedClusterSecurityProfileDefender = {
    type: {
        name: "Composite",
        className: "ManagedClusterSecurityProfileDefender",
        modelProperties: {
            logAnalyticsWorkspaceResourceId: {
                serializedName: "logAnalyticsWorkspaceResourceId",
                type: {
                    name: "String",
                },
            },
            securityMonitoring: {
                serializedName: "securityMonitoring",
                type: {
                    name: "Composite",
                    className: "ManagedClusterSecurityProfileDefenderSecurityMonitoring",
                },
            },
        },
    },
};
export const ManagedClusterSecurityProfileDefenderSecurityMonitoring = {
    type: {
        name: "Composite",
        className: "ManagedClusterSecurityProfileDefenderSecurityMonitoring",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const AzureKeyVaultKms = {
    type: {
        name: "Composite",
        className: "AzureKeyVaultKms",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            keyId: {
                serializedName: "keyId",
                type: {
                    name: "String",
                },
            },
            keyVaultNetworkAccess: {
                defaultValue: "Public",
                serializedName: "keyVaultNetworkAccess",
                type: {
                    name: "String",
                },
            },
            keyVaultResourceId: {
                serializedName: "keyVaultResourceId",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClusterSecurityProfileWorkloadIdentity = {
    type: {
        name: "Composite",
        className: "ManagedClusterSecurityProfileWorkloadIdentity",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ManagedClusterSecurityProfileImageCleaner = {
    type: {
        name: "Composite",
        className: "ManagedClusterSecurityProfileImageCleaner",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            intervalHours: {
                serializedName: "intervalHours",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const ManagedClusterStorageProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterStorageProfile",
        modelProperties: {
            diskCSIDriver: {
                serializedName: "diskCSIDriver",
                type: {
                    name: "Composite",
                    className: "ManagedClusterStorageProfileDiskCSIDriver",
                },
            },
            fileCSIDriver: {
                serializedName: "fileCSIDriver",
                type: {
                    name: "Composite",
                    className: "ManagedClusterStorageProfileFileCSIDriver",
                },
            },
            snapshotController: {
                serializedName: "snapshotController",
                type: {
                    name: "Composite",
                    className: "ManagedClusterStorageProfileSnapshotController",
                },
            },
            blobCSIDriver: {
                serializedName: "blobCSIDriver",
                type: {
                    name: "Composite",
                    className: "ManagedClusterStorageProfileBlobCSIDriver",
                },
            },
        },
    },
};
export const ManagedClusterStorageProfileDiskCSIDriver = {
    type: {
        name: "Composite",
        className: "ManagedClusterStorageProfileDiskCSIDriver",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ManagedClusterStorageProfileFileCSIDriver = {
    type: {
        name: "Composite",
        className: "ManagedClusterStorageProfileFileCSIDriver",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ManagedClusterStorageProfileSnapshotController = {
    type: {
        name: "Composite",
        className: "ManagedClusterStorageProfileSnapshotController",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ManagedClusterStorageProfileBlobCSIDriver = {
    type: {
        name: "Composite",
        className: "ManagedClusterStorageProfileBlobCSIDriver",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ManagedClusterIngressProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterIngressProfile",
        modelProperties: {
            webAppRouting: {
                serializedName: "webAppRouting",
                type: {
                    name: "Composite",
                    className: "ManagedClusterIngressProfileWebAppRouting",
                },
            },
        },
    },
};
export const ManagedClusterIngressProfileWebAppRouting = {
    type: {
        name: "Composite",
        className: "ManagedClusterIngressProfileWebAppRouting",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean",
                },
            },
            dnsZoneResourceIds: {
                constraints: {
                    MaxItems: 5,
                },
                serializedName: "dnsZoneResourceIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "UserAssignedIdentity",
                },
            },
        },
    },
};
export const ManagedClusterWorkloadAutoScalerProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterWorkloadAutoScalerProfile",
        modelProperties: {
            keda: {
                serializedName: "keda",
                type: {
                    name: "Composite",
                    className: "ManagedClusterWorkloadAutoScalerProfileKeda",
                },
            },
            verticalPodAutoscaler: {
                serializedName: "verticalPodAutoscaler",
                type: {
                    name: "Composite",
                    className: "ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler",
                },
            },
        },
    },
};
export const ManagedClusterWorkloadAutoScalerProfileKeda = {
    type: {
        name: "Composite",
        className: "ManagedClusterWorkloadAutoScalerProfileKeda",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler = {
    type: {
        name: "Composite",
        className: "ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler",
        modelProperties: {
            enabled: {
                defaultValue: false,
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const ManagedClusterAzureMonitorProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterAzureMonitorProfile",
        modelProperties: {
            metrics: {
                serializedName: "metrics",
                type: {
                    name: "Composite",
                    className: "ManagedClusterAzureMonitorProfileMetrics",
                },
            },
        },
    },
};
export const ManagedClusterAzureMonitorProfileMetrics = {
    type: {
        name: "Composite",
        className: "ManagedClusterAzureMonitorProfileMetrics",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            kubeStateMetrics: {
                serializedName: "kubeStateMetrics",
                type: {
                    name: "Composite",
                    className: "ManagedClusterAzureMonitorProfileKubeStateMetrics",
                },
            },
        },
    },
};
export const ManagedClusterAzureMonitorProfileKubeStateMetrics = {
    type: {
        name: "Composite",
        className: "ManagedClusterAzureMonitorProfileKubeStateMetrics",
        modelProperties: {
            metricLabelsAllowlist: {
                serializedName: "metricLabelsAllowlist",
                type: {
                    name: "String",
                },
            },
            metricAnnotationsAllowList: {
                serializedName: "metricAnnotationsAllowList",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ServiceMeshProfile = {
    type: {
        name: "Composite",
        className: "ServiceMeshProfile",
        modelProperties: {
            mode: {
                serializedName: "mode",
                required: true,
                type: {
                    name: "String",
                },
            },
            istio: {
                serializedName: "istio",
                type: {
                    name: "Composite",
                    className: "IstioServiceMesh",
                },
            },
        },
    },
};
export const IstioServiceMesh = {
    type: {
        name: "Composite",
        className: "IstioServiceMesh",
        modelProperties: {
            components: {
                serializedName: "components",
                type: {
                    name: "Composite",
                    className: "IstioComponents",
                },
            },
            certificateAuthority: {
                serializedName: "certificateAuthority",
                type: {
                    name: "Composite",
                    className: "IstioCertificateAuthority",
                },
            },
            revisions: {
                constraints: {
                    MaxItems: 2,
                    UniqueItems: true,
                },
                serializedName: "revisions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const IstioComponents = {
    type: {
        name: "Composite",
        className: "IstioComponents",
        modelProperties: {
            ingressGateways: {
                serializedName: "ingressGateways",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IstioIngressGateway",
                        },
                    },
                },
            },
            egressGateways: {
                serializedName: "egressGateways",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IstioEgressGateway",
                        },
                    },
                },
            },
        },
    },
};
export const IstioIngressGateway = {
    type: {
        name: "Composite",
        className: "IstioIngressGateway",
        modelProperties: {
            mode: {
                serializedName: "mode",
                required: true,
                type: {
                    name: "String",
                },
            },
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const IstioEgressGateway = {
    type: {
        name: "Composite",
        className: "IstioEgressGateway",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            nodeSelector: {
                serializedName: "nodeSelector",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
        },
    },
};
export const IstioCertificateAuthority = {
    type: {
        name: "Composite",
        className: "IstioCertificateAuthority",
        modelProperties: {
            plugin: {
                serializedName: "plugin",
                type: {
                    name: "Composite",
                    className: "IstioPluginCertificateAuthority",
                },
            },
        },
    },
};
export const IstioPluginCertificateAuthority = {
    type: {
        name: "Composite",
        className: "IstioPluginCertificateAuthority",
        modelProperties: {
            keyVaultId: {
                serializedName: "keyVaultId",
                type: {
                    name: "String",
                },
            },
            certObjectName: {
                serializedName: "certObjectName",
                type: {
                    name: "String",
                },
            },
            keyObjectName: {
                serializedName: "keyObjectName",
                type: {
                    name: "String",
                },
            },
            rootCertObjectName: {
                serializedName: "rootCertObjectName",
                type: {
                    name: "String",
                },
            },
            certChainObjectName: {
                serializedName: "certChainObjectName",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData",
                },
            },
        },
    },
};
export const SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String",
                },
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String",
                },
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime",
                },
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String",
                },
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String",
                },
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const ManagedClusterUpgradeProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterUpgradeProfile",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            controlPlaneProfile: {
                serializedName: "properties.controlPlaneProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterPoolUpgradeProfile",
                },
            },
            agentPoolProfiles: {
                serializedName: "properties.agentPoolProfiles",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedClusterPoolUpgradeProfile",
                        },
                    },
                },
            },
        },
    },
};
export const ManagedClusterPoolUpgradeProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterPoolUpgradeProfile",
        modelProperties: {
            kubernetesVersion: {
                serializedName: "kubernetesVersion",
                required: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            osType: {
                defaultValue: "Linux",
                serializedName: "osType",
                required: true,
                type: {
                    name: "String",
                },
            },
            upgrades: {
                serializedName: "upgrades",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedClusterPoolUpgradeProfileUpgradesItem",
                        },
                    },
                },
            },
        },
    },
};
export const ManagedClusterPoolUpgradeProfileUpgradesItem = {
    type: {
        name: "Composite",
        className: "ManagedClusterPoolUpgradeProfileUpgradesItem",
        modelProperties: {
            kubernetesVersion: {
                serializedName: "kubernetesVersion",
                type: {
                    name: "String",
                },
            },
            isPreview: {
                serializedName: "isPreview",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const CredentialResults = {
    type: {
        name: "Composite",
        className: "CredentialResults",
        modelProperties: {
            kubeconfigs: {
                serializedName: "kubeconfigs",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CredentialResult",
                        },
                    },
                },
            },
        },
    },
};
export const CredentialResult = {
    type: {
        name: "Composite",
        className: "CredentialResult",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "ByteArray",
                },
            },
        },
    },
};
export const TagsObject = {
    type: {
        name: "Composite",
        className: "TagsObject",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
        },
    },
};
export const MaintenanceConfigurationListResult = {
    type: {
        name: "Composite",
        className: "MaintenanceConfigurationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaintenanceConfiguration",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const TimeInWeek = {
    type: {
        name: "Composite",
        className: "TimeInWeek",
        modelProperties: {
            day: {
                serializedName: "day",
                type: {
                    name: "String",
                },
            },
            hourSlots: {
                serializedName: "hourSlots",
                type: {
                    name: "Sequence",
                    element: {
                        constraints: {
                            InclusiveMaximum: 23,
                            InclusiveMinimum: 0,
                        },
                        type: {
                            name: "Number",
                        },
                    },
                },
            },
        },
    },
};
export const TimeSpan = {
    type: {
        name: "Composite",
        className: "TimeSpan",
        modelProperties: {
            start: {
                serializedName: "start",
                type: {
                    name: "DateTime",
                },
            },
            end: {
                serializedName: "end",
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
export const MaintenanceWindow = {
    type: {
        name: "Composite",
        className: "MaintenanceWindow",
        modelProperties: {
            schedule: {
                serializedName: "schedule",
                type: {
                    name: "Composite",
                    className: "Schedule",
                },
            },
            durationHours: {
                defaultValue: 24,
                constraints: {
                    InclusiveMaximum: 24,
                    InclusiveMinimum: 4,
                },
                serializedName: "durationHours",
                required: true,
                type: {
                    name: "Number",
                },
            },
            utcOffset: {
                constraints: {
                    Pattern: new RegExp("^(-|\\+)[0-9]{2}:[0-9]{2}$"),
                },
                serializedName: "utcOffset",
                type: {
                    name: "String",
                },
            },
            startDate: {
                serializedName: "startDate",
                type: {
                    name: "Date",
                },
            },
            startTime: {
                constraints: {
                    Pattern: new RegExp("^\\d{2}:\\d{2}$"),
                },
                serializedName: "startTime",
                required: true,
                type: {
                    name: "String",
                },
            },
            notAllowedDates: {
                serializedName: "notAllowedDates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DateSpan",
                        },
                    },
                },
            },
        },
    },
};
export const Schedule = {
    type: {
        name: "Composite",
        className: "Schedule",
        modelProperties: {
            daily: {
                serializedName: "daily",
                type: {
                    name: "Composite",
                    className: "DailySchedule",
                },
            },
            weekly: {
                serializedName: "weekly",
                type: {
                    name: "Composite",
                    className: "WeeklySchedule",
                },
            },
            absoluteMonthly: {
                serializedName: "absoluteMonthly",
                type: {
                    name: "Composite",
                    className: "AbsoluteMonthlySchedule",
                },
            },
            relativeMonthly: {
                serializedName: "relativeMonthly",
                type: {
                    name: "Composite",
                    className: "RelativeMonthlySchedule",
                },
            },
        },
    },
};
export const DailySchedule = {
    type: {
        name: "Composite",
        className: "DailySchedule",
        modelProperties: {
            intervalDays: {
                constraints: {
                    InclusiveMaximum: 7,
                    InclusiveMinimum: 1,
                },
                serializedName: "intervalDays",
                required: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const WeeklySchedule = {
    type: {
        name: "Composite",
        className: "WeeklySchedule",
        modelProperties: {
            intervalWeeks: {
                constraints: {
                    InclusiveMaximum: 4,
                    InclusiveMinimum: 1,
                },
                serializedName: "intervalWeeks",
                required: true,
                type: {
                    name: "Number",
                },
            },
            dayOfWeek: {
                serializedName: "dayOfWeek",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AbsoluteMonthlySchedule = {
    type: {
        name: "Composite",
        className: "AbsoluteMonthlySchedule",
        modelProperties: {
            intervalMonths: {
                constraints: {
                    InclusiveMaximum: 6,
                    InclusiveMinimum: 1,
                },
                serializedName: "intervalMonths",
                required: true,
                type: {
                    name: "Number",
                },
            },
            dayOfMonth: {
                constraints: {
                    InclusiveMaximum: 31,
                    InclusiveMinimum: 1,
                },
                serializedName: "dayOfMonth",
                required: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
export const RelativeMonthlySchedule = {
    type: {
        name: "Composite",
        className: "RelativeMonthlySchedule",
        modelProperties: {
            intervalMonths: {
                constraints: {
                    InclusiveMaximum: 6,
                    InclusiveMinimum: 1,
                },
                serializedName: "intervalMonths",
                required: true,
                type: {
                    name: "Number",
                },
            },
            weekIndex: {
                serializedName: "weekIndex",
                required: true,
                type: {
                    name: "String",
                },
            },
            dayOfWeek: {
                serializedName: "dayOfWeek",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const DateSpan = {
    type: {
        name: "Composite",
        className: "DateSpan",
        modelProperties: {
            start: {
                serializedName: "start",
                required: true,
                type: {
                    name: "Date",
                },
            },
            end: {
                serializedName: "end",
                required: true,
                type: {
                    name: "Date",
                },
            },
        },
    },
};
export const SubResource = {
    type: {
        name: "Composite",
        className: "SubResource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AgentPoolListResult = {
    type: {
        name: "Composite",
        className: "AgentPoolListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AgentPool",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AgentPoolUpgradeProfile = {
    type: {
        name: "Composite",
        className: "AgentPoolUpgradeProfile",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            kubernetesVersion: {
                serializedName: "properties.kubernetesVersion",
                required: true,
                type: {
                    name: "String",
                },
            },
            osType: {
                defaultValue: "Linux",
                serializedName: "properties.osType",
                required: true,
                type: {
                    name: "String",
                },
            },
            upgrades: {
                serializedName: "properties.upgrades",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AgentPoolUpgradeProfilePropertiesUpgradesItem",
                        },
                    },
                },
            },
            latestNodeImageVersion: {
                serializedName: "properties.latestNodeImageVersion",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AgentPoolUpgradeProfilePropertiesUpgradesItem = {
    type: {
        name: "Composite",
        className: "AgentPoolUpgradeProfilePropertiesUpgradesItem",
        modelProperties: {
            kubernetesVersion: {
                serializedName: "kubernetesVersion",
                type: {
                    name: "String",
                },
            },
            isPreview: {
                serializedName: "isPreview",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const AgentPoolAvailableVersions = {
    type: {
        name: "Composite",
        className: "AgentPoolAvailableVersions",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            agentPoolVersions: {
                serializedName: "properties.agentPoolVersions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem",
                        },
                    },
                },
            },
        },
    },
};
export const AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem = {
    type: {
        name: "Composite",
        className: "AgentPoolAvailableVersionsPropertiesAgentPoolVersionsItem",
        modelProperties: {
            default: {
                serializedName: "default",
                type: {
                    name: "Boolean",
                },
            },
            kubernetesVersion: {
                serializedName: "kubernetesVersion",
                type: {
                    name: "String",
                },
            },
            isPreview: {
                serializedName: "isPreview",
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
export const PrivateEndpointConnectionListResult = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection",
                        },
                    },
                },
            },
        },
    },
};
export const PrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnection",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            privateEndpoint: {
                serializedName: "properties.privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpoint",
                },
            },
            privateLinkServiceConnectionState: {
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkServiceConnectionState",
                },
            },
        },
    },
};
export const PrivateEndpoint = {
    type: {
        name: "Composite",
        className: "PrivateEndpoint",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const PrivateLinkServiceConnectionState = {
    type: {
        name: "Composite",
        className: "PrivateLinkServiceConnectionState",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String",
                },
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const PrivateLinkResourcesListResult = {
    type: {
        name: "Composite",
        className: "PrivateLinkResourcesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateLinkResource",
                        },
                    },
                },
            },
        },
    },
};
export const RunCommandRequest = {
    type: {
        name: "Composite",
        className: "RunCommandRequest",
        modelProperties: {
            command: {
                serializedName: "command",
                required: true,
                type: {
                    name: "String",
                },
            },
            context: {
                serializedName: "context",
                type: {
                    name: "String",
                },
            },
            clusterToken: {
                serializedName: "clusterToken",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const RunCommandResult = {
    type: {
        name: "Composite",
        className: "RunCommandResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            exitCode: {
                serializedName: "properties.exitCode",
                readOnly: true,
                type: {
                    name: "Number",
                },
            },
            startedAt: {
                serializedName: "properties.startedAt",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            finishedAt: {
                serializedName: "properties.finishedAt",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            logs: {
                serializedName: "properties.logs",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            reason: {
                serializedName: "properties.reason",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const OutboundEnvironmentEndpointCollection = {
    type: {
        name: "Composite",
        className: "OutboundEnvironmentEndpointCollection",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OutboundEnvironmentEndpoint",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const OutboundEnvironmentEndpoint = {
    type: {
        name: "Composite",
        className: "OutboundEnvironmentEndpoint",
        modelProperties: {
            category: {
                serializedName: "category",
                type: {
                    name: "String",
                },
            },
            endpoints: {
                serializedName: "endpoints",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EndpointDependency",
                        },
                    },
                },
            },
        },
    },
};
export const EndpointDependency = {
    type: {
        name: "Composite",
        className: "EndpointDependency",
        modelProperties: {
            domainName: {
                serializedName: "domainName",
                type: {
                    name: "String",
                },
            },
            endpointDetails: {
                serializedName: "endpointDetails",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EndpointDetail",
                        },
                    },
                },
            },
        },
    },
};
export const EndpointDetail = {
    type: {
        name: "Composite",
        className: "EndpointDetail",
        modelProperties: {
            ipAddress: {
                serializedName: "ipAddress",
                type: {
                    name: "String",
                },
            },
            port: {
                serializedName: "port",
                type: {
                    name: "Number",
                },
            },
            protocol: {
                serializedName: "protocol",
                type: {
                    name: "String",
                },
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const SnapshotListResult = {
    type: {
        name: "Composite",
        className: "SnapshotListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Snapshot",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const MeshRevisionProfileList = {
    type: {
        name: "Composite",
        className: "MeshRevisionProfileList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MeshRevisionProfile",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const MeshRevisionProfileProperties = {
    type: {
        name: "Composite",
        className: "MeshRevisionProfileProperties",
        modelProperties: {
            meshRevisions: {
                serializedName: "meshRevisions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MeshRevision",
                        },
                    },
                },
            },
        },
    },
};
export const MeshRevision = {
    type: {
        name: "Composite",
        className: "MeshRevision",
        modelProperties: {
            revision: {
                serializedName: "revision",
                type: {
                    name: "String",
                },
            },
            upgrades: {
                serializedName: "upgrades",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            compatibleWith: {
                serializedName: "compatibleWith",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CompatibleVersions",
                        },
                    },
                },
            },
        },
    },
};
export const CompatibleVersions = {
    type: {
        name: "Composite",
        className: "CompatibleVersions",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            versions: {
                serializedName: "versions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const MeshUpgradeProfileList = {
    type: {
        name: "Composite",
        className: "MeshUpgradeProfileList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MeshUpgradeProfile",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const TrustedAccessRoleBindingListResult = {
    type: {
        name: "Composite",
        className: "TrustedAccessRoleBindingListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TrustedAccessRoleBinding",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorDetail",
                },
            },
        },
    },
};
export const ErrorDetail = {
    type: {
        name: "Composite",
        className: "ErrorDetail",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorDetail",
                        },
                    },
                },
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo",
                        },
                    },
                },
            },
        },
    },
};
export const ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } },
                },
            },
        },
    },
};
export const TrustedAccessRoleListResult = {
    type: {
        name: "Composite",
        className: "TrustedAccessRoleListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TrustedAccessRole",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const TrustedAccessRole = {
    type: {
        name: "Composite",
        className: "TrustedAccessRole",
        modelProperties: {
            sourceResourceType: {
                serializedName: "sourceResourceType",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            rules: {
                serializedName: "rules",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TrustedAccessRoleRule",
                        },
                    },
                },
            },
        },
    },
};
export const TrustedAccessRoleRule = {
    type: {
        name: "Composite",
        className: "TrustedAccessRoleRule",
        modelProperties: {
            verbs: {
                serializedName: "verbs",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            apiGroups: {
                serializedName: "apiGroups",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            resources: {
                serializedName: "resources",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            resourceNames: {
                serializedName: "resourceNames",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            nonResourceURLs: {
                serializedName: "nonResourceURLs",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
export const ManagedClusterAgentPoolProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterAgentPoolProfile",
        modelProperties: Object.assign(Object.assign({}, ManagedClusterAgentPoolProfileProperties.type.modelProperties), { name: {
                constraints: {
                    Pattern: new RegExp("^[a-z][a-z0-9]{0,11}$"),
                },
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            } }),
    },
};
export const ManagedClusterAddonProfileIdentity = {
    type: {
        name: "Composite",
        className: "ManagedClusterAddonProfileIdentity",
        modelProperties: Object.assign({}, UserAssignedIdentity.type.modelProperties),
    },
};
export const TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String",
                },
            } }),
    },
};
export const ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: Object.assign({}, Resource.type.modelProperties),
    },
};
export const TrustedAccessRoleBinding = {
    type: {
        name: "Composite",
        className: "TrustedAccessRoleBinding",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, sourceResourceId: {
                serializedName: "properties.sourceResourceId",
                required: true,
                type: {
                    name: "String",
                },
            }, roles: {
                serializedName: "properties.roles",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            } }),
    },
};
export const MaintenanceConfiguration = {
    type: {
        name: "Composite",
        className: "MaintenanceConfiguration",
        modelProperties: Object.assign(Object.assign({}, SubResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData",
                },
            }, timeInWeek: {
                serializedName: "properties.timeInWeek",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TimeInWeek",
                        },
                    },
                },
            }, notAllowedTime: {
                serializedName: "properties.notAllowedTime",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TimeSpan",
                        },
                    },
                },
            }, maintenanceWindow: {
                serializedName: "properties.maintenanceWindow",
                type: {
                    name: "Composite",
                    className: "MaintenanceWindow",
                },
            } }),
    },
};
export const AgentPool = {
    type: {
        name: "Composite",
        className: "AgentPool",
        modelProperties: Object.assign(Object.assign({}, SubResource.type.modelProperties), { count: {
                serializedName: "properties.count",
                type: {
                    name: "Number",
                },
            }, vmSize: {
                serializedName: "properties.vmSize",
                type: {
                    name: "String",
                },
            }, osDiskSizeGB: {
                constraints: {
                    InclusiveMaximum: 2048,
                    InclusiveMinimum: 0,
                },
                serializedName: "properties.osDiskSizeGB",
                type: {
                    name: "Number",
                },
            }, osDiskType: {
                serializedName: "properties.osDiskType",
                type: {
                    name: "String",
                },
            }, kubeletDiskType: {
                serializedName: "properties.kubeletDiskType",
                type: {
                    name: "String",
                },
            }, workloadRuntime: {
                serializedName: "properties.workloadRuntime",
                type: {
                    name: "String",
                },
            }, vnetSubnetID: {
                serializedName: "properties.vnetSubnetID",
                type: {
                    name: "String",
                },
            }, podSubnetID: {
                serializedName: "properties.podSubnetID",
                type: {
                    name: "String",
                },
            }, maxPods: {
                serializedName: "properties.maxPods",
                type: {
                    name: "Number",
                },
            }, osType: {
                defaultValue: "Linux",
                serializedName: "properties.osType",
                type: {
                    name: "String",
                },
            }, osSKU: {
                serializedName: "properties.osSKU",
                type: {
                    name: "String",
                },
            }, maxCount: {
                serializedName: "properties.maxCount",
                type: {
                    name: "Number",
                },
            }, minCount: {
                serializedName: "properties.minCount",
                type: {
                    name: "Number",
                },
            }, enableAutoScaling: {
                serializedName: "properties.enableAutoScaling",
                type: {
                    name: "Boolean",
                },
            }, scaleDownMode: {
                serializedName: "properties.scaleDownMode",
                type: {
                    name: "String",
                },
            }, typePropertiesType: {
                serializedName: "properties.type",
                type: {
                    name: "String",
                },
            }, mode: {
                serializedName: "properties.mode",
                type: {
                    name: "String",
                },
            }, orchestratorVersion: {
                serializedName: "properties.orchestratorVersion",
                type: {
                    name: "String",
                },
            }, currentOrchestratorVersion: {
                serializedName: "properties.currentOrchestratorVersion",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, nodeImageVersion: {
                serializedName: "properties.nodeImageVersion",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, upgradeSettings: {
                serializedName: "properties.upgradeSettings",
                type: {
                    name: "Composite",
                    className: "AgentPoolUpgradeSettings",
                },
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, powerState: {
                serializedName: "properties.powerState",
                type: {
                    name: "Composite",
                    className: "PowerState",
                },
            }, availabilityZones: {
                serializedName: "properties.availabilityZones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            }, enableNodePublicIP: {
                serializedName: "properties.enableNodePublicIP",
                type: {
                    name: "Boolean",
                },
            }, nodePublicIPPrefixID: {
                serializedName: "properties.nodePublicIPPrefixID",
                type: {
                    name: "String",
                },
            }, scaleSetPriority: {
                defaultValue: "Regular",
                serializedName: "properties.scaleSetPriority",
                type: {
                    name: "String",
                },
            }, scaleSetEvictionPolicy: {
                defaultValue: "Delete",
                serializedName: "properties.scaleSetEvictionPolicy",
                type: {
                    name: "String",
                },
            }, spotMaxPrice: {
                defaultValue: -1,
                serializedName: "properties.spotMaxPrice",
                type: {
                    name: "Number",
                },
            }, tags: {
                serializedName: "properties.tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            }, nodeLabels: {
                serializedName: "properties.nodeLabels",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            }, nodeTaints: {
                serializedName: "properties.nodeTaints",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            }, proximityPlacementGroupID: {
                serializedName: "properties.proximityPlacementGroupID",
                type: {
                    name: "String",
                },
            }, kubeletConfig: {
                serializedName: "properties.kubeletConfig",
                type: {
                    name: "Composite",
                    className: "KubeletConfig",
                },
            }, linuxOSConfig: {
                serializedName: "properties.linuxOSConfig",
                type: {
                    name: "Composite",
                    className: "LinuxOSConfig",
                },
            }, enableEncryptionAtHost: {
                serializedName: "properties.enableEncryptionAtHost",
                type: {
                    name: "Boolean",
                },
            }, enableUltraSSD: {
                serializedName: "properties.enableUltraSSD",
                type: {
                    name: "Boolean",
                },
            }, enableFips: {
                serializedName: "properties.enableFIPS",
                type: {
                    name: "Boolean",
                },
            }, gpuInstanceProfile: {
                serializedName: "properties.gpuInstanceProfile",
                type: {
                    name: "String",
                },
            }, creationData: {
                serializedName: "properties.creationData",
                type: {
                    name: "Composite",
                    className: "CreationData",
                },
            }, capacityReservationGroupID: {
                serializedName: "properties.capacityReservationGroupID",
                type: {
                    name: "String",
                },
            }, hostGroupID: {
                serializedName: "properties.hostGroupID",
                type: {
                    name: "String",
                },
            }, networkProfile: {
                serializedName: "properties.networkProfile",
                type: {
                    name: "Composite",
                    className: "AgentPoolNetworkProfile",
                },
            } }),
    },
};
export const MeshUpgradeProfileProperties = {
    type: {
        name: "Composite",
        className: "MeshUpgradeProfileProperties",
        modelProperties: Object.assign({}, MeshRevision.type.modelProperties),
    },
};
export const ManagedCluster = {
    type: {
        name: "Composite",
        className: "ManagedCluster",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "ManagedClusterSKU",
                },
            }, extendedLocation: {
                serializedName: "extendedLocation",
                type: {
                    name: "Composite",
                    className: "ExtendedLocation",
                },
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedClusterIdentity",
                },
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, powerState: {
                serializedName: "properties.powerState",
                type: {
                    name: "Composite",
                    className: "PowerState",
                },
            }, maxAgentPools: {
                serializedName: "properties.maxAgentPools",
                readOnly: true,
                type: {
                    name: "Number",
                },
            }, kubernetesVersion: {
                serializedName: "properties.kubernetesVersion",
                type: {
                    name: "String",
                },
            }, currentKubernetesVersion: {
                serializedName: "properties.currentKubernetesVersion",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, dnsPrefix: {
                serializedName: "properties.dnsPrefix",
                type: {
                    name: "String",
                },
            }, fqdnSubdomain: {
                serializedName: "properties.fqdnSubdomain",
                type: {
                    name: "String",
                },
            }, fqdn: {
                serializedName: "properties.fqdn",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, privateFqdn: {
                serializedName: "properties.privateFQDN",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, azurePortalFqdn: {
                serializedName: "properties.azurePortalFQDN",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, agentPoolProfiles: {
                serializedName: "properties.agentPoolProfiles",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedClusterAgentPoolProfile",
                        },
                    },
                },
            }, linuxProfile: {
                serializedName: "properties.linuxProfile",
                type: {
                    name: "Composite",
                    className: "ContainerServiceLinuxProfile",
                },
            }, windowsProfile: {
                serializedName: "properties.windowsProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterWindowsProfile",
                },
            }, servicePrincipalProfile: {
                serializedName: "properties.servicePrincipalProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterServicePrincipalProfile",
                },
            }, addonProfiles: {
                serializedName: "properties.addonProfiles",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "ManagedClusterAddonProfile",
                        },
                    },
                },
            }, podIdentityProfile: {
                serializedName: "properties.podIdentityProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterPodIdentityProfile",
                },
            }, oidcIssuerProfile: {
                serializedName: "properties.oidcIssuerProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterOidcIssuerProfile",
                },
            }, nodeResourceGroup: {
                serializedName: "properties.nodeResourceGroup",
                type: {
                    name: "String",
                },
            }, enableRbac: {
                serializedName: "properties.enableRBAC",
                type: {
                    name: "Boolean",
                },
            }, supportPlan: {
                serializedName: "properties.supportPlan",
                type: {
                    name: "String",
                },
            }, enablePodSecurityPolicy: {
                serializedName: "properties.enablePodSecurityPolicy",
                type: {
                    name: "Boolean",
                },
            }, networkProfile: {
                serializedName: "properties.networkProfile",
                type: {
                    name: "Composite",
                    className: "ContainerServiceNetworkProfile",
                },
            }, aadProfile: {
                serializedName: "properties.aadProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterAADProfile",
                },
            }, autoUpgradeProfile: {
                serializedName: "properties.autoUpgradeProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterAutoUpgradeProfile",
                },
            }, upgradeSettings: {
                serializedName: "properties.upgradeSettings",
                type: {
                    name: "Composite",
                    className: "ClusterUpgradeSettings",
                },
            }, autoScalerProfile: {
                serializedName: "properties.autoScalerProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterPropertiesAutoScalerProfile",
                },
            }, apiServerAccessProfile: {
                serializedName: "properties.apiServerAccessProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterAPIServerAccessProfile",
                },
            }, diskEncryptionSetID: {
                serializedName: "properties.diskEncryptionSetID",
                type: {
                    name: "String",
                },
            }, identityProfile: {
                serializedName: "properties.identityProfile",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "UserAssignedIdentity" },
                    },
                },
            }, privateLinkResources: {
                serializedName: "properties.privateLinkResources",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateLinkResource",
                        },
                    },
                },
            }, disableLocalAccounts: {
                serializedName: "properties.disableLocalAccounts",
                type: {
                    name: "Boolean",
                },
            }, httpProxyConfig: {
                serializedName: "properties.httpProxyConfig",
                type: {
                    name: "Composite",
                    className: "ManagedClusterHttpProxyConfig",
                },
            }, securityProfile: {
                serializedName: "properties.securityProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterSecurityProfile",
                },
            }, storageProfile: {
                serializedName: "properties.storageProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterStorageProfile",
                },
            }, ingressProfile: {
                serializedName: "properties.ingressProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterIngressProfile",
                },
            }, publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String",
                },
            }, workloadAutoScalerProfile: {
                serializedName: "properties.workloadAutoScalerProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterWorkloadAutoScalerProfile",
                },
            }, azureMonitorProfile: {
                serializedName: "properties.azureMonitorProfile",
                type: {
                    name: "Composite",
                    className: "ManagedClusterAzureMonitorProfile",
                },
            }, serviceMeshProfile: {
                serializedName: "properties.serviceMeshProfile",
                type: {
                    name: "Composite",
                    className: "ServiceMeshProfile",
                },
            }, resourceUID: {
                serializedName: "properties.resourceUID",
                readOnly: true,
                type: {
                    name: "String",
                },
            } }),
    },
};
export const ManagedClusterAccessProfile = {
    type: {
        name: "Composite",
        className: "ManagedClusterAccessProfile",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { kubeConfig: {
                serializedName: "properties.kubeConfig",
                type: {
                    name: "ByteArray",
                },
            } }),
    },
};
export const Snapshot = {
    type: {
        name: "Composite",
        className: "Snapshot",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { creationData: {
                serializedName: "properties.creationData",
                type: {
                    name: "Composite",
                    className: "CreationData",
                },
            }, snapshotType: {
                defaultValue: "NodePool",
                serializedName: "properties.snapshotType",
                type: {
                    name: "String",
                },
            }, kubernetesVersion: {
                serializedName: "properties.kubernetesVersion",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, nodeImageVersion: {
                serializedName: "properties.nodeImageVersion",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, osType: {
                defaultValue: "Linux",
                serializedName: "properties.osType",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, osSku: {
                serializedName: "properties.osSku",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, vmSize: {
                serializedName: "properties.vmSize",
                readOnly: true,
                type: {
                    name: "String",
                },
            }, enableFips: {
                serializedName: "properties.enableFIPS",
                readOnly: true,
                type: {
                    name: "Boolean",
                },
            } }),
    },
};
export const MeshRevisionProfile = {
    type: {
        name: "Composite",
        className: "MeshRevisionProfile",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "MeshRevisionProfileProperties",
                },
            } }),
    },
};
export const MeshUpgradeProfile = {
    type: {
        name: "Composite",
        className: "MeshUpgradeProfile",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "MeshUpgradeProfileProperties",
                },
            } }),
    },
};
export const ManagedClustersDeleteHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClustersResetServicePrincipalProfileHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersResetServicePrincipalProfileHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClustersResetAADProfileHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersResetAADProfileHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClustersRotateClusterCertificatesHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersRotateClusterCertificatesHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClustersAbortLatestOperationHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersAbortLatestOperationHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClustersRotateServiceAccountSigningKeysHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersRotateServiceAccountSigningKeysHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClustersStopHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersStopHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClustersStartHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersStartHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClustersRunCommandHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersRunCommandHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const ManagedClustersGetCommandResultHeaders = {
    type: {
        name: "Composite",
        className: "ManagedClustersGetCommandResultHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AgentPoolsAbortLatestOperationHeaders = {
    type: {
        name: "Composite",
        className: "AgentPoolsAbortLatestOperationHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AgentPoolsDeleteHeaders = {
    type: {
        name: "Composite",
        className: "AgentPoolsDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const AgentPoolsUpgradeNodeImageVersionHeaders = {
    type: {
        name: "Composite",
        className: "AgentPoolsUpgradeNodeImageVersionHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String",
                },
            },
        },
    },
};
export const TrustedAccessRoleBindingsDeleteHeaders = {
    type: {
        name: "Composite",
        className: "TrustedAccessRoleBindingsDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
//# sourceMappingURL=mappers.js.map