import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { MaintenanceConfigurations } from "../operationsInterfaces";
import { ContainerServiceClient } from "../containerServiceClient";
import { MaintenanceConfiguration, MaintenanceConfigurationsListByManagedClusterOptionalParams, MaintenanceConfigurationsGetOptionalParams, MaintenanceConfigurationsGetResponse, MaintenanceConfigurationsCreateOrUpdateOptionalParams, MaintenanceConfigurationsCreateOrUpdateResponse, MaintenanceConfigurationsDeleteOptionalParams } from "../models";
/** Class containing MaintenanceConfigurations operations. */
export declare class MaintenanceConfigurationsImpl implements MaintenanceConfigurations {
    private readonly client;
    /**
     * Initialize a new instance of the class MaintenanceConfigurations class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerServiceClient);
    /**
     * Gets a list of maintenance configurations in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    listByManagedCluster(resourceGroupName: string, resourceName: string, options?: MaintenanceConfigurationsListByManagedClusterOptionalParams): PagedAsyncIterableIterator<MaintenanceConfiguration>;
    private listByManagedClusterPagingPage;
    private listByManagedClusterPagingAll;
    /**
     * Gets a list of maintenance configurations in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param options The options parameters.
     */
    private _listByManagedCluster;
    /**
     * Gets the specified maintenance configuration of a managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param configName The name of the maintenance configuration.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, configName: string, options?: MaintenanceConfigurationsGetOptionalParams): Promise<MaintenanceConfigurationsGetResponse>;
    /**
     * Creates or updates a maintenance configuration in the specified managed cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param configName The name of the maintenance configuration.
     * @param parameters The maintenance configuration to create or update.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, configName: string, parameters: MaintenanceConfiguration, options?: MaintenanceConfigurationsCreateOrUpdateOptionalParams): Promise<MaintenanceConfigurationsCreateOrUpdateResponse>;
    /**
     * Deletes a maintenance configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param configName The name of the maintenance configuration.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceName: string, configName: string, options?: MaintenanceConfigurationsDeleteOptionalParams): Promise<void>;
    /**
     * ListByManagedClusterNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the managed cluster resource.
     * @param nextLink The nextLink from the previous successful call to the ListByManagedCluster method.
     * @param options The options parameters.
     */
    private _listByManagedClusterNext;
}
//# sourceMappingURL=maintenanceConfigurations.d.ts.map