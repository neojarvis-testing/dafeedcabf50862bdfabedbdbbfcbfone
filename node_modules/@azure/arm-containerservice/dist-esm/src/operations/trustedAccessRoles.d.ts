import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { TrustedAccessRoles } from "../operationsInterfaces";
import { ContainerServiceClient } from "../containerServiceClient";
import { TrustedAccessRole, TrustedAccessRolesListOptionalParams } from "../models";
/** Class containing TrustedAccessRoles operations. */
export declare class TrustedAccessRolesImpl implements TrustedAccessRoles {
    private readonly client;
    /**
     * Initialize a new instance of the class TrustedAccessRoles class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerServiceClient);
    /**
     * List supported trusted access roles.
     * @param location The name of the Azure region.
     * @param options The options parameters.
     */
    list(location: string, options?: TrustedAccessRolesListOptionalParams): PagedAsyncIterableIterator<TrustedAccessRole>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List supported trusted access roles.
     * @param location The name of the Azure region.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param location The name of the Azure region.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=trustedAccessRoles.d.ts.map