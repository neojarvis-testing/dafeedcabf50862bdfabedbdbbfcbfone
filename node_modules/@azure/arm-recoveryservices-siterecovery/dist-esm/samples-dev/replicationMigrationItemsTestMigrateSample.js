/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SiteRecoveryManagementClient, } from "@azure/arm-recoveryservices-siterecovery";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to The operation to initiate test migration of the item.
 *
 * @summary The operation to initiate test migration of the item.
 * x-ms-original-file: specification/recoveryservicessiterecovery/resource-manager/Microsoft.RecoveryServices/stable/2023-08-01/examples/ReplicationMigrationItems_TestMigrate.json
 */
function testMigrateItem() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["RECOVERYSERVICESSITERECOVERY_SUBSCRIPTION_ID"] ||
            "cb53d0c3-bd59-4721-89bc-06916a9147ef";
        const resourceName = "migrationvault";
        const resourceGroupName = process.env["RECOVERYSERVICESSITERECOVERY_RESOURCE_GROUP"] ||
            "resourcegroup1";
        const fabricName = "vmwarefabric1";
        const protectionContainerName = "vmwareContainer1";
        const migrationItemName = "virtualmachine1";
        const testMigrateInput = {
            properties: {
                providerSpecificDetails: {
                    instanceType: "VMwareCbt",
                    networkId: "/Subscriptions/cb53d0c3-bd59-4721-89bc-06916a9147ef/resourceGroups/resourcegroup1/providers/Microsoft.Network/virtualNetworks/virtualNetwork1",
                    recoveryPointId: "/Subscriptions/cb53d0c3-bd59-4721-89bc-06916a9147ef/resourceGroups/resourcegroup1/providers/Microsoft.RecoveryServices/vaults/migrationvault/replicationFabrics/vmwarefabric1/replicationProtectionContainers/vmwareContainer1/replicationMigrationItems/virtualmachine1/migrationRecoveryPoints/9e737191-317e-43d0-8c83-e32ac3b34686",
                },
            },
        };
        const credential = new DefaultAzureCredential();
        const client = new SiteRecoveryManagementClient(credential, subscriptionId);
        const result = yield client.replicationMigrationItems.beginTestMigrateAndWait(resourceName, resourceGroupName, fabricName, protectionContainerName, migrationItemName, testMigrateInput);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        testMigrateItem();
    });
}
main().catch(console.error);
//# sourceMappingURL=replicationMigrationItemsTestMigrateSample.js.map