import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ReplicationvCenters } from "../operationsInterfaces";
import { SiteRecoveryManagementClient } from "../siteRecoveryManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { VCenter, ReplicationvCentersListByReplicationFabricsOptionalParams, ReplicationvCentersListOptionalParams, ReplicationvCentersGetOptionalParams, ReplicationvCentersGetResponse, AddVCenterRequest, ReplicationvCentersCreateOptionalParams, ReplicationvCentersCreateResponse, ReplicationvCentersDeleteOptionalParams, UpdateVCenterRequest, ReplicationvCentersUpdateOptionalParams, ReplicationvCentersUpdateResponse } from "../models";
/** Class containing ReplicationvCenters operations. */
export declare class ReplicationvCentersImpl implements ReplicationvCenters {
    private readonly client;
    /**
     * Initialize a new instance of the class ReplicationvCenters class.
     * @param client Reference to the service client
     */
    constructor(client: SiteRecoveryManagementClient);
    /**
     * Lists the vCenter servers registered in a fabric.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param options The options parameters.
     */
    listByReplicationFabrics(resourceName: string, resourceGroupName: string, fabricName: string, options?: ReplicationvCentersListByReplicationFabricsOptionalParams): PagedAsyncIterableIterator<VCenter>;
    private listByReplicationFabricsPagingPage;
    private listByReplicationFabricsPagingAll;
    /**
     * Lists the vCenter servers registered in the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(resourceName: string, resourceGroupName: string, options?: ReplicationvCentersListOptionalParams): PagedAsyncIterableIterator<VCenter>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the vCenter servers registered in a fabric.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param options The options parameters.
     */
    private _listByReplicationFabrics;
    /**
     * Gets the details of a registered vCenter server(Add vCenter server).
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param vcenterName vcenter name.
     * @param options The options parameters.
     */
    get(resourceName: string, resourceGroupName: string, fabricName: string, vcenterName: string, options?: ReplicationvCentersGetOptionalParams): Promise<ReplicationvCentersGetResponse>;
    /**
     * The operation to create a vCenter object..
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param vcenterName vcenter name.
     * @param addVCenterRequest The input to the add vCenter operation.
     * @param options The options parameters.
     */
    beginCreate(resourceName: string, resourceGroupName: string, fabricName: string, vcenterName: string, addVCenterRequest: AddVCenterRequest, options?: ReplicationvCentersCreateOptionalParams): Promise<SimplePollerLike<OperationState<ReplicationvCentersCreateResponse>, ReplicationvCentersCreateResponse>>;
    /**
     * The operation to create a vCenter object..
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param vcenterName vcenter name.
     * @param addVCenterRequest The input to the add vCenter operation.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceName: string, resourceGroupName: string, fabricName: string, vcenterName: string, addVCenterRequest: AddVCenterRequest, options?: ReplicationvCentersCreateOptionalParams): Promise<ReplicationvCentersCreateResponse>;
    /**
     * The operation to remove(unregister) a registered vCenter server from the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param vcenterName vcenter name.
     * @param options The options parameters.
     */
    beginDelete(resourceName: string, resourceGroupName: string, fabricName: string, vcenterName: string, options?: ReplicationvCentersDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * The operation to remove(unregister) a registered vCenter server from the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param vcenterName vcenter name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceName: string, resourceGroupName: string, fabricName: string, vcenterName: string, options?: ReplicationvCentersDeleteOptionalParams): Promise<void>;
    /**
     * The operation to update a registered vCenter.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param vcenterName vcenter name.
     * @param updateVCenterRequest The input to the update vCenter operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceName: string, resourceGroupName: string, fabricName: string, vcenterName: string, updateVCenterRequest: UpdateVCenterRequest, options?: ReplicationvCentersUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ReplicationvCentersUpdateResponse>, ReplicationvCentersUpdateResponse>>;
    /**
     * The operation to update a registered vCenter.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param vcenterName vcenter name.
     * @param updateVCenterRequest The input to the update vCenter operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceName: string, resourceGroupName: string, fabricName: string, vcenterName: string, updateVCenterRequest: UpdateVCenterRequest, options?: ReplicationvCentersUpdateOptionalParams): Promise<ReplicationvCentersUpdateResponse>;
    /**
     * Lists the vCenter servers registered in the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListByReplicationFabricsNext
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param nextLink The nextLink from the previous successful call to the ListByReplicationFabrics
     *                 method.
     * @param options The options parameters.
     */
    private _listByReplicationFabricsNext;
    /**
     * ListNext
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=replicationvCenters.d.ts.map