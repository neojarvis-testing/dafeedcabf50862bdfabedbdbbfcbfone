import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ReplicationPolicies } from "../operationsInterfaces";
import { SiteRecoveryManagementClient } from "../siteRecoveryManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { Policy, ReplicationPoliciesListOptionalParams, ReplicationPoliciesGetOptionalParams, ReplicationPoliciesGetResponse, CreatePolicyInput, ReplicationPoliciesCreateOptionalParams, ReplicationPoliciesCreateResponse, ReplicationPoliciesDeleteOptionalParams, UpdatePolicyInput, ReplicationPoliciesUpdateOptionalParams, ReplicationPoliciesUpdateResponse } from "../models";
/** Class containing ReplicationPolicies operations. */
export declare class ReplicationPoliciesImpl implements ReplicationPolicies {
    private readonly client;
    /**
     * Initialize a new instance of the class ReplicationPolicies class.
     * @param client Reference to the service client
     */
    constructor(client: SiteRecoveryManagementClient);
    /**
     * Lists the replication policies for a vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(resourceName: string, resourceGroupName: string, options?: ReplicationPoliciesListOptionalParams): PagedAsyncIterableIterator<Policy>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the replication policies for a vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets the details of a replication policy.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Replication policy name.
     * @param options The options parameters.
     */
    get(resourceName: string, resourceGroupName: string, policyName: string, options?: ReplicationPoliciesGetOptionalParams): Promise<ReplicationPoliciesGetResponse>;
    /**
     * The operation to create a replication policy.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Replication policy name.
     * @param input Create policy input.
     * @param options The options parameters.
     */
    beginCreate(resourceName: string, resourceGroupName: string, policyName: string, input: CreatePolicyInput, options?: ReplicationPoliciesCreateOptionalParams): Promise<SimplePollerLike<OperationState<ReplicationPoliciesCreateResponse>, ReplicationPoliciesCreateResponse>>;
    /**
     * The operation to create a replication policy.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Replication policy name.
     * @param input Create policy input.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceName: string, resourceGroupName: string, policyName: string, input: CreatePolicyInput, options?: ReplicationPoliciesCreateOptionalParams): Promise<ReplicationPoliciesCreateResponse>;
    /**
     * The operation to delete a replication policy.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Replication policy name.
     * @param options The options parameters.
     */
    beginDelete(resourceName: string, resourceGroupName: string, policyName: string, options?: ReplicationPoliciesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * The operation to delete a replication policy.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Replication policy name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceName: string, resourceGroupName: string, policyName: string, options?: ReplicationPoliciesDeleteOptionalParams): Promise<void>;
    /**
     * The operation to update a replication policy.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Policy Id.
     * @param input Update Policy Input.
     * @param options The options parameters.
     */
    beginUpdate(resourceName: string, resourceGroupName: string, policyName: string, input: UpdatePolicyInput, options?: ReplicationPoliciesUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ReplicationPoliciesUpdateResponse>, ReplicationPoliciesUpdateResponse>>;
    /**
     * The operation to update a replication policy.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Policy Id.
     * @param input Update Policy Input.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceName: string, resourceGroupName: string, policyName: string, input: UpdatePolicyInput, options?: ReplicationPoliciesUpdateOptionalParams): Promise<ReplicationPoliciesUpdateResponse>;
    /**
     * ListNext
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=replicationPolicies.d.ts.map