import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ReplicationRecoveryServicesProviders } from "../operationsInterfaces";
import { SiteRecoveryManagementClient } from "../siteRecoveryManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { RecoveryServicesProvider, ReplicationRecoveryServicesProvidersListByReplicationFabricsOptionalParams, ReplicationRecoveryServicesProvidersListOptionalParams, ReplicationRecoveryServicesProvidersGetOptionalParams, ReplicationRecoveryServicesProvidersGetResponse, AddRecoveryServicesProviderInput, ReplicationRecoveryServicesProvidersCreateOptionalParams, ReplicationRecoveryServicesProvidersCreateResponse, ReplicationRecoveryServicesProvidersPurgeOptionalParams, ReplicationRecoveryServicesProvidersRefreshProviderOptionalParams, ReplicationRecoveryServicesProvidersRefreshProviderResponse, ReplicationRecoveryServicesProvidersDeleteOptionalParams } from "../models";
/** Class containing ReplicationRecoveryServicesProviders operations. */
export declare class ReplicationRecoveryServicesProvidersImpl implements ReplicationRecoveryServicesProviders {
    private readonly client;
    /**
     * Initialize a new instance of the class ReplicationRecoveryServicesProviders class.
     * @param client Reference to the service client
     */
    constructor(client: SiteRecoveryManagementClient);
    /**
     * Lists the registered recovery services providers for the specified fabric.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param options The options parameters.
     */
    listByReplicationFabrics(resourceName: string, resourceGroupName: string, fabricName: string, options?: ReplicationRecoveryServicesProvidersListByReplicationFabricsOptionalParams): PagedAsyncIterableIterator<RecoveryServicesProvider>;
    private listByReplicationFabricsPagingPage;
    private listByReplicationFabricsPagingAll;
    /**
     * Lists the registered recovery services providers in the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(resourceName: string, resourceGroupName: string, options?: ReplicationRecoveryServicesProvidersListOptionalParams): PagedAsyncIterableIterator<RecoveryServicesProvider>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the registered recovery services providers for the specified fabric.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param options The options parameters.
     */
    private _listByReplicationFabrics;
    /**
     * Gets the details of registered recovery services provider.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param providerName Recovery services provider name.
     * @param options The options parameters.
     */
    get(resourceName: string, resourceGroupName: string, fabricName: string, providerName: string, options?: ReplicationRecoveryServicesProvidersGetOptionalParams): Promise<ReplicationRecoveryServicesProvidersGetResponse>;
    /**
     * The operation to add a recovery services provider.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param providerName Recovery services provider name.
     * @param addProviderInput Add provider input.
     * @param options The options parameters.
     */
    beginCreate(resourceName: string, resourceGroupName: string, fabricName: string, providerName: string, addProviderInput: AddRecoveryServicesProviderInput, options?: ReplicationRecoveryServicesProvidersCreateOptionalParams): Promise<SimplePollerLike<OperationState<ReplicationRecoveryServicesProvidersCreateResponse>, ReplicationRecoveryServicesProvidersCreateResponse>>;
    /**
     * The operation to add a recovery services provider.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param providerName Recovery services provider name.
     * @param addProviderInput Add provider input.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceName: string, resourceGroupName: string, fabricName: string, providerName: string, addProviderInput: AddRecoveryServicesProviderInput, options?: ReplicationRecoveryServicesProvidersCreateOptionalParams): Promise<ReplicationRecoveryServicesProvidersCreateResponse>;
    /**
     * The operation to purge(force delete) a recovery services provider from the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param providerName Recovery services provider name.
     * @param options The options parameters.
     */
    beginPurge(resourceName: string, resourceGroupName: string, fabricName: string, providerName: string, options?: ReplicationRecoveryServicesProvidersPurgeOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * The operation to purge(force delete) a recovery services provider from the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param providerName Recovery services provider name.
     * @param options The options parameters.
     */
    beginPurgeAndWait(resourceName: string, resourceGroupName: string, fabricName: string, providerName: string, options?: ReplicationRecoveryServicesProvidersPurgeOptionalParams): Promise<void>;
    /**
     * The operation to refresh the information from the recovery services provider.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param providerName Recovery services provider name.
     * @param options The options parameters.
     */
    beginRefreshProvider(resourceName: string, resourceGroupName: string, fabricName: string, providerName: string, options?: ReplicationRecoveryServicesProvidersRefreshProviderOptionalParams): Promise<SimplePollerLike<OperationState<ReplicationRecoveryServicesProvidersRefreshProviderResponse>, ReplicationRecoveryServicesProvidersRefreshProviderResponse>>;
    /**
     * The operation to refresh the information from the recovery services provider.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param providerName Recovery services provider name.
     * @param options The options parameters.
     */
    beginRefreshProviderAndWait(resourceName: string, resourceGroupName: string, fabricName: string, providerName: string, options?: ReplicationRecoveryServicesProvidersRefreshProviderOptionalParams): Promise<ReplicationRecoveryServicesProvidersRefreshProviderResponse>;
    /**
     * The operation to removes/delete(unregister) a recovery services provider from the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param providerName Recovery services provider name.
     * @param options The options parameters.
     */
    beginDelete(resourceName: string, resourceGroupName: string, fabricName: string, providerName: string, options?: ReplicationRecoveryServicesProvidersDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * The operation to removes/delete(unregister) a recovery services provider from the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param providerName Recovery services provider name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceName: string, resourceGroupName: string, fabricName: string, providerName: string, options?: ReplicationRecoveryServicesProvidersDeleteOptionalParams): Promise<void>;
    /**
     * Lists the registered recovery services providers in the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListByReplicationFabricsNext
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param nextLink The nextLink from the previous successful call to the ListByReplicationFabrics
     *                 method.
     * @param options The options parameters.
     */
    private _listByReplicationFabricsNext;
    /**
     * ListNext
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=replicationRecoveryServicesProviders.d.ts.map