import { ReplicationVaultHealth } from "../operationsInterfaces";
import { SiteRecoveryManagementClient } from "../siteRecoveryManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { ReplicationVaultHealthGetOptionalParams, ReplicationVaultHealthGetResponse, ReplicationVaultHealthRefreshOptionalParams, ReplicationVaultHealthRefreshResponse } from "../models";
/** Class containing ReplicationVaultHealth operations. */
export declare class ReplicationVaultHealthImpl implements ReplicationVaultHealth {
    private readonly client;
    /**
     * Initialize a new instance of the class ReplicationVaultHealth class.
     * @param client Reference to the service client
     */
    constructor(client: SiteRecoveryManagementClient);
    /**
     * Gets the health details of the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    get(resourceName: string, resourceGroupName: string, options?: ReplicationVaultHealthGetOptionalParams): Promise<ReplicationVaultHealthGetResponse>;
    /**
     * Refreshes health summary of the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    beginRefresh(resourceName: string, resourceGroupName: string, options?: ReplicationVaultHealthRefreshOptionalParams): Promise<SimplePollerLike<OperationState<ReplicationVaultHealthRefreshResponse>, ReplicationVaultHealthRefreshResponse>>;
    /**
     * Refreshes health summary of the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    beginRefreshAndWait(resourceName: string, resourceGroupName: string, options?: ReplicationVaultHealthRefreshOptionalParams): Promise<ReplicationVaultHealthRefreshResponse>;
}
//# sourceMappingURL=replicationVaultHealth.d.ts.map