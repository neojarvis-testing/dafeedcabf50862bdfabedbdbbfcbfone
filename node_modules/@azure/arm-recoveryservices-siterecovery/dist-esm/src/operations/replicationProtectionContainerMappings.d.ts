import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ReplicationProtectionContainerMappings } from "../operationsInterfaces";
import { SiteRecoveryManagementClient } from "../siteRecoveryManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { ProtectionContainerMapping, ReplicationProtectionContainerMappingsListByReplicationProtectionContainersOptionalParams, ReplicationProtectionContainerMappingsListOptionalParams, ReplicationProtectionContainerMappingsGetOptionalParams, ReplicationProtectionContainerMappingsGetResponse, CreateProtectionContainerMappingInput, ReplicationProtectionContainerMappingsCreateOptionalParams, ReplicationProtectionContainerMappingsCreateResponse, ReplicationProtectionContainerMappingsPurgeOptionalParams, UpdateProtectionContainerMappingInput, ReplicationProtectionContainerMappingsUpdateOptionalParams, ReplicationProtectionContainerMappingsUpdateResponse, RemoveProtectionContainerMappingInput, ReplicationProtectionContainerMappingsDeleteOptionalParams } from "../models";
/** Class containing ReplicationProtectionContainerMappings operations. */
export declare class ReplicationProtectionContainerMappingsImpl implements ReplicationProtectionContainerMappings {
    private readonly client;
    /**
     * Initialize a new instance of the class ReplicationProtectionContainerMappings class.
     * @param client Reference to the service client
     */
    constructor(client: SiteRecoveryManagementClient);
    /**
     * Lists the protection container mappings for a protection container.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param options The options parameters.
     */
    listByReplicationProtectionContainers(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, options?: ReplicationProtectionContainerMappingsListByReplicationProtectionContainersOptionalParams): PagedAsyncIterableIterator<ProtectionContainerMapping>;
    private listByReplicationProtectionContainersPagingPage;
    private listByReplicationProtectionContainersPagingAll;
    /**
     * Lists the protection container mappings in the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(resourceName: string, resourceGroupName: string, options?: ReplicationProtectionContainerMappingsListOptionalParams): PagedAsyncIterableIterator<ProtectionContainerMapping>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the protection container mappings for a protection container.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param options The options parameters.
     */
    private _listByReplicationProtectionContainers;
    /**
     * Gets the details of a protection container mapping.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param mappingName Protection Container mapping name.
     * @param options The options parameters.
     */
    get(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, mappingName: string, options?: ReplicationProtectionContainerMappingsGetOptionalParams): Promise<ReplicationProtectionContainerMappingsGetResponse>;
    /**
     * The operation to create a protection container mapping.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param mappingName Protection container mapping name.
     * @param creationInput Mapping creation input.
     * @param options The options parameters.
     */
    beginCreate(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, mappingName: string, creationInput: CreateProtectionContainerMappingInput, options?: ReplicationProtectionContainerMappingsCreateOptionalParams): Promise<SimplePollerLike<OperationState<ReplicationProtectionContainerMappingsCreateResponse>, ReplicationProtectionContainerMappingsCreateResponse>>;
    /**
     * The operation to create a protection container mapping.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param mappingName Protection container mapping name.
     * @param creationInput Mapping creation input.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, mappingName: string, creationInput: CreateProtectionContainerMappingInput, options?: ReplicationProtectionContainerMappingsCreateOptionalParams): Promise<ReplicationProtectionContainerMappingsCreateResponse>;
    /**
     * The operation to purge(force delete) a protection container mapping.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param mappingName Protection container mapping name.
     * @param options The options parameters.
     */
    beginPurge(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, mappingName: string, options?: ReplicationProtectionContainerMappingsPurgeOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * The operation to purge(force delete) a protection container mapping.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param mappingName Protection container mapping name.
     * @param options The options parameters.
     */
    beginPurgeAndWait(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, mappingName: string, options?: ReplicationProtectionContainerMappingsPurgeOptionalParams): Promise<void>;
    /**
     * The operation to update protection container mapping.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param mappingName Protection container mapping name.
     * @param updateInput Mapping update input.
     * @param options The options parameters.
     */
    beginUpdate(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, mappingName: string, updateInput: UpdateProtectionContainerMappingInput, options?: ReplicationProtectionContainerMappingsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ReplicationProtectionContainerMappingsUpdateResponse>, ReplicationProtectionContainerMappingsUpdateResponse>>;
    /**
     * The operation to update protection container mapping.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param mappingName Protection container mapping name.
     * @param updateInput Mapping update input.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, mappingName: string, updateInput: UpdateProtectionContainerMappingInput, options?: ReplicationProtectionContainerMappingsUpdateOptionalParams): Promise<ReplicationProtectionContainerMappingsUpdateResponse>;
    /**
     * The operation to delete or remove a protection container mapping.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param mappingName Protection container mapping name.
     * @param removalInput Removal input.
     * @param options The options parameters.
     */
    beginDelete(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, mappingName: string, removalInput: RemoveProtectionContainerMappingInput, options?: ReplicationProtectionContainerMappingsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * The operation to delete or remove a protection container mapping.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param mappingName Protection container mapping name.
     * @param removalInput Removal input.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceName: string, resourceGroupName: string, fabricName: string, protectionContainerName: string, mappingName: string, removalInput: RemoveProtectionContainerMappingInput, options?: ReplicationProtectionContainerMappingsDeleteOptionalParams): Promise<void>;
    /**
     * Lists the protection container mappings in the vault.
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListByReplicationProtectionContainersNext
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name.
     * @param protectionContainerName Protection container name.
     * @param nextLink The nextLink from the previous successful call to the
     *                 ListByReplicationProtectionContainers method.
     * @param options The options parameters.
     */
    private _listByReplicationProtectionContainersNext;
    /**
     * ListNext
     * @param resourceName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=replicationProtectionContainerMappings.d.ts.map