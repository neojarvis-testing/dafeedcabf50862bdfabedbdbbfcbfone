import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, ReplicationAlertSettings, ReplicationAppliances, ReplicationEligibilityResultsOperations, ReplicationEvents, ReplicationFabrics, ReplicationLogicalNetworks, ReplicationNetworks, ReplicationNetworkMappings, ReplicationProtectionContainers, ReplicationMigrationItems, MigrationRecoveryPoints, ReplicationProtectableItems, ReplicationProtectedItems, RecoveryPoints, TargetComputeSizes, ReplicationProtectionContainerMappings, ReplicationRecoveryServicesProviders, ReplicationStorageClassifications, ReplicationStorageClassificationMappings, ReplicationvCenters, ReplicationJobs, ReplicationPolicies, ReplicationProtectionIntents, ReplicationRecoveryPlans, SupportedOperatingSystemsOperations, ReplicationVaultHealth, ReplicationVaultSetting } from "./operationsInterfaces";
import { SiteRecoveryManagementClientOptionalParams } from "./models";
export declare class SiteRecoveryManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the SiteRecoveryManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription Id.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: SiteRecoveryManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    replicationAlertSettings: ReplicationAlertSettings;
    replicationAppliances: ReplicationAppliances;
    replicationEligibilityResultsOperations: ReplicationEligibilityResultsOperations;
    replicationEvents: ReplicationEvents;
    replicationFabrics: ReplicationFabrics;
    replicationLogicalNetworks: ReplicationLogicalNetworks;
    replicationNetworks: ReplicationNetworks;
    replicationNetworkMappings: ReplicationNetworkMappings;
    replicationProtectionContainers: ReplicationProtectionContainers;
    replicationMigrationItems: ReplicationMigrationItems;
    migrationRecoveryPoints: MigrationRecoveryPoints;
    replicationProtectableItems: ReplicationProtectableItems;
    replicationProtectedItems: ReplicationProtectedItems;
    recoveryPoints: RecoveryPoints;
    targetComputeSizes: TargetComputeSizes;
    replicationProtectionContainerMappings: ReplicationProtectionContainerMappings;
    replicationRecoveryServicesProviders: ReplicationRecoveryServicesProviders;
    replicationStorageClassifications: ReplicationStorageClassifications;
    replicationStorageClassificationMappings: ReplicationStorageClassificationMappings;
    replicationvCenters: ReplicationvCenters;
    replicationJobs: ReplicationJobs;
    replicationPolicies: ReplicationPolicies;
    replicationProtectionIntents: ReplicationProtectionIntents;
    replicationRecoveryPlans: ReplicationRecoveryPlans;
    supportedOperatingSystemsOperations: SupportedOperatingSystemsOperations;
    replicationVaultHealth: ReplicationVaultHealth;
    replicationVaultSetting: ReplicationVaultSetting;
}
//# sourceMappingURL=siteRecoveryManagementClient.d.ts.map